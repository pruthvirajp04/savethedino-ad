var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ALDEventDef;
(function (ALDEventDef) {
    ALDEventDef["None"] = "";
    ALDEventDef["ReportAdClickSuccess"] = "\u5E7F\u544A\u5BFC\u51FA\u6210\u529F";
    ALDEventDef["ReportAdClickFail"] = "\u5E7F\u544A\u5BFC\u51FA\u5931\u8D25";
    ALDEventDef["ReportLaunchOptions"] = "\u7528\u6237\u542F\u52A8\u53C2\u6570";
    //todo:添加你自己的阿拉丁事件
})(ALDEventDef = exports.ALDEventDef || (exports.ALDEventDef = {}));
//阿拉丁相关接口
var ALD = /** @class */ (function () {
    function ALD() {
    }
    ALD.aldSendOpenId = function (openid) {
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window["wx"].aldSendOpenid(openid);
            console.log("ALD 上报 openid : ", openid);
        }
        else if (Laya.Browser.onQQMiniGame) {
            Laya.Browser.window["qq"].aldSendOpenid(openid);
            console.log("ALD 上报 openid : ", openid);
        }
    };
    ALD.aldSendEvent = function (event, data) {
        var eventName = event;
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window["wx"].aldSendEvent(eventName, data);
        }
        else if (Laya.Browser.onQQMiniGame) {
            Laya.Browser.window["qq"].aldSendEvent(eventName, data);
        }
    };
    ALD.aldSendReportAdClickSuccess = function (data) {
        var type = ALDEventDef.ReportAdClickSuccess + " " + data.title + ":" + String(data.appid);
        ALD.aldSendEvent(type, {
            "导出成功": data.title + ":" + String(data.appid)
        });
    };
    ALD.aldSendReportAdClickFail = function (data) {
        var type = ALDEventDef.ReportAdClickFail + " " + data.title + ":" + String(data.appid);
        ALD.aldSendEvent(type, {
            "导出失败": data.title + ":" + String(data.appid)
        });
    };
    ALD.aldSendReportLaunchOptions = function (sceneid, ip, location) {
        var type = ALDEventDef.ReportLaunchOptions;
        ALD.aldSendEvent(type, {
            "场景值：": String(sceneid),
            "Ip：": String(ip),
            "地区：": JSON.stringify(location)
        });
    };
    return ALD;
}());
exports.default = ALD;
},{}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig = /** @class */ (function () {
    function AppConfig() {
    }
    AppConfig.AppID = "1110171573";
    AppConfig.ResServer = "https://oss.renyouwangluo.cn/qq-jjklbb"; //资源服务器地址
    AppConfig.LocalTestReServer = "res/json"; //本地测试资源服务器地址
    AppConfig.Versions = "1.0.0";
    AppConfig.onTTMiniGame = false; //是否是头条小游戏
    return AppConfig;
}());
exports.default = AppConfig;
},{}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppSwitchConfig_1 = require("./Config/AppSwitchConfig");
var CachedQQBannerAd = /** @class */ (function () {
    function CachedQQBannerAd() {
    }
    CachedQQBannerAd.preloadBanner = function () {
    };
    CachedQQBannerAd.show = function (bannerid) {
        var wxWuDianBanners = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wxWuDianBanners;
        var bannerTodayBannerMax = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerTodayBannerMax;
        bannerid = wxWuDianBanners[Math.floor(Math.random() * wxWuDianBanners.length)];
        if (Laya.Browser.onQQMiniGame && null != bannerid) {
            var sysInfo = Laya.Browser.window["qq"].getSystemInfoSync();
            var sw = sysInfo.screenWidth;
            var sh = sysInfo.screenHeight;
            var banner_1 = Laya.Browser.window["qq"].createBannerAd({
                adUnitId: bannerid,
                adIntervals: 30,
                style: {
                    left: 0,
                    top: (Laya.stage.height - 240) / Laya.stage.height * sh,
                    width: sw,
                }
            });
            if (banner_1) {
                CachedQQBannerAd._onLoad = function (res) {
                    console.log("CachedQQBanner 广告 加载完成", bannerid);
                    console.log(res);
                    banner_1.show();
                };
                banner_1.onLoad(CachedQQBannerAd._onLoad);
                CachedQQBannerAd._onError = function (err) {
                    console.log("CachedQQBanner 广告 加载失败", bannerid);
                    console.log(err);
                    banner_1.offLoad(CachedQQBannerAd._onLoad);
                    banner_1.offError(CachedQQBannerAd._onError);
                    banner_1.destroy();
                };
                banner_1.onError(CachedQQBannerAd._onError);
                CachedQQBannerAd._curBanner = banner_1;
            }
        }
    };
    CachedQQBannerAd.hide = function () {
        Laya.timer.clearAll(CachedQQBannerAd);
        if (null != CachedQQBannerAd._curBanner) {
            CachedQQBannerAd._curBanner.offLoad(CachedQQBannerAd._onLoad);
            CachedQQBannerAd._curBanner.offError(CachedQQBannerAd._onError);
            CachedQQBannerAd._curBanner.destroy();
            CachedQQBannerAd._curBanner = null;
            console.log("CachedQQBanner 广告隐藏");
        }
    };
    CachedQQBannerAd.changeShow = function () {
        if (null != CachedQQBannerAd._curBanner) {
            CachedQQBannerAd._curBanner.hide();
            CachedQQBannerAd._curBanner = null;
        }
        CachedQQBannerAd.show();
    };
    CachedQQBannerAd.clear = function () {
    };
    CachedQQBannerAd._curBanner = null;
    CachedQQBannerAd._onLoad = null;
    CachedQQBannerAd._onError = null;
    return CachedQQBannerAd;
}());
exports.default = CachedQQBannerAd;
},{"./Config/AppSwitchConfig":5}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppSwitchConfig_1 = require("./Config/AppSwitchConfig");
var CachedWXBannerAd = /** @class */ (function () {
    function CachedWXBannerAd() {
    }
    CachedWXBannerAd.preloadBanner = function () {
        var wxWuDianBanners = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wxWuDianBanners;
        var bannerTodayBannerMax = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerTodayBannerMax;
        // var wxWuDianBanners = [WXAPI.bannerAdUnitId];
        var bannerTodayBannerMax = 5;
        var preLoadBanners = new Array();
        for (var i = 0; i < wxWuDianBanners.length; ++i) {
            preLoadBanners.push(wxWuDianBanners[i]);
        }
        if (preLoadBanners.length > bannerTodayBannerMax) {
            var delNum = preLoadBanners.length - bannerTodayBannerMax;
            for (var i = 0; i < delNum; ++i) {
                preLoadBanners.splice(Math.floor(Math.random() * preLoadBanners.length), 1);
            }
        }
        console.log("开始预创建微信Bannaer", preLoadBanners);
        console.log("Bannaer 最大数限制 ：", bannerTodayBannerMax);
        var counter = 0;
        Laya.timer.loop(2000, CachedWXBannerAd._preLoopObj, function () {
            if (counter >= preLoadBanners.length) {
                Laya.timer.clearAll(CachedWXBannerAd._preLoopObj);
                return;
            }
            var bannerid = preLoadBanners[counter];
            var banner = CachedWXBannerAd._bannerCache[bannerid];
            if (null == banner) {
                banner = CachedWXBannerAd.create(bannerid);
                if (null != banner) {
                    CachedWXBannerAd._bannerCache[bannerid] = banner;
                    console.log("预创建微信Bannaer", bannerid, "完成");
                }
            }
            ++counter;
        });
    };
    CachedWXBannerAd.getBanner = function (bannerid) {
        if (null == bannerid || "" == bannerid)
            return null;
        var banner = CachedWXBannerAd._bannerCache[bannerid];
        if (null == banner) {
            banner = CachedWXBannerAd.create(bannerid);
            if (null != banner) {
                CachedWXBannerAd._bannerCache[bannerid] = banner;
            }
        }
        return banner;
    };
    CachedWXBannerAd.create = function (bannerid) {
        if (Laya.Browser.onMiniGame) {
            var sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
            var sw = sysInfo.screenWidth;
            var sh = sysInfo.screenHeight;
            var banner = Laya.Browser.window["wx"].createBannerAd({
                adUnitId: bannerid,
                adIntervals: 30,
                style: {
                    left: 0,
                    top: (Laya.stage.height - 240) / Laya.stage.height * sh,
                    width: sw,
                }
            });
            if (banner) {
                banner.onLoad(function (res) {
                    console.log("CachedWXBanner 广告 加载完成", bannerid);
                    console.log(res);
                });
                banner.onError(function (err) {
                    console.log("CachedWXBanner 广告 加载失败", bannerid);
                    console.log(err);
                    // ALD.aldSendOnlySingleReport(ALDEventDef.WXBannerLoadFail,{
                    //     "banner加载失败原因":err 
                    // });
                });
                banner.onResize(function (res) {
                    console.log(banner.style.realWidth, banner.style.realHeight);
                });
            }
            return banner;
        }
        else {
            return null;
        }
    };
    CachedWXBannerAd.show = function () {
        if (null != CachedWXBannerAd._curBanner) {
            CachedWXBannerAd._curBanner.hide();
            CachedWXBannerAd._curBanner = null;
        }
        var wuDianBanners = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wxWuDianBanners;
        var bannerid = wuDianBanners[Math.floor(Math.random() * wuDianBanners.length)];
        var banner = CachedWXBannerAd.getBanner(bannerid);
        if (banner) {
            CachedWXBannerAd._curBanner = banner;
            var sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
            var sw = sysInfo.screenWidth;
            var sh = sysInfo.screenHeight;
            CachedWXBannerAd._curBanner.style.top = (Laya.stage.height - 240) / Laya.stage.height * sh;
            CachedWXBannerAd._curBanner.show();
            console.log("CachedWXBanner 广告显示 bannerid ： ", bannerid);
        }
        var time = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerFreshTimer;
        //Laya.timer.once(time * 1000,CachedWXBannerAd,CachedWXBannerAd.changeShow);
    };
    CachedWXBannerAd.hide = function () {
        Laya.timer.clearAll(CachedWXBannerAd);
        if (null != CachedWXBannerAd._curBanner) {
            CachedWXBannerAd._curBanner.hide();
            CachedWXBannerAd._curBanner = null;
        }
        console.log("CachedWXBanner 广告隐藏");
    };
    CachedWXBannerAd.changeShow = function () {
        if (null != CachedWXBannerAd._curBanner) {
            CachedWXBannerAd._curBanner.hide();
            CachedWXBannerAd._curBanner = null;
        }
        CachedWXBannerAd.show();
    };
    CachedWXBannerAd.clear = function () {
        Laya.timer.clearAll(CachedWXBannerAd);
        for (var key in CachedWXBannerAd._bannerCache) {
            var banner = CachedWXBannerAd._bannerCache[key];
            if (null != banner) {
                banner.destroy();
            }
            CachedWXBannerAd._bannerCache[key] = null;
        }
    };
    CachedWXBannerAd._bannerCache = {};
    CachedWXBannerAd._curBanner = null;
    CachedWXBannerAd._preLoopObj = {};
    return CachedWXBannerAd;
}());
exports.default = CachedWXBannerAd;
},{"./Config/AppSwitchConfig":5}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("../AppConfig");
var AppSwitchData = /** @class */ (function () {
    function AppSwitchData() {
        this.version = "";
        this.banner = 0;
        this.wudian = 0;
        this.wudianAvailableTime = {
            "0": 0, "1": 0, "2": 0, "3": 0,
            "4": 0, "5": 0, "6": 0, "7": 0,
            "8": 0, "9": 0, "10": 0, "11": 0,
            "12": 0, "13": 0, "14": 0, "15": 0,
            "16": 0, "17": 0, "18": 0, "19": 0,
            "20": 0, "21": 0, "22": 0, "23": 0
        };
        this.mailiang = 1;
        this.mailianglist = new Array();
        this.mailiangSceneList = new Array();
        this.wxWuDianBanners = new Array();
        this.recreateBannerIDList = new Array();
        this.bannerRecreateTime = 5;
        this.btnMoveTimer = 1;
        this.bannerMoveTimer = 0.5;
        this.bannerFreshTimer = 200;
        this.bannerCreateFailNum = 3;
        this.bannerTodayBannerMax = 10;
        this.adSwitch = 1;
        this.wudianSceneList = new Array();
        this.continueBtnDelayTime = 2;
        this.bannerShowTime = 30;
        this.oppocfg = new OPPOCfg();
        this.qqcfg = new QQCfg();
        this.ttcfg = new TTCfg();
        this.skinPR = 50;
    }
    Object.defineProperty(AppSwitchData.prototype, "wudianTimeAvaliable", {
        /**
         * 得到当前时间开关是否打开
         *
         * @readonly
         * @type {boolean}
         * @memberof AppSwitchData
         */
        get: function () {
            return this.wudianAvailableTime[new Date().getHours()] == 1;
        },
        enumerable: true,
        configurable: true
    });
    return AppSwitchData;
}());
exports.AppSwitchData = AppSwitchData;
var OPPOCfg = /** @class */ (function () {
    function OPPOCfg() {
        this.yuansheng = 100;
        this.yuanshengSwitch = 1;
        this.addToDesktop = 0;
        this.oppoversions = "";
        this.btnShowTimer = 0;
        this.indexAdSwitch = 0;
        this.endAdSwitch = 0;
        this.yuansheng2 = 100;
        this.yuanshengSwitch2 = 1;
    }
    return OPPOCfg;
}());
exports.OPPOCfg = OPPOCfg;
var QQCfg = /** @class */ (function () {
    function QQCfg() {
        this.kuangdianBanner = 0;
        this.kuangdianBox = 0;
        this.box = 0;
        this.weiyi = 0;
    }
    return QQCfg;
}());
exports.QQCfg = QQCfg;
var TTCfg = /** @class */ (function () {
    function TTCfg() {
        this.moreGameSwitch = 0;
        this.kuangdianBanner = 0;
        this.luping = 0;
    }
    return TTCfg;
}());
exports.TTCfg = TTCfg;
var AppSwitchConfig = /** @class */ (function () {
    function AppSwitchConfig() {
        this._data = new Array();
    }
    AppSwitchConfig.getInstance = function () {
        if (null == AppSwitchConfig._instance) {
            AppSwitchConfig._instance = AppSwitchConfig.load();
        }
        return AppSwitchConfig._instance;
    };
    AppSwitchConfig.load = function () {
        var config = new AppSwitchConfig();
        var json = Laya.loader.getRes(AppConfig_1.default.ResServer + "/json/appswitch.json");
        if (json) {
            for (var i = 0; i < json.length; ++i) {
                var row = json[i];
                var rowData = new AppSwitchData();
                rowData.version = String(row["version"]);
                rowData.banner = Number(row["banner"]);
                rowData.wudian = Number(row["wudian"]);
                rowData.wudianAvailableTime = Object(row["wudianTime"]);
                rowData.mailiang = Number(row["mailiang"]);
                var mailianglist = row["mailianglist"];
                if (null != mailianglist) {
                    for (var j = 0; j < mailianglist.length; ++j) {
                        var flag = Number(mailianglist[j]);
                        rowData.mailianglist.push(flag);
                    }
                }
                var mailiangScenelist = row["mailiangScenelist"];
                if (null != mailiangScenelist) {
                    for (var j = 0; j < mailiangScenelist.length; ++j) {
                        var sceneValue = Number(mailiangScenelist[j]);
                        rowData.mailiangSceneList.push(sceneValue);
                    }
                }
                var wxwudianbanners = row["wxwudianbanners"];
                if (null != wxwudianbanners) {
                    for (var j = 0; j < wxwudianbanners.length; ++j) {
                        var bannerid = String(wxwudianbanners[j]);
                        rowData.wxWuDianBanners.push(bannerid);
                    }
                }
                var recreateBannerIDList = row["recreateBannerIDList"];
                if (null != recreateBannerIDList) {
                    for (var j = 0; j < recreateBannerIDList.length; ++j) {
                        var bannerid = String(recreateBannerIDList[j]);
                        rowData.recreateBannerIDList.push(bannerid);
                    }
                }
                rowData.bannerRecreateTime = null != row["bannerRecreateTime"] ? Number(row["bannerRecreateTime"]) : rowData.bannerRecreateTime;
                rowData.btnMoveTimer = Number(row["btnMoveTimer"]);
                rowData.bannerMoveTimer = Number(row["bannerMoveTimer"]);
                rowData.bannerCreateFailNum = Number(row["createFailNum"]);
                rowData.bannerFreshTimer = Number(row["bannerFreshTimer"]);
                rowData.bannerTodayBannerMax = Number(row["todayBannerMax"]);
                rowData.adSwitch = Number(row["adSwitch"]);
                var wudianSceneList = row["wudianSceneList"];
                if (null != wudianSceneList) {
                    for (var j = 0; j < wudianSceneList.length; ++j) {
                        var wudianSceneValue = Number(wudianSceneList[j]);
                        rowData.wudianSceneList.push(wudianSceneValue);
                    }
                }
                rowData.continueBtnDelayTime = Number(row["continueBtnDelayTime"]);
                rowData.bannerShowTime = Number(row["bannerShowTime"]);
                if (null != row["oppocfg"]) {
                    var cfg = row["oppocfg"];
                    rowData.oppocfg.yuansheng = Number(cfg["yuansheng"]);
                    rowData.oppocfg.yuanshengSwitch = Number(cfg["yuanshengSwitch"]);
                    rowData.oppocfg.addToDesktop = Number(cfg["addToDesktop"]);
                    rowData.oppocfg.oppoversions = String(cfg["oppoversions"]);
                    rowData.oppocfg.btnShowTimer = Number(cfg["btnShowTimer"]);
                    rowData.oppocfg.indexAdSwitch = Number(cfg["indexAdSwitch"]);
                    rowData.oppocfg.endAdSwitch = Number(cfg["endAdSwitch"]);
                    rowData.oppocfg.yuansheng2 = null != cfg["yuansheng2"] ? Number(cfg["yuansheng2"]) : rowData.oppocfg.yuansheng2;
                    rowData.oppocfg.yuanshengSwitch2 = null != cfg["yuanshengSwitch2"] ? Number(cfg["yuanshengSwitch2"]) : rowData.oppocfg.yuanshengSwitch2;
                }
                if (null != row["qqcfg"]) {
                    var cfg = row["qqcfg"];
                    rowData.qqcfg.kuangdianBanner = Number(cfg["kuangdianBanner"]);
                    rowData.qqcfg.kuangdianBox = Number(cfg["kuangdianBox"]);
                    rowData.qqcfg.box = Number(cfg["box"]);
                    rowData.qqcfg.weiyi = Number(cfg["weiyi"]);
                }
                if (null != row["ttcfg"]) {
                    var cfg = row["ttcfg"];
                    rowData.ttcfg.moreGameSwitch = Number(cfg["moreGameSwitch"]);
                    rowData.ttcfg.kuangdianBanner = Number(cfg["kuangdianBanner"]);
                    rowData.ttcfg.luping = Number(cfg["luping"]);
                }
                config._data.push(rowData);
            }
            return config;
        }
        else {
            config._data.push(new AppSwitchData());
            return config;
        }
    };
    AppSwitchConfig.prototype.getAppSwitchData = function () {
        return this._data[0];
    };
    return AppSwitchConfig;
}());
exports.default = AppSwitchConfig;
},{"../AppConfig":2}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("../AppConfig");
var GameConfigData = /** @class */ (function () {
    function GameConfigData() {
        this.signGetDiamond = 10;
        this.freeEnergy = 5;
        this.freeDiamond = 5;
        this.dailyEnergy = 100;
    }
    return GameConfigData;
}());
exports.GameConfigData = GameConfigData;
var GameCommonConfig = /** @class */ (function () {
    function GameCommonConfig() {
        this._data = new Array();
    }
    GameCommonConfig.getInstance = function () {
        if (null == GameCommonConfig._instance) {
            GameCommonConfig._instance = GameCommonConfig.load();
        }
        return GameCommonConfig._instance;
    };
    GameCommonConfig.load = function () {
        var config = new GameCommonConfig();
        var json = Laya.loader.getRes(AppConfig_1.default.ResServer + "/json/gameConfig.json");
        if (json) {
            for (var i = 0; i < json.length; ++i) {
                var row = json[i];
                var rowData = new GameConfigData();
                rowData.signGetDiamond = Number(row["signGetDiamond"]);
                rowData.freeEnergy = Number(row["freeEnergy"]);
                rowData.freeDiamond = Number(row["freeDiamond"]);
                rowData.dailyEnergy = Number(row["dailyEnergy"]);
                config._data.push(rowData);
            }
            return config;
        }
        else {
            config._data.push(new GameConfigData());
            return config;
        }
    };
    GameCommonConfig.prototype.getGameConfigData = function () {
        return this._data[0];
    };
    return GameCommonConfig;
}());
exports.default = GameCommonConfig;
},{"../AppConfig":2}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("../AppConfig");
var LevelConfigData = /** @class */ (function () {
    function LevelConfigData() {
        this.levelNum = 0;
        this.costEnergy = 0;
        this.getDiamond = 0;
        this.vedioCostNoEnergy = 0;
        this.vedioDoubleDiamond = 0;
    }
    LevelConfigData.prototype.clone = function () {
        var clone = new LevelConfigData();
        clone.levelNum = this.levelNum;
        clone.costEnergy = this.costEnergy;
        clone.getDiamond = this.getDiamond;
        clone.vedioCostNoEnergy = this.vedioCostNoEnergy;
        clone.vedioDoubleDiamond = this.vedioDoubleDiamond;
        return clone;
    };
    return LevelConfigData;
}());
exports.LevelConfigData = LevelConfigData;
var LevelConfig = /** @class */ (function () {
    function LevelConfig() {
        this._data = new Array();
    }
    LevelConfig.getInstance = function () {
        if (null == LevelConfig._instance) {
            LevelConfig._instance = LevelConfig.load();
        }
        return LevelConfig._instance;
    };
    LevelConfig.load = function () {
        var config = new LevelConfig();
        var json = Laya.loader.getRes(AppConfig_1.default.ResServer + "/json/levelConfig.json");
        if (json) {
            for (var i = 0; i < json.length; ++i) {
                var row = json[i];
                var rowData = new LevelConfigData();
                rowData.levelNum = Number(row["levelNum"]);
                rowData.costEnergy = Number(row["costEnergy"]);
                rowData.getDiamond = Number(row["getDiamond"]);
                rowData.vedioCostNoEnergy = Number(row["vedioCostNoEnergy"]);
                rowData.vedioDoubleDiamond = Number(row["vedioDoubleDiamond"]);
                config._data.push(rowData);
            }
            return config;
        }
    };
    LevelConfig.prototype.getLevelConfigDatas = function () {
        return this._data;
    };
    LevelConfig.prototype.getLevelConfigDataByLevelNum = function (levelNum) {
        for (var i = 0; i < this._data.length; ++i) {
            var d = this._data[i];
            if (d.levelNum == levelNum) {
                return d;
            }
        }
        return null;
    };
    return LevelConfig;
}());
exports.default = LevelConfig;
},{"../AppConfig":2}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("../AppConfig");
var SkinConfigData = /** @class */ (function () {
    function SkinConfigData() {
        this.skinIndex = 0;
        this.costDiamond = 0;
        this.vedio = 0;
    }
    SkinConfigData.prototype.clone = function () {
        var clone = new SkinConfigData();
        clone.skinIndex = this.skinIndex;
        clone.costDiamond = this.costDiamond;
        clone.vedio = this.vedio;
        return clone;
    };
    return SkinConfigData;
}());
exports.SkinConfigData = SkinConfigData;
var SkinConfig = /** @class */ (function () {
    function SkinConfig() {
        this._data = new Array();
    }
    SkinConfig.getInstance = function () {
        if (null == SkinConfig._instance) {
            SkinConfig._instance = SkinConfig.load();
        }
        return SkinConfig._instance;
    };
    SkinConfig.load = function () {
        var config = new SkinConfig();
        var json = Laya.loader.getRes(AppConfig_1.default.ResServer + "/json/skinConfig.json");
        if (json) {
            for (var i = 0; i < json.length; ++i) {
                var row = json[i];
                var rowData = new SkinConfigData();
                rowData.skinIndex = Number(row["skinlNum"]);
                rowData.costDiamond = Number(row["costDiamond"]);
                rowData.vedio = Number(row["vedio"]);
                config._data.push(rowData);
            }
            return config;
        }
    };
    SkinConfig.prototype.getSkinConfigDatas = function () {
        return this._data;
    };
    SkinConfig.prototype.getSkinConfigDataBySkinIndex = function (index) {
        for (var i = 0; i < this._data.length; ++i) {
            var d = this._data[i];
            if (d.skinIndex == index) {
                return d;
            }
        }
        return null;
    };
    return SkinConfig;
}());
exports.default = SkinConfig;
},{"../AppConfig":2}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventDef;
(function (EventDef) {
    EventDef[EventDef["None"] = 0] = "None";
    EventDef[EventDef["App_CloseFirstLoadingView"] = 500] = "App_CloseFirstLoadingView";
    EventDef[EventDef["AD_OnShareAdFail"] = 501] = "AD_OnShareAdFail";
    //当界面打开
    EventDef[EventDef["Game_OnViewOpen"] = 600] = "Game_OnViewOpen";
    //当界面关闭
    EventDef[EventDef["Game_OnViewClose"] = 601] = "Game_OnViewClose";
    //当玩家金币变动
    EventDef[EventDef["Game_OnUserMoneyChange"] = 701] = "Game_OnUserMoneyChange";
    //当玩家钻石变动
    EventDef[EventDef["Game_OnUserCrystalChange"] = 702] = "Game_OnUserCrystalChange";
    //当关卡开始
    EventDef[EventDef["Game_OnLevelStart"] = 1000] = "Game_OnLevelStart";
    //当关卡结束
    EventDef[EventDef["Game_OnLevelComplate"] = 1001] = "Game_OnLevelComplate";
    //误点预加载完毕
    EventDef[EventDef["AD_WudianBanner_LoadComplete"] = 2217] = "AD_WudianBanner_LoadComplete";
    //显示误点Banner
    EventDef[EventDef["AD_WudianBanner_Show"] = 2218] = "AD_WudianBanner_Show";
    //影藏误点Banner
    EventDef[EventDef["AD_WudianBanner_Hide"] = 2219] = "AD_WudianBanner_Hide";
    //预加载Banner
    EventDef[EventDef["AD_WudianBanner_PreLoad"] = 2220] = "AD_WudianBanner_PreLoad";
    //Tips:在这条添加定义你自己需要的事件，从10000号开始。记得分段分类管理不同类型事件。如果事件有传递参数 "必须" 在事件后面用注释写明事件参数结构。
    //当玩家体力变动
    EventDef[EventDef["Game_OnUserEnergyChange"] = 10001] = "Game_OnUserEnergyChange";
    //当玩家解锁角色皮肤
    EventDef[EventDef["Game_OnUserUnlockActorSkin"] = 10002] = "Game_OnUserUnlockActorSkin";
    //当玩家当前角色皮肤发生变化
    EventDef[EventDef["Game_OnUserActorSkinChange"] = 10003] = "Game_OnUserActorSkinChange";
    //开始游戏
    EventDef[EventDef["Game_StartGame"] = 11001] = "Game_StartGame";
    //重新开始游戏
    EventDef[EventDef["Game_RestartGame"] = 11002] = "Game_RestartGame";
    //退出游戏
    EventDef[EventDef["Game_ExitGame"] = 11003] = "Game_ExitGame";
    //当游戏结束
    EventDef[EventDef["Game_onGameComplate"] = 11004] = "Game_onGameComplate";
    //播放Bgm
    EventDef[EventDef["Game_PlayBgm"] = 11005] = "Game_PlayBgm";
    //停止Bgm
    EventDef[EventDef["Game_StopBgm"] = 11006] = "Game_StopBgm";
    EventDef[EventDef["AD_OnShareAdFail_UseCancel"] = 502] = "AD_OnShareAdFail_UseCancel";
    //设置广告UI遮罩
    EventDef[EventDef["AD_MainAdUiMask"] = 503] = "AD_MainAdUiMask";
    EventDef[EventDef["AD_SidePopView"] = 504] = "AD_SidePopView";
    EventDef[EventDef["AD_SwitchBanner"] = 505] = "AD_SwitchBanner";
})(EventDef = exports.EventDef || (exports.EventDef = {}));
},{}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventDispatcher = Laya.EventDispatcher;
var EventMgr = /** @class */ (function (_super) {
    __extends(EventMgr, _super);
    function EventMgr() {
        return _super.call(this) || this;
    }
    ;
    //广播事件
    EventMgr.prototype.dispatch = function (InName, agv) {
        EventMgr.eventDispatcher.event(InName, agv);
    };
    //注册事件
    EventMgr.prototype.regEvemt = function (InName, caller, listener, arg) {
        EventMgr.eventDispatcher.on(InName, caller, listener, (arg == null) ? null : ([arg]));
    };
    //注册单次事件
    EventMgr.prototype.regOnceEvent = function (InName, caller, listener, arg) {
        EventMgr.eventDispatcher.once(InName, caller, listener, (arg == null) ? null : ([arg]));
    };
    //移除事件注册
    EventMgr.prototype.removeEvent = function (InName, caller, listener, arg) {
        EventMgr.eventDispatcher.off(InName, caller, listener);
    };
    EventMgr.eventDispatcher = new EventDispatcher();
    EventMgr.instance = new EventMgr();
    return EventMgr;
}(EventDispatcher));
exports.default = EventMgr;
},{}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var GameMgr_1 = require("./Mgr/GameMgr");
var ExitPoint_1 = require("./GameCore/GameObjs/ExitPoint");
var RotateObj_1 = require("./GameCore/GameObjs/RotateObj");
var Rope_1 = require("./GameCore/GameObjs/Rope");
var TideObject_1 = require("./GameCore/GameObjs/TideObject");
var PlaneBlocker_1 = require("./GameCore/GameObjs/PlaneBlocker");
var Enemy_1 = require("./GameCore/GameObjs/Enemy");
var DangerZone_1 = require("./GameCore/GameObjs/DangerZone");
var Player_1 = require("./GameCore/GameObjs/Player");
var Guider_1 = require("./GameCore/Guider");
var TwinkleSprite_1 = require("./View/TwinkleSprite");
var MoveAnchor_1 = require("./GameCore/GameObjs/MoveAnchor");
var KRQ_LoopAdBox_1 = require("./KRQ/Com/KRQ_LoopAd/KRQ_LoopAdBox");
var KRQ_VLoopAd_1 = require("./KRQ/Com/KRQ_LoopAd/KRQ_VLoopAd");
var KRQ_Banner_1 = require("./KRQ/Com/KRQ_Banner");
var KRQ_Export_1 = require("./KRQ/ViewCom/KRQ_Export");
var KRQ_HistoryBox_1 = require("./KRQ/Com/KRQ_History/KRQ_HistoryBox");
var KRQ_History_1 = require("./KRQ/Com/KRQ_History/KRQ_History");
var KRQ_RockSingleAd_1 = require("./KRQ/Com/KRQ_RockSingleAd");
var KRQ_Floating_1 = require("./KRQ/ViewCom/KRQ_Floating");
var KRQ_RollSingleAd_1 = require("./KRQ/Com/KRQ_RollSingleAd");
var KRQ_GameOver_1 = require("./KRQ/ViewCom/KRQ_GameOver");
var KRQ_SidePull_1 = require("./KRQ/ViewCom/KRQ_SidePull");
var KRQ_HLoopAd_1 = require("./KRQ/Com/KRQ_LoopAd/KRQ_HLoopAd");
var KRQ_Main_1 = require("./KRQ/ViewCom/KRQ_Main");
var KRQ_SingleAd_1 = require("./KRQ/Com/KRQ_SingleAd");
var KRQ_GamingBanner_1 = require("./KRQ/Com/KRQ_GamingBanner");
var ButtonAnim_1 = require("./View/ButtonAnim");
var UniversalBottomZone_1 = require("./View/Common/UniversalBottomZone");
var ViewAutoScaleByW_1 = require("./View/Tools/ViewAutoScaleByW");
var MiddleAnchor_1 = require("./View/Tools/MiddleAnchor");
var ActorSkinBox_1 = require("./View/ActorSkin/ActorSkinBox");
var ActorSkinView_1 = require("./View/ActorSkin/ActorSkinView");
var ClickGetPrize_1 = require("./View/ClickGetPrize/ClickGetPrize");
var ClickGetPrize_2_1 = require("./View/ClickGetPrize/ClickGetPrize_2");
var FreeRewardView_1 = require("./View/FreeReward/FreeRewardView");
var GameOver_1 = require("./View/GameOver/GameOver");
var GameRewardView_1 = require("./View/GameReward/GameRewardView");
var GameView_1 = require("./View/GameView/GameView");
var LevelStateView_1 = require("./View/LevelStateView/LevelStateView");
var LevelStateBox_1 = require("./View/LevelStateView/LevelStateBox");
var LogoAni_1 = require("./View/LoadingView/LogoAni");
var LoadingView_1 = require("./View/LoadingView/LoadingView");
var MainView_1 = require("./View/MainView/MainView");
var FakePlayer_1 = require("./GameCore/FakePlayer");
var ViewAutoScale_1 = require("./View/Tools/ViewAutoScale");
var ScaleBreathingAni_1 = require("./View/ScaleBreathingAni");
var LoopAdBox_1 = require("./ShareAd/View/LoopAdBox");
var LoopAdView_1 = require("./ShareAd/View/LoopAdView");
var MoreGameView_1 = require("./View/MoreGameView/MoreGameView");
var SignInRewardView_1 = require("./View/SignInReward/SignInRewardView");
var Exprot2ViewTemplate_1 = require("./View/TemplateViews/Export2/Exprot2ViewTemplate");
var ExportViewTemplate_1 = require("./View/TemplateViews/Export/ExportViewTemplate");
var GameFailViewTemplate_1 = require("./View/TemplateViews/GameFail/GameFailViewTemplate");
var GameWinViewTemplate_1 = require("./View/TemplateViews/GameWin/GameWinViewTemplate");
var InGameViewTemplate_1 = require("./View/TemplateViews/InGame/InGameViewTemplate");
var MainViewTemplate_1 = require("./View/TemplateViews/Main/MainViewTemplate");
var MiniGameViewTemplate_1 = require("./View/TemplateViews/MiniGame/MiniGameViewTemplate");
var OPPONativeAdViewTemplate_1 = require("./View/TemplateViews/OPPONativeAd/OPPONativeAdViewTemplate");
var QQCrazyClick_1 = require("./View/QQTemplate/QQCrazyClick/QQCrazyClick");
var QQCrazyClick2_1 = require("./View/QQTemplate/QQCrazyClick/QQCrazyClick2");
var QQGameFailViewTemplate_1 = require("./View/QQTemplate/GameFail/QQGameFailViewTemplate");
var QQGameWinViewTemplate_1 = require("./View/QQTemplate/GameWin/QQGameWinViewTemplate");
var QQInGameViewTemplate_1 = require("./View/QQTemplate/InGame/QQInGameViewTemplate");
var QQMainViewTemplate_1 = require("./View/QQTemplate/Main/QQMainViewTemplate");
var RewardViewTemplate_1 = require("./View/TemplateViews/Reward/RewardViewTemplate");
var TTCrazyClick_1 = require("./View/TTTemplate/TTCrazyClick/TTCrazyClick");
var TTGameFailViewTemplate_1 = require("./View/TTTemplate/GameFail/TTGameFailViewTemplate");
var TTMainViewTemplate_1 = require("./View/TTTemplate/Main/TTMainViewTemplate");
var TipsView_1 = require("./View/TipsView/TipsView");
var HorizontalLoopAdView_1 = require("./ShareAd/View/HorizontalLoopAdView");
var BannerAdView_1 = require("./ShareAd/View/BannerAdView");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("Mgr/GameMgr.ts", GameMgr_1.default);
        reg("GameCore/GameObjs/ExitPoint.ts", ExitPoint_1.default);
        reg("GameCore/GameObjs/RotateObj.ts", RotateObj_1.default);
        reg("GameCore/GameObjs/Rope.ts", Rope_1.default);
        reg("GameCore/GameObjs/TideObject.ts", TideObject_1.default);
        reg("GameCore/GameObjs/PlaneBlocker.ts", PlaneBlocker_1.default);
        reg("GameCore/GameObjs/Enemy.ts", Enemy_1.default);
        reg("GameCore/GameObjs/DangerZone.ts", DangerZone_1.default);
        reg("GameCore/GameObjs/Player.ts", Player_1.default);
        reg("GameCore/Guider.ts", Guider_1.default);
        reg("View/TwinkleSprite.ts", TwinkleSprite_1.default);
        reg("GameCore/GameObjs/MoveAnchor.ts", MoveAnchor_1.default);
        reg("KRQ/Com/KRQ_LoopAd/KRQ_LoopAdBox.ts", KRQ_LoopAdBox_1.default);
        reg("KRQ/Com/KRQ_LoopAd/KRQ_VLoopAd.ts", KRQ_VLoopAd_1.default);
        reg("KRQ/Com/KRQ_Banner.ts", KRQ_Banner_1.default);
        reg("KRQ/ViewCom/KRQ_Export.ts", KRQ_Export_1.default);
        reg("KRQ/Com/KRQ_History/KRQ_HistoryBox.ts", KRQ_HistoryBox_1.default);
        reg("KRQ/Com/KRQ_History/KRQ_History.ts", KRQ_History_1.default);
        reg("KRQ/Com/KRQ_RockSingleAd.ts", KRQ_RockSingleAd_1.default);
        reg("KRQ/ViewCom/KRQ_Floating.ts", KRQ_Floating_1.default);
        reg("KRQ/Com/KRQ_RollSingleAd.ts", KRQ_RollSingleAd_1.default);
        reg("KRQ/ViewCom/KRQ_GameOver.ts", KRQ_GameOver_1.default);
        reg("KRQ/ViewCom/KRQ_SidePull.ts", KRQ_SidePull_1.default);
        reg("KRQ/Com/KRQ_LoopAd/KRQ_HLoopAd.ts", KRQ_HLoopAd_1.default);
        reg("KRQ/ViewCom/KRQ_Main.ts", KRQ_Main_1.default);
        reg("KRQ/Com/KRQ_SingleAd.ts", KRQ_SingleAd_1.default);
        reg("KRQ/Com/KRQ_GamingBanner.ts", KRQ_GamingBanner_1.default);
        reg("View/ButtonAnim.ts", ButtonAnim_1.default);
        reg("View/Common/UniversalBottomZone.ts", UniversalBottomZone_1.default);
        reg("View/Tools/ViewAutoScaleByW.ts", ViewAutoScaleByW_1.default);
        reg("View/Tools/MiddleAnchor.ts", MiddleAnchor_1.default);
        reg("View/ActorSkin/ActorSkinBox.ts", ActorSkinBox_1.default);
        reg("View/ActorSkin/ActorSkinView.ts", ActorSkinView_1.default);
        reg("View/ClickGetPrize/ClickGetPrize.ts", ClickGetPrize_1.default);
        reg("View/ClickGetPrize/ClickGetPrize_2.ts", ClickGetPrize_2_1.default);
        reg("View/FreeReward/FreeRewardView.ts", FreeRewardView_1.default);
        reg("View/GameOver/GameOver.ts", GameOver_1.default);
        reg("View/GameReward/GameRewardView.ts", GameRewardView_1.default);
        reg("View/GameView/GameView.ts", GameView_1.default);
        reg("View/LevelStateView/LevelStateView.ts", LevelStateView_1.default);
        reg("View/LevelStateView/LevelStateBox.ts", LevelStateBox_1.default);
        reg("View/LoadingView/LogoAni.ts", LogoAni_1.default);
        reg("View/LoadingView/LoadingView.ts", LoadingView_1.default);
        reg("View/MainView/MainView.ts", MainView_1.default);
        reg("GameCore/FakePlayer.ts", FakePlayer_1.default);
        reg("View/Tools/ViewAutoScale.ts", ViewAutoScale_1.default);
        reg("View/ScaleBreathingAni.ts", ScaleBreathingAni_1.default);
        reg("ShareAd/View/LoopAdBox.ts", LoopAdBox_1.default);
        reg("ShareAd/View/LoopAdView.ts", LoopAdView_1.default);
        reg("View/MoreGameView/MoreGameView.ts", MoreGameView_1.default);
        reg("View/SignInReward/SignInRewardView.ts", SignInRewardView_1.default);
        reg("View/TemplateViews/Export2/Exprot2ViewTemplate.ts", Exprot2ViewTemplate_1.default);
        reg("View/TemplateViews/Export/ExportViewTemplate.ts", ExportViewTemplate_1.default);
        reg("View/TemplateViews/GameFail/GameFailViewTemplate.ts", GameFailViewTemplate_1.default);
        reg("View/TemplateViews/GameWin/GameWinViewTemplate.ts", GameWinViewTemplate_1.default);
        reg("View/TemplateViews/InGame/InGameViewTemplate.ts", InGameViewTemplate_1.default);
        reg("View/TemplateViews/Main/MainViewTemplate.ts", MainViewTemplate_1.default);
        reg("View/TemplateViews/MiniGame/MiniGameViewTemplate.ts", MiniGameViewTemplate_1.default);
        reg("View/TemplateViews/OPPONativeAd/OPPONativeAdViewTemplate.ts", OPPONativeAdViewTemplate_1.default);
        reg("View/QQTemplate/QQCrazyClick/QQCrazyClick.ts", QQCrazyClick_1.default);
        reg("View/QQTemplate/QQCrazyClick/QQCrazyClick2.ts", QQCrazyClick2_1.default);
        reg("View/QQTemplate/GameFail/QQGameFailViewTemplate.ts", QQGameFailViewTemplate_1.default);
        reg("View/QQTemplate/GameWin/QQGameWinViewTemplate.ts", QQGameWinViewTemplate_1.default);
        reg("View/QQTemplate/InGame/QQInGameViewTemplate.ts", QQInGameViewTemplate_1.default);
        reg("View/QQTemplate/Main/QQMainViewTemplate.ts", QQMainViewTemplate_1.default);
        reg("View/TemplateViews/Reward/RewardViewTemplate.ts", RewardViewTemplate_1.default);
        reg("View/TTTemplate/TTCrazyClick/TTCrazyClick.ts", TTCrazyClick_1.default);
        reg("View/TTTemplate/GameFail/TTGameFailViewTemplate.ts", TTGameFailViewTemplate_1.default);
        reg("View/TTTemplate/Main/TTMainViewTemplate.ts", TTMainViewTemplate_1.default);
        reg("View/TipsView/TipsView.ts", TipsView_1.default);
        reg("ShareAd/View/HorizontalLoopAdView.ts", HorizontalLoopAdView_1.default);
        reg("ShareAd/View/BannerAdView.ts", BannerAdView_1.default);
    };
    GameConfig.width = 750;
    GameConfig.height = 1334;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "vertical";
    GameConfig.alignV = "middle";
    GameConfig.alignH = "center";
    GameConfig.startScene = "GameMain.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./GameCore/FakePlayer":12,"./GameCore/GameObjs/DangerZone":14,"./GameCore/GameObjs/Enemy":15,"./GameCore/GameObjs/ExitPoint":16,"./GameCore/GameObjs/MoveAnchor":17,"./GameCore/GameObjs/PlaneBlocker":18,"./GameCore/GameObjs/Player":19,"./GameCore/GameObjs/Rope":20,"./GameCore/GameObjs/RotateObj":22,"./GameCore/GameObjs/TideObject":23,"./GameCore/Guider":24,"./KRQ/Com/KRQ_Banner":27,"./KRQ/Com/KRQ_GamingBanner":29,"./KRQ/Com/KRQ_History/KRQ_History":30,"./KRQ/Com/KRQ_History/KRQ_HistoryBox":31,"./KRQ/Com/KRQ_LoopAd/KRQ_HLoopAd":32,"./KRQ/Com/KRQ_LoopAd/KRQ_LoopAdBox":33,"./KRQ/Com/KRQ_LoopAd/KRQ_VLoopAd":34,"./KRQ/Com/KRQ_RockSingleAd":35,"./KRQ/Com/KRQ_RollSingleAd":36,"./KRQ/Com/KRQ_SingleAd":37,"./KRQ/ViewCom/KRQ_Export":38,"./KRQ/ViewCom/KRQ_Floating":39,"./KRQ/ViewCom/KRQ_GameOver":40,"./KRQ/ViewCom/KRQ_Main":41,"./KRQ/ViewCom/KRQ_SidePull":42,"./Mgr/GameMgr":46,"./ShareAd/View/BannerAdView":58,"./ShareAd/View/HorizontalLoopAdView":59,"./ShareAd/View/LoopAdBox":60,"./ShareAd/View/LoopAdView":61,"./View/ActorSkin/ActorSkinBox":65,"./View/ActorSkin/ActorSkinView":66,"./View/ButtonAnim":67,"./View/ClickGetPrize/ClickGetPrize":68,"./View/ClickGetPrize/ClickGetPrize_2":69,"./View/Common/UniversalBottomZone":70,"./View/FreeReward/FreeRewardView":71,"./View/GameOver/GameOver":72,"./View/GameReward/GameRewardView":73,"./View/GameView/GameView":74,"./View/LevelStateView/LevelStateBox":76,"./View/LevelStateView/LevelStateView":77,"./View/LoadingView/LoadingView":78,"./View/LoadingView/LogoAni":79,"./View/MainView/MainView":80,"./View/MoreGameView/MoreGameView":81,"./View/QQTemplate/GameFail/QQGameFailViewTemplate":82,"./View/QQTemplate/GameWin/QQGameWinViewTemplate":83,"./View/QQTemplate/InGame/QQInGameViewTemplate":84,"./View/QQTemplate/Main/QQMainViewTemplate":85,"./View/QQTemplate/QQCrazyClick/QQCrazyClick":86,"./View/QQTemplate/QQCrazyClick/QQCrazyClick2":87,"./View/ScaleBreathingAni":89,"./View/SignInReward/SignInRewardView":90,"./View/TTTemplate/GameFail/TTGameFailViewTemplate":91,"./View/TTTemplate/Main/TTMainViewTemplate":92,"./View/TTTemplate/TTCrazyClick/TTCrazyClick":93,"./View/TemplateViews/Export/ExportViewTemplate":96,"./View/TemplateViews/Export2/Exprot2ViewTemplate":95,"./View/TemplateViews/GameFail/GameFailViewTemplate":97,"./View/TemplateViews/GameWin/GameWinViewTemplate":98,"./View/TemplateViews/InGame/InGameViewTemplate":99,"./View/TemplateViews/Main/MainViewTemplate":100,"./View/TemplateViews/MiniGame/MiniGameViewTemplate":101,"./View/TemplateViews/OPPONativeAd/OPPONativeAdViewTemplate":102,"./View/TemplateViews/Reward/RewardViewTemplate":103,"./View/TipsView/TipsView":105,"./View/Tools/MiddleAnchor":106,"./View/Tools/ViewAutoScale":107,"./View/Tools/ViewAutoScaleByW":108,"./View/TwinkleSprite":109}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var FakePlayer = /** @class */ (function (_super) {
    __extends(FakePlayer, _super);
    function FakePlayer() {
        var _this = _super.call(this) || this;
        /** @prop {name:skinIndex, tips:"皮肤索引", type:int,default:1}*/
        _this.skinIndex = 1;
        /** @prop {name:autoMove,tips:"自动移动",type:Bool,default:true}*/
        _this.autoMove = true;
        return _this;
    }
    FakePlayer.prototype.onAwake = function () {
        this._ownerSp = this.owner;
        this._rig = this.owner.getComponent(Laya.RigidBody);
        if (this.autoMove) {
            Laya.timer.once(100, this, this.RdSwimming);
        }
        this._sk = this.owner.getChildByName("Sk");
        var skeleton = new Laya.Skeleton();
        skeleton.load("subRes/player/" + this.skinIndex + "/NewProject.sk");
        skeleton.scaleX = skeleton.scaleX / 4;
        skeleton.scaleY = skeleton.scaleY / 4;
        this._sk.addChild(skeleton);
    };
    FakePlayer.prototype.RdSwimming = function () {
        if (this._rig.linearVelocity[0] > 0) {
            this._rig.linearVelocity = [5, 0];
        }
        else {
            this._rig.linearVelocity = [-5, 0];
        }
        var rdtime = Math.random() * 5000 + 3000;
        Laya.timer.once(rdtime, this, this.RdSwimming);
    };
    return FakePlayer;
}(Laya.Script));
exports.default = FakePlayer;
},{}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PhysicsUtils_1 = require("../PhysicsUtils");
var BaseObj = /** @class */ (function (_super) {
    __extends(BaseObj, _super);
    function BaseObj() {
        return _super.call(this) || this;
    }
    BaseObj.prototype.onAwake = function () {
        this._ownerSp = this.owner;
        this._rigBody = this.owner.getComponent(Laya.RigidBody);
        this._collider = this.owner.getComponent(Laya.ColliderBase);
        if (!this._collider) {
            throw ("没有挂载碰撞体，节点名为：" + this._ownerSp.name + "节点父级为：" + this.owner.parent.name);
        }
        else {
            this.SetColliderCategory();
        }
    };
    /**
     * 设置碰撞组别
     *
     * @memberof PlaneBlocker
     */
    BaseObj.prototype.SetColliderCategory = function () {
        this._rigBody.category = PhysicsUtils_1.CollisionFilterGroupEnum.Plane;
        this._rigBody.mask = PhysicsUtils_1.CollisionFilterGroupEnum.Ground;
        this._collider.refresh();
    };
    return BaseObj;
}(Laya.Script));
exports.default = BaseObj;
},{"../PhysicsUtils":25}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseObj_1 = require("./BaseObj");
var PhysicsUtils_1 = require("../PhysicsUtils");
var DangerZone = /** @class */ (function (_super) {
    __extends(DangerZone, _super);
    function DangerZone() {
        var _this = _super.call(this) || this;
        /** @prop {name:projectileDir,tips:"投射物方向",type:Option,option:"bottom,left,right,top",default:"bottom"}*/
        _this.projectileDir = "bottom";
        /** @prop {name:projectileSpd,tips:"投射物速度",type:number,default:2000}*/
        _this.projectileSpd = 2000;
        /** @prop {name:waitTime,tips:"等待时间",type:number,default:0}*/
        _this.waitTime = 0;
        /** @prop {name:hideProjectile,tips:"隐藏投射物",type:Bool,default:false}*/
        _this.hideProjectile = false;
        _this._fired = false;
        return _this;
    }
    DangerZone.prototype.onAwake = function () {
        this._projectile = this.owner.getChildByName("DangerProjectile");
        this._projectileRig = this._projectile.getComponent(Laya.RigidBody);
        if (this.hideProjectile) {
            this._projectile.visible = false;
        }
        _super.prototype.onAwake.call(this);
    };
    DangerZone.prototype.SetColliderCategory = function () {
        this._rigBody.category = PhysicsUtils_1.CollisionFilterGroupEnum.Plane;
        this._rigBody.mask = PhysicsUtils_1.CollisionFilterGroupEnum.Player | PhysicsUtils_1.CollisionFilterGroupEnum.Enemy;
        this._collider.refresh();
    };
    /**
     * 危险区触发器
     *
     * @param {Laya.ColliderBase} other
     * @param {Laya.ColliderBase} self
     * @param {*} contact
     * @memberof DangerZone
     */
    DangerZone.prototype.onTriggerEnter = function (other, self, contact) {
        if (this._fired)
            return;
        console.log(other.owner);
        this._fired = true;
        this.owner.parent.event("shoot");
        Laya.timer.once(this.waitTime, this, this.shootProjectile);
    };
    DangerZone.prototype.shootProjectile = function () {
        var _this = this;
        this._projectile.visible = true;
        Laya.timer.frameLoop(1, this, function () {
            var spd = (_this.projectileSpd * Laya.timer.delta) / 1000;
            if (_this._projectile.x < -2 * Laya.stage.height ||
                _this._projectile.x > 2 * Laya.stage.height ||
                _this._projectile.y < -2 * Laya.stage.height ||
                _this._projectile.y > 2 * Laya.stage.height) {
                Laya.timer.clearAll(_this);
                _this.owner.removeSelf();
                // this._projectile.destroy();
            }
            switch (_this.projectileDir) {
                case "bottom":
                    _this._projectile.y += spd;
                    break;
                case "left":
                    _this._projectile.x -= spd;
                    break;
                case "right":
                    _this._projectile.x += spd;
                    break;
                case "top":
                    _this._projectile.y -= spd;
                    break;
            }
        });
    };
    return DangerZone;
}(BaseObj_1.default));
exports.default = DangerZone;
},{"../PhysicsUtils":25,"./BaseObj":13}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TideObject_1 = require("./TideObject");
var PhysicsUtils_1 = require("../PhysicsUtils");
var SoundMgr_1 = require("../../Mgr/SoundMgr");
var Enemy = /** @class */ (function (_super) {
    __extends(Enemy, _super);
    function Enemy() {
        var _this = _super.call(this) || this;
        // /** @prop {name:enemyDirect, tips:"敌人朝向", type:Option,option:"Left,Right",default:"Left"}*/
        // public enemyDirect: string = "Left";
        _this._skUrl = "subRes/enemy/NewProject.sk";
        _this._skLoaded = false;
        return _this;
    }
    Enemy.prototype.onAwake = function () {
        var _this = this;
        _super.prototype.onAwake.call(this);
        this._sk = this.owner.getChildByName("Sk");
        this._skeleton = new Laya.Skeleton();
        this._skeleton.scaleX = -0.25;
        this._skeleton.scaleY = 0.25;
        this._skeleton.load(this._skUrl, Laya.Handler.create(this, function () {
            _this._skLoaded = true;
            _this.SkPlay("daiji", true);
        }));
        // this.owner.addChild(this._skeleton);
        this._sk.addChild(this._skeleton);
        this.owner.on("shoot", this, this.shoot);
        // if (this.enemyDirect == "Right") {
        //     this._ownerSp.scaleX = -1;
        // }
        // else {
        //     this._ownerSp.scaleX = 1;
        // }
        // this._collider.refresh();
    };
    Enemy.prototype.SkPlay = function (nameOrIndex, loop, force, star, end, freshSkin) {
        if (this._skLoaded) {
            this._skeleton.play(nameOrIndex, loop, force, star, end, freshSkin);
        }
    };
    Enemy.prototype.SetColliderCategory = function () {
        this._rigBody.category = PhysicsUtils_1.CollisionFilterGroupEnum.Enemy;
        this._rigBody.mask = PhysicsUtils_1.CollisionFilterGroupEnum.ALL ^ PhysicsUtils_1.CollisionFilterGroupEnum.Rope ^ PhysicsUtils_1.CollisionFilterGroupEnum.Player;
        this._collider.refresh();
    };
    Enemy.prototype.onTriggerEnter = function (other, self, contact) {
        if (other.owner.name.indexOf("SensorZone") >= 0) {
            this._rigBody.linearVelocity = [this._rigBody.linearVelocity[0] / 2, this._rigBody.linearVelocity[1] / 2];
        }
        if (other.owner.name.indexOf("Danger") >= 0) {
            SoundMgr_1.default.instance.playSound("撞到物体");
            this.owner.getChildByName("SensorZone").removeSelf();
            this.EnemyDead();
        }
    };
    Enemy.prototype.shoot = function () {
        SoundMgr_1.default.instance.playSound("手枪射击");
        this.SkPlay("kaiqiang", false);
    };
    Enemy.prototype.EnemyDead = function () {
        var _this = this;
        this.SkPlay("sw", false);
        Laya.timer.once(200, this, function () {
            _this.owner.destroy();
        });
    };
    return Enemy;
}(TideObject_1.default));
exports.default = Enemy;
},{"../../Mgr/SoundMgr":47,"../PhysicsUtils":25,"./TideObject":23}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseObj_1 = require("./BaseObj");
var PhysicsUtils_1 = require("../PhysicsUtils");
var SoundMgr_1 = require("../../Mgr/SoundMgr");
var ExitPoint = /** @class */ (function (_super) {
    __extends(ExitPoint, _super);
    function ExitPoint() {
        var _this = _super.call(this) || this;
        /** @prop {name:expointTexture, tips:"退出点动画图集", type:string,accept:res,default:"GameObjs/Rope.png"}*/
        _this.expointTexture = "res/atlas/ExitPoint.atlas";
        return _this;
    }
    ExitPoint.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._animation = this.owner.getChildByName("Ani");
        this._animation.loadAtlas(this.expointTexture);
    };
    ExitPoint.prototype.PlayAni = function () {
        this._ownerSp.loadImage(null);
        this._animation.play(0, false);
        SoundMgr_1.default.instance.playSound("开门");
    };
    ExitPoint.prototype.SetColliderCategory = function () {
        this._rigBody.category = PhysicsUtils_1.CollisionFilterGroupEnum.Plane;
        this._rigBody.mask = PhysicsUtils_1.CollisionFilterGroupEnum.Player;
    };
    return ExitPoint;
}(BaseObj_1.default));
exports.default = ExitPoint;
},{"../../Mgr/SoundMgr":47,"../PhysicsUtils":25,"./BaseObj":13}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Rope_1 = require("./Rope");
var MoveAnchor = /** @class */ (function (_super) {
    __extends(MoveAnchor, _super);
    function MoveAnchor() {
        var _this = _super.call(this) || this;
        /** @prop {name:H_Or_V,tips:"滑动方向是水平或者垂直",type:Option,option:"Horizontal,Vertical",default:"Horizontal"}*/
        _this.H_Or_V = "Horizontal";
        /** @prop {name:moveMaxRange, tips:"铰链绳子长度", type:int,default:100}*/
        _this.moveMaxRange = 130;
        _this._currentMove = 0;
        _this._dragging = false;
        return _this;
    }
    // private _ropePiecesParent: Laya.Sprite;
    MoveAnchor.prototype.onAwake = function () {
        this._ownerSp = this.owner;
        this._ropeScript = this.owner.getComponent(Rope_1.default);
        if (this._ropeScript) {
            this._accachedObj = this._ropeScript.endNode;
            this._accachedObjRig = this._ropeScript.endNode.getComponent(Laya.RigidBody);
        }
        // this._ropePiecesParent = this.owner.getChildByName("RopePiecesParent") as Laya.Sprite
        // if (this._ropePiecesParent == null) {
        //     this._ropePiecesParent = new Laya.Sprite();
        //     this._ropePiecesParent.width = this._startNode.width;
        //     this._ropePiecesParent.height = this._startNode.height;
        //     this._ropePiecesParent.name = "RopePiecesParent";
        //     let index = Math.max(this._startNode.numChildren - 1, 0);
        //     this._startNode.addChildAt(this._ropePiecesParent, 0);
        // }
        // for
        this._originalX = this._ownerSp.x;
        this._originalY = this._ownerSp.y;
        // this._ownerSp.on(Laya.Event.DRAG_START, this, this.onDrag)
    };
    MoveAnchor.prototype.onStart = function () {
    };
    // onMouseDown(e: Laya.Event) {
    //     this._dragging = true;
    //     this._mouseX = Laya.stage.mouseX;
    //     this._mouseY = Laya.stage.mouseY;
    // }
    // onMouseUp() {
    //     this._dragging = false;
    //     this._mouseX = Laya.stage.mouseX;
    //     this._mouseY = Laya.stage.mouseY;
    //     this._accachedObjRig.linearVelocity = { x: 0, y: 0 };
    // }
    // onStageMouseUp() {
    //     this._dragging = false;
    //     this._mouseX = Laya.stage.mouseX;
    //     this._mouseY = Laya.stage.mouseY
    //     this._accachedObjRig.linearVelocity = { x: 0, y: 0 };
    // }
    MoveAnchor.prototype.onUpdate = function () {
        // if (!this._dragging) return;
        // if (this.H_Or_V == "Horizontal") {
        // let x = Laya.stage.mouseX;
        // let offset = (x - this._mouseX);
        // offset = offset >= 0 ? Math.min(this.moveMaxRange, offset) : Math.max(-1 * this.moveMaxRange, offset);
        // let xSpd = 0;
        // let ySpd = 0;
        // let tideObjX = this._accachedObj
        // if (offset >= 1) {
        //     // offset = Math.min(4, offset);
        //     // this._accachedObjRig.linearVelocity = { x: xSpd };
        //     // ySpd = 1.5;
        // }
        // else if (offset <= -1) {
        //     // offset = Math.max(-4, offset);
        //     xSpd = (offset * 1);
        //     ySpd = offset * 0.1;
        //     this._accachedObjRig.linearVelocity = { x: xSpd, y: ySpd };
        // }
        // this._ownerSp.x += offset;
        var spd = (Laya.timer.delta / 1000) * 40;
        if (this._moveForward) {
            if (this._currentMove < this.moveMaxRange) {
                this._currentMove += spd;
            }
            else {
                this._moveForward = false;
            }
        }
        else {
            if (this._currentMove > -1 * this.moveMaxRange) {
                this._currentMove -= spd;
            }
            else {
                this._moveForward = true;
            }
        }
        this._ownerSp.x = this._originalX + this._currentMove;
        // if (this._ownerSp.x > this._originalX + this.moveMaxRange) {
        //     this._ownerSp.x = this._originalX + this.moveMaxRange
        // }
        // else if (this._ownerSp.x < this._originalX - this.moveMaxRange) {
        //     this._ownerSp.x = this._originalX - this.moveMaxRange
        // }
        // }
        // else {
        //     let y = Laya.stage.mouseY;
        //     let offset = (y - this._mouseY);
        //     offset = offset >= 0 ? Math.min(this.moveMaxRange, offset) : Math.max(-1 * this.moveMaxRange, offset);
        //     this._ownerSp.y = this._originalY + offset;
        // }
        this._mouseX = Laya.stage.mouseX;
        this._mouseY = Laya.stage.mouseY;
    };
    return MoveAnchor;
}(Laya.Script));
exports.default = MoveAnchor;
},{"./Rope":20}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PhysicsUtils_1 = require("../PhysicsUtils");
var BaseObj_1 = require("./BaseObj");
var PlaneBlocker = /** @class */ (function (_super) {
    __extends(PlaneBlocker, _super);
    function PlaneBlocker() {
        var _this = _super.call(this) || this;
        /** @prop {name:autoDestoryTime, tips:"自动销毁时间，为0不销毁", type:int,default:0}*/
        _this.autoDestoryTime = 0;
        return _this;
    }
    /**
     * 设置碰撞组别
     *
     * @memberof PlaneBlocker
     */
    PlaneBlocker.prototype.SetColliderCategory = function () {
        this._rigBody.category = PhysicsUtils_1.CollisionFilterGroupEnum.PlaneBlocker;
        this._rigBody.mask = PhysicsUtils_1.CollisionFilterGroupEnum.None | PhysicsUtils_1.CollisionFilterGroupEnum.Plane;
        this._collider.refresh();
    };
    PlaneBlocker.prototype.onStart = function () {
        var _this = this;
        if (this.autoDestoryTime > 0) {
            Laya.timer.once(this.autoDestoryTime, this, function () {
                _this._ownerSp.destroy();
            });
        }
    };
    return PlaneBlocker;
}(BaseObj_1.default));
exports.default = PlaneBlocker;
},{"../PhysicsUtils":25,"./BaseObj":13}],19:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TideObject_1 = require("./TideObject");
var PhysicsUtils_1 = require("../PhysicsUtils");
var ExitPoint_1 = require("./ExitPoint");
var GameView_1 = require("../../View/GameView/GameView");
var User_1 = require("../../User/User");
var SoundMgr_1 = require("../../Mgr/SoundMgr");
var Player = /** @class */ (function (_super) {
    __extends(Player, _super);
    function Player() {
        var _this = _super.call(this) || this;
        _this._list = [];
        _this._moveState = -99;
        _this._moveExit = false;
        _this._moveTimer = 0;
        _this._gameState = 0;
        _this._onGround = false;
        _this._waitForLand = false;
        _this._skLoaded = false;
        return _this;
    }
    Player.prototype.onAwake = function () {
        var _this = this;
        _super.prototype.onAwake.call(this);
        this._rope = this._ownerSp.getChildByName("Rope");
        this._skeleton = new Laya.Skeleton();
        var skinIndex = User_1.default.getCurActorSkin();
        this._skeleton.load("subRes/player/" + skinIndex + "/NewProject.sk", Laya.Handler.create(this, function () {
            _this._skLoaded = true;
            _this.SkPlay("daiji", true);
        }));
        this.SetSpDirection(-1);
        // this._skeleton.pivotX = -150;
        // this._skeleton.pivotY = -50;
        // this._skeleton.scaleX = 0.25;
        // this._skeleton.scaleY = 0.25;
        // this._skeleton.x = Laya.stage.width / 2;
        // this._skeleton.y = Laya.stage.height / 2;
        this.owner.addChildAt(this._skeleton, 0);
        this._ownerSp.texture = null;
    };
    Player.prototype.onDisable = function () {
        Laya.timer.clearAll(this);
    };
    /**
     * 设置玩家的方向
     *
     * @private
     * @param {number} dir
     * @memberof Player
     */
    Player.prototype.SetSpDirection = function (dir) {
        if (dir == -1) {
            this._skeleton.scaleX = 0.25;
            this._skeleton.scaleY = 0.25;
            this._skeleton.pivotX = -150;
            this._skeleton.pivotY = -50;
        }
        else if (dir == 1) {
            this._skeleton.scaleX = -0.25;
            this._skeleton.scaleY = 0.25;
            this._skeleton.pivotX = 300;
            this._skeleton.pivotY = -50;
        }
    };
    /**
     * 进入触发器
     *
     * @param {Laya.ColliderBase} other
     * @param {Laya.ColliderBase} self
     * @param {*} contact
     * @memberof TideObject
     */
    Player.prototype.onTriggerEnter = function (other, self, contact) {
        _super.prototype.onTriggerEnter.call(this, other, self, contact);
        if (other == null || other.owner == null || other.owner.name == null)
            return;
        if (this._gameState < 0 && other.owner.name.indexOf("Ground") >= 0) {
            SoundMgr_1.default.instance.playSound("死亡");
            Laya.timer.clearAll(this._ownerSp);
            Laya.Tween.clearAll(this._ownerSp);
            Laya.timer.once(1000, this, function () {
                GameView_1.default.Instance.GameOver(false);
            });
        }
        if (other.owner.name.indexOf("Sensor") >= 0) {
            this._moveTimer = -100;
            this._rigBody.linearVelocity = { x: 0, y: 0 };
        }
        if (other.owner.name.indexOf("Danger") >= 0) {
            SoundMgr_1.default.instance.playSound("撞到物体");
            this._gameState = -1;
            this.GameOverSetCol();
            this.RopeBroken();
            this.SkPlay("siwang", false, true);
        }
        if (other.owner.name.indexOf("ExitPoint") >= 0) {
            this._waitForLand = true;
            var sp = other.owner;
            this._exitPoint = other.owner;
        }
        if (other.owner.name.indexOf("Ground") >= 0) {
            this._onGround = true;
            this._moveTimer = -50;
            this._rigBody.linearVelocity = { x: 0, y: 0 };
        }
        if (!this._tide && other.owner.name.indexOf("M_L") >= 0) {
            // if (this._list.filter(u => u == other).length == 0) {
            //     this._rigBody.linearVelocity = { x: 0, y: 0 }
            //     Laya.timer.once(500, this, () => {
            //         this._rigBody.linearVelocity = { x: -6, y: 0 };
            //     });
            //     this._list.push(other);
            // }
            // this._rigBody.linearVelocity = { x: 0, y: 0 }
            // Laya.timer.once(500, this, () => {
            //     this._rigBody.linearVelocity = { x: -6, y: 0 };
            // });
            this._moveExit = false;
            this._moveTimer = 0;
            this._moveState = -1;
        }
        if (!this._tide && other.owner.name.indexOf("M_R") >= 0) {
            // this._rigBody.linearVelocity = { x: 0, y: 0 }
            // Laya.timer.once(500, this, () => {
            //     this._rigBody.linearVelocity = { x: 6, y: 0 };
            // });
            this._moveExit = false;
            this._moveTimer = 0;
            this._moveState = 1;
        }
        if (other.owner.name.indexOf("Jump") >= 0) {
            SoundMgr_1.default.instance.playSound("弹跳");
            this._moveExit = false;
            this.RopeBroken();
            this._rigBody.linearVelocity = { x: 0, y: -20 };
        }
    };
    Player.prototype.onTriggerExit = function (other, self, contact) {
        // if(!other.owner || !other.owner.name) return;
        if (other.owner.name.indexOf("M_") >= 0) {
            // this._rigBody.linearVelocity = { x: 0, y: this._rigBody.linearVelocity.y };
            this._moveTimer = 50;
            this._moveExit = true;
        }
    };
    Player.prototype.onTriggerStay = function (other, self, contact) {
        // if(!other.owner || !other.owner.name) return;
        console.log(other.owner.name);
    };
    Player.prototype.GameOverSetCol = function () {
        this._rigBody.mask = PhysicsUtils_1.CollisionFilterGroupEnum.None | PhysicsUtils_1.CollisionFilterGroupEnum.Ground;
        this._collider.refresh();
    };
    Player.prototype.onUpdate = function () {
        if (this._gameState != 0)
            return;
        if (this._waitForLand) {
            if (this._onGround) {
                this._gameState = 1;
                this.GameOverMoveToDoor();
            }
        }
        if (this._moveTimer <= 200) {
            this._moveTimer += Laya.timer.delta;
            return;
        }
        if (this._moveExit) {
            this._moveState = 0;
            this._onGround = false;
            this._moveExit = false;
        }
        else if (this._moveState == -1) {
            // this._moveTimer = 0;
            this.SkPlay("zoulu", true, false);
            this._rigBody.applyForceToCenter({ x: -180, y: 0 });
            this.SetSpDirection(-1);
        }
        else if (this._moveState == 1) {
            // this._moveTimer = 0;
            this.SkPlay("zoulu", true, false);
            this._rigBody.applyForceToCenter({ x: 180, y: 0 });
            this.SetSpDirection(1);
        }
        else if (this._moveState == 0) {
            this.SkPlay("daiji", true, false);
            this._rigBody.linearVelocity = { x: 0, y: this._rigBody.linearVelocity.y };
        }
    };
    Player.prototype.SetColliderCategory = function () {
        this._rigBody.category = PhysicsUtils_1.CollisionFilterGroupEnum.Player;
        this._rigBody.mask = PhysicsUtils_1.CollisionFilterGroupEnum.ALL;
        this._collider.refresh();
    };
    Player.prototype.GameOverMoveToDoor = function () {
        var time = Math.abs(this._ownerSp.x - this._exitPoint.x) * 3;
        var res = this._ownerSp.x - this._exitPoint.x;
        if (res > 0) {
            this.SetSpDirection(-1);
        }
        else {
            this.SetSpDirection(1);
        }
        Laya.Tween.to(this._ownerSp, { x: this._exitPoint.x }, time, null, Laya.Handler.create(this, this.HidePlayer), 500, true, true);
        // let myPoint = Laya.Point.create().setTo(this._ownerSp.pivotX, this._ownerSp.pivotY);
        // if (myPoint.distance(this._exitPoint.x, this._exitPoint.y) >= 1) {
        //     this._isGameOver = true;
        // }
    };
    Player.prototype.HidePlayer = function () {
        var _this = this;
        this.GameOverSetCol();
        var exit = this._exitPoint.getComponent(ExitPoint_1.default);
        exit.PlayAni();
        this.SkPlay("qingzhu", true, true);
        SoundMgr_1.default.instance.playSound("成功");
        Laya.timer.once(2000, this, function () {
            _this._ownerSp.visible = false;
            GameView_1.default.Instance.GameOver(true);
        });
    };
    Player.prototype.SkPlay = function (nameOrIndex, loop, force, star, end, freshSkin) {
        if (this._skLoaded) {
            this._skeleton.play(nameOrIndex, loop, force, star, end, freshSkin);
        }
    };
    Player.prototype.RopeBroken = function () {
        _super.prototype.RopeBroken.call(this);
        if (this._rope) {
            this._rope.visible = false;
        }
    };
    return Player;
}(TideObject_1.default));
exports.default = Player;
},{"../../Mgr/SoundMgr":47,"../../User/User":63,"../../View/GameView/GameView":74,"../PhysicsUtils":25,"./ExitPoint":16,"./TideObject":23}],20:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var RopePieces_1 = require("./RopePieces");
var PhysicsUtils_1 = require("../PhysicsUtils");
var TideObject_1 = require("./TideObject");
var SoundMgr_1 = require("../../Mgr/SoundMgr");
var Rope = /** @class */ (function (_super) {
    __extends(Rope, _super);
    function Rope() {
        var _this = _super.call(this) || this;
        /** @prop {name:endNode, tips:"铰链尾链接的组件", type:Node, default:null}*/
        _this.endNode = null;
        /** @prop {name:endNodePivot,tips:"铰链尾组件的刚体中心点",type:Vec,default:"SpritePivot"}*/
        _this.endNodePivot = null;
        /** @prop {name:ropeTexture, tips:"铰链绳子材质", type:string,accept:res,default:"GameObjs/Rope.png"}*/
        _this.ropeTexture = "GameObjs/Rope.png";
        /** @prop {name:ropeLength, tips:"铰链绳子长度", type:int,default:15}*/
        _this.ropeLength = 15;
        /** @prop {name:lengtRate, tips:"绳子实际物理长度与距离的比例，默认为1", type:number,default:1}*/
        _this.lengtRate = 1;
        /** @prop {name:ropeWidth, tips:"铰链绳子宽度", type:int,default:40}*/
        _this.ropeWidth = 100;
        /** @prop {name:ropeShowRate, tips:"铰链绳子实际宽度与显示宽度的比值", type:number,default:0.25}*/
        _this.ropeShowRate = 0.1;
        /** @prop {name:linearDamping,tips:"绳子阻力",type:Number,min:0,default:0.3}*/
        _this.linearDamping = 0.3;
        _this._ropeNodeList = [];
        _this._ropeSpriteList = [];
        _this._cutOnce = false;
        _this._ropeBroken = false;
        return _this;
    }
    Rope.prototype.onAwake = function () {
        if (!this.endNode)
            return;
        this._tideObj = this.endNode.getComponent(TideObject_1.default);
        if (!this._tideObj)
            return;
        this._startNode = this.owner;
        this._startRig = this._startNode.getComponent(Laya.RigidBody);
        // if (this.starNodePivot == null) {
        this._startPoint = this._startNode.localToGlobal(new Laya.Point(this._startNode.pivotX, this._startNode.pivotY));
        // }
        // else {
        // this._startPoint = this._startNode.localToGlobal(new Laya.Point(this.starNodePivot[0], this.starNodePivot[1]));
        // }
        // this._startPoint = new Laya.Point(this._startNode.x, this._startNode.y);
        this._endRig = this.endNode.getComponent(Laya.RigidBody);
        if (this.endNodePivot) {
            this._endPoint = this.endNode.localToGlobal(new Laya.Point(this.endNodePivot[0], this.endNodePivot[1]));
        }
        else {
            this._endPoint = this.endNode.localToGlobal(new Laya.Point(this.endNode.pivotX, this.endNode.pivotY));
        }
        /* 给绳子建立存储节点 */
        this._ropePiecesParent = this._startNode.getChildByName("RopePiecesParent");
        if (this._ropePiecesParent == null) {
            this._ropePiecesParent = new Laya.Sprite();
            this._ropePiecesParent.width = this._startNode.width;
            this._ropePiecesParent.height = this._startNode.height;
            this._ropePiecesParent.name = "RopePiecesParent";
            var index = Math.max(this._startNode.numChildren - 1, 0);
            this._startNode.addChildAt(this._ropePiecesParent, 0);
        }
        this.CreatRopePieces();
        // EventMgr.instance.regOnceEvent(EventDef.Game_RestartGame, this, this.onDisable);
    };
    // onDisable() {
    //     this._ropeNodeList.forEach(u => {
    //         u.visible = false;
    //         // let ropeJoint = u.getComponent(Laya.RopeJoint) as Laya.RopeJoint;
    //         // let rigidBody = u.getComponent(Laya.RigidBody) as Laya.RigidBody;
    //         // if(ropeJoint)ropeJoint.vis(false);
    //         // if(rigidBody)rigidBody._setActive(false);
    //     });
    // }
    // onDestroy() {
    // }
    /**
     * 创造绳子的碎片
     *
     * @memberof Rope
     */
    Rope.prototype.CreatRopePieces = function () {
        var distance = this._startPoint.distance(this._endPoint.x, this._endPoint.y);
        var direct = new Laya.Point(this._endPoint.x - this._startPoint.x, this._endPoint.y - this._startPoint.y);
        direct.normalize();
        var ropeCount = Math.ceil(distance / this.ropeLength);
        var upper = this._startNode;
        var upperRig = this._startRig;
        for (var index = 0; index < ropeCount; index++) {
            /* 下面的代码是制造绳子的坐标 */
            var ropeNode = new Laya.Sprite();
            ropeNode.name = "Rope";
            this._ropePiecesParent.addChildren(ropeNode);
            var tempPoint = Laya.Point.create();
            tempPoint.setTo(direct.x * index * this.ropeLength, direct.y * index * this.ropeLength);
            // tempPoint.setTo(tempPoint.x + this._startNode.pivotX, tempPoint.y + this._startNode.pivotY);
            // if (this.starNodePivot) {
            //     tempPoint.setTo(tempPoint.x + this.starNodePivot[0], tempPoint.y + this.starNodePivot[1]);
            // }
            // else {
            tempPoint.setTo(tempPoint.x + this._startNode.pivotX, tempPoint.y + this._startNode.pivotY);
            // }
            ropeNode.width = this.ropeWidth;
            ropeNode.height = this.ropeLength * 2;
            ropeNode.pivotX = ropeNode.width / 2;
            ropeNode.pivotY = ropeNode.pivotY / 2;
            ropeNode.x = tempPoint.x;
            ropeNode.y = tempPoint.y;
            /* 下面的代码用于制造绳子的物理效果*/
            var ropeCol = void 0;
            /* if (index < ropeCount)  */ {
                ropeCol = ropeNode.addComponent(Laya.CircleCollider);
                ;
                ropeCol.radius = 9;
                ropeCol.x = ropeNode.pivotX;
                ropeCol.y = ropeNode.pivotY;
                ropeCol.isSensor = true;
                // ropeCol._setActive(false);
                // ropeCol.refresh();
            }
            var ropeRigBody = ropeNode.addComponent(Laya.RigidBody);
            ropeRigBody.getBody().m_mass = 0.01;
            ropeRigBody.linearDamping = this.linearDamping;
            ropeRigBody.allowRotation = false;
            ropeRigBody.category = PhysicsUtils_1.CollisionFilterGroupEnum.Rope;
            ropeRigBody.mask = PhysicsUtils_1.CollisionFilterGroupEnum.None | PhysicsUtils_1.CollisionFilterGroupEnum.Ground;
            var ropeJoint = new Laya.RopeJoint();
            ropeJoint.otherBody = upperRig;
            ropeJoint.maxLength = this.ropeLength * this.lengtRate;
            /* 测试,给绳子加碰撞器 */
            /* 测试完毕 */
            if (ropeCount - 1 == index) {
                ropeJoint.selfBody = this._endRig;
                if (this.endNodePivot != null) {
                    ropeJoint.selfAnchor = [this.endNodePivot[0], this.endNodePivot[1]];
                }
                else {
                    ropeJoint.selfAnchor = [this.endNode.pivotX, this.endNode.pivotY];
                }
                this._tideObj.SetRopeAnchor(ropeJoint);
            }
            else {
                ropeJoint.selfAnchor = [this.ropeWidth / 2, this.ropeLength * 0.5];
            }
            if (index == 0) {
                // if (this.endNodePivot != null) {
                //     ropeJoint.otherAnchor = [this.endNodePivot[0], this.endNodePivot[1]];
                // }
                // else {
                // if (this.starNodePivot) {
                //     ropeJoint.otherAnchor = [this.starNodePivot[0], this.starNodePivot[1]];
                // }
                // else {
                ropeJoint.otherAnchor = [this._startNode.pivotX, this._startNode.pivotY];
                // }
                // }
            }
            else {
                ropeJoint.otherAnchor = [this.ropeWidth / 2, this.ropeLength * 0.5];
            }
            upperRig = ropeRigBody;
            this._ropeNodeList.push(ropeNode);
            ropeNode.addComponentIntance(ropeJoint);
            if (ropeCol) {
                ropeCol.refresh();
            }
            if (index >= 1) {
                ropeNode.once(Laya.Event.MOUSE_OVER, this, this.RopeBeenCut, [index]);
            }
        }
        // /* 下面的代码用于制造绳子的显示效果,绳子显示效果数量要比绳子节点数少1*/
        for (var index = 0; index < this._ropeNodeList.length - 1; index++) {
            var sp = this._ropeNodeList[index];
            var ropeSp = new Laya.Sprite();
            ropeSp.loadImage(this.ropeTexture, null);
            ropeSp.width = this.ropeWidth * this.ropeShowRate;
            ropeSp.height = this.ropeLength;
            ropeSp.pivotX = ropeSp.width / 2;
            ropeSp.pivotY = ropeSp.height / 2;
            ropeSp.x = sp.pivotX;
            ropeSp.y = sp.pivotY;
            ropeSp.mouseEnabled = false;
            sp.addChild(ropeSp);
            var ropePiece = ropeSp.addComponent(RopePieces_1.default);
            var top_1 = index > 0 ? this._ropeNodeList[index - 1] : this._ropeNodeList[0];
            var down = index < this._ropeNodeList.length - 1 ? this._ropeNodeList[index + 1] : this._ropeNodeList[this._ropeNodeList.length - 1];
            ropePiece.SetAngle(top_1, down);
            // ropePiece.SetAngle(top, down, this._ropeNodeList.length, index);
            this._ropeSpriteList.push(ropePiece);
        }
    };
    /**
     * 绳子已被切断
     *
     * @param {number} index
     * @memberof Rope
     */
    Rope.prototype.RopeBeenCut = function (index) {
        var _this = this;
        if (!this._ropeBroken) {
            this._tideObj.RopeCut();
            this._ropeBroken = true;
        }
        /* 防止短时间内多次切绳子 */
        if (this._cutOnce) {
            return;
        }
        this._cutOnce = true;
        Laya.timer.once(500, this, function () {
            _this._cutOnce = false;
        });
        SoundMgr_1.default.instance.playSound("跳下");
        /* 第一步将当前绳子物理效果切断 */
        var ropeJoint = this._ropeNodeList[index].getComponent(Laya.RopeJoint);
        var ropeRig = this._ropeNodeList[index].getComponent(Laya.RigidBody);
        ropeJoint._setActive(false);
        var _loop_1 = function (i) {
            var rope = this_1._ropeNodeList[i];
            Laya.timer.once(100, rope, function () {
                var rig = rope.getComponent(Laya.RigidBody);
                rig.linearDamping = 0.3;
                var col = rope.getComponent(Laya.CircleCollider);
                if (col) {
                    col.isSensor = false;
                }
                // col.radius = 1
                // col.x = rope.width / 2;
                // col.y = rope.height / 2;
            });
            rope.offAll(Laya.Event.MOUSE_OVER);
        };
        var this_1 = this;
        for (var i = index; i < this._ropeNodeList.length; i++) {
            _loop_1(i);
        }
        /* 第二步将当前绳子显示效果切断 */
        // if (index > 0) {
        //     this._ropeSpriteList[index - 1].RopeBeenCut(false);
        // }
        // if (index < this._ropeSpriteList.length - 1) {
        //     this._ropeSpriteList[index + 1].RopeBeenCut(true);
        // }
    };
    return Rope;
}(Laya.Script));
exports.default = Rope;
},{"../../Mgr/SoundMgr":47,"../PhysicsUtils":25,"./RopePieces":21,"./TideObject":23}],21:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 用来控制绳子显示效果核心的类
 *
 * @export
 * @class RopePieces
 * @extends {Laya.Script}
 */
var RopePieces = /** @class */ (function (_super) {
    __extends(RopePieces, _super);
    function RopePieces() {
        var _this = _super.call(this) || this;
        _this._rotate = false;
        return _this;
    }
    RopePieces.prototype.onAwake = function () {
        var _this = this;
        this._ownerSp = this.owner;
        this._ownerSp.on("StopRote", this, function () {
            _this._rotate = false;
        });
    };
    RopePieces.prototype.SetAngle = function (topSprite, bottomSprite) {
        this._topSprite = topSprite;
        this._bottomSprite = bottomSprite;
        this._rotate = true;
        // this._ropeCount = ropeCount;
        // this._ropeIndex = ropeIndex;
        // let radio = 1 - (Math.abs(this._ropeIndex - (this._ropeCount / 2)) / (this._ropeCount / 2));
        this._ownerSp.scaleY = 1.5;
    };
    RopePieces.prototype.RopeBeenCut = function (isUp) {
        if (isUp) {
            this._topSprite = this._ownerSp;
        }
        else {
            this._bottomSprite = this._ownerSp;
        }
    };
    RopePieces.prototype.onUpdate = function () {
        if (this._rotate) {
            var direct = Laya.Point.create();
            direct.setTo(this._topSprite.x - this._bottomSprite.x, this._topSprite.y - this._bottomSprite.y);
            var angel = Math.atan2(direct.x, direct.y) * 180 / Math.PI * -1;
            this._ownerSp.rotation = angel;
            direct.recover();
        }
    };
    return RopePieces;
}(Laya.Script));
exports.default = RopePieces;
},{}],22:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var RotateObj = /** @class */ (function (_super) {
    __extends(RotateObj, _super);
    function RotateObj() {
        var _this = _super.call(this) || this;
        /** @prop {name:rotateDir, tips:"旋转方向", type:Option,option:"Add,Dec",default:"Add"}*/
        _this.rotateDir = "Add";
        _this.OneLoopTime = 7000;
        return _this;
    }
    RotateObj.prototype.onAwake = function () {
        this._ownerSp = this.owner;
        this._timeScale = 360 / this.OneLoopTime;
    };
    RotateObj.prototype.onUpdate = function () {
        if (this.rotateDir == "Add") {
            this._ownerSp.rotation += Laya.timer.delta * this._timeScale;
        }
        else {
            this._ownerSp.rotation -= Laya.timer.delta * this._timeScale;
        }
    };
    return RotateObj;
}(Laya.Script));
exports.default = RotateObj;
},{}],23:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PhysicsUtils_1 = require("../PhysicsUtils");
var BaseObj_1 = require("./BaseObj");
var TideObject = /** @class */ (function (_super) {
    __extends(TideObject, _super);
    function TideObject() {
        var _this = _super.call(this) || this;
        /* 绳子组件 */
        _this._ropeAnchorList = [];
        /* 捆绑状态 */
        _this._tide = false;
        /* 绑住的绳子数量 */
        _this._ropeCount = 0;
        return _this;
    }
    TideObject.prototype.onStart = function () {
        if (this._ropeAnchorList.length > 0) {
            this._tide = true;
        }
    };
    /**
     * 设置绳子碰撞组别
     *
     * @protected
     * @memberof TideObject
     */
    TideObject.prototype.SetColliderCategory = function () {
        this._rigBody.category = PhysicsUtils_1.CollisionFilterGroupEnum.Plane;
        this._rigBody.mask = PhysicsUtils_1.CollisionFilterGroupEnum.ALL ^ PhysicsUtils_1.CollisionFilterGroupEnum.Rope;
        this._collider.refresh();
    };
    /**
     * 设置绳子锚点
     *
     * @param {Laya.RopeJoint} rope
     * @memberof TideObject
     */
    TideObject.prototype.SetRopeAnchor = function (rope) {
        this._ropeAnchorList.push(rope);
        this._ropeCount++;
    };
    /**
     * 进入触发器
     *
     * @param {Laya.ColliderBase} other
     * @param {Laya.ColliderBase} self
     * @param {*} contact
     * @memberof TideObject
     */
    TideObject.prototype.onTriggerEnter = function (other, self, contact) {
        // if(!other.owner || !other.owner.name) return;
        if (!other.isSensor && !this._tide) {
            this.RopeBroken();
        }
        if (other.owner.name.indexOf("Ground") >= 0) {
            this.RopeBroken();
        }
    };
    /**
     * 在落地的时候,打断绳子
     *
     * @param {Laya.RopeJoint} rope
     * @memberof TideObject
     */
    TideObject.prototype.RopeBroken = function () {
        this._ropeAnchorList.forEach(function (u) {
            u._setActive(false);
        });
        this._tide = false;
    };
    /**
     * 切断一根绳子
     *
     * @memberof TideObject
     */
    TideObject.prototype.RopeCut = function () {
        this._ropeCount--;
        if (this._ropeCount <= 0) {
            this._tide = false;
        }
    };
    return TideObject;
}(BaseObj_1.default));
exports.default = TideObject;
},{"../PhysicsUtils":25,"./BaseObj":13}],24:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Guider = /** @class */ (function (_super) {
    __extends(Guider, _super);
    function Guider() {
        return _super.call(this) || this;
    }
    Guider.prototype.onAwake = function () {
        this._ownerSp = this.owner;
        this._sk = this.owner.getChildByName("Sk");
        var skeleton = new Laya.Skeleton();
        skeleton.load("subRes/guider/NewProject.sk");
        skeleton.scaleX = skeleton.scaleX / 2;
        skeleton.scaleY = skeleton.scaleY / 2;
        this._sk.addChild(skeleton);
    };
    Guider.prototype.onMouseOver = function () {
        this._ownerSp.visible = false;
    };
    return Guider;
}(Laya.Script));
exports.default = Guider;
},{}],25:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CollisionFilterGroupEnum = /** @class */ (function () {
    function CollisionFilterGroupEnum() {
    }
    CollisionFilterGroupEnum.None = 0;
    CollisionFilterGroupEnum.ALL = -1;
    CollisionFilterGroupEnum.Plane = Math.pow(2, 0);
    CollisionFilterGroupEnum.Ground = Math.pow(2, 1);
    CollisionFilterGroupEnum.Rope = Math.pow(2, 2);
    CollisionFilterGroupEnum.Player = Math.pow(2, 3);
    CollisionFilterGroupEnum.Enemy = Math.pow(2, 4);
    CollisionFilterGroupEnum.PlaneBlocker = Math.pow(2, 5);
    return CollisionFilterGroupEnum;
}());
exports.CollisionFilterGroupEnum = CollisionFilterGroupEnum;
},{}],26:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TouchCtr = /** @class */ (function (_super) {
    __extends(TouchCtr, _super);
    // private _touchTime: number = -1;
    // private _touchCollider: Laya.ChainCollider;
    // private _touchRigbody: Laya.RigidBody;
    // private _mouseX: number;
    // private _mouseY: number;
    function TouchCtr() {
        var _this = _super.call(this) || this;
        /** @prop {name:touchTexture, tips:"显示效果材质", type:string,accept:res,default:"GameObjs/TouchEffect.png"}*/
        _this.touchTexture = "GameObjs/TouchEffect.png";
        /** @prop {name:effectSize, tips:"显示效果材质大小", type:int,default:20}*/
        _this.effectSize = 20;
        /** @prop {name:effecTime, tips:"显示效果消失次数,单位毫秒", type:int,default:1000}*/
        _this.effecTime = 1000;
        return _this;
    }
    TouchCtr.prototype.onAwake = function () {
        this._touchEffectParent = Laya.stage.getChildByName("TouchEffectParent");
        if (this._touchEffectParent == null) {
            this._touchEffectParent = new Laya.Sprite();
            this._touchEffectParent.mouseEnabled = false;
            Laya.stage.addChild(this._touchEffectParent);
        }
        if (Laya.stage.getChildIndex(this._touchEffectParent) != Laya.stage.numChildren - 1) {
            Laya.stage.setChildIndex(this._touchEffectParent, Laya.stage.numChildren - 1);
        }
        // this._touchCollider = this.owner.addComponent(Laya.ChainCollider);
        // this._touchCollider.points = "0,0,0,0";
        // this._touchCollider.loop = false;
        // this._touchRigbody = this.owner.addComponent(Laya.RigidBody);
        // this._touchRigbody.type = "kinematic";
        // this._touchRigbody.allowRotation = false;
        // this._touchRigbody.category = CollisionFilterGroupEnum.RopeCut;
        // this._touchRigbody.mask = CollisionFilterGroupEnum.Rope;
        // this._touchCollider.refresh();
    };
    TouchCtr.prototype.onStageMouseDown = function () {
        this._mouseDown = true;
    };
    TouchCtr.prototype.onStageMouseUp = function () {
        this._mouseDown = false;
    };
    TouchCtr.prototype.onUpdate = function () {
        var _this = this;
        if (!this._mouseDown) {
            // this._mouseX = -1;
            // this._mouseY = -1;
            // this._touchTime = 0;
            return;
        }
        /* 划痕显示效果 */
        var effect = Laya.Pool.getItemByCreateFun("touchEffect", function (res) {
            var eff = new Laya.Sprite();
            eff.mouseEnabled = false;
            eff.loadImage(_this.touchTexture);
            eff.width = _this.effectSize;
            eff.height = _this.effectSize;
            var effScript = eff.addComponent(TouchEffect);
            effScript.effecTime = _this.effecTime;
            return eff;
        }, this);
        effect.x = Laya.stage.mouseX;
        effect.y = Laya.stage.mouseY;
        effect.pivotX = this.effectSize / 2;
        effect.pivotY = this.effectSize / 2;
        this._touchEffectParent.addChild(effect);
        /* 真正切绳子 */
        // if (this._touchTime <= 50) {
        //     this._touchTime += Laya.timer.delta;
        //     return;
        // }
        // if (this._mouseX <= 0 || this._mouseY <= 0) {
        //     this._mouseX = Laya.stage.mouseX;
        //     this._mouseY = Laya.stage.mouseY;
        //     return;
        // }
        // this._touchCollider.points = this._mouseX.toString() + "," + this._mouseY.toString() + "," +
        //     Laya.stage.mouseX.toString() + "," + Laya.stage.mouseY.toString();
        // this._touchCollider.refresh();
        // this._mouseX = Laya.stage.mouseX;
        // this._mouseY = Laya.stage.mouseY;
        // this._touchTime = 0;
    };
    return TouchCtr;
}(Laya.Script));
exports.default = TouchCtr;
var TouchEffect = /** @class */ (function (_super) {
    __extends(TouchEffect, _super);
    function TouchEffect() {
        var _this = _super.call(this) || this;
        _this.effecTime = 1000;
        return _this;
    }
    TouchEffect.prototype.onAwake = function () {
        this._isScare = false;
        this._ownerSp = this.owner;
    };
    TouchEffect.prototype.onEnable = function () {
        this._scare = 1;
        this._isScare = true;
        // Laya.timer.once(500, this, () => {
        //     this.owner.removeSelf();
        // })
    };
    TouchEffect.prototype.onUpdate = function () {
        if (this._isScare && this._scare > 0) {
            this._scare -= Laya.timer.delta / this.effecTime;
            this._ownerSp.scaleX = this._scare;
            this._ownerSp.scaleY = this._scare;
            this._ownerSp.alpha = this._scare;
        }
        else {
            this.owner.removeSelf();
        }
    };
    TouchEffect.prototype.onDisable = function () {
        //效果，回收效果对象池，方便下次复用，减少对象创建开销
        this._isScare = false;
        Laya.Pool.recover("touchEffect", this.owner);
    };
    return TouchEffect;
}(Laya.Script));
exports.TouchEffect = TouchEffect;
},{}],27:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ComBase_1 = require("./KRQ_ComBase");
var WXAPI_1 = require("../../WXAPI");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var ShareAd_1 = require("../../ShareAd/ShareAd");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var KRQ_Banner = /** @class */ (function (_super) {
    __extends(KRQ_Banner, _super);
    function KRQ_Banner() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._wxBanner = null;
        _this._onLoad = null;
        _this._onError = null;
        _this._onResize = null;
        return _this;
    }
    Object.defineProperty(KRQ_Banner.prototype, "Clip", {
        get: function () {
            return this.owner;
        },
        enumerable: true,
        configurable: true
    });
    KRQ_Banner.prototype.onAwake = function () {
        this.AdPosID = ShareAd_1.default.BannerAdLocationID;
    };
    KRQ_Banner.prototype.onStart = function () {
        this.refresh();
    };
    KRQ_Banner.prototype.onEnable = function () {
        this.Sprite.on(Laya.Event.CLICK, this, this.onClickAd);
    };
    KRQ_Banner.prototype.onDisable = function () {
        this.Sprite.off(Laya.Event.CLICK, this, this.onClickAd);
    };
    KRQ_Banner.prototype.onClickAd = function () {
        this.navigateToMiniProgram();
    };
    KRQ_Banner.prototype.refresh = function (onComplate) {
        var banner = AppSwitchConfig_1.default.getInstance().getAppSwitchData().banner;
        if (1 == banner) {
            this.refreshWXBanner();
            var bannerRecreateTime = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerRecreateTime;
            Laya.timer.loop(bannerRecreateTime * 1000, this, this.refreshWXBanner);
        }
        else {
            this.refreshBanner();
            var bannerRecreateTime = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerRecreateTime;
            Laya.timer.loop(bannerRecreateTime * 1000, this, this.refreshBanner);
        }
    };
    KRQ_Banner.prototype.refreshBanner = function () {
        var _this = this;
        if (null == this.Sprite || !this.Sprite.visible)
            return;
        _super.prototype.refresh.call(this, function () {
            if (null != _this._data) {
                var self_1 = _this;
                _this.Sprite.loadImage(_this._data.logo, Laya.Handler.create(_this, function () {
                    if (null != self_1.Sprite && !self_1.Sprite.destroyed) {
                        self_1.Sprite.width = 600;
                        self_1.Sprite.height = 205;
                    }
                }));
            }
        });
    };
    KRQ_Banner.prototype.refreshWXBanner = function () {
        if ((!Laya.Browser.onMiniGame && !Laya.Browser.onQQMiniGame) || null == this.Sprite || !this.Sprite.visible)
            return;
        this.clearWXBaner();
        var self = this;
        var sysInfo = null;
        if (Laya.Browser.onMiniGame) {
            sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
        }
        else if (Laya.Browser.onQQMiniGame) {
            sysInfo = Laya.Browser.window["qq"].getSystemInfoSync();
        }
        var sw = sysInfo.screenWidth;
        var sh = sysInfo.screenHeight;
        var pos = this.Sprite.localToGlobal(new Laya.Point(0, 0));
        var width = 300;
        var scale = self.Sprite.width / Laya.stage.width;
        var realWidth = sw * scale;
        var offset = (realWidth - width) / 2;
        var left = pos.x / Laya.stage.width * sw + offset;
        var top = pos.y / Laya.stage.height * sh;
        if (Laya.Browser.onMiniGame) {
            var recreateBannerIDList = AppSwitchConfig_1.default.getInstance().getAppSwitchData().recreateBannerIDList;
            var bannerAdUnitId_1 = recreateBannerIDList[Math.floor(Math.random() * recreateBannerIDList.length)];
            if (null == bannerAdUnitId_1) {
                bannerAdUnitId_1 = WXAPI_1.default.bannerAdUnitId;
            }
            this._wxBanner = Laya.Browser.window["wx"].createBannerAd({
                adUnitId: bannerAdUnitId_1,
                adIntervals: 30,
                style: {
                    left: left,
                    top: top,
                    width: width,
                }
            });
            if (null != self._wxBanner) {
                self._wxBanner.onLoad(function (res) {
                    console.log("KRQ  WXBanner广告 加载完成 : ", bannerAdUnitId_1);
                    console.log(res);
                    self._wxBanner.show();
                });
                self._wxBanner.onError(function (err) {
                    console.log("KRQ WXBanner广告 加载失败 : ", bannerAdUnitId_1);
                    console.log(err);
                    self.refreshBanner();
                    self.clearWXBaner();
                });
                self._wxBanner.onResize(function (res) {
                });
            }
            else {
                self.refreshBanner();
            }
        }
        else if (Laya.Browser.onQQMiniGame) {
            var recreateBannerIDList = AppSwitchConfig_1.default.getInstance().getAppSwitchData().recreateBannerIDList;
            var bannerAdUnitId_2 = recreateBannerIDList[Math.floor(Math.random() * recreateBannerIDList.length)];
            if (null == bannerAdUnitId_2) {
                bannerAdUnitId_2 = QQMiniGameAPI_1.default.bannerAdUnitId;
            }
            self._wxBanner = Laya.Browser.window["qq"].createBannerAd({
                adUnitId: bannerAdUnitId_2,
                adIntervals: 30,
                style: {
                    left: left,
                    top: top,
                    width: width,
                }
            });
            if (null != self._wxBanner) {
                self._onLoad = function (res) {
                    console.log("KRQ  QQBanner广告 加载完成 : ", bannerAdUnitId_2);
                    console.log(res);
                    self._wxBanner.show();
                };
                self._wxBanner.onLoad(self._onLoad);
                self._onError = function (err) {
                    console.log("KRQ QQBanner广告 加载失败 : ", bannerAdUnitId_2);
                    console.log(err);
                    self.refreshBanner();
                    self.clearWXBaner();
                };
                self._wxBanner.onError(self._onError);
                self._onResize = function (res) {
                };
                self._wxBanner.onResize(self._onResize);
            }
            else {
                self.refreshBanner();
            }
        }
    };
    KRQ_Banner.prototype.clearWXBaner = function () {
        if (this._wxBanner) {
            this._wxBanner.offLoad(this._onLoad);
            this._wxBanner.offError(this._onError);
            this._wxBanner.offResize(this._onResize);
            this._wxBanner.destroy();
        }
        this._wxBanner = null;
    };
    KRQ_Banner.prototype.onViewShow = function () {
        var banner = AppSwitchConfig_1.default.getInstance().getAppSwitchData().banner;
        if (1 == banner) {
            if (null == this._wxBanner) {
                this.refreshWXBanner();
                var bannerRecreateTime = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerRecreateTime;
                Laya.timer.loop(bannerRecreateTime * 1000, this, this.refreshWXBanner);
            }
        }
        else {
            this.refreshBanner();
            var bannerRecreateTime = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerRecreateTime;
            Laya.timer.loop(bannerRecreateTime * 1000, this, this.refreshBanner);
        }
    };
    KRQ_Banner.prototype.onViewHide = function () {
        this.clearWXBaner();
        Laya.timer.clearAll(this);
    };
    KRQ_Banner.prototype.onDestroy = function () {
        this.clearWXBaner();
        Laya.timer.clearAll(this);
    };
    KRQ_Banner.prototype.show = function () {
        _super.prototype.show.call(this);
        this.onViewShow();
    };
    KRQ_Banner.prototype.hide = function () {
        _super.prototype.hide.call(this);
        this.onViewHide();
    };
    return KRQ_Banner;
}(KRQ_ComBase_1.default));
exports.default = KRQ_Banner;
},{"../../Config/AppSwitchConfig":5,"../../QQMiniGameAPI":56,"../../ShareAd/ShareAd":57,"../../WXAPI":111,"./KRQ_ComBase":28}],28:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WXAPI_1 = require("../../WXAPI");
var ShareAd_1 = require("../../ShareAd/ShareAd");
var ALD_1 = require("../../ALD");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var OPPOAPI_1 = require("../../OPPOAPI");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var KRQ_ComBase = /** @class */ (function (_super) {
    __extends(KRQ_ComBase, _super);
    function KRQ_ComBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.AdPosID = -10086;
        _this._datas = [];
        _this._data = null;
        return _this;
    }
    Object.defineProperty(KRQ_ComBase.prototype, "Sprite", {
        get: function () {
            return this.owner;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KRQ_ComBase.prototype, "Data", {
        get: function () {
            return this._data;
        },
        enumerable: true,
        configurable: true
    });
    KRQ_ComBase.prototype.refresh = function (onComplate) {
        var self = this;
        ShareAd_1.default.getADVs(this.AdPosID, function (datas) {
            if (null != datas) {
                self._datas = datas;
                self._data = self._datas[Math.floor(Math.random() * datas.length)];
                if (null != onComplate) {
                    onComplate();
                }
            }
        }, false);
    };
    KRQ_ComBase.prototype.navigateToMiniProgram = function (d) {
        var data = null == d ? this._data : d;
        if (data) {
            console.log("跳转游戏： " + data.title);
            if (Laya.Browser.onMiniGame) {
                WXAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                    ALD_1.default.aldSendReportAdClickSuccess(data);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                    if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                        console.log("用户取消跳转");
                        ALD_1.default.aldSendReportAdClickFail(data);
                    }
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQGMiniGame) {
                OPPOAPI_1.default.navigateToMiniProgram(data.appid, data.title, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQQMiniGame) //qq小游戏
             {
                QQMiniGameAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
        }
    };
    KRQ_ComBase.prototype.show = function () {
        this.Sprite.visible = true;
    };
    KRQ_ComBase.prototype.hide = function () {
        this.Sprite.visible = false;
    };
    KRQ_ComBase.prototype.autoScrollText = function (text) {
        if (text.overflow != Laya.Text.SCROLL)
            return;
        var forward = true;
        var deltaDis = 0;
        Laya.timer.frameLoop(1, text, function () {
            var d = Laya.timer.delta / 1000 * 10;
            deltaDis += d;
            if (deltaDis >= text.textWidth / 2) {
                forward = !forward;
                deltaDis = 0;
            }
            if (forward) {
                text.scrollX += d;
            }
            else {
                text.scrollX -= d;
            }
        });
    };
    return KRQ_ComBase;
}(Laya.Script));
exports.default = KRQ_ComBase;
},{"../../ALD":1,"../../Event/EventDef":9,"../../Event/EventMgr":10,"../../OPPOAPI":55,"../../QQMiniGameAPI":56,"../../ShareAd/ShareAd":57,"../../WXAPI":111}],29:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_Banner_1 = require("./KRQ_Banner");
var WXAPI_1 = require("../../WXAPI");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var WudianMgr_1 = require("../../Mgr/WudianMgr");
var KRQ_GamingBanner = /** @class */ (function (_super) {
    __extends(KRQ_GamingBanner, _super);
    function KRQ_GamingBanner() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    KRQ_GamingBanner.prototype.refresh = function (onComplate) {
        var _this = this;
        var launchScene = null;
        if (Laya.Browser.onMiniGame) {
            launchScene = WXAPI_1.default.getLaunchOptionsSync().scene;
        }
        else if (Laya.Browser.onQQMiniGame) {
            launchScene = QQMiniGameAPI_1.default.getLaunchOptionsSync().scene;
        }
        var noEnterBySearch = true;
        var wudianSceneList = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wudianSceneList;
        for (var i = 0; i < wudianSceneList.length; ++i) {
            var wudianSceneValue = wudianSceneList[i];
            if (launchScene == wudianSceneValue) {
                noEnterBySearch = false;
            }
        }
        var ipBlocked = WudianMgr_1.default.GetIpBlocked();
        if (!ipBlocked || !noEnterBySearch) {
            this.Sprite.visible = false;
            if (null != onComplate) {
                onComplate();
            }
            return;
        }
        var banner = AppSwitchConfig_1.default.getInstance().getAppSwitchData().banner;
        if (1 == banner) {
            this.refreshWXBanner();
        }
        else {
            _super.prototype.refresh.call(this, function () {
                _this.refreshBanner();
                if (null != onComplate) {
                    onComplate();
                }
            });
        }
    };
    return KRQ_GamingBanner;
}(KRQ_Banner_1.default));
exports.default = KRQ_GamingBanner;
},{"../../Config/AppSwitchConfig":5,"../../Mgr/WudianMgr":50,"../../QQMiniGameAPI":56,"../../WXAPI":111,"./KRQ_Banner":27}],30:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_HistoryBox_1 = require("./KRQ_HistoryBox");
var KRQ_ComBase_1 = require("../KRQ_ComBase");
var ShareAd_1 = require("../../../ShareAd/ShareAd");
var KRQ_History = /** @class */ (function (_super) {
    __extends(KRQ_History, _super);
    function KRQ_History() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.OnBackBtnClick = null;
        _this._topZone = null;
        _this._backBtn = null;
        _this._startList = new Array();
        return _this;
    }
    KRQ_History.prototype.onAwake = function () {
        this.AdPosID = ShareAd_1.default.HistoryLocationID;
        this._topZone = this.Sprite.getChildByName("TopZone");
        this._backBtn = this._topZone.getChildByName("BackBtn");
        this._list = this.Sprite.getChildByName("List");
        this._list.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);
        this._list.vScrollBarSkin = "";
    };
    KRQ_History.prototype.onStart = function () {
        this.refresh();
    };
    KRQ_History.prototype.onEnable = function () {
        this._backBtn.on(Laya.Event.CLICK, this, this.onBackBtn);
    };
    KRQ_History.prototype.onDisable = function () {
        this._backBtn.off(Laya.Event.CLICK, this, this.onBackBtn);
    };
    KRQ_History.prototype.refresh = function (onComplate) {
        var self = this;
        ShareAd_1.default.getADVs(this.AdPosID, function (datas) {
            if (null != datas) {
                self._datas = datas;
                self._startList.splice(0);
                for (var i = 0; i < self._datas.length; ++i) {
                    self._startList.push(false);
                }
                var num = Math.floor(self._startList.length * 0.33);
                while (num > 0) {
                    var index = Math.floor(Math.random() * self._startList.length);
                    if (false == self._startList[index]) {
                        self._startList[index] = true;
                        --num;
                    }
                }
                self._list.array = self._datas;
            }
        }, false);
    };
    KRQ_History.prototype.onListRender = function (cell, index) {
        var data = this._list.array[index];
        var star = this._startList[index];
        var historyBox = cell.getComponent(KRQ_HistoryBox_1.default);
        historyBox.setData(data, star);
    };
    KRQ_History.prototype.onBackBtn = function () {
        this.hide();
        if (null != this.OnBackBtnClick) {
            this.OnBackBtnClick();
        }
    };
    KRQ_History.prototype.show = function () {
        _super.prototype.show.call(this);
        this.refresh();
    };
    return KRQ_History;
}(KRQ_ComBase_1.default));
exports.default = KRQ_History;
},{"../../../ShareAd/ShareAd":57,"../KRQ_ComBase":28,"./KRQ_HistoryBox":31}],31:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ComBase_1 = require("../../Com/KRQ_ComBase");
var KRQ_HistoryBox = /** @class */ (function (_super) {
    __extends(KRQ_HistoryBox, _super);
    function KRQ_HistoryBox() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._icon = null;
        _this._text = null;
        _this._mark = null;
        return _this;
    }
    KRQ_HistoryBox.prototype.onAwake = function () {
        this._icon = this.Sprite.getChildByName("Icon");
        this._text = this.Sprite.getChildByName("Text");
        this._text.overflow = Laya.Text.SCROLL;
        this._text.text = "";
        this._mark = this.Sprite.getChildByName("Mark");
        this._mark.visible = false;
    };
    KRQ_HistoryBox.prototype.onStart = function () {
        this.autoScrollText(this._text);
    };
    KRQ_HistoryBox.prototype.onEnable = function () {
        this.Sprite.on(Laya.Event.CLICK, this, this.onClickAd);
    };
    KRQ_HistoryBox.prototype.onDisable = function () {
        this.Sprite.off(Laya.Event.CLICK, this, this.onClickAd);
    };
    KRQ_HistoryBox.prototype.onClickAd = function () {
        this.navigateToMiniProgram();
    };
    KRQ_HistoryBox.prototype.setData = function (data, star) {
        this._data = data;
        if (null != this._data) {
            var self = this;
            this._icon.loadImage(this._data.logo, Laya.Handler.create(this, function () {
                if (!self._icon.destroyed) {
                    self._icon.width = 100;
                    self._icon.height = 100;
                }
            }));
            var str = String(this._data.title);
            this._text.text = str;
            this._mark.visible = star;
        }
    };
    return KRQ_HistoryBox;
}(KRQ_ComBase_1.default));
exports.default = KRQ_HistoryBox;
},{"../../Com/KRQ_ComBase":28}],32:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ComBase_1 = require("../KRQ_ComBase");
var KRQ_LoopAdBox_1 = require("./KRQ_LoopAdBox");
var ShareAd_1 = require("../../../ShareAd/ShareAd");
var KRQ_HLoopAd = /** @class */ (function (_super) {
    __extends(KRQ_HLoopAd, _super);
    function KRQ_HLoopAd() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.isEnable = true;
        _this.useMovePause = true;
        _this._scrollForward = true;
        _this._cellSize = new Laya.Point();
        return _this;
    }
    Object.defineProperty(KRQ_HLoopAd.prototype, "Clip", {
        get: function () {
            return this.owner;
        },
        enumerable: true,
        configurable: true
    });
    KRQ_HLoopAd.prototype.onAwake = function () {
        this.AdPosID = ShareAd_1.default.LoopAdLocationID;
        this._list = this.owner.getChildByName("List");
        this._list.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);
        this._list.hScrollBarSkin = "";
    };
    KRQ_HLoopAd.prototype.onStart = function () {
        var self = this;
        this._list.width = self.Clip.width;
        this._list.height = self.Clip.height;
        self.refresh(function () {
            if (null != self._list.cells && self._list.cells.length > 0) {
                var box = self._list.cells[0];
                self._cellSize.x = box.width;
                self._cellSize.y = box.height;
                if (self.useMovePause) {
                    setTimeout(function () {
                        if (self._list.scrollBar) {
                            self._list.scrollBar.value = 0;
                            self.move();
                        }
                    }, 2000);
                }
            }
        });
    };
    KRQ_HLoopAd.prototype.refresh = function (onComplate) {
        if (!this.isEnable) {
            if (null != onComplate) {
                onComplate();
            }
            return;
        }
        var self = this;
        ShareAd_1.default.getADVs(this.AdPosID, function (datas) {
            if (null != datas && datas.length > 0) {
                self._datas = datas;
                self._list.array = self._datas;
                if (null != self.Sprite && !self.Sprite.destroyed) {
                    self.Sprite.visible = true;
                }
                if (null != onComplate) {
                    onComplate();
                }
            }
            else {
                if (null != self.Sprite && !self.Sprite.destroyed) {
                    self.Sprite.visible = false;
                }
            }
        }, null, true);
    };
    KRQ_HLoopAd.prototype.onListRender = function (cell, index) {
        var data = this._list.array[index];
        var loopAdBox = cell.getComponent(KRQ_LoopAdBox_1.default);
        loopAdBox.setData(data);
    };
    KRQ_HLoopAd.prototype.move = function () {
        var tonum = this._cellSize.x + this._list.spaceX;
        var left = 0;
        if (!this._scrollForward) {
            tonum *= -1;
            left = (this._list.scrollBar.max - this._list.scrollBar.value) % tonum * -1;
        }
        else {
            left = this._list.scrollBar.value % tonum;
        }
        if (this._list.scrollBar) {
            this._list.scrollBar.stopScroll();
            var scrollDelta = tonum;
            if (0 != left) {
                scrollDelta = 2 * tonum - left;
            }
            var self_1 = this;
            Laya.Tween.to(self_1._list.scrollBar, { value: self_1._list.scrollBar.value + scrollDelta }, 1000, null, Laya.Handler.create(self_1, function () {
            }));
            Laya.timer.once(1010, self_1, function () {
                if (self_1._list.scrollBar.value >= self_1._list.scrollBar.max) {
                    self_1._scrollForward = false;
                }
                else if (self_1._list.scrollBar.value <= 0) {
                    self_1._scrollForward = true;
                }
                Laya.timer.once(3000, self_1, function () {
                    if (self_1._list.scrollBar) {
                        self_1.move();
                    }
                });
            });
        }
    };
    KRQ_HLoopAd.prototype.onUpdate = function () {
        if (this.useMovePause)
            return;
        if (this._scrollForward) {
            this._list.scrollBar.value += 100 * Laya.timer.delta / 1000;
            if (this._list.scrollBar.value >= this._list.scrollBar.max) {
                this._scrollForward = false;
            }
        }
        else {
            this._list.scrollBar.value -= 100 * Laya.timer.delta / 1000;
            if (this._list.scrollBar.value <= 0) {
                this._scrollForward = true;
            }
        }
    };
    return KRQ_HLoopAd;
}(KRQ_ComBase_1.default));
exports.default = KRQ_HLoopAd;
},{"../../../ShareAd/ShareAd":57,"../KRQ_ComBase":28,"./KRQ_LoopAdBox":33}],33:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ComBase_1 = require("../KRQ_ComBase");
var KRQ_LoopAdBox = /** @class */ (function (_super) {
    __extends(KRQ_LoopAdBox, _super);
    function KRQ_LoopAdBox() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._originW = 170;
        _this._originH = 170;
        return _this;
    }
    KRQ_LoopAdBox.prototype.onAwake = function () {
        this._displaySp = this.owner.getChildByName("Display");
        this._originW = this._displaySp.width;
        this._originH = this._displaySp.height;
        this._disText = this.owner.getChildByName("TitelText");
        this._disText.overflow = Laya.Text.SCROLL;
        this._disText.text = "";
    };
    KRQ_LoopAdBox.prototype.onStart = function () {
        this.autoScrollText(this._disText);
    };
    KRQ_LoopAdBox.prototype.onEnable = function () {
        this.Sprite.on(Laya.Event.CLICK, this, this.onClickAd);
    };
    KRQ_LoopAdBox.prototype.onDisable = function () {
        this.Sprite.off(Laya.Event.CLICK, this, this.onClickAd);
    };
    KRQ_LoopAdBox.prototype.onClickAd = function () {
        this.navigateToMiniProgram();
    };
    KRQ_LoopAdBox.prototype.setData = function (data) {
        this._data = data;
        if (null != this._data) {
            var self_1 = this;
            this._displaySp.loadImage(this._data.logo, Laya.Handler.create(this, function () {
                if (!self_1._displaySp.destroyed) {
                    self_1._displaySp.width = self_1._originW;
                    self_1._displaySp.height = self_1._originH;
                }
            }));
            var str = String(this._data.title);
            this._disText.text = str;
        }
    };
    return KRQ_LoopAdBox;
}(KRQ_ComBase_1.default));
exports.default = KRQ_LoopAdBox;
},{"../KRQ_ComBase":28}],34:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_HLoopAd_1 = require("./KRQ_HLoopAd");
var ShareAd_1 = require("../../../ShareAd/ShareAd");
var KRQ_VLoopAd = /** @class */ (function (_super) {
    __extends(KRQ_VLoopAd, _super);
    function KRQ_VLoopAd() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    KRQ_VLoopAd.prototype.onAwake = function () {
        this.AdPosID = ShareAd_1.default.LoopAdLocationID;
        this._list = this.owner.getChildByName("List");
        this._list.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);
        this._list.vScrollBarSkin = "";
    };
    KRQ_VLoopAd.prototype.move = function () {
        var tonum = this._cellSize.y + this._list.spaceY;
        var left = 0;
        if (!this._scrollForward) {
            tonum *= -1;
            left = (this._list.scrollBar.max - this._list.scrollBar.value) % tonum * -1;
        }
        else {
            left = this._list.scrollBar.value % tonum;
        }
        if (this._list.scrollBar) {
            this._list.scrollBar.stopScroll();
            var scrollDelta = tonum;
            if (0 != left) {
                scrollDelta = 2 * tonum - left;
            }
            var self_1 = this;
            Laya.Tween.to(self_1._list.scrollBar, { value: self_1._list.scrollBar.value + scrollDelta }, 1000, null, Laya.Handler.create(self_1, function () {
            }));
            Laya.timer.once(1010, self_1, function () {
                if (self_1._list.scrollBar.value >= self_1._list.scrollBar.max) {
                    self_1._scrollForward = false;
                }
                else if (self_1._list.scrollBar.value <= 0) {
                    self_1._scrollForward = true;
                }
                Laya.timer.once(3000, self_1, function () {
                    if (self_1._list.scrollBar) {
                        self_1.move();
                    }
                });
            });
        }
    };
    return KRQ_VLoopAd;
}(KRQ_HLoopAd_1.default));
exports.default = KRQ_VLoopAd;
},{"../../../ShareAd/ShareAd":57,"./KRQ_HLoopAd":32}],35:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_SingleAd_1 = require("./KRQ_SingleAd");
var KRQ_RockSingleAd = /** @class */ (function (_super) {
    __extends(KRQ_RockSingleAd, _super);
    function KRQ_RockSingleAd() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    KRQ_RockSingleAd.prototype.playAni = function (onComplate) {
        var self = this;
        self.Sprite.rotation = 0;
        Laya.Tween.to(self.Sprite, {
            rotation: 20,
        }, 250, Laya.Ease.linearNone, Laya.Handler.create(self, function () {
            Laya.Tween.to(self.Sprite, {
                rotation: 0,
            }, 250, Laya.Ease.linearNone, Laya.Handler.create(self, function () {
                self.Sprite.rotation = 0;
                if (null != onComplate) {
                    onComplate();
                }
            }));
        }));
    };
    return KRQ_RockSingleAd;
}(KRQ_SingleAd_1.default));
exports.default = KRQ_RockSingleAd;
},{"./KRQ_SingleAd":37}],36:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_SingleAd_1 = require("./KRQ_SingleAd");
var KRQ_RollSingleAd = /** @class */ (function (_super) {
    __extends(KRQ_RollSingleAd, _super);
    function KRQ_RollSingleAd() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._originX = null;
        return _this;
    }
    KRQ_RollSingleAd.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._originX = this.Sprite.x;
        this.Sprite.x -= Laya.stage.width;
    };
    KRQ_RollSingleAd.prototype.playAni = function (onComplate) {
        var _this = this;
        var cur = this._originX;
        var next = cur - Laya.stage.width;
        this.Sprite.x = next;
        Laya.Tween.to(this.Sprite, {
            rotation: 360,
        }, 500, Laya.Ease.linearNone, Laya.Handler.create(this, function () {
            _this.Sprite.rotation = 0;
        }));
        Laya.Tween.to(this.Sprite, {
            x: cur,
        }, 500, Laya.Ease.linearNone, Laya.Handler.create(this, function () {
            _this.Sprite.x = cur;
            if (null != onComplate) {
                onComplate();
            }
        }));
    };
    return KRQ_RollSingleAd;
}(KRQ_SingleAd_1.default));
exports.default = KRQ_RollSingleAd;
},{"./KRQ_SingleAd":37}],37:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ComBase_1 = require("./KRQ_ComBase");
var ShareAd_1 = require("../../ShareAd/ShareAd");
var KRQ_SingleAd = /** @class */ (function (_super) {
    __extends(KRQ_SingleAd, _super);
    function KRQ_SingleAd() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._originW = 300;
        _this._originH = 300;
        return _this;
    }
    KRQ_SingleAd.prototype.onAwake = function () {
        this.AdPosID = ShareAd_1.default.LoopAdLocationID;
        this._display = this.Sprite.getChildByName("Display");
        this._text = this.Sprite.getChildByName("Text");
        this._text.overflow = Laya.Text.SCROLL;
        this._text.text = "";
    };
    KRQ_SingleAd.prototype.onEnable = function () {
        this.Sprite.on(Laya.Event.CLICK, this, this.onClickAd);
    };
    KRQ_SingleAd.prototype.onDisable = function () {
        this.Sprite.off(Laya.Event.CLICK, this, this.onClickAd);
    };
    KRQ_SingleAd.prototype.onStart = function () {
        this.autoScrollText(this._text);
        this.refresh();
    };
    KRQ_SingleAd.prototype.refresh = function (onComplate) {
        var self = this;
        ShareAd_1.default.getADVs(this.AdPosID, function (datas) {
            if (null != datas) {
                self._datas = datas;
                if (self.Sprite && !self.Sprite.destroyed) {
                    for (var i = 0; i < self._datas.length; ++i) {
                        var find = false;
                        var data = self._datas[i];
                        for (var j = 0; j < KRQ_SingleAd._repeatCheckList.length; ++j) {
                            var appid = KRQ_SingleAd._repeatCheckList[j];
                            if (appid == data.appid) {
                                find = true;
                                break;
                            }
                        }
                        if (!find) {
                            self.clearRepeat();
                            self._data = data;
                            break;
                        }
                    }
                    if (null == self._data) {
                        self._data = self._datas[Math.floor(Math.random() * datas.length)];
                    }
                    if (null != self._data) {
                        self._display.loadImage(self._data.logo, Laya.Handler.create(self, function () {
                            if (null != self.Sprite && !self.Sprite.destroy) {
                                self.Sprite.visible = true;
                                if (onComplate) {
                                    onComplate();
                                }
                            }
                        }));
                        var str = self._data.title;
                        self._text.text = str;
                        var isHas = false;
                        for (var j = 0; j < KRQ_SingleAd._repeatCheckList.length; ++j) {
                            var appid = KRQ_SingleAd._repeatCheckList[j];
                            if (appid == self._data.appid) {
                                isHas = true;
                                break;
                            }
                        }
                        if (!isHas) {
                            KRQ_SingleAd._repeatCheckList.push(self._data.appid);
                        }
                    }
                    else {
                        if (null != self.Sprite && !self.Sprite.destroy) {
                            self.Sprite.visible = false;
                        }
                        if (onComplate) {
                            onComplate();
                        }
                    }
                }
            }
            else {
                self.Sprite.visible = false;
                if (onComplate) {
                    onComplate();
                }
            }
        });
    };
    KRQ_SingleAd.prototype.hide = function () {
        this.Sprite.visible = false;
        this.clearRepeat();
    };
    KRQ_SingleAd.prototype.clearRepeat = function () {
        if (null != this._data) {
            for (var i = 0; i < KRQ_SingleAd._repeatCheckList.length; ++i) {
                var appid = KRQ_SingleAd._repeatCheckList[i];
                if (appid == this._data.appid) {
                    KRQ_SingleAd._repeatCheckList.splice(i, 1);
                    break;
                }
            }
        }
    };
    KRQ_SingleAd.prototype.onClickAd = function () {
        this.navigateToMiniProgram();
        this.refresh();
    };
    KRQ_SingleAd.prototype.onDestroy = function () {
        this.clearRepeat();
    };
    KRQ_SingleAd._repeatCheckList = new Array();
    return KRQ_SingleAd;
}(KRQ_ComBase_1.default));
exports.default = KRQ_SingleAd;
},{"../../ShareAd/ShareAd":57,"./KRQ_ComBase":28}],38:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ViewComBase_1 = require("./KRQ_ViewComBase");
var Utilit_1 = require("../../Utilit");
var KRQ_History_1 = require("../Com/KRQ_History/KRQ_History");
var KRQ_Banner_1 = require("../Com/KRQ_Banner");
var KRQ_Export = /** @class */ (function (_super) {
    __extends(KRQ_Export, _super);
    function KRQ_Export() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onContinueBtnClick = null;
        _this._topZone = null;
        _this._backBtn = null;
        _this._centerZone = null;
        _this._continueBtn = null;
        _this._krqHistory = null;
        _this._krqBanner = null;
        return _this;
    }
    Object.defineProperty(KRQ_Export.prototype, "BackBtn", {
        get: function () {
            if (null == this._backBtn) {
                this._backBtn = this.Sprite.getChildByName("TopZone").getChildByName("BackBtn");
            }
            return this._backBtn;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KRQ_Export.prototype, "ContinueBtn", {
        get: function () {
            if (null == this._continueBtn) {
                this._continueBtn = this.Sprite.getChildByName("CenterZone").getChildByName("ContinueBtn");
            }
            return this._continueBtn;
        },
        enumerable: true,
        configurable: true
    });
    KRQ_Export.prototype.onAwake = function () {
        this._topZone = this.Sprite.getChildByName("TopZone");
        if (Utilit_1.default.isIphoneX()) {
            this._topZone.top = this._topZone.top + 75;
        }
        this._backBtn = this._topZone.getChildByName("BackBtn");
        this._centerZone = this.Sprite.getChildByName("CenterZone");
        if (Utilit_1.default.isIphoneX()) {
            this._centerZone.top = this._centerZone.top + 75;
        }
        this._continueBtn = this._centerZone.getChildByName("ContinueBtn");
        this._krqHistory = this.owner.getChildByName("KRQ_History").getComponent(KRQ_History_1.default);
        this._krqBanner = this.owner.getChildByName("KRQ_Banner").getComponent(KRQ_Banner_1.default);
        var self = this;
        this._krqHistory.OnBackBtnClick = function () {
            self._krqBanner.show();
        };
    };
    KRQ_Export.prototype.onEnable = function () {
        this._backBtn.on(Laya.Event.CLICK, this, this.onBackBtn);
        this._continueBtn.on(Laya.Event.CLICK, this, this.onContinueBtn);
    };
    KRQ_Export.prototype.onDisable = function () {
        this._backBtn.off(Laya.Event.CLICK, this, this.onBackBtn);
        this._continueBtn.off(Laya.Event.CLICK, this, this.onContinueBtn);
    };
    KRQ_Export.prototype.onBackBtn = function () {
        this._krqHistory.show();
        this._krqBanner.hide();
    };
    KRQ_Export.prototype.onContinueBtn = function () {
        if (null != this.onContinueBtnClick) {
            this.onContinueBtnClick();
        }
    };
    return KRQ_Export;
}(KRQ_ViewComBase_1.default));
exports.default = KRQ_Export;
},{"../../Utilit":64,"../Com/KRQ_Banner":27,"../Com/KRQ_History/KRQ_History":30,"./KRQ_ViewComBase":43}],39:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ViewComBase_1 = require("./KRQ_ViewComBase");
var KRQ_RockSingleAd_1 = require("../Com/KRQ_RockSingleAd");
var KRQ_Floating = /** @class */ (function (_super) {
    __extends(KRQ_Floating, _super);
    function KRQ_Floating() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._centerZone = null;
        _this._rockSingleAds = new Array();
        _this._aniSpaceing = 3000;
        return _this;
    }
    KRQ_Floating.prototype.onAwake = function () {
        this._centerZone = this.Sprite.getChildByName("CenterZone");
        for (var i = 0; i < this._centerZone.numChildren; ++i) {
            var child = this._centerZone.getChildAt(i);
            if (child.visible) {
                var rockAd = child.getComponent(KRQ_RockSingleAd_1.default);
                this._rockSingleAds.push(rockAd);
            }
        }
    };
    KRQ_Floating.prototype.onStart = function () {
        var self = this;
        self.playAni();
        Laya.timer.loop(this._rockSingleAds.length * (this._aniSpaceing + 500), this, function () {
            self.playAni(function () {
                self.refreshAd();
            });
        });
    };
    KRQ_Floating.prototype.refreshAd = function () {
        for (var i = 0; i < this._rockSingleAds.length; ++i) {
            var ad = this._rockSingleAds[i];
            if (null == ad.Data) {
                ad.Sprite.visible = false;
            }
            ad.refresh();
        }
    };
    KRQ_Floating.prototype.playAni = function (onComplate) {
        var len = this._rockSingleAds.length;
        var _loop_1 = function (i) {
            var index = i;
            var ad = this_1._rockSingleAds[index];
            Laya.timer.once(this_1._aniSpaceing * i, ad, function () {
                if (index == len - 1) {
                    ad.playAni(onComplate);
                }
                else {
                    ad.playAni();
                }
            });
        };
        var this_1 = this;
        for (var i = 0; i < this._rockSingleAds.length; ++i) {
            _loop_1(i);
        }
    };
    return KRQ_Floating;
}(KRQ_ViewComBase_1.default));
exports.default = KRQ_Floating;
},{"../Com/KRQ_RockSingleAd":35,"./KRQ_ViewComBase":43}],40:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ViewComBase_1 = require("./KRQ_ViewComBase");
var KRQ_RollSingleAd_1 = require("../Com/KRQ_RollSingleAd");
var KRQ_GameOver = /** @class */ (function (_super) {
    __extends(KRQ_GameOver, _super);
    function KRQ_GameOver() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._centerZone = null;
        _this._rollSingleAds = new Array();
        return _this;
    }
    KRQ_GameOver.prototype.onAwake = function () {
        this._centerZone = this.Sprite.getChildByName("CenterZone");
        for (var i = 0; i < this._centerZone.numChildren; ++i) {
            var ad = this._centerZone.getChildAt(i).getComponent(KRQ_RollSingleAd_1.default);
            this._rollSingleAds.push(ad);
        }
    };
    KRQ_GameOver.prototype.onStart = function () {
        var _loop_1 = function (i) {
            var ad = this_1._rollSingleAds[i];
            Laya.timer.once((this_1._rollSingleAds.length - i) * 150, this_1, function () {
                ad.playAni();
            });
        };
        var this_1 = this;
        for (var i = 0; i < this._rollSingleAds.length; ++i) {
            _loop_1(i);
        }
    };
    return KRQ_GameOver;
}(KRQ_ViewComBase_1.default));
exports.default = KRQ_GameOver;
},{"../Com/KRQ_RollSingleAd":36,"./KRQ_ViewComBase":43}],41:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_Banner_1 = require("../Com/KRQ_Banner");
var KRQ_ViewComBase_1 = require("./KRQ_ViewComBase");
var KRQ_History_1 = require("../Com/KRQ_History/KRQ_History");
var KRQ_HLoopAd_1 = require("../Com/KRQ_LoopAd/KRQ_HLoopAd");
var Utilit_1 = require("../../Utilit");
var KRQ_MainState;
(function (KRQ_MainState) {
    KRQ_MainState[KRQ_MainState["Normal"] = 0] = "Normal";
    KRQ_MainState[KRQ_MainState["NoLoopAd"] = 1] = "NoLoopAd";
    KRQ_MainState[KRQ_MainState["NoBannerAd"] = 2] = "NoBannerAd";
})(KRQ_MainState = exports.KRQ_MainState || (exports.KRQ_MainState = {}));
var KRQ_Main = /** @class */ (function (_super) {
    __extends(KRQ_Main, _super);
    function KRQ_Main() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._topZone = null;
        _this._historyBtn = null;
        _this._krqLoopAd = null;
        _this._bottomZone = null;
        _this._krqBanner = null;
        _this._krqHistory = null;
        return _this;
    }
    KRQ_Main.prototype.onAwake = function () {
        this._topZone = this.Sprite.getChildByName("TopZone");
        this._historyBtn = this._topZone.getChildByName("HistoryBtn");
        if (Utilit_1.default.isIphoneX()) {
            this._topZone.top = this._topZone.top + 75;
        }
        this._krqLoopAd = this.Sprite.getChildByName("KRQ_HLoopAd").getComponent(KRQ_HLoopAd_1.default);
        this._krqBanner = this.Sprite.getChildByName("KRQ_Banner").getComponent(KRQ_Banner_1.default);
        this._krqHistory = this.Sprite.getChildByName("KRQ_History").getComponent(KRQ_History_1.default);
        var self = this;
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        this._krqHistory.OnBackBtnClick = function () {
            if (aspectRatio < 0.5) {
                self._krqBanner.show();
            }
        };
        this._krqLoopAd.Sprite.visible = false;
        if (aspectRatio < 0.5) {
            this._krqLoopAd.Clip.top = 100;
            if (Utilit_1.default.isIphoneX()) {
                this._krqLoopAd.Clip.top = this._krqLoopAd.Clip.top + 75;
            }
            this._krqBanner.Sprite.visible = true;
        }
        else {
            this._krqLoopAd.Clip.top = Laya.stage.height - 280;
            this._krqBanner.Sprite.visible = false;
        }
    };
    KRQ_Main.prototype.switchState = function (state) {
        if (state == KRQ_MainState.Normal) {
            var aspectRatio = Laya.stage.width / Laya.stage.height;
            if (aspectRatio < 0.5) {
                this._krqLoopAd.Clip.top = 100;
                if (Utilit_1.default.isIphoneX()) {
                    this._krqLoopAd.Clip.top = this._krqLoopAd.Clip.top + 75;
                }
                this._krqBanner.Sprite.visible = true;
            }
            else {
                this._krqLoopAd.Clip.top = Laya.stage.height - 280;
                this._krqBanner.Sprite.visible = false;
            }
        }
        else if (state == KRQ_MainState.NoLoopAd) {
            this._krqLoopAd.isEnable = false;
            this._krqLoopAd.Sprite.visible = false;
            this._krqBanner.Sprite.visible = true;
        }
        else if (state == KRQ_MainState.NoBannerAd) {
            this._krqLoopAd.Clip.top = Laya.stage.height - 280;
            this._krqBanner.AdPosID = -1;
            this._krqBanner.Sprite.visible = false;
        }
    };
    KRQ_Main.prototype.onEnable = function () {
        this._historyBtn.on(Laya.Event.CLICK, this, this.onHistoryBtn);
    };
    KRQ_Main.prototype.onDisable = function () {
        this._historyBtn.off(Laya.Event.CLICK, this, this.onHistoryBtn);
    };
    KRQ_Main.prototype.onHistoryBtn = function () {
        this._krqHistory.show();
        this._krqBanner.hide();
    };
    return KRQ_Main;
}(KRQ_ViewComBase_1.default));
exports.default = KRQ_Main;
},{"../../Utilit":64,"../Com/KRQ_Banner":27,"../Com/KRQ_History/KRQ_History":30,"../Com/KRQ_LoopAd/KRQ_HLoopAd":32,"./KRQ_ViewComBase":43}],42:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ViewComBase_1 = require("./KRQ_ViewComBase");
var KRQ_VLoopAd_1 = require("../Com/KRQ_LoopAd/KRQ_VLoopAd");
var KRQ_SidePull = /** @class */ (function (_super) {
    __extends(KRQ_SidePull, _super);
    function KRQ_SidePull() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._krqVLoopAd = null;
        _this._pullBtn = null;
        return _this;
    }
    KRQ_SidePull.prototype.onAwake = function () {
        this._krqVLoopAd = this.Sprite.getChildByName("KRQ_VLoopAd").getComponent(KRQ_VLoopAd_1.default);
        this._pullBtn = this._krqVLoopAd.Sprite.getChildByName("PullBtn");
        this._krqVLoopAd.Sprite.x = -this._krqVLoopAd.Sprite.width;
    };
    KRQ_SidePull.prototype.onEnable = function () {
        this._pullBtn.on(Laya.Event.CLICK, this, this.onPullBtn);
    };
    KRQ_SidePull.prototype.onDisable = function () {
        this._pullBtn.off(Laya.Event.CLICK, this, this.onPullBtn);
    };
    KRQ_SidePull.prototype.onPullBtn = function () {
        if (this._krqVLoopAd.Sprite.x < 0) {
            this.pull();
        }
        else {
            this.push();
        }
    };
    KRQ_SidePull.prototype.pull = function () {
        Laya.Tween.to(this._krqVLoopAd.Sprite, {
            x: 0
        }, 200, Laya.Ease.linearNone, null, 0, true);
    };
    KRQ_SidePull.prototype.push = function () {
        Laya.Tween.to(this._krqVLoopAd.Sprite, {
            x: -this._krqVLoopAd.Sprite.width
        }, 200, Laya.Ease.linearNone, null, 0, true);
    };
    KRQ_SidePull.prototype.onShareAdFail = function () {
        this.pull();
    };
    return KRQ_SidePull;
}(KRQ_ViewComBase_1.default));
exports.default = KRQ_SidePull;
},{"../Com/KRQ_LoopAd/KRQ_VLoopAd":34,"./KRQ_ViewComBase":43}],43:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ViewComBase = /** @class */ (function (_super) {
    __extends(KRQ_ViewComBase, _super);
    function KRQ_ViewComBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onShow = null;
        _this.onHide = null;
        return _this;
    }
    Object.defineProperty(KRQ_ViewComBase.prototype, "Sprite", {
        get: function () {
            return this.owner;
        },
        enumerable: true,
        configurable: true
    });
    KRQ_ViewComBase.prototype.show = function () {
        this.Sprite.visible = true;
        if (null != this.onShow) {
            this.onShow();
        }
    };
    KRQ_ViewComBase.prototype.hide = function () {
        this.Sprite.visible = false;
        if (null != this.onHide) {
            this.onHide();
        }
    };
    return KRQ_ViewComBase;
}(Laya.Script));
exports.default = KRQ_ViewComBase;
},{}],44:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpUnit_1 = require("../Net/HttpUnit");
var AppConfig_1 = require("../AppConfig");
var WXAPI_1 = require("../WXAPI");
var User_1 = require("../User/User");
var OPPOAPI_1 = require("../OPPOAPI");
/**
 * 用于买量上报,以及停留时间上报的的类，本质上是对wx和买量接口做一个集成化的封装方便使用
 *
 * @export
 * @class MaiLiang
 */
var MaiLiang = /** @class */ (function () {
    function MaiLiang() {
    }
    /**
     * 发送数据的类
     *
     * @protected
     * @static
     * @param {requestData} req
     * @memberof MaiLiang
     */
    MaiLiang.request = function (req) {
        if (req.url.indexOf("https://") > -1 ||
            req.url.indexOf("http://") > -1) {
            req.url = req.url;
        }
        else {
            req.url = MaiLiang.mainUrl + req.url;
        }
        var completeFunc = function (res) {
            console.log(res, "MaiLiang http Success");
            res = JSON.parse(res);
            if (res.Status == "200") {
                if (res.Result["OpenId"] != null && res.Result["OpenId"] != "") {
                    MaiLiang.MaiLiangOpenId = res.Result["OpenId"];
                    MaiLiang.time = req.data.posttime;
                    console.log("获得买量系统OpenId " + MaiLiang.MaiLiangOpenId);
                }
                else {
                    console.log("上报买量系统停留时间成功");
                }
                if (req.onSuccess) {
                    req.onSuccess(res);
                }
            }
            else {
                if (req.onFail) {
                    req.onFail(res);
                }
            }
            req.onSuccess = null;
            req = null;
        };
        var errorFunc = function (res) {
            console.log(res, "MaiLiang http fail");
            if (req.onFail) {
                req.onFail(res);
            }
            req.onFail = null;
            req = null;
        };
        var xhr = new Laya.HttpRequest();
        xhr.once(Laya.Event.COMPLETE, MaiLiang, completeFunc);
        xhr.once(Laya.Event.ERROR, MaiLiang, errorFunc);
        if (req.meth == "get") {
            var para = "";
            for (var _i = 0, _a = Object.keys(req.data); _i < _a.length; _i++) {
                var key = _a[_i];
                var value = req.data[key];
                para += key + "=" + value + "&";
            }
            req.url = req.url + "?" + para;
            xhr.send(req.url, null, req.meth);
        }
        else {
            var para = "";
            for (var _b = 0, _c = Object.keys(req.data); _b < _c.length; _b++) {
                var key = _c[_b];
                var value = req.data[key];
                para += key + "=" + value + "&";
            }
            xhr.send(req.url, para, req.meth, null, ["Content-Type", "application/x-www-form-urlencoded"]);
        }
    };
    /**
     * 获得买量系统唯一标识ID,此ID的作用是用来上报游戏时间
     *
     * @param {Function} res
     * @memberof MaiLiang
     */
    MaiLiang.GetMaiLiangOpenId = function (onSuccess, onFail) {
        if (Laya.Browser.onMiniGame) {
            var option = WXAPI_1.default.getLaunchOptionsSync();
            if (option != null) {
                var key = option.query["key"];
                if (key != null && key != "" && User_1.default.openId != "") {
                    MaiLiang.key = key;
                    var req = new HttpUnit_1.requestData();
                    req.url = MaiLiang.uclick;
                    req.onSuccess = onSuccess;
                    req.onFail = onFail;
                    req.data.appid = AppConfig_1.default.AppID;
                    req.data.openid = "";
                    var time = new Date().getTime() / 1000;
                    req.data.posttime = time;
                    req.data.auth = 0;
                    req.data.key = key;
                    req.data.wxopenid = User_1.default.openId;
                    req.meth = "POST";
                    console.log("发送买量数据接口");
                    MaiLiang.request(req);
                }
            }
            else {
                console.log("上报买量数据失败");
                onFail(null);
            }
        }
        else if (Laya.Browser.onQGMiniGame) {
            var option = OPPOAPI_1.default.getLaunchOptionsSync();
            HttpUnit_1.default.reportImport(option.referrerInfo.package, option.referrerInfo.extraData.appid, function (result) {
                if (1 == result.code) {
                    console.log("OPPO 上报买量数据成功");
                }
                else {
                    console.log("OPPO 上报买量数据失败", result.msg);
                }
            }, function (result) {
                console.log("OPPO 上报买量数据失败");
                for (var key in result) {
                    console.log(key, result[key]);
                }
            });
        }
        else {
            console.log("不在微信模式下调用，默认上报买量数据失败");
            onFail(null);
        }
    };
    /**
     * 上报买量接口停留时间
     *
        appid －主体小程序appid
        openid －买量系统唯一标识（不可空）
        posttime － 请求时间刻度（精确到秒）
        time － 停留时长（精确到秒）
     * @static
     * @memberof MaiLiang
     */
    MaiLiang.ReportStayTime = function (onSuccess, onFail) {
        if (Laya.Browser.onMiniGame) {
            if (MaiLiang.MaiLiangOpenId != "") {
                var req = new HttpUnit_1.requestData();
                req.url = MaiLiang.stay;
                req.onSuccess = onSuccess;
                req.onFail = onFail;
                req.data.appid = AppConfig_1.default.AppID;
                req.data.openid = MaiLiang.MaiLiangOpenId;
                var time = new Date().getTime() / 1000;
                req.data.posttime = time;
                var staytime = MaiLiang.time != 0 ? time - MaiLiang.time : 0;
                req.data.time = staytime;
                req.meth = "POST";
                console.log("发送停留时间至买量接口");
                MaiLiang.request(req);
            }
        }
        else {
            console.log("不在微信模式下调用，默认发送停留时间至买量接口失败");
            onFail(null);
        }
    };
    MaiLiang.mainUrl = "https://swtj.mrkzx.cn";
    MaiLiang.uclick = "/v1.1/api/Activity/uclick.html";
    MaiLiang.stay = "/v1.1/api/Activity/stay.html";
    MaiLiang.key = ""; //推广路径中同名参数，需要调用方法WXAPi.getLaunchOptionsSync()，从返回的参数中获得。
    MaiLiang.MaiLiangOpenId = ""; //买量系统唯一标识,执行GetMaiLiangOpenId()方法成功后自动获得。
    MaiLiang.time = 0; //买量系统唯一标识后，记录当前时间（精确到秒）。
    return MaiLiang;
}());
exports.default = MaiLiang;
},{"../AppConfig":2,"../Net/HttpUnit":52,"../OPPOAPI":55,"../User/User":63,"../WXAPI":111}],45:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var User_1 = require("./User/User");
var layaMaxUI_1 = require("./ui/layaMaxUI");
var LoadingView_1 = require("./View/LoadingView/LoadingView");
var HttpUnit_1 = require("./Net/HttpUnit");
var WXAPI_1 = require("./WXAPI");
var AppConfig_1 = require("./AppConfig");
var EventMgr_1 = require("./Event/EventMgr");
var EventDef_1 = require("./Event/EventDef");
var OPPOAPI_1 = require("./OPPOAPI");
var QQMiniGameAPI_1 = require("./QQMiniGameAPI");
var TTAPI_1 = require("./TTAPI");
var ALD_1 = require("./ALD");
var Main = /** @class */ (function () {
    function Main() {
        this._loadingUI = null;
        this._loadingView = null;
        //预加载列表
        this._preLoadRes = new Array();
        //根据IDE设置初始化引擎      
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        if (true == AppConfig_1.default.onTTMiniGame) {
            Laya.Browser.onMiniGame = false;
        }
        if (!Laya.Browser.onMiniGame
            && !Laya.Browser.onQGMiniGame
            && !Laya.Browser.onQQMiniGame
            && !AppConfig_1.default.onTTMiniGame) //如果不是小游戏，资源服务器设置为本地测试地址
         {
            // AppConfig.ResServer = AppConfig.LocalTestReServer;
        }
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        Laya.loader.maxLoader = 50;
        this.initLoadingView();
        //加载重要配置，这些配置必须在游戏启动前加载完成
        var firstConfigs = [
            { url: AppConfig_1.default.ResServer + "/json/appswitch.json", type: Laya.Loader.JSON }
        ];
        var self = this;
        Laya.loader.load(firstConfigs, Laya.Handler.create(this, function () {
            self.loadRes(); //加载资源
        }));
        EventMgr_1.default.instance.regOnceEvent(EventDef_1.EventDef.App_CloseFirstLoadingView, this, this.closeloadingUI);
    };
    Main.prototype.initLoadingView = function () {
        this._loadingUI = new layaMaxUI_1.ui.View.LoadingUI();
        Laya.stage.addChild(this._loadingUI);
        this._loadingUI.width = Laya.stage.width;
        this._loadingUI.height = Laya.stage.height;
        this._loadingView = this._loadingUI.getComponent(LoadingView_1.default);
        this._loadingView.setProcess(0);
    };
    Main.prototype.postResToOpenDataContext = function (onComplate) {
        if (Laya.Browser.onMiniGame) {
            console.log("开始透传资源数据到开放域");
            Laya.loader.load([
                "openRes/Rank.atlas",
            ], Laya.Handler.create(null, function () {
                Laya.MiniAdpter.sendAtlasToOpenDataContext("openRes/Rank.atlas");
                console.log("透传资源数据到开放域  完毕！！！");
                if (onComplate) {
                    onComplate();
                }
            }));
        }
        else {
            if (onComplate) {
                onComplate();
            }
        }
    };
    Main.prototype.preLoad = function () {
        //这里添加你需要预加载的资源
        this._preLoadRes.push({ url: AppConfig_1.default.ResServer + "/json/levelConfig.json", type: Laya.Loader.JSON });
        this._preLoadRes.push({ url: AppConfig_1.default.ResServer + "/json/skinConfig.json", type: Laya.Loader.JSON });
        this._preLoadRes.push({ url: AppConfig_1.default.ResServer + "/json/gameConfig.json", type: Laya.Loader.JSON });
    };
    Main.prototype.loadRes = function () {
        var _this = this;
        this.preLoad();
        var resource = this._preLoadRes;
        var self = this;
        if (Laya.Browser.onMiniGame) {
            //开始加载分包
            var loadSubResTask = Laya.Browser.window["wx"].loadSubpackage({
                name: 'subRes',
                success: function (res) {
                    // 分包加载成功,开始预加载资源
                    if (resource.length > 0) {
                        Laya.loader.load(resource, Laya.Handler.create(_this, function () {
                            self.onLoadResComplate(); //预加载完成
                        }), Laya.Handler.create(_this, function (res) {
                            //todo:跟新进度条
                            self._loadingView.setProcess(res / 2 + 0.5);
                        }));
                    }
                    else {
                        self.onLoadResComplate(); //预加载完成
                    }
                },
                fail: function (res) {
                    _this.loadRes(); //加载失败，重新加载
                }
            });
            loadSubResTask.onProgressUpdate(function (res) {
                self._loadingView.setProcess(res / 2);
            });
        }
        else if (Laya.Browser.onQGMiniGame) //oppo小游戏
         {
            //开始加载分包
            var loadSubResTask = Laya.Browser.window["qg"].loadSubpackage({
                name: 'subRes',
                success: function (res) {
                    // 分包加载成功,开始预加载资源
                    if (resource.length > 0) {
                        Laya.loader.load(resource, Laya.Handler.create(_this, function () {
                            self.onLoadResComplate(); //预加载完成
                        }), Laya.Handler.create(_this, function (res) {
                            //todo:跟新进度条
                            self._loadingView.setProcess(res / 2 + 0.5);
                        }));
                    }
                    else {
                        self.onLoadResComplate(); //预加载完成
                    }
                },
                fail: function (res) {
                    _this.loadRes(); //加载失败，重新加载
                }
            });
            loadSubResTask.onProgressUpdate(function (res) {
                // 加载进度百分比
                var progress = res["progress"];
                // 下载数据
                var totalBytesWritten = res["totalBytesWritten"];
                // 总长度
                var totalBytesExpectedToWrite = res["totalBytesExpectedToWrite"];
                self._loadingView.setProcess(progress / 2);
            });
        }
        else if (Laya.Browser.onQQMiniGame) {
            //开始加载分包
            var loadSubResTask = Laya.Browser.window["qq"].loadSubpackage({
                name: 'subRes',
                success: function (res) {
                    // 分包加载成功,开始预加载资源
                    if (resource.length > 0) {
                        Laya.loader.load(resource, Laya.Handler.create(_this, function () {
                            self.onLoadResComplate(); //预加载完成
                        }), Laya.Handler.create(_this, function (res) {
                            //todo:跟新进度条
                            self._loadingView.setProcess(res / 2 + 0.5);
                        }));
                    }
                    else {
                        self.onLoadResComplate(); //预加载完成
                    }
                },
                fail: function (res) {
                    _this.loadRes(); //加载失败，重新加载
                }
            });
            loadSubResTask.onProgressUpdate(function (res) {
                self._loadingView.setProcess(res / 2);
            });
        }
        else { //字节跳动没有分包
            if (resource.length > 0) {
                Laya.loader.load(resource, Laya.Handler.create(this, function () {
                    self.onLoadResComplate();
                }), Laya.Handler.create(this, function (res) {
                    self._loadingView.setProcess(res);
                }));
            }
            else {
                self.onLoadResComplate();
            }
        }
    };
    Main.prototype.onLoadResComplate = function () {
        var _this = this;
        var self = this;
        this._loadingView.setProcess(1);
        if (Laya.Browser.onMiniGame) {
            WXAPI_1.default.wxLogin(function (code) {
                var _this = this;
                User_1.default.code = code;
                HttpUnit_1.default.login(function (res) {
                    if (res.code == 1) {
                        console.log("登陆成功！！！");
                        User_1.default.token = res.data.token;
                        User_1.default.openId = res.data.openid;
                        ALD_1.default.aldSendOpenId(User_1.default.openId);
                        HttpUnit_1.default.getGameData(function (res) {
                            console.log("获取用户数据成功！！！");
                            if (1 == res.code) {
                                User_1.default.initiUser(res.data);
                            }
                            else {
                                User_1.default.initiUser(null);
                            }
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        }, function (res) {
                            console.log("获取用户数据失败！！！");
                            User_1.default.token = "";
                            User_1.default.openId = "";
                            User_1.default.initiUser(null);
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        });
                    }
                    else {
                        console.log("登陆失败！！！" + res);
                        User_1.default.initiUser(null);
                        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                        }));
                    }
                }, function (res) {
                    console.log("登陆失败！！！" + res);
                    User_1.default.initiUser(null);
                    GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                    }));
                });
            }, null);
        }
        else if (Laya.Browser.onQGMiniGame) //oppo小游戏
         {
            OPPOAPI_1.default.initAdService(function () {
            }, function () {
            }, function () {
            });
            OPPOAPI_1.default.Login(function (token) {
                var _this = this;
                User_1.default.code = token;
                HttpUnit_1.default.login(function (res) {
                    if (res.code == 1) {
                        console.log("登陆成功！！！");
                        User_1.default.token = res.data.token;
                        User_1.default.openId = res.data.openid;
                        HttpUnit_1.default.getGameData(function (res) {
                            console.log("获取用户数据成功！！！");
                            if (1 == res.code) {
                                User_1.default.initiUser(res.data);
                                console.log("获取用户数据--------------------Start");
                                for (var key in res.data) {
                                    console.log(key, res.data[key]);
                                }
                                console.log("获取用户数据--------------------End");
                            }
                            else {
                                User_1.default.initiUser(null);
                            }
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        }, function (res) {
                            console.log("获取用户数据失败！！！");
                            User_1.default.token = "";
                            User_1.default.openId = "";
                            User_1.default.initiUser(null);
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        });
                    }
                    else {
                        console.log("登陆失败！！！", res);
                        User_1.default.initiUser(null);
                        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                        }));
                    }
                }, function (res) {
                    console.log("登陆失败！！！", res);
                    User_1.default.initiUser(null);
                    GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                    }));
                });
            }, null);
        }
        else if (Laya.Browser.onQQMiniGame) //qq小游戏
         {
            QQMiniGameAPI_1.default.Login(function (code) {
                var _this = this;
                User_1.default.code = code;
                HttpUnit_1.default.login(function (res) {
                    if (res.code == 1) {
                        console.log("登陆成功！！！");
                        User_1.default.token = res.data.token;
                        User_1.default.openId = res.data.openid;
                        ALD_1.default.aldSendOpenId(User_1.default.openId);
                        HttpUnit_1.default.getGameData(function (res) {
                            console.log("获取用户数据成功！！！");
                            if (1 == res.code) {
                                User_1.default.initiUser(res.data);
                            }
                            else {
                                User_1.default.initiUser(null);
                            }
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        }, function (res) {
                            console.log("获取用户数据失败！！！");
                            User_1.default.token = "";
                            User_1.default.openId = "";
                            User_1.default.initiUser(null);
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        });
                    }
                    else {
                        console.log("登陆失败！！！" + res);
                        User_1.default.initiUser(null);
                        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                        }));
                    }
                }, function (res) {
                    console.log("登陆失败！！！" + res);
                    User_1.default.initiUser(null);
                    GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                    }));
                });
            }, null);
        }
        else if (AppConfig_1.default.onTTMiniGame) //头条，字节跳动
         {
            TTAPI_1.default.ttLogin(function (code) {
                var _this = this;
                User_1.default.code = code;
                HttpUnit_1.default.login(function (res) {
                    if (res.code == 1) {
                        console.log("登陆成功！！！");
                        User_1.default.token = res.data.token;
                        User_1.default.openId = res.data.openid;
                        HttpUnit_1.default.getGameData(function (res) {
                            console.log("获取用户数据成功！！！");
                            if (1 == res.code) {
                                User_1.default.initiUser(res.data);
                            }
                            else {
                                User_1.default.initiUser(null);
                            }
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        }, function (res) {
                            console.log("获取用户数据失败！！！");
                            User_1.default.token = "";
                            User_1.default.openId = "";
                            User_1.default.initiUser(null);
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        });
                    }
                    else {
                        console.log("登陆失败！！！" + res);
                        User_1.default.initiUser(null);
                        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                        }));
                    }
                }, function (res) {
                    console.log("登陆失败！！！" + res);
                    User_1.default.initiUser(null);
                    GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                    }));
                });
            }, function () {
                User_1.default.initiUser(null);
                GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                }));
            });
        }
        else {
            User_1.default.testInitUser(); //测试
            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(this, function () {
            }));
        }
    };
    Main.prototype.closeloadingUI = function () {
        if (this._loadingUI && !this._loadingUI.destroyed) {
            this._loadingUI.destroy();
        }
    };
    return Main;
}());
//激活启动类
new Main();
},{"./ALD":1,"./AppConfig":2,"./Event/EventDef":9,"./Event/EventMgr":10,"./GameConfig":11,"./Net/HttpUnit":52,"./OPPOAPI":55,"./QQMiniGameAPI":56,"./TTAPI":62,"./User/User":63,"./View/LoadingView/LoadingView":78,"./WXAPI":111,"./ui/layaMaxUI":112}],46:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewMgr_1 = require("./ViewMgr");
var User_1 = require("../User/User");
var HttpUnit_1 = require("../Net/HttpUnit");
var MaiLiang_1 = require("../MaiLiangAPI/MaiLiang");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var WXAPI_1 = require("../WXAPI");
var WudianMgr_1 = require("./WudianMgr");
var CachedWXBannerAd_1 = require("../CachedWXBannerAd");
var ALD_1 = require("../ALD");
var QQMiniGameAPI_1 = require("../QQMiniGameAPI");
var WXADMgr_1 = require("./WXADMgr");
var CachedQQBannerAd_1 = require("../CachedQQBannerAd");
var SoundMgr_1 = require("./SoundMgr");
var FreeRewardView_1 = require("../View/FreeReward/FreeRewardView");
//游戏管理器，游戏代码的入口
var GameMgr = /** @class */ (function (_super) {
    __extends(GameMgr, _super);
    function GameMgr() {
        var _this = _super.call(this) || this;
        GameMgr._instance = _this;
        return _this;
    }
    GameMgr.getInstance = function () { return GameMgr._instance; };
    GameMgr.prototype.onAwake = function () {
        //You need to define replayInstance and rewardedInstance at the very start.
        if(replayInstance == undefined) 
        replayInstance=window.GlanceGamingAdInterface.loadRewardedAd(replayObj, GameMgr.prototype.rewardedCallbacks);
        if(rewardInstance == undefined)
        rewardInstance=window.GlanceGamingAdInterface.loadRewardedAd(rewardObj, GameMgr.prototype.rewardedCallbacks);
        MaiLiang_1.default.GetMaiLiangOpenId(function (res) {
            console.log("GameUI 买量数据上报成功");
            Laya.Browser.window["wx"].onShow(function () {
                MaiLiang_1.default.GetMaiLiangOpenId(null, null);
            });
            Laya.Browser.window["wx"].onHide(function () {
                MaiLiang_1.default.ReportStayTime(null, null);
            });
        }, function (res) {
            console.log("GameUI 买量数据上报失败");
        });
        WXAPI_1.default.SetShareMenu("恐龙宝宝被人绑架了，快来救救它吧！", "subRes/image/分享图.png", function () {
        }, function () {
        }, function () {
        });
        WudianMgr_1.default.UpdateIpBlockState();
        this.reportLaunchOptions();
        if (Laya.Browser.onMiniGame) {
            CachedWXBannerAd_1.default.preloadBanner();
            WXADMgr_1.default.init();
        }
        else if (Laya.Browser.onQQMiniGame) {
            CachedQQBannerAd_1.default.preloadBanner();
            QQMiniGameAPI_1.default.LoadAppBoxAd(function () { }, function () { });
        }
        else if (Laya.Browser.onQGMiniGame) {
            if (null != Laya.Browser.window["qg"].reportMonitor && typeof (Laya.Browser.window["qg"].reportMonitor) == 'function') {
                Laya.Browser.window["qg"].reportMonitor('game_scene', 0);
            }
        }
    };
    GameMgr.prototype.onStart = function () {
        this.preCreateGame();
    };
    GameMgr.prototype.preCreateGame = function () {
        //todo：这里添加初始化主场景的代码。EventMgr.instance.dispatch(EventDef.App_CloseFirstLoadingView); 添加到你的关卡加载完成的回调中，关闭加载界面
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_onGameComplate, this, this.onGameComplate);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_StartGame, this, this.LoadGame);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_PlayBgm, this, this.playBgm);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_StopBgm, this, this.stopBgm);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.AD_OnShareAdFail_UseCancel, this, this.switchBanner);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_OnUserCrystalChange, this, this.saveGameData);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_OnUserEnergyChange, this, this.saveGameData);
        console.log(User_1.default.getSaveData());
        if (User_1.default.getLeveNum() <= 1) {
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.App_CloseFirstLoadingView);
            var data = { levelNum: 1, costEnergy: 0, crystalReward: 5 };
            this.LoadGame(data);
        }
        else {
            //todo：这里添加初始化主场景的代码。EventMgr.instance.dispatch(EventDef.App_CloseFirstLoadingView); 添加到你的关卡加载完成的回调中，关闭加载界面
            ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.GameMainView, null, function () {
                EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.App_CloseFirstLoadingView);
            });
        }
    };
    //游戏存档,仅当作示例，实际存档根据实际项目各自实现
    GameMgr.prototype.saveGameData = function () {
        HttpUnit_1.default.saveGameData(User_1.default.getSaveData(), function (res) {
            if (res.code == 1) {
                console.log("存档成功");
            }
            else {
                console.log("存档失败");
            }
        }, function (res) {
            console.log("存档失败");
        });
    };
    GameMgr.prototype.reportLaunchOptions = function () {
        HttpUnit_1.default.Getuserip(function (res) {
            if (1 == res.code) {
                console.log("获取玩家ip,地区成功 ：", res.data.dqip, res.data.ipxq);
                var opt = null;
                if (Laya.Browser.onMiniGame) {
                    opt = WXAPI_1.default.getLaunchOptionsSync();
                }
                else if (Laya.Browser.onQQMiniGame) {
                    opt = QQMiniGameAPI_1.default.getLaunchOptionsSync();
                }
                if (null != opt) {
                    ALD_1.default.aldSendReportLaunchOptions(opt.scene, res.data.dqip, res.data.ipxq);
                }
            }
        }, function (res) {
            console.log("获取玩家ip,地区失败");
            var opt = null;
            if (Laya.Browser.onMiniGame) {
                opt = WXAPI_1.default.getLaunchOptionsSync();
            }
            else if (Laya.Browser.onQQMiniGame) {
                opt = QQMiniGameAPI_1.default.getLaunchOptionsSync();
            }
            if (null != opt) {
                ALD_1.default.aldSendReportLaunchOptions(opt.scene, "", "");
            }
        });
    };
    //#region 
    GameMgr.prototype.rewardedCallbacks = function (obj) {
        var self = this;
        obj.adInstance?.registerCallback('onAdLoadSucceed', (data) => {
            console.log('onAdLoadSucceeded Rewarded CALLBACK', data);
            if (obj.adUnitName === rewardObj.adUnitName) {
                is_rewarded_noFill = false
            }
            if (obj.adUnitName === replayObj.adUnitName) {
                is_replay_noFill = false
            }
        });
        
        obj.adInstance?.registerCallback('onAdLoadFailed', (data) => {
            console.log('onAdLoadFailed Rewarded CALLBACK', data);
            if (obj.adUnitName === rewardObj.adUnitName) {
                is_rewarded_noFill = true
            }
            if (obj.adUnitName === replayObj.adUnitName) {
                is_replay_noFill = true
            }
    
    
        });
    
        obj.adInstance?.registerCallback('onAdDisplayed', (data) => {
            console.log('onAdDisplayed Rewarded CALLBACK', data);
    
    
        });

        obj.adInstance?.registerCallback('onAdClicked', (data) => {
            console.log('onAdClicked Rewarded CALLBACK', data);
        });
        
        obj.adInstance?.registerCallback('onAdClosed', (data) => {
            // sessionStorage.setItem("PlayBG",1);
            
            Laya.SoundManager.muted = false;
            console.log('onAdClosed Rewarded CALLBACK', data);
        if(sessionStorage.getItem("reward-type") == "reward-SL"){
            sessionStorage.removeItem("reward-type");
            rewardInstance.destroyAd();
            if (obj.adUnitName == rewardObj.adUnitName) {
                isRewardedAdClosedByUser = true
            }
            if(!isRewardGranted && isRewardedAdClosedByUser)
            {    
                var url = "subRes/sound/bgm.ogg"
                Laya.SoundManager.playMusic(url,0);
                rewardInstance=window.GlanceGamingAdInterface.loadRewardedAd(rewardObj,GameMgr.prototype.rewardedCallbacks);
                // let level = parseInt(User_1.default.ryw_getLeveNum());
                // sendCustomAnalyticsEvent("game_level", {level: level});
            }
            else{ 
                let level = parseInt(User_1.default.getLeveNum() + 1);
                sendCustomAnalyticsEvent("game_level", {level: level});
                sessionStorage.setItem("GiveRewardSL",1);
                rewardInstance=window.GlanceGamingAdInterface.loadRewardedAd(rewardObj,GameMgr.prototype.rewardedCallbacks);
            }
            isRewardGranted = false
            isRewardedAdClosedByUser = false
    
        }
        if(sessionStorage.getItem("reward-type") == "reward-HT"){
            sessionStorage.removeItem("reward-type");
            rewardInstance.destroyAd();
            if (obj.adUnitName == rewardObj.adUnitName) {
                isRewardedAdClosedByUser = true
            }
            if(!isRewardGranted && isRewardedAdClosedByUser)
            {    
                Laya.SoundManager.muted = false;
                rewardInstance=window.GlanceGamingAdInterface.loadRewardedAd(rewardObj,GameMgr.prototype.rewardedCallbacks);
            }
            else{  
                console.log("After Sound1");
                GameView.prototype.giveRewardHT();
                rewardInstance=window.GlanceGamingAdInterface.loadRewardedAd(rewardObj,GameMgr.prototype.rewardedCallbacks);
            }
            isRewardGranted = false
            isRewardedAdClosedByUser = false
    
        }
        if(sessionStorage.getItem("reward-type") == "replay-RP"){
            sessionStorage.removeItem("reward-type");
            if(replayInstance != undefined)
            replayInstance.destroyAd();
            var url = "subRes/sound/bg.mp3"
            Laya.SoundManager.playMusic(url,0);
            showGame();
            replayInstance = window.GlanceGamingAdInterface.loadRewardedAd(replayObj, GameMgr.prototype.rewardedCallbacks);
        }
        });

        obj.adInstance?.registerCallback('onRewardsUnlocked', (data) => {
            console.log('onRewardsUnlocked Rewarded CALLBACK', data);
    
            if (obj.adUnitName === rewardObj.adUnitName) {
                isRewardGranted = true
            }
    
        });

}
    
    GameMgr.prototype.onGameComplate = function (para) {

        var isWin = para.isWin;
        var levelNum = para.levelNum;
        // console.log("THIS IS LEVEL "+para.levelNum);
        var crystalReward = para.crystalReward;
        // let func: Function = () => {
        if (isWin) {
            if(levelNum%3==0)
            { console.log(is_replay_noFill);
                    if (!is_replay_noFill) {
                        sessionStorage.setItem("reward-type","replay-RP");
                        window.GlanceGamingAdInterface.showRewarededAd(replayInstance);
                    }else{
                        if(replayInstance != undefined)
                        replayInstance.destroyAd();
                        replayInstance=window.GlanceGamingAdInterface.loadRewardedAd(replayObj, GameMgr.prototype.rewardedCallbacks);
                    } 
            }
            User_1.default.unLockMaxLevelNum(levelNum + 1); //解锁下一个关卡
            ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.GameRewardView, {
                isWin: true,
                levelNum: levelNum,
                rewardNum: crystalReward
            });
        }
        else {
            ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.GameOverView, {
                isWin: false,
                levelNum: levelNum,
            });
        }
        // }
        /* 游戏结束后直接打开更多好玩 */
        // ViewMgr.instance.openView(ViewDef.MoreGameView, { ContinueGame: true, closeFunction: func });
    };
    GameMgr.prototype.LoadGame = function (date) {
        this.saveGameData();
        if (WudianMgr_1.default.KuangDianBannerFlag && date.levelNum != 1) {
            var currTime_1 = Laya.timer.currTimer;
            var data = {};
            data.PrizeCount = "恭喜获得皮肤";
            data.ClickType = 1;
            data.CompleteHander = Laya.Handler.create(this, function (d) {
                {
                    console.log("游戏开始狂点停留时间", (Laya.timer.currTimer - currTime_1) / 1000);
                    // ALD.aldSendOnlySingleReport(ALDEventDef.StayStartClickGetPrizeTime, {
                    //     "时间": (Laya.timer.currTimer - currTime) / 1000
                    // });
                    ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.GameView, d);
                }
            }, [date]);
            ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.ClickGetPrize_2, data, function () {
                // ALD.aldSendOnlySingleReport(ALDEventDef.EnterStartClickGetPrize);
                // ALD.aldSendOnlySingleReport(ALDEventDef.EnterStartClickGetPrizeScene,
                //     {
                //         "场景值": WXAPI.getLaunchOptionsSync().scene
                //     });
            });
        }
        else {
            if (User_1.default.getEnergy < date.costEnergy) {
                ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.FreeRewardView, {
                    rewardType: FreeRewardView_1.FreeRewardType.Energy
                });
            }
            else {
                console.log("能量充足,开始游戏");
                ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.GameView, date);
            }
        }
        SoundMgr_1.default.instance.stopBGM();
        // ViewMgr.instance.openView(ViewDef.GameView, date);
    };
    GameMgr.prototype.playBgm = function () {
        SoundMgr_1.default.instance.playBGM("bgm");
    };
    GameMgr.prototype.stopBgm = function () {
        SoundMgr_1.default.instance.stopBGM();
    };
    GameMgr.prototype.switchBanner = function () {
        // console.log("触发取消打开更多好玩");
        // let moreGame = ViewMgr.instance.getView(ViewDef.MoreGameView);
        // let gamePlaying = ViewMgr.instance.getView(ViewDef.GameView);
        // if (moreGame == null && gamePlaying == null) {
        //     console.log("没有更多好玩界面或者游戏进行中界面，打开");
        //     ViewMgr.instance.openView(ViewDef.MoreGameView, { ContinueGame: true, closeFunction: null });
        // }
    };
    GameMgr._instance = null;
    return GameMgr;
}(Laya.Script));
exports.default = GameMgr;
},{"../ALD":1,"../CachedQQBannerAd":3,"../CachedWXBannerAd":4,"../Event/EventDef":9,"../Event/EventMgr":10,"../MaiLiangAPI/MaiLiang":44,"../Net/HttpUnit":52,"../QQMiniGameAPI":56,"../User/User":63,"../View/FreeReward/FreeRewardView":71,"../WXAPI":111,"./SoundMgr":47,"./ViewMgr":48,"./WXADMgr":49,"./WudianMgr":50}],47:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SoundMgr = /** @class */ (function () {
    function SoundMgr() {
        this._enabled = true;
    }
    Object.defineProperty(SoundMgr.prototype, "Enabled", {
        get: function () {
            return this._enabled;
        },
        set: function (e) {
            if (!e) {
                this.stopBGM();
            }
            this._enabled = e;
        },
        enumerable: true,
        configurable: true
    });
    SoundMgr.prototype.getSoundUrl = function (name) {
        var url = SoundMgr.soundResPath + name + ".ogg";
        return url;
    };
    SoundMgr.prototype.playSound = function (name) {
        if (!this._enabled)
            return;
        var url = this.getSoundUrl(name);
        if (Laya.Browser.onMiniGame) {
            var sound = laya.utils.Pool.getItem(name);
            if (sound == null) {
                sound = wx.createInnerAudioContext();
                sound.src = SoundMgr.soundResPath + name + ".ogg";
                sound.onEnded(function () {
                    laya.utils.Pool.recover(name, sound);
                    sound.offEnded();
                });
            }
            sound.play();
        }
        else {
            Laya.SoundManager.playSound(url, 1);
        }
    };
    SoundMgr.prototype.playBGM = function (name) {
        if (!this._enabled)
            return;
        var url = this.getSoundUrl(name);
        if (Laya.Browser.onMiniGame) {
            if (!this.bgm) {
                this.bgm = wx.createInnerAudioContext();
            }
            this.bgm.pause();
            this.bgm.src = url;
            this.bgm.loop = true;
            this.bgm.play();
        }
        else {
            Laya.SoundManager.playMusic(url, 0);
        }
    };
    SoundMgr.prototype.stopBGM = function () {
        if (Laya.Browser.onMiniGame) {
            if (this.bgm) {
                this.bgm.pause();
            }
        }
        else {
            Laya.SoundManager.stopMusic();
        }
    };
    SoundMgr.soundResPath = "subRes/sound/";
    SoundMgr.instance = new SoundMgr();
    return SoundMgr;
}());
exports.default = SoundMgr;
},{}],48:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewDef;
(function (ViewDef) {
    ViewDef["None"] = "";
    ViewDef["TipsView"] = "View/TipsView.json";
    ViewDef["ClickGetPrize"] = "View/ClickGetPrize.json";
    ViewDef["MainView"] = "View/Template/MainViewTemplate.json";
    ViewDef["MiniGameView"] = "View/Template/MiniGameViewTemplate.json";
    ViewDef["RewardView"] = "View/Template/RewardViewTemplate.json";
    ViewDef["InGameView"] = "View/Template/InGameViewTemplate.json";
    ViewDef["GameWinView"] = "View/Template/GameWinViewTemplate.json";
    ViewDef["GameFailView"] = "View/Template/GameFailViewTemplate.json";
    ViewDef["ExportView"] = "View/Template/ExportViewTemplate.json";
    ViewDef["Export2View"] = "View/Template/Export2ViewTemplate.json";
    ViewDef["OPPONativeView"] = "View/Template/OPPONativeViewTemplate.json";
    ViewDef["QQCrazyClickView"] = "View/Template/QQ/QQCrazyClick.json";
    ViewDef["QQCrazyClickView2"] = "View/Template/QQ/QQCrazyClick2.json";
    ViewDef["GameMainView"] = "View/MainView.json";
    ViewDef["LevelStateView"] = "View/LevelStateView.json";
    ViewDef["MoreGameView"] = "View/MoreGame.json";
    ViewDef["GameRewardView"] = "View/GameReward.json";
    ViewDef["GameOverView"] = "View/GameOver.json";
    ViewDef["SignInRewardView"] = "View/SignInReward.json";
    ViewDef["ActorSkinView"] = "View/ActorSkinView.json";
    ViewDef["FreeRewardView"] = "View/FreeReward.json";
    ViewDef["GameView"] = "View/GameView.json";
    ViewDef["ClickGetPrize_2"] = "View/ClickGetPrize_2.json";
})(ViewDef = exports.ViewDef || (exports.ViewDef = {}));
//界面管理器
var ViewMgr = /** @class */ (function () {
    function ViewMgr() {
        this._views = {};
        this._loadingList = new Array();
    }
    ViewMgr.prototype.openView = function (viewType, data, oncomplate) {
        if (this._views[viewType]) {
            var view = this._views[viewType];
            var coms = view._components;
            var viewBase = null;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        viewBase = element;
                        viewBase.openView(data);
                        break;
                    }
                }
            }
            if (oncomplate) {
                oncomplate(viewBase);
            }
            return;
        }
        for (var i = 0; i < this._loadingList.length; ++i) {
            var def = this._loadingList[i];
            if (def == viewType) {
                console.log("界面 : " + String(def) + " 正在加载中，请不要重复加载");
                return;
            }
        }
        var viewUrl = String(viewType);
        var self = this;
        this._loadingList.push(viewType);
        Laya.Scene.load(viewUrl, Laya.Handler.create(this, function (owner) {
            Laya.stage.addChild(owner);
            var view = owner;
            self._views[viewType] = view;
            var coms = owner._components;
            var viewBase = null;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        viewBase = element;
                        element._viewDef = viewType;
                        viewBase.openView(data);
                        break;
                    }
                }
            }
            for (var i = 0; i < self._loadingList.length; ++i) {
                var def = self._loadingList[i];
                if (def == viewType) {
                    self._loadingList.splice(i, 1);
                    break;
                }
            }
            if (oncomplate) {
                oncomplate(viewBase);
            }
        }));
    };
    ViewMgr.prototype.closeView = function (viewType) {
        var view = this._views[viewType];
        if (view) {
            var owner = view;
            var coms = owner._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        element.onClose();
                        break;
                    }
                }
            }
            view.removeSelf();
            view.destroy();
            this._views[viewType] = null;
        }
    };
    ViewMgr.prototype.ShowView = function (viewType) {
        var view = this._views[viewType];
        if (view) {
            var coms = view._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        element.show();
                        break;
                    }
                }
            }
        }
    };
    ViewMgr.prototype.hideView = function (viewType) {
        var view = this._views[viewType];
        if (view) {
            var coms = view._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        element.hide();
                        break;
                    }
                }
            }
        }
    };
    ViewMgr.prototype.getView = function (viewType) {
        return this._views[viewType];
    };
    ViewMgr.prototype.showTips = function (msg) {
        this.openView(ViewDef.TipsView, msg);
    };
    ViewMgr.instance = new ViewMgr();
    return ViewMgr;
}());
exports.default = ViewMgr;
},{}],49:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppSwitchConfig_1 = require("../Config/AppSwitchConfig");
var WXBannderAd = /** @class */ (function () {
    function WXBannderAd(bannerid) {
        this._id = null;
        this._banner = null;
        this._createTime = 0;
        this._destroyed = false;
        this._error = null;
        this._loading = false;
        this._retryCount = 0;
        this._bannerTotalShowTime = 0;
        this._lastShowTime = 0;
        this._id = bannerid;
    }
    Object.defineProperty(WXBannderAd.prototype, "Id", {
        get: function () {
            return this._id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WXBannderAd.prototype, "CreateTime", {
        get: function () {
            return this._createTime;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WXBannderAd.prototype, "Destroyed", {
        get: function () {
            return this._destroyed;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WXBannderAd.prototype, "isReady", {
        get: function () {
            return null != this._banner;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WXBannderAd.prototype, "isError", {
        get: function () {
            return null != this._error;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WXBannderAd.prototype, "Error", {
        get: function () {
            return this._error;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WXBannderAd.prototype, "Loading", {
        get: function () {
            return this._loading;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WXBannderAd.prototype, "RetryCount", {
        get: function () {
            return this._retryCount;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WXBannderAd.prototype, "BannerTotalShowTime", {
        get: function () {
            return this._bannerTotalShowTime;
        },
        enumerable: true,
        configurable: true
    });
    WXBannderAd.prototype.show = function () {
        if (this.isReady) {
            this._banner.hide();
            var self_1 = this;
            var sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
            var sw = sysInfo.screenWidth;
            var sh = sysInfo.screenHeight;
            var pos = new Laya.Point(0, 0);
            var width = 300;
            var left = sw / 2 - width / 2;
            var top_1 = sh - 130;
            this._banner.style.left = left;
            this._banner.style.top = top_1;
            this._lastShowTime = Laya.timer.currTimer;
            this._banner.show();
        }
    };
    WXBannderAd.prototype.hide = function () {
        if (this.isReady) {
            this._banner.hide();
            this._bannerTotalShowTime += (Laya.timer.currTimer - this._lastShowTime);
        }
    };
    WXBannderAd.prototype.destroy = function () {
        if (this._destroyed) {
            console.log("BannerAd 已经被销毁");
            return;
        }
        if (this._loading) {
            console.log("BannerAd 正在加载中，无法进行销毁");
            return;
        }
        if (null != this._banner) {
            this._banner.destroy();
        }
        this._banner = null;
        this._destroyed = true;
    };
    WXBannderAd.prototype.retry = function (callBack) {
        
        if (this._destroyed) {
            console.log("BannerAd 已被销毁，无法重试");
            return;
        }
        if (this.isReady) {
            console.log("BannerAd 已创建成功，无需重试");
            return;
        }
        if (this._loading) {
            console.log("BannerAd 正在创建中");
            return;
        }
        if (this._retryCount >= WXBannderAd.MAX_RETRY_COUNT) {
            console.log("此 BannerAd 重试次数已达最大");
            return;
        }
        var self = this;
        this._create(function (isOk) {
            if (null != callBack) {
                callBack(isOk);
            }
            ++self._retryCount;
        });
    };
    WXBannderAd.prototype._create = function (callBack) {
        if (!Laya.Browser.onMiniGame) {
            if (null != callBack) {
                callBack(false);
            }
            return;
        }
        var banner = null;
        if (Laya.Browser.onMiniGame) {
            banner = Laya.Browser.window["wx"].createBannerAd({
                adUnitId: this._id,
                adIntervals: 30,
                style: {
                    left: 0,
                    top: 0,
                    width: 300,
                }
            });
        }
        else if (Laya.Browser.onQQMiniGame) {
            banner = Laya.Browser.window["qq"].createBannerAd({
                adUnitId: this._id,
                adIntervals: 30,
                style: {
                    left: 0,
                    top: 0,
                    width: 300,
                }
            });
        }
        if (null != banner) {
            var self_2 = this;
            this._loading = true;
            banner.onLoad(function (res) {
                console.log("BannderAd 加载完成", self_2._id, res);
                self_2._banner = banner;
                self_2._createTime = Laya.timer.currTimer;
                self_2._loading = false;
                if (null != callBack) {
                    callBack(true);
                }
            });
            banner.onError(function (err) {
                console.log("BannderAd 加载失败", self_2._id, err);
                self_2._error = err;
                self_2._loading = false;
                banner.destroy();
                if (null != callBack) {
                    callBack(false);
                }
            });
        }
    };
    WXBannderAd.MAX_RETRY_COUNT = 3;
    return WXBannderAd;
}());
exports.WXBannderAd = WXBannderAd;
var WXGridAd = /** @class */ (function () {
    function WXGridAd(bannerid) {
        this._id = null;
        this._gridAd = null;
        this._createTime = 0;
        this._destroyed = false;
        this._error = null;
        this._loading = false;
        this._id = bannerid;
    }
    Object.defineProperty(WXGridAd.prototype, "CreateTime", {
        get: function () {
            return this._createTime;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WXGridAd.prototype, "Destroyed", {
        get: function () {
            return this._destroyed;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WXGridAd.prototype, "isReady", {
        get: function () {
            return null != this._gridAd;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WXGridAd.prototype, "isError", {
        get: function () {
            return null != this._error;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WXGridAd.prototype, "Error", {
        get: function () {
            return this._error;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WXGridAd.prototype, "Loading", {
        get: function () {
            return this._loading;
        },
        enumerable: true,
        configurable: true
    });
    WXGridAd.prototype.show = function () {
        if (this.isReady) {
            this._gridAd.show();
        }
    };
    WXGridAd.prototype.hide = function () {
        if (this.isReady) {
            this._gridAd.hide();
        }
    };
    WXGridAd.prototype.destroy = function () {
        if (this._destroyed) {
            console.log("GridAD 已经被销毁");
            return;
        }
        if (this._loading) {
            console.log("GridAD 正在加载中，无法进行销毁");
            return;
        }
        if (null != this._gridAd) {
            this._gridAd.destroy();
        }
        this._gridAd = null;
        this._destroyed = true;
    };
    WXGridAd.prototype.retry = function (callBack) {
        if (this._destroyed) {
            console.log("GridAD 已被销毁，无法重试");
            return;
        }
        if (this.isReady) {
            console.log("GridAD 已创建成功，无需重试");
            return;
        }
        if (this._loading) {
            console.log("GridAD 正在创建中");
            return;
        }
        var self = this;
        this._create(function (isOk) {
            if (null != callBack) {
                callBack(isOk);
            }
        });
    };
    WXGridAd.prototype._create = function (callBack) {
        if (!Laya.Browser.onMiniGame) {
            if (null != callBack) {
                callBack(false);
            }
            return;
        }
        var gridAd = Laya.Browser.window["wx"].createGridAd({
            adUnitId: this._id,
            adIntervals: 30,
            style: {
                left: 0,
                top: 0,
                width: 300,
                height: 150,
            }
        });
        if (null != gridAd) {
            var self_3 = this;
            this._loading = true;
            gridAd.onLoad(function (res) {
                console.log("GridAD 加载完成", self_3._id, res);
                self_3._gridAd = gridAd;
                self_3._createTime = Laya.timer.currTimer;
                self_3._loading = false;
                if (null != callBack) {
                    callBack(true);
                }
            });
            gridAd.onError(function (err) {
                console.log("GridAD 加载失败", self_3._id, err);
                self_3._error = err;
                self_3._loading = false;
                gridAd.destroy();
                if (null != callBack) {
                    callBack(false);
                }
            });
        }
    };
    return WXGridAd;
}());
exports.WXGridAd = WXGridAd;
var WXADMgr = /** @class */ (function () {
    function WXADMgr() {
    }
    WXADMgr.init = function () {
        if (WXADMgr._inited)
            return;
        var banners = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wxWuDianBanners;
        for (var i = 0; i < banners.length; ++i) {
            WXADMgr._bannerIds.push(banners[i]);
        }
        for (var i = 0; i < WXADMgr._bannerIds.length; ++i) {
            var cur = WXADMgr._bannerIds[i];
            WXADMgr._bannerIds[i] = banners[Math.floor(Math.random() * banners.length)];
        }
        WXADMgr._createBannerAd();
        var bannerRecreateTime = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerCreateFailNum * 1000;
        Laya.timer.loop(bannerRecreateTime, WXADMgr, function () {
            WXADMgr._checkBannerAd();
            WXADMgr._createBannerAd();
        });
        //WXADMgr._createGirdAd();
        WXADMgr._inited = true;
    };
    WXADMgr.getBanner = function (callBack) {
        var readyBannerAd = [];
        var UnreadyBannerAd = [];
        for (var i = 0; i < WXADMgr._banners.length; ++i) {
            var bannerAd_1 = WXADMgr._banners[i];
            if (!bannerAd_1.Destroyed) {
                if (bannerAd_1.isReady) {
                    readyBannerAd.push(bannerAd_1);
                }
                else {
                    UnreadyBannerAd.push(bannerAd_1);
                }
            }
        }
        if (WXADMgr._curBannerGetIndex >= readyBannerAd.length) {
            WXADMgr._curBannerGetIndex = 0;
        }
        var bannerAd = readyBannerAd[WXADMgr._curBannerGetIndex];
        ++WXADMgr._curBannerGetIndex;
        if (null != bannerAd) {
            callBack(bannerAd);
        }
        else {
            bannerAd = WXADMgr._createBannerAd();
            if (null == bannerAd) {
                bannerAd = WXADMgr._banners[Math.floor(Math.random() * WXADMgr._banners.length)];
            }
            if (null == bannerAd) {
                callBack(null);
            }
            else {
                bannerAd.retry(function (ok) {
                    if (ok) {
                        callBack(bannerAd);
                    }
                    else {
                        callBack(null);
                    }
                });
            }
        }
    };
    WXADMgr._createBannerAd = function () {
        if (WXADMgr._curBannerCreateIndex >= WXADMgr._bannerIds.length)
            return null;
        var bannerAd = new WXBannderAd(WXADMgr._bannerIds[WXADMgr._curBannerCreateIndex]);
        WXADMgr._banners.push(bannerAd);
        bannerAd.retry();
        ++WXADMgr._curBannerCreateIndex;
        return bannerAd;
    };
    WXADMgr._checkBannerAd = function () {
        var readyBannerAd = [];
        var UnreadyBannerAd = [];
        for (var i = 0; i < WXADMgr._banners.length; ++i) {
            var bannerAd = WXADMgr._banners[i];
            if (!bannerAd.Destroyed) {
                if (bannerAd.isReady) {
                    readyBannerAd.push(bannerAd);
                }
                else {
                    UnreadyBannerAd.push(bannerAd);
                }
            }
        }
        for (var i = 0; i < WXADMgr._banners.length; ++i) {
            var bannerAd = WXADMgr._banners[i];
            var bannerShowTime = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerShowTime;
            if (!bannerAd.isReady) {
                if (bannerAd.RetryCount >= WXBannderAd.MAX_RETRY_COUNT) {
                    console.log("BannerAd 超过重试次数，销毁 : ", bannerAd.Id);
                    bannerAd.destroy();
                }
                else {
                    bannerAd.retry();
                }
            }
            else if (readyBannerAd.length >= 2 && bannerAd.BannerTotalShowTime >= bannerShowTime * 1000) {
                console.log("BannerAd 展示时间超过限制，销毁 : ", bannerAd.Id);
                bannerAd.destroy();
            }
        }
    };
    WXADMgr.getBoxAd = function (callBack) {
        if (this._wxGridAd.isReady) {
            callBack(this._wxGridAd);
        }
        else {
            var gridAd_1 = this._wxGridAd;
            gridAd_1.retry(function (isOk) {
                if (isOk) {
                    callBack(gridAd_1);
                }
                else {
                    callBack(null);
                }
            });
        }
    };
    WXADMgr._createGirdAd = function () {
        if (null != this._wxGridAd)
            return;
        var gridAd = new WXGridAd("");
        gridAd.retry();
        this._wxGridAd = gridAd;
    };
    WXADMgr._inited = false;
    WXADMgr._bannerIds = new Array();
    WXADMgr._banners = new Array();
    WXADMgr._curBannerCreateIndex = 0;
    WXADMgr._curBannerGetIndex = 0;
    WXADMgr._wxGridAd = null;
    return WXADMgr;
}());
exports.default = WXADMgr;
},{"../Config/AppSwitchConfig":5}],50:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpUnit_1 = require("../Net/HttpUnit");
var AppSwitchConfig_1 = require("../Config/AppSwitchConfig");
var WXAPI_1 = require("../WXAPI");
var QQMiniGameAPI_1 = require("../QQMiniGameAPI");
var AppConfig_1 = require("../AppConfig");
var WudianMgr = /** @class */ (function () {
    function WudianMgr() {
    }
    WudianMgr.IpBlockFlag = function () {
        return this._ipBlockFlag;
    };
    /**
     * 此方法调用很慢，所以要在游戏初始化的时候调用一次此方法
     *
     * @static
     * @memberof WudianMgr
     */
    WudianMgr.UpdateIpBlockState = function () {
        HttpUnit_1.default.GetIpBlock(function (res) {
            console.log("调用IpBlock接口成功,结果为:", res);
            WudianMgr._ipBlockFlag = res.code;
        }, null);
    };
    /**
     * IP是否被屏蔽
     *
     * @static
     * @returns {boolean}
     * @memberof WudianMgr
     */
    WudianMgr.GetIpBlocked = function () {
        return this._ipBlockFlag == 0;
    };
    /**
     * 得到用户进入的场景值
     *
     * @static
     * @returns {number}
     * @memberof WudianMgr
     */
    WudianMgr.GetEntryScene = function () {
        return WXAPI_1.default.getLaunchOptionsSync().scene == 1006;
    };
    /**
     * 误点开关是否打开，包括了总开关和分时开关
     *
     * @static
     * @returns {boolean}
     * @memberof WudianMgr
     */
    WudianMgr.IsSwitchOpen = function () {
        var mainSwitch = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wudian == 1;
        var isOpenTime = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wudianTimeAvaliable;
        console.log("误点Flag状态: ", "总开关:", mainSwitch, "打开时间", isOpenTime);
        return mainSwitch && isOpenTime;
    };
    Object.defineProperty(WudianMgr, "WudianFlag", {
        /**
         * 完全封装好的误点Flag
         *
         * @readonly
         * @static
         * @type {boolean}
         * @memberof WudianMgr
         */
        get: function () {
            var mainSwitch = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wudian == 1;
            var launchScene = null;
            if (Laya.Browser.onMiniGame) {
                launchScene = WXAPI_1.default.getLaunchOptionsSync().scene;
            }
            else if (Laya.Browser.onQQMiniGame) {
                launchScene = QQMiniGameAPI_1.default.getLaunchOptionsSync().scene;
            }
            var noEnterBySearch = true;
            var wudianSceneList = AppSwitchConfig_1.default.getInstance().getAppSwitchData().wudianSceneList;
            for (var i = 0; i < wudianSceneList.length; ++i) {
                var wudianSceneValue = wudianSceneList[i];
                if (launchScene == wudianSceneValue) {
                    noEnterBySearch = false;
                }
            }
            var ipnotBlock = this._ipBlockFlag == 0;
            var ver = AppSwitchConfig_1.default.getInstance().getAppSwitchData().version == AppConfig_1.default.Versions;
            /* 测试功能，等删 */
            // ipnotBlock = true;
            var main = mainSwitch && noEnterBySearch && ipnotBlock && ver;
            console.log("误点Flag状态: ", "总开关:", mainSwitch, "场景进入", noEnterBySearch, "IP未被屏蔽", ipnotBlock, "版本号", ver);
            return main;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WudianMgr, "KuangDianBannerFlag", {
        get: function () {
            var wudianMain = this.WudianFlag;
            var banner = AppSwitchConfig_1.default.getInstance().getAppSwitchData().qqcfg.kuangdianBanner == 1;
            var tootal = wudianMain && banner;
            console.log("KuangDianBannerFlag状态: ", "总开关:", wudianMain, "分开关", banner);
            return tootal;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WudianMgr, "KuangDiaBoxFlag", {
        get: function () {
            var wudianMain = this.WudianFlag;
            var box = AppSwitchConfig_1.default.getInstance().getAppSwitchData().qqcfg.kuangdianBox == 1;
            var tootal = wudianMain && box;
            console.log("KuangDiaBoxFlag状态: ", "总开关:", wudianMain, "分开关", box);
            return tootal;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WudianMgr, "WeiYiFlag", {
        get: function () {
            var wudianMain = this.WudianFlag;
            var weiyi = AppSwitchConfig_1.default.getInstance().getAppSwitchData().qqcfg.weiyi == 1;
            var tootal = wudianMain && weiyi;
            console.log("WeiyiFlag状态: ", "总开关:", wudianMain, "分开关", weiyi);
            return tootal;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WudianMgr, "AutoBoxFlag", {
        get: function () {
            var wudianMain = this.WudianFlag;
            var autoBox = AppSwitchConfig_1.default.getInstance().getAppSwitchData().qqcfg.box == 1;
            var tootal = wudianMain && autoBox;
            console.log("AutoBoxFlag状态: ", "总开关:", wudianMain, "分开关", autoBox);
            return tootal;
        },
        enumerable: true,
        configurable: true
    });
    WudianMgr._ipBlockFlag = -1;
    return WudianMgr;
}());
exports.default = WudianMgr;
},{"../AppConfig":2,"../Config/AppSwitchConfig":5,"../Net/HttpUnit":52,"../QQMiniGameAPI":56,"../WXAPI":111}],51:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CryptoJS = require("./aes.js");
var AesTools = /** @class */ (function () {
    function AesTools() {
    }
    //加密
    AesTools.encrypt = function (str) {
        var key = CryptoJS.enc.Utf8.parse(AesTools.KEY); // 秘钥
        var iv = CryptoJS.enc.Utf8.parse(AesTools.IV); //向量iv
        var encrypted = CryptoJS.AES.encrypt(str, key, { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });
        return encrypted.toString();
    };
    //解密
    AesTools.decrypt = function (str) {
        var key = CryptoJS.enc.Utf8.parse(AesTools.KEY); // 秘钥
        var iv = CryptoJS.enc.Utf8.parse(AesTools.IV); //向量iv
        var decrypted = CryptoJS.AES.decrypt(str, key, { iv: iv, padding: CryptoJS.pad.Pkcs7 });
        return decrypted.toString(CryptoJS.enc.Utf8);
    };
    AesTools.KEY = 'b#63fFJ6AvkK3YT*';
    AesTools.IV = 'J$f4DU%sNL73M&Go';
    return AesTools;
}());
exports.default = AesTools;
},{"./aes.js":54}],52:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var NetConfig_1 = require("./NetConfig");
var User_1 = require("../User/User");
var AesTools_1 = require("./AesTools");
var AppConfig_1 = require("../AppConfig");
var requestData = /** @class */ (function () {
    function requestData() {
        this.meth = "post";
        this.url = "";
        this.onSuccess = null;
        this.onFail = null;
        this.data = {};
    }
    return requestData;
}());
exports.requestData = requestData;
var HttpUnit = /** @class */ (function () {
    function HttpUnit() {
    }
    HttpUnit.request = function (req) {
        if (req.url.indexOf("https://") > -1 ||
            req.url.indexOf("http://") > -1) {
            req.url = req.url;
        }
        else {
            req.url = NetConfig_1.default.serverUrl + req.url;
        }
        var completeFunc = function (res) {
            console.log(res, "http Success");
            if (req.onSuccess) {
                req.onSuccess(res);
            }
            req.onSuccess = null;
            req = null;
        };
        var errorFunc = function (res) {
            console.log(res, "http fail");
            if (req.onFail) {
                req.onFail(res);
            }
            req.onFail = null;
            req = null;
        };
        var xhr = new Laya.HttpRequest();
        xhr.once(Laya.Event.COMPLETE, HttpUnit, completeFunc);
        xhr.once(Laya.Event.ERROR, HttpUnit, errorFunc);
        var dataStr = JSON.stringify(req.data);
        if (Laya.Browser.onMiniGame || AppConfig_1.default.onTTMiniGame) {
            req.data.code = User_1.default.code;
        }
        else if (Laya.Browser.onQGMiniGame) //OPPO小游戏
         {
            req.data.oppotoken = User_1.default.code;
        }
        else if (Laya.Browser.onQQMiniGame) //qq小游戏
         {
            req.data.code = User_1.default.code;
        }
        else {
            req.data.code = User_1.default.code;
        }
        var time = "time=" + String(Date.now());
        var header = [
            "Content-Type", "application/json",
            "state", NetConfig_1.default.state,
            "gameid", NetConfig_1.default.gameid,
            "sign", AesTools_1.default.encrypt(time),
        ];
        if (User_1.default.token) {
            header.push("token");
            header.push(User_1.default.token);
        }
        xhr.send(req.url, JSON.stringify(req.data), req.meth, "json", header);
    };
    //todo:这里添加你们和服务器相互的接口
    HttpUnit.login = function (onSuccess, onFail) {
        var req = new requestData();
        req.url = NetConfig_1.default.Login;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        HttpUnit.request(req);
    };
    HttpUnit.saveGameData = function (gameData, onSuccess, onFail) {
        var req = new requestData();
        req.url = NetConfig_1.default.SaveGameData;
        req.data.gameData = gameData;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        HttpUnit.request(req);
    };
    HttpUnit.getGameData = function (onSuccess, onFail) {
        var req = new requestData();
        req.url = NetConfig_1.default.GetUser;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        HttpUnit.request(req);
    };
    /**
     * IP屏蔽方法，需要在NetConfig类中设置IpBlock的接口地址
     * onSuccess方法返回参数的范例为 Object {code: 0, msg: "准一线", time: "1571034447", data: null}
     * @static
     * @memberof HttpUnit
     */
    HttpUnit.GetIpBlock = function (onSuccess, onFail) {
        if (-1 != NetConfig_1.default.gameid) {
            var req = new requestData();
            req.url = NetConfig_1.default.IpBlock;
            req.onSuccess = onSuccess;
            req.onFail = onFail;
            HttpUnit.request(req);
        }
    };
    HttpUnit.reportExport = function (appid, game_name, onSuccess, onFail) {
        var req = new requestData();
        req.url = NetConfig_1.default.reportExport;
        req.data.wbappid = appid;
        req.data.game_name = game_name;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        HttpUnit.request(req);
    };
    HttpUnit.reportImport = function (appid, channel, onSuccess, onFail) {
        var req = new requestData();
        req.url = NetConfig_1.default.reportImport;
        req.data.wbappid = appid;
        req.data.channel = channel;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        HttpUnit.request(req);
    };
    HttpUnit.Getuserip = function (onSuccess, onFail) {
        var req = new requestData();
        req.url = NetConfig_1.default.getuserip;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        HttpUnit.request(req);
    };
    return HttpUnit;
}());
exports.default = HttpUnit;
},{"../AppConfig":2,"../User/User":63,"./AesTools":51,"./NetConfig":53}],53:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var NetConfig = /** @class */ (function () {
    function NetConfig() {
    }
    NetConfig.state = 4;
    NetConfig.gameid = 140;
    NetConfig.serverUrl = "https://sysxue.5iape.com";
    NetConfig.Login = "https://sysxue.5iape.com/api/login/login/qqclogin";
    NetConfig.SaveGameData = "https://sysxue.5iape.com/api/qqjjklbb/index/savecd";
    NetConfig.GetUser = "https://sysxue.5iape.com/api/qqjjklbb/index/getuser";
    /* 用来对IP地址进行屏蔽的接口地址，可以使用接口的返回值让某些广告逻辑在微信的审核地区(广州)发生变化 */
    NetConfig.IpBlock = "https://sysxue.5iape.com/api/share/ip_select";
    NetConfig.reportExport = "/api/share/getwaibuad";
    NetConfig.reportImport = "/api/share/getzjadml";
    NetConfig.getuserip = "/api/share/getuserip";
    return NetConfig;
}());
exports.default = NetConfig;
},{}],54:[function(require,module,exports){
var CryptoJS = CryptoJS || function (u, p) {
  var d = {}, l = d.lib = {}, s = function () { }, t = l.Base = { extend: function (a) { s.prototype = this; var c = new s; a && c.mixIn(a); c.hasOwnProperty("init") || (c.init = function () { c.$super.init.apply(this, arguments) }); c.init.prototype = c; c.$super = this; return c }, create: function () { var a = this.extend(); a.init.apply(a, arguments); return a }, init: function () { }, mixIn: function (a) { for (var c in a) a.hasOwnProperty(c) && (this[c] = a[c]); a.hasOwnProperty("toString") && (this.toString = a.toString) }, clone: function () { return this.init.prototype.extend(this) } },
  r = l.WordArray = t.extend({
    init: function (a, c) { a = this.words = a || []; this.sigBytes = c != p ? c : 4 * a.length }, toString: function (a) { return (a || v).stringify(this) }, concat: function (a) { var c = this.words, e = a.words, j = this.sigBytes; a = a.sigBytes; this.clamp(); if (j % 4) for (var k = 0; k < a; k++)c[j + k >>> 2] |= (e[k >>> 2] >>> 24 - 8 * (k % 4) & 255) << 24 - 8 * ((j + k) % 4); else if (65535 < e.length) for (k = 0; k < a; k += 4)c[j + k >>> 2] = e[k >>> 2]; else c.push.apply(c, e); this.sigBytes += a; return this }, clamp: function () {
      var a = this.words, c = this.sigBytes; a[c >>> 2] &= 4294967295 <<
        32 - 8 * (c % 4); a.length = u.ceil(c / 4)
    }, clone: function () { var a = t.clone.call(this); a.words = this.words.slice(0); return a }, random: function (a) { for (var c = [], e = 0; e < a; e += 4)c.push(4294967296 * u.random() | 0); return new r.init(c, a) }
  }), w = d.enc = {}, v = w.Hex = {
    stringify: function (a) { var c = a.words; a = a.sigBytes; for (var e = [], j = 0; j < a; j++) { var k = c[j >>> 2] >>> 24 - 8 * (j % 4) & 255; e.push((k >>> 4).toString(16)); e.push((k & 15).toString(16)) } return e.join("") }, parse: function (a) {
      for (var c = a.length, e = [], j = 0; j < c; j += 2)e[j >>> 3] |= parseInt(a.substr(j,
        2), 16) << 24 - 4 * (j % 8); return new r.init(e, c / 2)
    }
  }, b = w.Latin1 = { stringify: function (a) { var c = a.words; a = a.sigBytes; for (var e = [], j = 0; j < a; j++)e.push(String.fromCharCode(c[j >>> 2] >>> 24 - 8 * (j % 4) & 255)); return e.join("") }, parse: function (a) { for (var c = a.length, e = [], j = 0; j < c; j++)e[j >>> 2] |= (a.charCodeAt(j) & 255) << 24 - 8 * (j % 4); return new r.init(e, c) } }, x = w.Utf8 = { stringify: function (a) { try { return decodeURIComponent(escape(b.stringify(a))) } catch (c) { throw Error("Malformed UTF-8 data"); } }, parse: function (a) { return b.parse(unescape(encodeURIComponent(a))) } },
  q = l.BufferedBlockAlgorithm = t.extend({
    reset: function () { this._data = new r.init; this._nDataBytes = 0 }, _append: function (a) { "string" == typeof a && (a = x.parse(a)); this._data.concat(a); this._nDataBytes += a.sigBytes }, _process: function (a) { var c = this._data, e = c.words, j = c.sigBytes, k = this.blockSize, b = j / (4 * k), b = a ? u.ceil(b) : u.max((b | 0) - this._minBufferSize, 0); a = b * k; j = u.min(4 * a, j); if (a) { for (var q = 0; q < a; q += k)this._doProcessBlock(e, q); q = e.splice(0, a); c.sigBytes -= j } return new r.init(q, j) }, clone: function () {
      var a = t.clone.call(this);
      a._data = this._data.clone(); return a
    }, _minBufferSize: 0
  }); l.Hasher = q.extend({
    cfg: t.extend(), init: function (a) { this.cfg = this.cfg.extend(a); this.reset() }, reset: function () { q.reset.call(this); this._doReset() }, update: function (a) { this._append(a); this._process(); return this }, finalize: function (a) { a && this._append(a); return this._doFinalize() }, blockSize: 16, _createHelper: function (a) { return function (b, e) { return (new a.init(e)).finalize(b) } }, _createHmacHelper: function (a) {
      return function (b, e) {
        return (new n.HMAC.init(a,
          e)).finalize(b)
      }
    }
  }); var n = d.algo = {}; return d
}(Math);
(function () {
  var u = CryptoJS, p = u.lib.WordArray; u.enc.Base64 = {
    stringify: function (d) { var l = d.words, p = d.sigBytes, t = this._map; d.clamp(); d = []; for (var r = 0; r < p; r += 3)for (var w = (l[r >>> 2] >>> 24 - 8 * (r % 4) & 255) << 16 | (l[r + 1 >>> 2] >>> 24 - 8 * ((r + 1) % 4) & 255) << 8 | l[r + 2 >>> 2] >>> 24 - 8 * ((r + 2) % 4) & 255, v = 0; 4 > v && r + 0.75 * v < p; v++)d.push(t.charAt(w >>> 6 * (3 - v) & 63)); if (l = t.charAt(64)) for (; d.length % 4;)d.push(l); return d.join("") }, parse: function (d) {
      var l = d.length, s = this._map, t = s.charAt(64); t && (t = d.indexOf(t), -1 != t && (l = t)); for (var t = [], r = 0, w = 0; w <
        l; w++)if (w % 4) { var v = s.indexOf(d.charAt(w - 1)) << 2 * (w % 4), b = s.indexOf(d.charAt(w)) >>> 6 - 2 * (w % 4); t[r >>> 2] |= (v | b) << 24 - 8 * (r % 4); r++ } return p.create(t, r)
    }, _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
  }
})();
(function (u) {
  function p(b, n, a, c, e, j, k) { b = b + (n & a | ~n & c) + e + k; return (b << j | b >>> 32 - j) + n } function d(b, n, a, c, e, j, k) { b = b + (n & c | a & ~c) + e + k; return (b << j | b >>> 32 - j) + n } function l(b, n, a, c, e, j, k) { b = b + (n ^ a ^ c) + e + k; return (b << j | b >>> 32 - j) + n } function s(b, n, a, c, e, j, k) { b = b + (a ^ (n | ~c)) + e + k; return (b << j | b >>> 32 - j) + n } for (var t = CryptoJS, r = t.lib, w = r.WordArray, v = r.Hasher, r = t.algo, b = [], x = 0; 64 > x; x++)b[x] = 4294967296 * u.abs(u.sin(x + 1)) | 0; r = r.MD5 = v.extend({
    _doReset: function () { this._hash = new w.init([1732584193, 4023233417, 2562383102, 271733878]) },
    _doProcessBlock: function (q, n) {
      for (var a = 0; 16 > a; a++) { var c = n + a, e = q[c]; q[c] = (e << 8 | e >>> 24) & 16711935 | (e << 24 | e >>> 8) & 4278255360 } var a = this._hash.words, c = q[n + 0], e = q[n + 1], j = q[n + 2], k = q[n + 3], z = q[n + 4], r = q[n + 5], t = q[n + 6], w = q[n + 7], v = q[n + 8], A = q[n + 9], B = q[n + 10], C = q[n + 11], u = q[n + 12], D = q[n + 13], E = q[n + 14], x = q[n + 15], f = a[0], m = a[1], g = a[2], h = a[3], f = p(f, m, g, h, c, 7, b[0]), h = p(h, f, m, g, e, 12, b[1]), g = p(g, h, f, m, j, 17, b[2]), m = p(m, g, h, f, k, 22, b[3]), f = p(f, m, g, h, z, 7, b[4]), h = p(h, f, m, g, r, 12, b[5]), g = p(g, h, f, m, t, 17, b[6]), m = p(m, g, h, f, w, 22, b[7]),
        f = p(f, m, g, h, v, 7, b[8]), h = p(h, f, m, g, A, 12, b[9]), g = p(g, h, f, m, B, 17, b[10]), m = p(m, g, h, f, C, 22, b[11]), f = p(f, m, g, h, u, 7, b[12]), h = p(h, f, m, g, D, 12, b[13]), g = p(g, h, f, m, E, 17, b[14]), m = p(m, g, h, f, x, 22, b[15]), f = d(f, m, g, h, e, 5, b[16]), h = d(h, f, m, g, t, 9, b[17]), g = d(g, h, f, m, C, 14, b[18]), m = d(m, g, h, f, c, 20, b[19]), f = d(f, m, g, h, r, 5, b[20]), h = d(h, f, m, g, B, 9, b[21]), g = d(g, h, f, m, x, 14, b[22]), m = d(m, g, h, f, z, 20, b[23]), f = d(f, m, g, h, A, 5, b[24]), h = d(h, f, m, g, E, 9, b[25]), g = d(g, h, f, m, k, 14, b[26]), m = d(m, g, h, f, v, 20, b[27]), f = d(f, m, g, h, D, 5, b[28]), h = d(h, f,
          m, g, j, 9, b[29]), g = d(g, h, f, m, w, 14, b[30]), m = d(m, g, h, f, u, 20, b[31]), f = l(f, m, g, h, r, 4, b[32]), h = l(h, f, m, g, v, 11, b[33]), g = l(g, h, f, m, C, 16, b[34]), m = l(m, g, h, f, E, 23, b[35]), f = l(f, m, g, h, e, 4, b[36]), h = l(h, f, m, g, z, 11, b[37]), g = l(g, h, f, m, w, 16, b[38]), m = l(m, g, h, f, B, 23, b[39]), f = l(f, m, g, h, D, 4, b[40]), h = l(h, f, m, g, c, 11, b[41]), g = l(g, h, f, m, k, 16, b[42]), m = l(m, g, h, f, t, 23, b[43]), f = l(f, m, g, h, A, 4, b[44]), h = l(h, f, m, g, u, 11, b[45]), g = l(g, h, f, m, x, 16, b[46]), m = l(m, g, h, f, j, 23, b[47]), f = s(f, m, g, h, c, 6, b[48]), h = s(h, f, m, g, w, 10, b[49]), g = s(g, h, f, m,
            E, 15, b[50]), m = s(m, g, h, f, r, 21, b[51]), f = s(f, m, g, h, u, 6, b[52]), h = s(h, f, m, g, k, 10, b[53]), g = s(g, h, f, m, B, 15, b[54]), m = s(m, g, h, f, e, 21, b[55]), f = s(f, m, g, h, v, 6, b[56]), h = s(h, f, m, g, x, 10, b[57]), g = s(g, h, f, m, t, 15, b[58]), m = s(m, g, h, f, D, 21, b[59]), f = s(f, m, g, h, z, 6, b[60]), h = s(h, f, m, g, C, 10, b[61]), g = s(g, h, f, m, j, 15, b[62]), m = s(m, g, h, f, A, 21, b[63]); a[0] = a[0] + f | 0; a[1] = a[1] + m | 0; a[2] = a[2] + g | 0; a[3] = a[3] + h | 0
    }, _doFinalize: function () {
      var b = this._data, n = b.words, a = 8 * this._nDataBytes, c = 8 * b.sigBytes; n[c >>> 5] |= 128 << 24 - c % 32; var e = u.floor(a /
        4294967296); n[(c + 64 >>> 9 << 4) + 15] = (e << 8 | e >>> 24) & 16711935 | (e << 24 | e >>> 8) & 4278255360; n[(c + 64 >>> 9 << 4) + 14] = (a << 8 | a >>> 24) & 16711935 | (a << 24 | a >>> 8) & 4278255360; b.sigBytes = 4 * (n.length + 1); this._process(); b = this._hash; n = b.words; for (a = 0; 4 > a; a++)c = n[a], n[a] = (c << 8 | c >>> 24) & 16711935 | (c << 24 | c >>> 8) & 4278255360; return b
    }, clone: function () { var b = v.clone.call(this); b._hash = this._hash.clone(); return b }
  }); t.MD5 = v._createHelper(r); t.HmacMD5 = v._createHmacHelper(r)
})(Math);
(function () {
  var u = CryptoJS, p = u.lib, d = p.Base, l = p.WordArray, p = u.algo, s = p.EvpKDF = d.extend({ cfg: d.extend({ keySize: 4, hasher: p.MD5, iterations: 1 }), init: function (d) { this.cfg = this.cfg.extend(d) }, compute: function (d, r) { for (var p = this.cfg, s = p.hasher.create(), b = l.create(), u = b.words, q = p.keySize, p = p.iterations; u.length < q;) { n && s.update(n); var n = s.update(d).finalize(r); s.reset(); for (var a = 1; a < p; a++)n = s.finalize(n), s.reset(); b.concat(n) } b.sigBytes = 4 * q; return b } }); u.EvpKDF = function (d, l, p) {
    return s.create(p).compute(d,
      l)
  }
})();
CryptoJS.lib.Cipher || function (u) {
  var p = CryptoJS, d = p.lib, l = d.Base, s = d.WordArray, t = d.BufferedBlockAlgorithm, r = p.enc.Base64, w = p.algo.EvpKDF, v = d.Cipher = t.extend({
    cfg: l.extend(), createEncryptor: function (e, a) { return this.create(this._ENC_XFORM_MODE, e, a) }, createDecryptor: function (e, a) { return this.create(this._DEC_XFORM_MODE, e, a) }, init: function (e, a, b) { this.cfg = this.cfg.extend(b); this._xformMode = e; this._key = a; this.reset() }, reset: function () { t.reset.call(this); this._doReset() }, process: function (e) { this._append(e); return this._process() },
    finalize: function (e) { e && this._append(e); return this._doFinalize() }, keySize: 4, ivSize: 4, _ENC_XFORM_MODE: 1, _DEC_XFORM_MODE: 2, _createHelper: function (e) { return { encrypt: function (b, k, d) { return ("string" == typeof k ? c : a).encrypt(e, b, k, d) }, decrypt: function (b, k, d) { return ("string" == typeof k ? c : a).decrypt(e, b, k, d) } } }
  }); d.StreamCipher = v.extend({ _doFinalize: function () { return this._process(!0) }, blockSize: 1 }); var b = p.mode = {}, x = function (e, a, b) {
    var c = this._iv; c ? this._iv = u : c = this._prevBlock; for (var d = 0; d < b; d++)e[a + d] ^=
      c[d]
  }, q = (d.BlockCipherMode = l.extend({ createEncryptor: function (e, a) { return this.Encryptor.create(e, a) }, createDecryptor: function (e, a) { return this.Decryptor.create(e, a) }, init: function (e, a) { this._cipher = e; this._iv = a } })).extend(); q.Encryptor = q.extend({ processBlock: function (e, a) { var b = this._cipher, c = b.blockSize; x.call(this, e, a, c); b.encryptBlock(e, a); this._prevBlock = e.slice(a, a + c) } }); q.Decryptor = q.extend({
    processBlock: function (e, a) {
      var b = this._cipher, c = b.blockSize, d = e.slice(a, a + c); b.decryptBlock(e, a); x.call(this,
        e, a, c); this._prevBlock = d
    }
  }); b = b.CBC = q; q = (p.pad = {}).Pkcs7 = { pad: function (a, b) { for (var c = 4 * b, c = c - a.sigBytes % c, d = c << 24 | c << 16 | c << 8 | c, l = [], n = 0; n < c; n += 4)l.push(d); c = s.create(l, c); a.concat(c) }, unpad: function (a) { a.sigBytes -= a.words[a.sigBytes - 1 >>> 2] & 255 } }; d.BlockCipher = v.extend({
    cfg: v.cfg.extend({ mode: b, padding: q }), reset: function () {
      v.reset.call(this); var a = this.cfg, b = a.iv, a = a.mode; if (this._xformMode == this._ENC_XFORM_MODE) var c = a.createEncryptor; else c = a.createDecryptor, this._minBufferSize = 1; this._mode = c.call(a,
        this, b && b.words)
    }, _doProcessBlock: function (a, b) { this._mode.processBlock(a, b) }, _doFinalize: function () { var a = this.cfg.padding; if (this._xformMode == this._ENC_XFORM_MODE) { a.pad(this._data, this.blockSize); var b = this._process(!0) } else b = this._process(!0), a.unpad(b); return b }, blockSize: 4
  }); var n = d.CipherParams = l.extend({ init: function (a) { this.mixIn(a) }, toString: function (a) { return (a || this.formatter).stringify(this) } }), b = (p.format = {}).OpenSSL = {
    stringify: function (a) {
      var b = a.ciphertext; a = a.salt; return (a ? s.create([1398893684,
        1701076831]).concat(a).concat(b) : b).toString(r)
    }, parse: function (a) { a = r.parse(a); var b = a.words; if (1398893684 == b[0] && 1701076831 == b[1]) { var c = s.create(b.slice(2, 4)); b.splice(0, 4); a.sigBytes -= 16 } return n.create({ ciphertext: a, salt: c }) }
  }, a = d.SerializableCipher = l.extend({
    cfg: l.extend({ format: b }), encrypt: function (a, b, c, d) { d = this.cfg.extend(d); var l = a.createEncryptor(c, d); b = l.finalize(b); l = l.cfg; return n.create({ ciphertext: b, key: c, iv: l.iv, algorithm: a, mode: l.mode, padding: l.padding, blockSize: a.blockSize, formatter: d.format }) },
    decrypt: function (a, b, c, d) { d = this.cfg.extend(d); b = this._parse(b, d.format); return a.createDecryptor(c, d).finalize(b.ciphertext) }, _parse: function (a, b) { return "string" == typeof a ? b.parse(a, this) : a }
  }), p = (p.kdf = {}).OpenSSL = { execute: function (a, b, c, d) { d || (d = s.random(8)); a = w.create({ keySize: b + c }).compute(a, d); c = s.create(a.words.slice(b), 4 * c); a.sigBytes = 4 * b; return n.create({ key: a, iv: c, salt: d }) } }, c = d.PasswordBasedCipher = a.extend({
    cfg: a.cfg.extend({ kdf: p }), encrypt: function (b, c, d, l) {
      l = this.cfg.extend(l); d = l.kdf.execute(d,
        b.keySize, b.ivSize); l.iv = d.iv; b = a.encrypt.call(this, b, c, d.key, l); b.mixIn(d); return b
    }, decrypt: function (b, c, d, l) { l = this.cfg.extend(l); c = this._parse(c, l.format); d = l.kdf.execute(d, b.keySize, b.ivSize, c.salt); l.iv = d.iv; return a.decrypt.call(this, b, c, d.key, l) }
  })
}();
(function () {
  for (var u = CryptoJS, p = u.lib.BlockCipher, d = u.algo, l = [], s = [], t = [], r = [], w = [], v = [], b = [], x = [], q = [], n = [], a = [], c = 0; 256 > c; c++)a[c] = 128 > c ? c << 1 : c << 1 ^ 283; for (var e = 0, j = 0, c = 0; 256 > c; c++) { var k = j ^ j << 1 ^ j << 2 ^ j << 3 ^ j << 4, k = k >>> 8 ^ k & 255 ^ 99; l[e] = k; s[k] = e; var z = a[e], F = a[z], G = a[F], y = 257 * a[k] ^ 16843008 * k; t[e] = y << 24 | y >>> 8; r[e] = y << 16 | y >>> 16; w[e] = y << 8 | y >>> 24; v[e] = y; y = 16843009 * G ^ 65537 * F ^ 257 * z ^ 16843008 * e; b[k] = y << 24 | y >>> 8; x[k] = y << 16 | y >>> 16; q[k] = y << 8 | y >>> 24; n[k] = y; e ? (e = z ^ a[a[a[G ^ z]]], j ^= a[a[j]]) : e = j = 1 } var H = [0, 1, 2, 4, 8,
    16, 32, 64, 128, 27, 54], d = d.AES = p.extend({
      _doReset: function () {
        for (var a = this._key, c = a.words, d = a.sigBytes / 4, a = 4 * ((this._nRounds = d + 6) + 1), e = this._keySchedule = [], j = 0; j < a; j++)if (j < d) e[j] = c[j]; else { var k = e[j - 1]; j % d ? 6 < d && 4 == j % d && (k = l[k >>> 24] << 24 | l[k >>> 16 & 255] << 16 | l[k >>> 8 & 255] << 8 | l[k & 255]) : (k = k << 8 | k >>> 24, k = l[k >>> 24] << 24 | l[k >>> 16 & 255] << 16 | l[k >>> 8 & 255] << 8 | l[k & 255], k ^= H[j / d | 0] << 24); e[j] = e[j - d] ^ k } c = this._invKeySchedule = []; for (d = 0; d < a; d++)j = a - d, k = d % 4 ? e[j] : e[j - 4], c[d] = 4 > d || 4 >= j ? k : b[l[k >>> 24]] ^ x[l[k >>> 16 & 255]] ^ q[l[k >>>
          8 & 255]] ^ n[l[k & 255]]
      }, encryptBlock: function (a, b) { this._doCryptBlock(a, b, this._keySchedule, t, r, w, v, l) }, decryptBlock: function (a, c) { var d = a[c + 1]; a[c + 1] = a[c + 3]; a[c + 3] = d; this._doCryptBlock(a, c, this._invKeySchedule, b, x, q, n, s); d = a[c + 1]; a[c + 1] = a[c + 3]; a[c + 3] = d }, _doCryptBlock: function (a, b, c, d, e, j, l, f) {
        for (var m = this._nRounds, g = a[b] ^ c[0], h = a[b + 1] ^ c[1], k = a[b + 2] ^ c[2], n = a[b + 3] ^ c[3], p = 4, r = 1; r < m; r++)var q = d[g >>> 24] ^ e[h >>> 16 & 255] ^ j[k >>> 8 & 255] ^ l[n & 255] ^ c[p++], s = d[h >>> 24] ^ e[k >>> 16 & 255] ^ j[n >>> 8 & 255] ^ l[g & 255] ^ c[p++], t =
          d[k >>> 24] ^ e[n >>> 16 & 255] ^ j[g >>> 8 & 255] ^ l[h & 255] ^ c[p++], n = d[n >>> 24] ^ e[g >>> 16 & 255] ^ j[h >>> 8 & 255] ^ l[k & 255] ^ c[p++], g = q, h = s, k = t; q = (f[g >>> 24] << 24 | f[h >>> 16 & 255] << 16 | f[k >>> 8 & 255] << 8 | f[n & 255]) ^ c[p++]; s = (f[h >>> 24] << 24 | f[k >>> 16 & 255] << 16 | f[n >>> 8 & 255] << 8 | f[g & 255]) ^ c[p++]; t = (f[k >>> 24] << 24 | f[n >>> 16 & 255] << 16 | f[g >>> 8 & 255] << 8 | f[h & 255]) ^ c[p++]; n = (f[n >>> 24] << 24 | f[g >>> 16 & 255] << 16 | f[h >>> 8 & 255] << 8 | f[k & 255]) ^ c[p++]; a[b] = q; a[b + 1] = s; a[b + 2] = t; a[b + 3] = n
      }, keySize: 8
    }); u.AES = p._createHelper(d)
})();

module.exports = CryptoJS;
},{}],55:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("./AppConfig");
var HttpUnit_1 = require("./Net/HttpUnit");
var AppSwitchConfig_1 = require("./Config/AppSwitchConfig");
var ViewMgr_1 = require("./Mgr/ViewMgr");
var OPPOAPI = /** @class */ (function () {
    function OPPOAPI() {
    }
    Object.defineProperty(OPPOAPI, "BannerInstance", {
        get: function () {
            return OPPOAPI._banner;
        },
        enumerable: true,
        configurable: true
    });
    OPPOAPI.Login = function (onSuccess, onFail) {
        if (Laya.Browser.onQGMiniGame) {
            Laya.Browser.window["qg"].login({
                success: function (res) {
                    var token = res.data.token;
                    onSuccess(token);
                    console.log("OPPO 登陆成功,获取到 token : " + token);
                    for (var key in res) {
                        console.log(key, res[key]);
                    }
                },
                fail: function (res) {
                    console.log("OPPO 登陆失败", res);
                    for (var key in res) {
                        console.log(key, res[key]);
                    }
                }
            });
        }
    };
    OPPOAPI.initAdService = function (onSuccess, onFail, onComplete) {
        Laya.Browser.window["qg"].initAdService({
            appId: AppConfig_1.default.AppID,
            isDebug: false,
            success: function (res) {
                console.log("oppo initAdService success");
                if (onSuccess) {
                    onSuccess(res);
                }
            },
            fail: function (res) {
                console.log("oppo initAdService fail: ", res.code, res.msg);
                if (onFail) {
                    onFail(res);
                }
            },
            complete: function (res) {
                console.log("oppo initAdService complete");
                if (onComplete) {
                    onComplete(res);
                }
            }
        });
    };
    OPPOAPI.showRewardedVideoAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onQGMiniGame) {
            var videoAd = Laya.Browser.window["qg"].createRewardedVideoAd({
                posId: OPPOAPI.adUnitId,
            });
            videoAd.onLoad(function () {
                console.log("oppo 视频广告加载完成");
                videoAd.show();
            });
            videoAd.onVideoStart(function () {
                console.log("oppo 视频广告开始播放");
            });
            videoAd.onClose(function (res) {
                if (res.isEnded) {
                    console.log("oppo 视频广告观看 完成");
                    onAdClose(true);
                }
                else {
                    console.log("oppo 视频广告观看 未完成");
                    onAdClose(false);
                }
                videoAd.destroy();
            });
            videoAd.onError(function (err) {
                console.log("oppo 视频广告获取失败", err);
                videoAd.destroy();
                onFailed();
            });
            videoAd.load();
        }
        else {
            onAdClose(true);
        }
    };
    OPPOAPI.navigateToMiniProgram = function (pkgName, gameName, path, onSuccess, onFail, onComplate) {
        if (Laya.Browser.onQGMiniGame) {
            console.log("OPPO 跳转游戏： " + pkgName);
            HttpUnit_1.default.reportExport(pkgName, gameName, function (result) {
                if (1 == result.code) {
                    console.log("OPPO 导出上报成功");
                }
                else {
                    console.log("OPPO 导出上报失败", result.msg);
                }
            }, function (result) {
                console.log("OPPO 导出上报失败");
                for (var key in result) {
                    console.log(key, result[key]);
                }
            });
            var time = Date.now();
            while (Date.now() - time <= 500) {
            }
            Laya.Browser.window["qg"].navigateToMiniGame({
                pkgName: pkgName,
                path: path,
                extraData: {
                    from: AppConfig_1.default.AppID
                },
                envVersion: 'release',
                success: function (res) {
                    if (onSuccess) {
                        onSuccess(res);
                    }
                },
                fail: function (res) {
                    if (onFail) {
                        onFail(res);
                    }
                },
            });
        }
    };
    OPPOAPI.showInterstitialAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onQGMiniGame) {
            var insertAd = qg.createInsertAd({
                posId: OPPOAPI.InsAdUnitId
            });
            insertAd.load();
            insertAd.onLoad(function () {
                console.log("插屏广告加载完成");
                insertAd.show();
            });
            insertAd.onShow(function () {
                console.log("插屏广告显示成功");
            });
            insertAd.onError(function (err) {
                console.log("插屏广告拉取失败", err);
                insertAd.destroy();
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            onAdClose();
        }
    };
    OPPOAPI.showBannaer = function () {
        if (OPPOAPI._banner) {
            OPPOAPI._banner.show();
            return;
        }
        var bannerAd = qg.createBannerAd({
            posId: OPPOAPI.bannerAdUnitId
        });
        bannerAd.show();
        OPPOAPI._banner = bannerAd;
    };
    OPPOAPI.hideBanner = function () {
        if (OPPOAPI._banner) {
            OPPOAPI._banner.hide();
        }
    };
    OPPOAPI.destroyBanner = function () {
        if (OPPOAPI._banner) {
            OPPOAPI._banner.destroy();
        }
        OPPOAPI._banner = null;
    };
    OPPOAPI.getLaunchOptionsSync = function () {
        var obj = { query: "", referrerInfo: { package: "", extraData: { appid: "" } } };
        if (Laya.Browser.onQGMiniGame) {
            var options = Laya.Browser.window["qg"].getLaunchOptionsSync();
            if (null != options && options != "") {
                obj = options;
            }
            else {
                console.log("没有启动设置！！！");
            }
            return obj;
        }
        return obj;
    };
    OPPOAPI.share = function (complate, titel, imageUrl) {
        complate(false);
    };
    OPPOAPI.createDesktopIcon = function (onSuccess, onFail) {
        if (Laya.Browser.onQGMiniGame) {
            Laya.Browser.window["qg"].hasShortcutInstalled({
                success: function (res) {
                    if (res == false) {
                        Laya.Browser.window["qg"].installShortcut({
                            success: function () {
                                if (onSuccess) {
                                    onSuccess();
                                }
                            },
                            fail: function (err) {
                                if (onFail) {
                                    onFail();
                                }
                                console.log("创建桌面图标失败！！！！", err);
                                for (var key in err) {
                                    console.log(key, err);
                                }
                            },
                            complete: function () {
                            }
                        });
                    }
                    else {
                        console.log("桌面图标已存在！！！！");
                        if (onFail) {
                            onFail();
                        }
                    }
                },
                fail: function (err) {
                    if (onFail) {
                        onFail();
                    }
                    console.log("判断桌面图标是否存在失败！！！", err);
                    for (var key in err) {
                        console.log(key, err);
                    }
                },
                complete: function () {
                }
            });
        }
        else {
            if (onFail) {
                onFail();
            }
        }
    };
    //根据配置的概率自动弹出创建图标确认框
    OPPOAPI.autoPopCreateDestopIcon = function (onSuccess, onFail) {
        if (!Laya.Browser.onQGMiniGame) {
            if (null != onFail) {
                onFail();
            }
            return;
        }
        var rate = Math.floor(Math.random() * 100);
        if (rate <= AppSwitchConfig_1.default.getInstance().getAppSwitchData().oppocfg.addToDesktop) {
            OPPOAPI.createDesktopIcon(onSuccess, onFail);
        }
        else {
            if (null != onFail) {
                onFail();
            }
        }
    };
    //显示OPPO原生界面
    OPPOAPI.showNativeAd = function (onSuccess, onFail) {
        if (!Laya.Browser.onQGMiniGame) {
            if (null != onFail) {
                onFail();
            }
            return;
        }
        if (1 == AppSwitchConfig_1.default.getInstance().getAppSwitchData().oppocfg.yuanshengSwitch) {
            ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.OPPONativeView, null, function (v) {
                if (null != onSuccess) {
                    onSuccess(v);
                }
            });
        }
        else {
            if (null != onFail) {
                onFail();
            }
        }
    };
    OPPOAPI.adUnitId = "";
    OPPOAPI.bannerAdUnitId = "";
    OPPOAPI.InsAdUnitId = "";
    OPPOAPI.OpenScreenAdUnitId = "";
    OPPOAPI.NativeAdId = "";
    OPPOAPI._banner = null;
    return OPPOAPI;
}());
exports.default = OPPOAPI;
},{"./AppConfig":2,"./Config/AppSwitchConfig":5,"./Mgr/ViewMgr":48,"./Net/HttpUnit":52}],56:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var QQMiniGameAPI = /** @class */ (function () {
    function QQMiniGameAPI() {
    }
    QQMiniGameAPI.Login = function (onSuccess, onFail) {
        if (Laya.Browser.onQQMiniGame) {
            Laya.Browser.window["qq"].login({
                success: function (res) {
                    if (res.code) {
                        var code = res.code;
                        onSuccess(code);
                        console.log("登陆成功,获取到code : " + code);
                    }
                }
            });
        }
    };
    QQMiniGameAPI.onRewardedVideoAdLoad = function () {
        console.log('激励视频 广告加载完成');
    };
    QQMiniGameAPI.onRewardedVideoAdError = function (err) {
        console.log('激励视频 广告加载失败' + err);
        if (QQMiniGameAPI._onRewardedVideoAdFailed) {
            QQMiniGameAPI._onRewardedVideoAdFailed();
        }
    };
    QQMiniGameAPI.onRewardedVideoAdClose = function (res) {
        if ((res && res.isEnded) || res == null) {
            console.log('激励视频 已完整观看');
            if (QQMiniGameAPI._onRewardedVideoAdClose) {
                QQMiniGameAPI._onRewardedVideoAdClose(true);
            }
        }
        else {
            console.log('激励视频 未完整观看');
            if (QQMiniGameAPI._onRewardedVideoAdClose) {
                QQMiniGameAPI._onRewardedVideoAdClose(false);
            }
        }
    };
    QQMiniGameAPI.regRewardedVideoAdEvent = function (rewardedVideoAd) {
        rewardedVideoAd.onLoad(QQMiniGameAPI.onRewardedVideoAdLoad);
        rewardedVideoAd.onError(QQMiniGameAPI.onRewardedVideoAdError);
        rewardedVideoAd.onClose(QQMiniGameAPI.onRewardedVideoAdClose);
        QQMiniGameAPI._isRegRewardedVideoAdEvent = true;
    };
    QQMiniGameAPI.showRewardedVideoAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onQQMiniGame) {
            QQMiniGameAPI._onRewardedVideoAdClose = onAdClose;
            QQMiniGameAPI._onRewardedVideoAdFailed = onFailed;
            var rewardedVideoAd = Laya.Browser.window["qq"].createRewardedVideoAd({
                adUnitId: QQMiniGameAPI.adUnitId,
            });
            if (!QQMiniGameAPI._isRegRewardedVideoAdEvent) {
                QQMiniGameAPI.regRewardedVideoAdEvent(rewardedVideoAd);
            }
            rewardedVideoAd.load().then(function () {
                var promise = rewardedVideoAd.show();
                promise.then(function () { return console.log('激励视频 广告显示成功'); });
                promise.catch(function (err) {
                    rewardedVideoAd.load()
                        .then(function () { return rewardedVideoAd.show(); })
                        .catch(function (err) {
                        console.log('激励视频 广告显示失败');
                        if (onFailed) {
                            onFailed();
                        }
                    });
                });
            }).catch(function (err) {
                console.log('激励视频 广告加载失败');
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            onAdClose(true);
        }
    };
    //----------------------------------------------------------------
    //-------------------------小游戏跳转---------------------------
    QQMiniGameAPI.navigateToMiniProgram = function (appId, path, onSuccess, onFail, onComplate) {
        if (Laya.Browser.onQQMiniGame) {
            console.log("跳转游戏： " + appId);
            Laya.Browser.window["qq"].navigateToMiniProgram({
                appId: appId,
                path: path,
                extraData: {
                    foo: 'bar'
                },
                envVersion: 'release',
                success: function (res) {
                    if (onSuccess) {
                        onSuccess(res);
                    }
                },
                fail: function (res) {
                    if (onFail) {
                        onFail(res);
                    }
                },
                complete: function (res) {
                    if (onComplate) {
                        onComplate(res);
                    }
                }
            });
        }
    };
    QQMiniGameAPI.share = function (complate, titel, imageUrl) {
        var _this = this;
        if (Laya.Browser.onQQMiniGame) {
            QQMiniGameAPI._onShow = function () {
                Laya.Browser.window["qq"].offShow(QQMiniGameAPI._onShow);
                QQMiniGameAPI._onShow = null;
                var c = Date.now() - _this._lastShareTime;
                if (complate) {
                    if (Date.now() - _this._lastShareTime > 2000) {
                        complate(true);
                    }
                    else {
                        complate(false);
                    }
                }
            };
            Laya.Browser.window["qq"].onShow(QQMiniGameAPI._onShow);
            QQMiniGameAPI._lastShareTime = Date.now();
            Laya.Browser.window["qq"].shareAppMessage({
                title: titel,
                imageUrl: imageUrl
            });
        }
    };
    //----------------------------------------------------------------------
    //--------------------插屏幕广告---------------------------------------
    QQMiniGameAPI.showInterstitialAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onQQMiniGame) {
            var interstitialAd = Laya.Browser.window["qq"].createInterstitialAd({
                adUnitId: QQMiniGameAPI.InsAdUnitId,
            });
            var _onLoad_1 = function () {
                console.log('插屏广告 加载完成');
                interstitialAd.show().catch(function (err) {
                    console.log('插屏广告 显示失败 ：' + err);
                    interstitialAd.offLoad(_onLoad_1);
                    interstitialAd.offError(_onError_1);
                    interstitialAd.offClose(_onClose_1);
                    interstitialAd.destroy();
                    if (onFailed) {
                        onFailed();
                    }
                });
            };
            interstitialAd.onLoad(_onLoad_1);
            var _onError_1 = function (err) {
                console.log('插屏广告 加载失败' + err);
                interstitialAd.offLoad(_onLoad_1);
                interstitialAd.offError(_onError_1);
                interstitialAd.offClose(_onClose_1);
                interstitialAd.destroy();
                if (onFailed) {
                    onFailed();
                }
            };
            interstitialAd.onError(_onError_1);
            var _onClose_1 = function () {
                console.log('插屏广告 关闭');
                interstitialAd.offLoad(_onLoad_1);
                interstitialAd.offError(_onError_1);
                interstitialAd.offClose(_onClose_1);
                interstitialAd.destroy();
                if (onAdClose) {
                    onAdClose();
                }
            };
            interstitialAd.onClose(_onClose_1);
        }
        else {
            onAdClose();
        }
    };
    QQMiniGameAPI.LoadAppBoxAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onQQMiniGame) {
            this.mAppboxAd = Laya.Browser.window["qq"].createAppBox({
                adUnitId: QQMiniGameAPI.AppBoxId,
            });
            this.mAppboxAd.load().then(function () {
                console.log('盒子广告 加载完成');
            });
            this.mAppboxAd.onError(function (err) {
                console.log('盒子广告 加载失败' + err);
                if (onFailed) {
                    onFailed();
                }
            });
            this.onBoxAdClose = function () {
                console.log('盒子广告 关闭');
                if (onAdClose) {
                    onAdClose();
                }
            };
            this.mAppboxAd.onClose(this.onBoxAdClose);
        }
        else {
            onAdClose();
        }
    };
    QQMiniGameAPI.showAppBoxAd = function (onFailed, onAdClose) {
        if (this.mAppboxAd) {
            console.log("显示盒子广告");
            this.mAppboxAd.offClose(this.onBoxAdClose);
            this.onBoxAdClose = function () {
                console.log('盒子广告 关闭');
                if (onAdClose) {
                    onAdClose();
                }
            };
            this.mAppboxAd.onClose(this.onBoxAdClose);
            this.mAppboxAd.show().catch(function (err) {
                console.log('盒子广告 显示失败 ：' + err);
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            QQMiniGameAPI.LoadAppBoxAd(onAdClose, onFailed);
        }
    };
    /**
     * 得到小程序启动参数的同步方法，可得到一个Object返回值，返回值具体的数据结构在下面的列表中
     * scene    number  启动小游戏的场景值
     * query    Object  启动小游戏的 query 参数
     * shareTicket  string  shareTicket，详见获取更多转发信息
     * referrerInfo object  来源信息。从另一个小程序、公众号或 App 进入小程序时返回。否则返回 {}
     * https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/qq.getLaunchOptionsSync.html
     * @static
     * @returns {LaunchOptions}
     * @memberof QQMiniGameAPI
     */
    QQMiniGameAPI.getLaunchOptionsSync = function () {
        // let result = { scene: 0, query: null, shareTicket: "", referrerInfo: null };
        if (Laya.Browser.onQQMiniGame) {
            var obj_1 = Laya.Browser.window["qq"].getLaunchOptionsSync();
            console.log("场景值 " + obj_1.scene);
            var str = JSON.stringify(obj_1.query);
            console.log("Query参数 " + str);
            var key = obj_1.query["key"];
            console.log("Query参数：key " + key);
            console.log("ShareTicket " + obj_1.shareTicket);
            console.log("ReferrerInfo.appId " + obj_1.referrerInfo.appId);
            console.log("ReferrerInfo.extraData " + obj_1.referrerInfo.extraData);
            return obj_1;
        }
        var obj = { scene: 1001, query: "", shareTicket: "", appId: "", extraData: "" };
        return obj;
    };
    //----------------------------------------------------------------------
    /**
     * 打开微信左上角分享转发点击事件,在游戏逻辑中调用一次即可
     * 注意此方法只会在真机上执行，在微信模拟器环境下点击转发按钮什么都不会发生
     *
     * @static
     * @param {string} titel 分享标题
     * @param {string} imageUrl 分享图片地址
     * @param {Function} [success] 成功回调函数(可不填)
     * @param {Function} [fail] 失败回调函数(可不填)
     * @param {Function} [complate] 完成回调函数，成功失败都会执行(可不填)
     * @memberof QQMiniGameAPI
     */
    QQMiniGameAPI.SetShareMenu = function (titel, imageUrl, success, fail, complate) {
        if (Laya.Browser.onQQMiniGame) {
            console.log("小游戏设置转发按钮");
            Laya.Browser.window["qq"].showShareMenu({
                withShareTicket: false,
                success: success,
                fail: fail,
                complete: complate
            });
            Laya.Browser.window["qq"].onShareAppMessage(function () {
                return {
                    title: titel,
                    imageUrl: imageUrl
                };
            });
        }
    };
    QQMiniGameAPI.adUnitId = "4bb63639e618be94b3913b4056d3677d"; //激励视频Id
    QQMiniGameAPI.bannerAdUnitId = "588981548282115003a99b33f373bc69"; //banner广告Id
    QQMiniGameAPI.InsAdUnitId = ""; //插屏广告Id
    QQMiniGameAPI.AppBoxId = "4ee493e65fa1fcea4e709a45fd4c40e6"; //盒子广告Id
    //-------------------------激励视频---------------------------------
    QQMiniGameAPI._isRegRewardedVideoAdEvent = false;
    QQMiniGameAPI._onRewardedVideoAdFailed = null;
    QQMiniGameAPI._onRewardedVideoAdClose = null;
    //----------------------------------------------------------------------
    //---------------------分享----------------------------------------
    QQMiniGameAPI._onShow = null;
    QQMiniGameAPI._lastShareTime = 0;
    //--------------------盒子广告---------------------------------------
    QQMiniGameAPI.mAppboxAd = null;
    QQMiniGameAPI.onBoxAdClose = null;
    return QQMiniGameAPI;
}());
exports.default = QQMiniGameAPI;
},{}],57:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpUnit_1 = require("../Net/HttpUnit");
var AppConfig_1 = require("../AppConfig");
var User_1 = require("../User/User");
var Utilit_1 = require("../Utilit");
var ALD_1 = require("../ALD");
var WXAPI_1 = require("../WXAPI");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var AppSwitchConfig_1 = require("../Config/AppSwitchConfig");
var QQMiniGameAPI_1 = require("../QQMiniGameAPI");
var ShareAd = /** @class */ (function () {
    function ShareAd() {
    }
    ShareAd.refreshAd = function (complate) {
        ShareAd.getAdPosData(function (res) {
            if (1 == res.code) {
                console.log("获取分享广告数据成功");
                ShareAd._adPosition = res.result;
                if (complate) {
                    complate(true);
                }
            }
            else {
                console.log("获取分享广告数据失败 ： " + res.msg);
                if (complate) {
                    complate(false);
                }
            }
        }, function (res) {
            console.log("获取分享广告数据失败");
            if (complate) {
                complate(false);
            }
        });
    };
    ShareAd.getADVs = function (locationid, complate, useRandom, useLocalRandom) {
        if (!ShareAd.isNeedShowAd()) {
            complate(null);
            return;
        }
        useRandom = null == useRandom ? this.UseRandomAdPos : useRandom;
        useLocalRandom = null == useLocalRandom ? true : useLocalRandom;
        if (useRandom) {
            locationid = this.getRandomADPosID();
        }
        var datas = ShareAd._adv[locationid];
        if (datas) {
            for (var i = datas.length - 1; i >= 0; --i) {
                var randomIndex = Math.floor(Math.random() * datas.length);
                var curValue = datas[i];
                var randomValue = datas[randomIndex];
                datas[randomIndex] = curValue;
                datas[i] = randomValue;
            }
            complate(datas);
        }
        else {
            var self = this;
            ShareAd.getADVData(locationid, function (res) {
                if (1 == res.code) {
                    ShareAd._adv[locationid] = res.result;
                    datas = ShareAd._adv[locationid];
                    if (datas && Utilit_1.default.isIphone()) {
                        for (var i = 0; i < datas.length; ++i) {
                            var data = datas[i];
                            for (var j = 0; j < ShareAd._iphoneIgnoreAppIds.length; ++j) {
                                if (data.appid == ShareAd._iphoneIgnoreAppIds[j]) {
                                    datas.splice(i, 1);
                                    --i;
                                    break;
                                }
                            }
                        }
                    }
                    if (datas && useLocalRandom) {
                        datas = self.sortDatas(datas);
                    }
                    if (complate) {
                        complate(datas);
                    }
                }
                else {
                    if (complate) {
                        complate(null);
                    }
                }
            }, function (res) {
                if (complate) {
                    complate(null);
                }
            });
        }
    };
    ShareAd.reportUserClick = function (advid) {
        ShareAd.reqUserClick(advid, function (res) {
            if (1 == res.code) {
                console.log("点击广告上报成功");
            }
            else {
                console.log("点击广告上报失败");
            }
        }, function (res) {
            console.log("点击广告上报失败");
        });
    };
    ShareAd.getRandomADPosID = function () {
        return this.AdLocationids[Math.floor(Math.random() * this.AdLocationids.length)];
    };
    ShareAd.request = function (req) {
        if (req.url.indexOf("https://") > -1 ||
            req.url.indexOf("http://") > -1) {
            req.url = req.url;
        }
        else {
            req.url = ShareAd.mainUrl + req.url;
        }
        var completeFunc = function (res) {
            console.log(res, "http Success");
            res = JSON.parse(res);
            if (req.onSuccess) {
                req.onSuccess(res);
            }
            req.onSuccess = null;
            req = null;
        };
        var errorFunc = function (res) {
            console.log(res, "http fail");
            if (req.onFail) {
                req.onFail(res);
            }
            req.onFail = null;
            req = null;
        };
        var xhr = new Laya.HttpRequest();
        xhr.once(Laya.Event.COMPLETE, this, completeFunc);
        xhr.once(Laya.Event.ERROR, this, errorFunc);
        if (req.meth == "get") {
            var para = "";
            for (var _i = 0, _a = Object.keys(req.data); _i < _a.length; _i++) {
                var key = _a[_i];
                var value = req.data[key];
                para += key + "=" + value + "&";
            }
            req.url = req.url + "?" + para;
            var header = [
                "versions", AppConfig_1.default.Versions,
            ];
            xhr.send(req.url, null, req.meth, null, header);
        }
        else {
            var para = "";
            for (var _b = 0, _c = Object.keys(req.data); _b < _c.length; _b++) {
                var key = _c[_b];
                var value = req.data[key];
                para += key + "=" + value + "&";
            }
            para += "ts=" + String(Date.now()) + "&";
            var header = [
                "Content-Type", "application/x-www-form-urlencoded",
                "versions", AppConfig_1.default.Versions,
            ];
            xhr.send(req.url, para, req.meth, null, header);
        }
    };
    ShareAd.getAdPosData = function (onSuccess, onFail) {
        var req = new HttpUnit_1.requestData();
        req.url = ShareAd.getAdPostion;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        req.data.softid = AppConfig_1.default.AppID;
        req.meth = "get";
        ShareAd.request(req);
    };
    ShareAd.reqUserClick = function (advid, onSuccess, onFail) {
        var req = new HttpUnit_1.requestData();
        req.url = ShareAd.userClick;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        req.data.softid = AppConfig_1.default.AppID;
        req.data.uid = User_1.default.openId;
        req.data.advid = advid;
        ShareAd.request(req);
    };
    ShareAd.getADVData = function (locationid, onSuccess, onFail) {
        var req = new HttpUnit_1.requestData();
        req.url = ShareAd.getAdv;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        req.data.softid = AppConfig_1.default.AppID;
        req.data.locationid = locationid;
        req.data.preview = 0;
        ShareAd.request(req);
    };
    /**
         * 随机跳转的方法，会从广告列表中随机得到一个AppId并且跳转,输入的参数为概率，大小在0-1之间
         * 如果概率大于1，则自动将其除以100，所以千万注意！
         *
         * @static
         * @param {number} [rate=1]
         * @memberof ShareAd
         */
    ShareAd.RandomJump = function (rate) {
        if (rate === void 0) { rate = 1; }
        console.log("随机跳转,rate：" + rate);
        if (rate > 1) {
            rate = rate / 100;
        }
        var rd = Math.random();
        if (rd <= rate) {
            var adLocationID = ShareAd.LoopAdLocationID;
            var Locations = [
                ShareAd.LoopAdLocationID,
                ShareAd.InsertAdLocationID,
                ShareAd.BannerAdLocationID,
                ShareAd.AniAdLocationID,
            ];
            if (ShareAd.UseRandomAdPos) {
                for (var i = 0; i < ShareAd.AdLocationids.length; ++i) {
                    Locations.push(ShareAd.AdLocationids[i]);
                }
            }
            adLocationID = Locations[Math.floor(Math.random() * Locations.length)];
            var datas = ShareAd.getADVs(adLocationID, function (datas) {
                if (datas) {
                    var rd_1 = Math.floor(datas.length * Math.random());
                    var data_1 = datas[rd_1];
                    console.log("跳转游戏： " + data_1.title);
                    WXAPI_1.default.navigateToMiniProgram(data_1.appid, data_1.url, function (res) {
                        console.log("跳转成功");
                        ShareAd.reportUserClick(data_1.appid);
                        ALD_1.default.aldSendReportAdClickSuccess(data_1);
                    }, function (res) {
                        console.log("跳转失败");
                        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                        if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                            console.log("用户取消跳转");
                            ALD_1.default.aldSendReportAdClickFail(data_1);
                        }
                    }, function (res) {
                        console.log("跳转完成");
                    });
                }
            }, true);
        }
    };
    ShareAd.isNeedShowAd = function () {
        if (0 == AppSwitchConfig_1.default.getInstance().getAppSwitchData().adSwitch)
            return false;
        if (Laya.Browser.onQGMiniGame) {
            if (AppSwitchConfig_1.default.getInstance().getAppSwitchData().oppocfg.oppoversions != AppConfig_1.default.Versions) {
                return false;
            }
        }
        var mailiang = AppSwitchConfig_1.default.getInstance().getAppSwitchData().mailiang;
        var mailianglist = AppSwitchConfig_1.default.getInstance().getAppSwitchData().mailianglist;
        var mailiangscenelist = AppSwitchConfig_1.default.getInstance().getAppSwitchData().mailiangSceneList;
        if (1 == mailiang) {
            var flag = null;
            var scene = null;
            if (Laya.Browser.onMiniGame) {
                flag = WXAPI_1.default.getLaunchOptionsSync().query['chid'];
                scene = WXAPI_1.default.getLaunchOptionsSync().scene;
            }
            else if (Laya.Browser.onQQMiniGame) {
                flag = QQMiniGameAPI_1.default.getLaunchOptionsSync().query['chid'];
                scene = QQMiniGameAPI_1.default.getLaunchOptionsSync().scene;
            }
            if (null != flag && null != mailianglist && mailianglist.length > 0) {
                for (var i = 0; i < mailianglist.length; ++i) {
                    if (flag == mailianglist[i]) {
                        return false;
                    }
                }
            }
            if (null != scene && null != mailiangscenelist && mailiangscenelist.length > 0) {
                for (var i = 0; i < mailiangscenelist.length; ++i) {
                    if (scene == mailiangscenelist[i]) {
                        return false;
                    }
                }
            }
        }
        return true;
    };
    ShareAd.sortDatas = function (datas) {
        if (null == datas || 0 == datas.length)
            return [];
        var dataDic = {};
        var dataArray = new Array();
        for (var i = 0; i < datas.length; ++i) {
            var data = datas[i];
            if (dataDic[data.appid] == null) {
                dataDic[data.appid] = new Array();
                dataDic[data.appid].push(data);
                dataArray.push(dataDic[data.appid]);
            }
            else {
                dataDic[data.appid].push(data);
            }
        }
        //从大到小排序
        for (var i_1 = 0; i_1 < dataArray.length; i_1++) {
            for (var j = i_1 + 1; j < dataArray.length; j++) {
                if (dataArray[i_1].length < dataArray[j].length) {
                    var d = dataArray[j];
                    dataArray[j] = dataArray[i_1];
                    dataArray[i_1] = d;
                }
            }
        }
        //重新分组
        var groupArray = new Array();
        for (var i_2 = 0; i_2 < dataArray[0].length; i_2++) {
            groupArray[i_2] = new Array();
            for (var j = 0; j < dataArray.length; j++) {
                if (dataArray[j].length > i_2) {
                    groupArray[i_2].push(dataArray[j][i_2]);
                }
            }
            // //组内打乱            
            // groupArray[i].sort(() => { return 0.5 - Math.random() })
        }
        //打乱分组
        // groupArray.sort(() => { return 0.5 - Math.random() });
        var res = new Array();
        for (var i_3 = 0; i_3 < groupArray.length; i_3++) {
            for (var j = 0; j < groupArray[i_3].length; j++) {
                res.push(groupArray[i_3][j]);
            }
        }
        return res;
    };
    ShareAd.mainUrl = "https://swwww.mrkzx.cn";
    ShareAd.getAdPostion = "/v1.1/api/getAdPosition.html"; //获取广告位列表
    ShareAd.getAdv = "/v1.1/api/getAdv.html"; //获取第三方广告列表
    ShareAd.userClick = "/v1.1/api/userclick.html"; //用户点击上报
    ShareAd.LoopAdLocationID = -1;
    ShareAd.BannerAdLocationID = -1;
    ShareAd.InsertAdLocationID = -1;
    ShareAd.AniAdLocationID = -1;
    ShareAd.HistoryLocationID = -1;
    ShareAd.UseRandomAdPos = true;
    ShareAd.AdLocationids = [];
    ShareAd._adPosition = {};
    ShareAd._adv = {};
    ShareAd._iphoneIgnoreAppIds = [
        "wx2d2acce3c45f4ddf",
        "wxeb93c1298ec7c62b"
    ];
    return ShareAd;
}());
exports.default = ShareAd;
},{"../ALD":1,"../AppConfig":2,"../Config/AppSwitchConfig":5,"../Event/EventDef":9,"../Event/EventMgr":10,"../Net/HttpUnit":52,"../QQMiniGameAPI":56,"../User/User":63,"../Utilit":64,"../WXAPI":111}],58:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ShareAd_1 = require("../ShareAd");
var WXAPI_1 = require("../../WXAPI");
var ALD_1 = require("../../ALD");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var OPPOAPI_1 = require("../../OPPOAPI");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var BannerAdView = /** @class */ (function (_super) {
    __extends(BannerAdView, _super);
    function BannerAdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.AdPosID = ShareAd_1.default.BannerAdLocationID;
        _this._data = null;
        _this._wxBanner = null;
        _this._onLoad = null;
        _this._onError = null;
        _this._onResize = null;
        return _this;
    }
   
    BannerAdView.prototype.onAwake = function () {
        this._displaySp = this.owner.getChildByName("Display");
        if (null == this._displaySp) {
            this._displaySp = this.owner;
        }
    };
    BannerAdView.prototype.onEnable = function () {
        this._displaySp.on(Laya.Event.CLICK, this, this.onSpClick);
        var banner = AppSwitchConfig_1.default.getInstance().getAppSwitchData().banner;
        if (0 == banner) {
            this.refreshBannerDis();
            var bannerRecreateTime = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerRecreateTime;
            Laya.timer.loop(bannerRecreateTime * 1000, this, this.refreshBannerDis);
        }
        else if (1 == banner) {
            this.refreshWXBanner();
            var bannerRecreateTime = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerRecreateTime;
            Laya.timer.loop(bannerRecreateTime * 1000, this, this.refreshWXBanner);
        }
    };
    BannerAdView.prototype.onDisable = function () {
        this._displaySp.off(Laya.Event.CLICK, this, this.onSpClick);
        this.clearWXBaner();
    };
    BannerAdView.prototype.refreshBannerDis = function () {
        var self = this;
        ShareAd_1.default.getADVs(this.AdPosID, function (datas) {
            if (datas && datas.length > 0) {
                var data = datas[Math.floor(Math.random() * datas.length)];
                self._displaySp.loadImage(data.logo, Laya.Handler.create(self, function () {
                    if (!self._displaySp.destroyed) {
                        self._displaySp.width = 750;
                        self._displaySp.height = 256;
                    }
                }));
                self._data = data;
            }
        }, false);
    };
    BannerAdView.prototype.onSpClick = function () {
        var data = this._data;
        if (data) {
            console.log("跳转游戏： " + data.title);
            if (Laya.Browser.onMiniGame) {
                WXAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                    ALD_1.default.aldSendReportAdClickSuccess(data);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                    if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                        console.log("用户取消跳转");
                        ALD_1.default.aldSendReportAdClickFail(data);
                    }
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQGMiniGame) {
                OPPOAPI_1.default.navigateToMiniProgram(data.appid, data.title, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQQMiniGame) //qq小游戏
             {
                QQMiniGameAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
        }
    };
    BannerAdView.prototype.refreshWXBanner = function () {
        if ((!Laya.Browser.onMiniGame && !Laya.Browser.onQQMiniGame)
            || !this.owner.visible)
            return;
        this.clearWXBaner();
        var self = this;
        var sysInfo = null;
        if (Laya.Browser.onMiniGame) {
            sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
        }
        else if (Laya.Browser.onQQMiniGame) {
            sysInfo = Laya.Browser.window["qq"].getSystemInfoSync();
        }
        var sw = sysInfo.screenWidth;
        var sh = sysInfo.screenHeight;
        var pos = this._displaySp.localToGlobal(new Laya.Point(0, 0));
        var left = pos.x / Laya.stage.width * sw;
        var top = pos.y / Laya.stage.height * sh;
        var width = this.WXBannerWidth ? this.WXBannerWidth / Laya.stage.width * sw : sw;
        if (Laya.Browser.onMiniGame) {
            var recreateBannerIDList = AppSwitchConfig_1.default.getInstance().getAppSwitchData().recreateBannerIDList;
            var bannerAdUnitId = recreateBannerIDList[Math.floor(Math.random() * recreateBannerIDList.length)];
            if (null == bannerAdUnitId) {
                bannerAdUnitId = WXAPI_1.default.bannerAdUnitId;
            }
            self._wxBanner = Laya.Browser.window["wx"].createBannerAd({
                adUnitId: bannerAdUnitId,
                adIntervals: 30,
                style: {
                    left: left,
                    top: top,
                    width: width,
                }
            });
            self._wxBanner.onLoad(function (res) {
                console.log("WXBanner广告 加载完成");
                console.log(res);
            });
            self._wxBanner.onError(function (err) {
                console.log("WXBanner广告 加载失败");
                console.log(err);
                self.refreshBannerDis();
                self.clearWXBaner();
            });
            self._wxBanner.onResize(function (res) {
            });
            self._wxBanner.show();
        }
        else if (Laya.Browser.onQQMiniGame) {
            var recreateBannerIDList = AppSwitchConfig_1.default.getInstance().getAppSwitchData().recreateBannerIDList;
            var bannerAdUnitId_1 = recreateBannerIDList[Math.floor(Math.random() * recreateBannerIDList.length)];
            if (null == bannerAdUnitId_1) {
                bannerAdUnitId_1 = QQMiniGameAPI_1.default.bannerAdUnitId;
            }
            self._wxBanner = Laya.Browser.window["qq"].createBannerAd({
                adUnitId: bannerAdUnitId_1,
                adIntervals: 30,
                style: {
                    left: left,
                    top: top,
                    width: width,
                }
            });
            if (null != self._wxBanner) {
                self._onLoad = function (res) {
                    console.log("QQBanner广告 加载完成 : ", bannerAdUnitId_1);
                    console.log(res);
                    self._wxBanner.show();
                };
                self._wxBanner.onLoad(self._onLoad);
                self._onError = function (err) {
                    console.log("QQBanner广告 加载失败 : ", bannerAdUnitId_1);
                    console.log(err);
                    self.refreshBannerDis();
                    self.clearWXBaner();
                };
                self._wxBanner.onError(self._onError);
                self._onResize = function (res) {
                };
                self._wxBanner.onResize(self._onResize);
            }
            else {
                self.refreshBannerDis();
            }
        }
    };
    BannerAdView.prototype.clearWXBaner = function () {
        if (this._wxBanner) {
            this._wxBanner.offLoad(this._onLoad);
            this._wxBanner.offError(this._onError);
            this._wxBanner.offResize(this._onResize);
            this._wxBanner.destroy();
        }
        this._wxBanner = null;
    };
    BannerAdView.prototype.onViewShow = function () {
        var banner = AppSwitchConfig_1.default.getInstance().getAppSwitchData().banner;
        if (1 == banner && null == this._wxBanner) {
            this.refreshWXBanner();
            var bannerRecreateTime = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerRecreateTime;
            Laya.timer.loop(bannerRecreateTime * 1000, this, this.refreshWXBanner);
        }
        else {
            this.refreshBannerDis();
            var bannerRecreateTime = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerRecreateTime;
            Laya.timer.loop(bannerRecreateTime * 1000, this, this.refreshBannerDis);
        }
    };
    BannerAdView.prototype.onViewHide = function () {
        this.clearWXBaner();
        Laya.timer.clearAll(this);
    };
    BannerAdView.prototype.onDestroy = function () {
        this.clearWXBaner();
        Laya.timer.clearAll(this);
    };
    return BannerAdView;
}(Laya.Script));
exports.default = BannerAdView;
},{"../../ALD":1,"../../Config/AppSwitchConfig":5,"../../Event/EventDef":9,"../../Event/EventMgr":10,"../../OPPOAPI":55,"../../QQMiniGameAPI":56,"../../WXAPI":111,"../ShareAd":57}],59:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ShareAd_1 = require("../ShareAd");
var LoopAdBox_1 = require("./LoopAdBox");
var HorizontalLoopAdView = /** @class */ (function (_super) {
    __extends(HorizontalLoopAdView, _super);
    function HorizontalLoopAdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.AdPosID = ShareAd_1.default.LoopAdLocationID;
        _this._scrollForward = true;
        return _this;
    }
    HorizontalLoopAdView.prototype.onAwake = function () {
        this._list = this.owner.getChildByName("List");
        this._list.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);
        this._list.hScrollBarSkin = "";
    };
    HorizontalLoopAdView.prototype.onEnable = function () {
        var _this = this;
        var self = this;
        ShareAd_1.default.getADVs(this.AdPosID, function (datas) {
            if (self.owner && !self.owner.destroyed) {
                if (datas && datas.length > 0 && datas.length < 50) {
                    var temp = [];
                    var counter = 0;
                    for (var i = 0; i < 50; ++i) {
                        if (counter >= datas.length) {
                            counter = 0;
                        }
                        temp.push(datas[counter]);
                        ++counter;
                    }
                    var groupLen = datas.length;
                    for (var i = 0; i < temp.length; ++i) {
                        var group = Math.floor(i / groupLen);
                        var startIndex = group * groupLen;
                        var randomIndex = Math.floor(Math.random() * groupLen) + startIndex;
                        var curValue = temp[i];
                        var randomValue = temp[randomIndex];
                        temp[randomIndex] = curValue;
                        temp[i] = randomValue;
                    }
                    _this._list.array = temp;
                }
                else if (datas && datas.length > 50) {
                    _this._list.array = datas;
                }
                else {
                    _this._list.array = datas;
                    _this.owner.visible = false;
                }
            }
        });
    };
    HorizontalLoopAdView.prototype.onDisable = function () {
    };

    HorizontalLoopAdView.prototype.onUpdate = function () {
        if (this._scrollForward) {
            this._list.scrollBar.value += 100 * Laya.timer.delta / 1000;
            if (this._list.scrollBar.value >= this._list.scrollBar.max) {
                this._scrollForward = false;
            }
        }
        else {
            this._list.scrollBar.value -= 100 * Laya.timer.delta / 1000;
            if (this._list.scrollBar.value <= 0) {
                this._scrollForward = true;
            }
        }
    };
    HorizontalLoopAdView.prototype.onListRender = function (cell, index) {
        var data = this._list.array[index];
        var loopAdBox = cell.getComponent(LoopAdBox_1.default);
        loopAdBox.setData(data);
    };
    return HorizontalLoopAdView;
}(Laya.Script));
exports.default = HorizontalLoopAdView;
},{"../ShareAd":57,"./LoopAdBox":60}],60:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WXAPI_1 = require("../../WXAPI");
var ShareAd_1 = require("../ShareAd");
var ALD_1 = require("../../ALD");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var OPPOAPI_1 = require("../../OPPOAPI");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var LoopAdBox = /** @class */ (function (_super) {
    __extends(LoopAdBox, _super);
    function LoopAdBox() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._data = null;
        _this._originW = 150;
        _this._originH = 150;
        _this._fontSize = 25;
        return _this;
    }
    LoopAdBox.prototype.onAwake = function () {
        this._displaySp = this.owner.getChildByName("Display");
        this._originW = this._displaySp.width;
        this._originH = this._displaySp.height;
        this._disText = this.owner.getChildByName("TitelText");
        this._disText.text = "";
        this._fontSize = this._disText.fontSize;
    };
    LoopAdBox.prototype.onEnable = function () {
        this._displaySp.on(Laya.Event.CLICK, this, this.onSpClick);
    };
    LoopAdBox.prototype.onDisable = function () {
        this._displaySp.off(Laya.Event.CLICK, this, this.onSpClick);
    };
    LoopAdBox.prototype.setData = function (data) {
        if (data) {
            var self = this;
            this._displaySp.loadImage(data.logo, Laya.Handler.create(this, function () {
                if (!self._displaySp.destroyed) {
                    self._displaySp.width = self._originW;
                    self._displaySp.height = self._originH;
                }
            }));
            var str = String(data.title);
            var num = str.length;
            num = Math.max(5, num);
            var fontSize = Math.floor((5 / num) * this._fontSize);
            // this._disText.fontSize = fontSize;
            this._disText.text = str;
            this._data = data;
        }
    };
    LoopAdBox.prototype.onSpClick = function () {
        var data = this._data;
        if (data) {
            console.log("跳转游戏： " + data.title);
            if (Laya.Browser.onMiniGame) {
                WXAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                    ALD_1.default.aldSendReportAdClickSuccess(data);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                    if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                        console.log("用户取消跳转");
                        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail_UseCancel);
                        ALD_1.default.aldSendReportAdClickFail(data);
                    }
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQGMiniGame) {
                OPPOAPI_1.default.navigateToMiniProgram(data.appid, data.title, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQQMiniGame) //qq小游戏
             {
                QQMiniGameAPI_1.default.navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
        }
    };
    return LoopAdBox;
}(Laya.Script));
exports.default = LoopAdBox;
},{"../../ALD":1,"../../Event/EventDef":9,"../../Event/EventMgr":10,"../../OPPOAPI":55,"../../QQMiniGameAPI":56,"../../WXAPI":111,"../ShareAd":57}],61:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ShareAd_1 = require("../ShareAd");
var LoopAdBox_1 = require("./LoopAdBox");
var LoopAdView = /** @class */ (function (_super) {
    __extends(LoopAdView, _super);
    function LoopAdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.AdPosID = ShareAd_1.default.LoopAdLocationID;
        _this._scrollForward = true;
        return _this;
    }
    LoopAdView.prototype.onAwake = function () {
        this._list = this.owner.getChildByName("List");
        this._list.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);
        this._list.vScrollBarSkin = "";
    };
    LoopAdView.prototype.onEnable = function () {
        var _this = this;
        var self = this;
        ShareAd_1.default.getADVs(this.AdPosID, function (datas) {
            if (self.owner && !_this.owner.destroyed) {
                if (datas && datas.length > 0 && datas.length < 50) {
                    _this.owner.visible = true;
                    var temp = [];
                    var counter = 0;
                    for (var i = 0; i < 50; ++i) {
                        if (counter >= datas.length) {
                            counter = 0;
                        }
                        temp.push(datas[counter]);
                        ++counter;
                    }
                    var groupLen = datas.length;
                    for (var i = 0; i < temp.length; ++i) {
                        var group = Math.floor(i / groupLen);
                        var startIndex = group * groupLen;
                        var randomIndex = Math.floor(Math.random() * groupLen) + startIndex;
                        var curValue = temp[i];
                        var randomValue = temp[randomIndex];
                        temp[randomIndex] = curValue;
                        temp[i] = randomValue;
                    }
                    _this._list.array = temp;
                }
                else if (datas && datas.length > 50) {
                    _this._list.array = datas;
                }
                else {
                    _this._list.array = datas;
                    _this.owner.visible = false;
                }
            }
        });
    };
    LoopAdView.prototype.onDisable = function () {
    };
    LoopAdView.prototype.onUpdate = function () {
        if (this._scrollForward) {
            this._list.scrollBar.value += 100 * Laya.timer.delta / 1500;
            if (this._list.scrollBar.value >= this._list.scrollBar.max) {
                this._scrollForward = false;
            }
        }
        else {
            this._list.scrollBar.value -= 100 * Laya.timer.delta / 1500;
            if (this._list.scrollBar.value <= 0) {
                this._scrollForward = true;
            }
        }
    };
    LoopAdView.prototype.onListRender = function (cell, index) {
        var data = this._list.array[index];
        var loopAdBox = cell.getComponent(LoopAdBox_1.default);
        loopAdBox.setData(data);
    };
    return LoopAdView;
}(Laya.Script));
exports.default = LoopAdView;
},{"../ShareAd":57,"./LoopAdBox":60}],62:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("./AppConfig");
var AppConfig_2 = require("./AppConfig");
var TTAPI = /** @class */ (function () {
    function TTAPI() {
    }
    TTAPI.ttLogin = function (onSuccess, onFail) {
        if (AppConfig_1.default.onTTMiniGame) {
            Laya.Browser.window["tt"].login({
                force: false,
                success: function (res) {
                    console.log("登陆成功1");
                    var code = res.code;
                    if (code) {
                        onSuccess(code);
                    }
                    else {
                        console.log("用户没有登陆，采用临时code");
                        onFail();
                    }
                },
                fail: function () {
                    console.log("登陆失败1");
                    onFail();
                },
            });
            TTAPI.initRecord();
        }
    };
    TTAPI.onRewardedVideoAdLoad = function () {
        console.log('激励视频 广告加载完成');
    };
    TTAPI.onRewardedVideoAdError = function (err) {
        console.log('激励视频 广告加载失败' + err);
        if (TTAPI._onRewardedVideoAdFailed) {
            TTAPI._onRewardedVideoAdFailed();
        }
    };
    TTAPI.onRewardedVideoAdClose = function (res) {
        if ((res && res.isEnded) || res == null) {
            console.log('激励视频 已完整观看');
            if (TTAPI._onRewardedVideoAdClose) {
                TTAPI._onRewardedVideoAdClose(true);
            }
        }
        else {
            console.log('激励视频 未完整观看');
            if (TTAPI._onRewardedVideoAdClose) {
                TTAPI._onRewardedVideoAdClose(false);
            }
        }
    };
    TTAPI.regRewardedVideoAdEvent = function (rewardedVideoAd) {
        rewardedVideoAd.onLoad(TTAPI.onRewardedVideoAdLoad);
        rewardedVideoAd.onError(TTAPI.onRewardedVideoAdError);
        rewardedVideoAd.onClose(TTAPI.onRewardedVideoAdClose);
        TTAPI._isRegRewardedVideoAdEvent = true;
    };
    TTAPI.showRewardedVideoAd = function (onAdClose, onFailed) {
        if (AppConfig_1.default.onTTMiniGame) {
            TTAPI._onRewardedVideoAdClose = onAdClose;
            TTAPI._onRewardedVideoAdFailed = onFailed;
            var rewardedVideoAd = Laya.Browser.window["tt"].createRewardedVideoAd({
                adUnitId: TTAPI.adUnitId,
            });
            if (!TTAPI._isRegRewardedVideoAdEvent) {
                TTAPI.regRewardedVideoAdEvent(rewardedVideoAd);
            }
            rewardedVideoAd.load().then(function () {
                var promise = rewardedVideoAd.show();
                promise.then(function () { return console.log('激励视频 广告显示成功'); });
                promise.catch(function (err) {
                    rewardedVideoAd.load()
                        .then(function () { return rewardedVideoAd.show(); })
                        .catch(function (err) {
                        console.log('激励视频 广告显示失败');
                        if (onFailed) {
                            onFailed();
                        }
                    });
                });
            }).catch(function (err) {
                console.log('激励视频 广告加载失败');
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            onAdClose(true);
        }
    };
    //----------------------------------------------------------------
    //-------------------------小游戏跳转---------------------------TODO
    // public static navigateToMiniProgram(appId: string, path: string, onSuccess: Function, onFail: Function, onComplate: Function) {
    //     if (Laya.Browser.onMiniGame) {
    //         console.log("跳转游戏： " + appId);
    //         Laya.Browser.window["tt"].navigateToMiniProgram(
    //             {
    //                 appId: appId,
    //                 path: path,
    //                 extraData: {
    //                     foo: 'bar'
    //                 },
    //                 envVersion: 'release',
    //                 success(res) {
    //                     if (onSuccess) {
    //                         onSuccess(res)
    //                     }
    //                 },
    //                 fail(res) {
    //                     if (onFail) {
    //                         onFail(res)
    //                     }
    //                 },
    //                 complete(res) {
    //                     if (onComplate) {
    //                         onComplate(res)
    //                     }
    //                 }
    //             })
    //     }
    // }
    //-------------------------------------------------------------
    //-------------------录屏-------------------------------------------
    /**
     * 配置录屏
     */
    TTAPI.initRecord = function () {
        TTAPI.record = Laya.Browser.window["tt"].getGameRecorderManager();
        if (TTAPI.record != null) {
            TTAPI.record.onStart(function (res) {
                console.log("录屏开始");
                TTAPI.recordRes = "";
            });
            TTAPI.record.onStop(function (res) {
                console.log("录屏结束");
                TTAPI.recordRes = res.videoPath;
            });
        }
    };
    /**
     * 开始录屏
     */
    TTAPI.startRecord = function (duration) {
        if (duration === void 0) { duration = 300; }
        if (!AppConfig_1.default.onTTMiniGame)
            return;
        TTAPI.record.start({
            duration: duration
        });
    };
    /**
    * 停止录屏
    */
    TTAPI.stopRecord = function () {
        if (!AppConfig_1.default.onTTMiniGame)
            return;
        TTAPI.record.stop();
    };
    //----------------------------------------------------------------------
    //---------------------分享录屏----------------------------------------
    TTAPI.shareRecord = function (callback) {
        if (callback === void 0) { callback = null; }
        if (!AppConfig_1.default.onTTMiniGame)
            return;
        if (TTAPI.recordRes != "") {
            window["tt"].shareAppMessage({
                channel: "video",
                extra: {
                    videoPath: TTAPI.recordRes,
                    videoTopics: ["快来和我一起玩吧！"]
                },
                success: function () {
                    if (callback != null) {
                        callback();
                    }
                    console.log("分享视频成功");
                },
                fail: function (e) {
                    console.log("分享视频失败");
                }
            });
        }
        else {
            console.log("分享视频为空");
        }
    };
    //----------------------------------------------------------------------
    //----------------------------------------------------------------------
    //---------------------分享好友----------------------------------------
    TTAPI.share = function (complate) {
        if (complate === void 0) { complate = null; }
        if (!AppConfig_1.default.onTTMiniGame)
            return;
        window["tt"].shareAppMessage({
            templateId: this._templateId,
            success: function () {
                if (complate != null) {
                    complate();
                }
            },
            fail: function () {
                console.log("分享失败");
            }
        });
    };
    //------------------------------------------------------------------
    //-------------------------banner-------------------------------------------
    TTAPI.showBanner = function () {
        if (!AppConfig_1.default.onTTMiniGame || this.bannerAdUnitId.length <= 0)
            return;
        if (!TTAPI._banner) {
            var _a = Laya.Browser.window["tt"].getSystemInfoSync(), windowWidth_1 = _a.windowWidth, windowHeight_1 = _a.windowHeight;
            var targetBannerAdWidth = 150;
            // 创建一个居于屏幕底部正中的广告
            TTAPI._banner = Laya.Browser.window["tt"].createBannerAd({
                adUnitId: TTAPI.bannerAdUnitId,
                adIntervals: 30,
                style: {
                    width: targetBannerAdWidth,
                    top: windowHeight_1 - (targetBannerAdWidth / 16) * 9,
                }
            });
            TTAPI._banner.onResize(function (size) {
                console.log(size.width, size.height);
                TTAPI._banner.style.top = windowHeight_1 - size.height;
                TTAPI._banner.style.left = (windowWidth_1 - size.width) / 2;
            });
        }
        TTAPI._banner.show();
    };
    TTAPI.hideBanner = function () {
        if (null != TTAPI._banner) {
            TTAPI._banner.hide();
        }
    };
    TTAPI.showMoreGamesModal = function (onSuccess, onFail) {
        var systemInfo = Laya.Browser.window["tt"].getSystemInfoSync();
        // iOS 不支持，建议先检测再使用
        if (systemInfo.platform !== "ios") {
            // 打开互跳弹窗
            Laya.Browser.window["tt"].showMoreGamesModal({
                appLaunchOptions: [
                    {
                        appId: AppConfig_2.default.AppID,
                        query: "foo=bar&baz=qux",
                        extraData: {}
                    }
                    // {...}
                ],
                success: function (res) {
                    console.log("success", res.errMsg);
                    if (onSuccess) {
                        onSuccess();
                    }
                },
                fail: function (res) {
                    console.log("fail", res.errMsg);
                    if (onFail) {
                        onFail();
                    }
                }
            });
        }
        else {
            if (onFail) {
                onFail();
            }
        }
    };
    TTAPI.adUnitId = "";
    TTAPI.bannerAdUnitId = "";
    TTAPI.InsAdUnitId = "";
    TTAPI._templateId = ""; //分享素材id
    TTAPI.recordRes = "";
    TTAPI._banner = null;
    //-------------------------激励视频---------------------------------
    TTAPI._isRegRewardedVideoAdEvent = false;
    TTAPI._onRewardedVideoAdFailed = null;
    TTAPI._onRewardedVideoAdClose = null;
    return TTAPI;
}());
exports.default = TTAPI;
},{"./AppConfig":2}],63:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var GameCommonConfig_1 = require("../Config/GameCommonConfig");
//游戏数据,为保持版本兼容，建议不要删除和修改字段名
var UserGameData = /** @class */ (function () {
    function UserGameData() {
        this.levelNum = 1; //当前关卡
        this.moneyNum = 0; //金币数量
        this.crystalNum = 0; //钻石数量
        this.energyNum = 0; //体力数量
        this.actorSkins = [1]; //已解锁的皮肤
        this.curActorSkin = 1; //当前皮肤
        this.lastSignInTime = 0; //上次签到时间
    }
    return UserGameData;
}());
exports.UserGameData = UserGameData;
var User = /** @class */ (function (_super) {
    __extends(User, _super);
    function User() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(User, "isLogin", {
        get: function () {
            return (User.code != "") || (User.token != "");
        },
        enumerable: true,
        configurable: true
    });
    User.getSaveData = function () {
        return JSON.stringify(User._gameData);
    };
    User.testInitUser = function () {
        User._gameData.levelNum = 1;
        User._gameData.moneyNum = 0;
        User._gameData.crystalNum = 0;
        User._gameData.energyNum = 150;
    };
    User.initiUser = function (data) {
        if (data && data.cddata && 0 != data.cddata) {
            User._gameData.levelNum = data.cddata.levelNum;
            User._gameData.moneyNum = data.cddata.moneyNum;
            User._gameData.crystalNum = data.cddata.crystalNum;
            User._gameData.energyNum = data.cddata.energyNum;
            var actorSkins = data.cddata.actorSkins;
            if (null != actorSkins) {
                for (var i = 0; i < actorSkins.length; ++i) {
                    if (1 != actorSkins[i]) {
                        User._gameData.actorSkins.push(actorSkins[i]);
                    }
                }
            }
            User._gameData.curActorSkin = data.cddata.curActorSkin;
            User._gameData.lastSignInTime = data.cddata.lastSignInTime;
            if (0 == data.is_day) {
                User._gameData.energyNum = GameCommonConfig_1.default.getInstance().getGameConfigData().dailyEnergy;
            }
        }
        else if (null != data) {
            if (0 == data.is_day) {
                User._gameData.energyNum = GameCommonConfig_1.default.getInstance().getGameConfigData().dailyEnergy;
            }
        }
        else {
            User._gameData.energyNum = 100;
        }
    };
    User.unLockMaxLevelNum = function (levelNum) {
        this.setLeveNum(levelNum);
        if (User._gameData.levelNum < levelNum) {
            User._gameData.levelNum = levelNum;
        }
    };
    User.setLeveNum = function (levelNum) {
        Laya.LocalStorage.setItem("Level", levelNum.toString());
        User._gameData.levelNum = levelNum;
    };
    User.getLeveNum = function () {
        var myNumberStr = Laya.LocalStorage.getItem("Level");
        if (myNumberStr === null) {
            myNumber = 1;
        }
        else {
            var myNumber = parseInt(myNumberStr);
        }
        return myNumber;
    };
    User.addMoney = function (add) {
        add = Math.ceil(add);
        Laya.LocalStorage.setItem("Money", (User._gameData.moneyNum + add).toString());
        var last = User._gameData.moneyNum;
        User._gameData.moneyNum += add;
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnUserMoneyChange, {
            curr: User._gameData.moneyNum,
            last: last
        });
    };
    User.subMoney = function (sub) {
        sub = Math.ceil(sub);
        Laya.LocalStorage.setItem("Money", (User._gameData.moneyNum - sub).toString());
        var last = User._gameData.moneyNum;
        User._gameData.moneyNum -= sub;
        if (User._gameData.moneyNum < 0) {
            User._gameData.moneyNum = 0;
        }
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnUserMoneyChange, {
            curr: User._gameData.moneyNum,
            last: last
        });
    };
    User.getMoney = function () {
        var myNumberStr = Laya.LocalStorage.getItem("Money");
        if (myNumberStr === null) {
            myNumber = 1;
        }
        else {
            var myNumber = parseInt(myNumberStr);
        }
        return myNumber;
    };
    User.addCrystal = function (add) {
        add = Math.ceil(add);
        Laya.LocalStorage.setItem("Crystal", (User._gameData.crystalNum + add).toString());
        var last = User._gameData.crystalNum;
        User._gameData.crystalNum += add;
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnUserCrystalChange, {
            curr: User._gameData.crystalNum,
            last: last
        });
    };
    User.subCrystal = function (sub) {
        sub = Math.ceil(sub);
        Laya.LocalStorage.setItem("Crystal", (User._gameData.crystalNum - sub).toString());
        var last = User._gameData.crystalNum;
        User._gameData.crystalNum -= sub;
        if (User._gameData.crystalNum < 0) {
            User._gameData.crystalNum = 0;
        }
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnUserCrystalChange, {
            curr: User._gameData.crystalNum,
            last: last
        });
    };
    User.getCrystal = function () {
        var myNumberStr = Laya.LocalStorage.getItem("Crystal");
        if (myNumberStr === null) {
            myNumber = 1;
        }
        else {
            var myNumber = parseInt(myNumberStr);
        }
        return myNumber;
    };
    User.addEnergy = function (add) {
        add = Math.ceil(add);
        Laya.LocalStorage.setItem("Energy", (User._gameData.energyNum + add).toString());
        var last = User._gameData.energyNum;
        User._gameData.energyNum += add;
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnUserEnergyChange, {
            curr: User._gameData.energyNum,
            last: last
        });
    };
    User.subEnergy = function (sub) {
        sub = Math.ceil(sub);
        Laya.LocalStorage.setItem("Energy", (User._gameData.energyNum - sub).toString());
        var last = User._gameData.energyNum;
        User._gameData.energyNum -= sub;
        if (User._gameData.energyNum < 0) {
            User._gameData.energyNum = 0;
        }
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnUserEnergyChange, {
            curr: User._gameData.energyNum,
            last: last
        });
    };
    User.getEnergy = function () {
        var myNumberStr = Laya.LocalStorage.getItem("Energy");
        if (myNumberStr === null) {
            myNumber = 1;
        }
        else {
            var myNumber = parseInt(myNumberStr);
        }
        return myNumber;
    };
    User.setCurActorSkin = function (skin) {
        if (!User.actorSkinIsUnlock(skin))
            return;
        var last = User._gameData.curActorSkin;
        User._gameData.curActorSkin = skin;
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnUserActorSkinChange, {
            curSkin: skin,
            lastSkin: last
        });
    };
    User.getCurActorSkin = function () {
        return User._gameData.curActorSkin;
    };
    User.unlockActorSkin = function (skin) {
        if (User.actorSkinIsUnlock(skin))
            return false;
        User._gameData.actorSkins.push(skin);
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnUserUnlockActorSkin, { skin: skin });
        return true;
    };
    User.actorSkinIsUnlock = function (skin) {
        for (var i = 0; i < User._gameData.actorSkins.length; ++i) {
            if (skin == User._gameData.actorSkins[i])
                return true;
        }
        return false;
    };
    User.getActorSkins = function () {
        var arry = new Array();
        for (var i = 0; i < User._gameData.actorSkins.length; ++i) {
            arry.push(User._gameData.actorSkins[i]);
        }
        return arry;
    };
    User.setlastSignInTime = function (time) {
        User._gameData.lastSignInTime = time;
    };
    User.getlastSignInTime = function () {
        return User._gameData.lastSignInTime;
    };
    User.code = "";
    User.openId = "";
    User.token = null;
    User.nickName = "";
    User.gender = 0;
    User._gameData = new UserGameData();
    return User;
}(Laya.Script));
exports.default = User;
},{"../Config/GameCommonConfig":6,"../Event/EventDef":9,"../Event/EventMgr":10}],64:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Utilit = /** @class */ (function () {
    function Utilit() {
    }
    Utilit.Lerp = function (form, to, delta) {
        if (form == to)
            return to;
        if (form > to) {
            var next = form - delta;
            if (next <= to)
                return to;
            return next;
        }
        else if (form < to) {
            var next = form + delta;
            if (next >= to)
                return to;
            return next;
        }
    };
    Utilit.lerpEulerAngle = function (form, to, delta) {
        var form = form % 360;
        form = form >= 0 ? form : (360 + form);
        var to = to % 360;
        to = to >= 0 ? to : (360 + to);
        var dis = Math.abs(to - form);
        if (dis > 180) {
            if (form < to)
                to = to - 360;
            else if (form > to)
                to = to + 360;
        }
        var next = Utilit.Lerp(form, to, delta);
        return next;
    };
    Utilit.getRotationByDir = function (v) {
        var dotValue = (v.x * Utilit.poinDown.x) + (v.y * Utilit.poinDown.y);
        var cos = dotValue / (v.distance(0, 0) * Utilit.poinDown.distance(0, 0));
        var radian = Math.acos(cos);
        var rotation = radian / (2 * Math.PI) * 360;
        if (v.x < 0) {
            rotation = -rotation;
        }
        return rotation;
    };
    Utilit.getRotationByDirOn3DSpace = function (v) {
        var dotValue = (v.x * Utilit.poinUp.x) + (v.y * Utilit.poinUp.y);
        var cos = dotValue / (v.distance(0, 0) * Utilit.poinUp.distance(0, 0));
        var radian = Math.acos(cos);
        var rotation = radian / (2 * Math.PI) * 360;
        if (v.x < 0) {
            rotation = rotation + (180 - rotation) * 2;
        }
        return rotation;
    };
    Utilit.getDirByRotation = function (rotation) {
        var radian = (rotation - 90) * Math.PI / 180; // -90 是转换到场景坐标系
        var x = Math.cos(radian);
        var y = Math.sin(radian);
        var point = new Laya.Point(x, y);
        point.normalize();
        return point;
    };
    Utilit.getDirDirAngle = function (dir1, dir2) {
        var dotValue = (dir1.x * dir2.x) + (dir1.y * dir2.y);
        var cos = dotValue / (dir1.distance(0, 0) * dir2.distance(0, 0));
        var radian = Math.acos(cos);
        var angle = radian / (2 * Math.PI) * 360;
        return angle;
    };
    Utilit.getDirScalarLength = function (dir) {
        var sl = Math.sqrt(dir.x * dir.x + dir.y * dir.y);
        return sl;
    };
    Utilit.setSpOnParentCenter = function (sp) {
        if (null == sp.parent)
            return;
        var psp = sp.parent;
        var x = 0;
        var y = 0;
        var x = x - sp.width / 2 * sp.scaleX + psp.width / 2;
        var y = y - sp.height / 2 * sp.scaleY + psp.height / 2;
        sp.x = x;
        sp.y = y;
    };
    Utilit.getPointToLineDistance = function (x, y, LineStart, LineEnd) {
        var toStartDir = new Laya.Point(x - LineStart.x, y - LineStart.y);
        var toEndDir = new Laya.Point(x - LineEnd.x, y - LineEnd.y);
        var lineDir = new Laya.Point(LineEnd.x - LineStart.y, LineEnd.y - LineStart.y);
        var dotToStartDir = (lineDir.x * toStartDir.x) + (lineDir.y * toStartDir.y);
        if (dotToStartDir <= 0) {
            return toStartDir.distance(0, 0);
        }
        var dotToEndDir = (lineDir.x * toEndDir.x) + (lineDir.y * toEndDir.y);
        if (dotToEndDir <= 0) {
            return toEndDir.distance(0, 0);
        }
        var toStartDis = toStartDir.distance(0, 0);
        var lineDirDis = lineDir.distance(0, 0);
        var cos = dotToStartDir / (toStartDis * lineDirDis);
        var radians = Math.acos(cos);
        var dis = Math.sin(radians) * toStartDis;
        return dis;
    };
    Utilit.isIphoneX = function () {
        if (!Laya.Browser.onIPhone)
            return false;
        var rate = 828 / 1792;
        if ((Laya.Browser.width / Laya.Browser.height <= rate) || (Laya.Browser.height / Laya.Browser.width <= rate)) {
            return true;
        }
        // if((Laya.Browser.width == 2436 && Laya.Browser.height == 1125) 
        //     || (Laya.Browser.height == 2436 && Laya.Browser.width == 1125))
        // {
        //     return true
        // }
        return false;
    };
    Utilit.isIphone = function () {
        return Laya.Browser.onIPhone;
    };
    Utilit.getChild = function (node, name) {
        for (var i = 0; i < node.numChildren; ++i) {
            var child = node.getChildAt(i);
            if (child.name == name) {
                return child;
            }
            else {
                var target = Utilit.getChild(child, name);
                if (target)
                    return target;
            }
        }
        return null;
    };
    Utilit.forEachChild = function (node, each) {
        for (var i = 0; i < node.numChildren; ++i) {
            var child = node.getChildAt(i);
            each(child);
            Utilit.forEachChild(child, each);
        }
    };
    Utilit.OriginStageWidth = 1334;
    Utilit.OriginStageHeight = 750;
    Utilit.grayscaleMat = [0.3086, 0.6094, 0.0820, 0, 0,
        0.3086, 0.6094, 0.0820, 0, 0,
        0.3086, 0.6094, 0.0820, 0, 0,
        0, 0, 0, 1, 0];
    Utilit.grayscaleFilter = new Laya.ColorFilter(Utilit.grayscaleMat);
    Utilit.poinDown = new Laya.Point(0, -1);
    Utilit.poinUp = new Laya.Point(0, 1);
    return Utilit;
}());
exports.default = Utilit;
},{}],65:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var User_1 = require("../../User/User");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var ActorSkinBox = /** @class */ (function (_super) {
    __extends(ActorSkinBox, _super);
    function ActorSkinBox() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._data = null;
        return _this;
    }
    ActorSkinBox.prototype.onAwake = function () {
        this._selectBg = this.owner.getChildByName("Select");
        this._unlockBg = this.owner.getChildByName("Unlock");
        this._luckBg = this.owner.getChildByName("Lock");
        this._showSkin = this.owner.getChildByName("ShowSkin");
        this._crystalUnlockBtn = this.owner.getChildByName("CrystalUnlockBtn");
        this._crystalCostText = this._crystalUnlockBtn.getChildByName("Text");
        this._vedioUnlockBtn = this.owner.getChildByName("VedioUnlockBtn");
        this._vedioCostText = this._vedioUnlockBtn.getChildByName("Text");
    };
    ActorSkinBox.prototype.onEnable = function () {
        this._unlockBg.on(Laya.Event.CLICK, this, this.onSpClick);
        this._crystalUnlockBtn.on(Laya.Event.CLICK, this, this.onCrystalUnlockBtn);
        this._vedioUnlockBtn.on(Laya.Event.CLICK, this, this.onVedioUnlockBtn);
    };
    ActorSkinBox.prototype.onDisable = function () {
        this._unlockBg.off(Laya.Event.CLICK, this, this.onSpClick);
        this._crystalUnlockBtn.off(Laya.Event.CLICK, this, this.onCrystalUnlockBtn);
        this._vedioUnlockBtn.off(Laya.Event.CLICK, this, this.onVedioUnlockBtn);
    };
    ActorSkinBox.prototype.setData = function (data) {
        this._data = data;
        this._showSkin.loadImage("subRes/player/" + data.skinIndex + ".png");
        this._selectBg.visible = false;
        this._unlockBg.visible = false;
        this._luckBg.visible = false;
        this._crystalUnlockBtn.visible = false;
        this._vedioUnlockBtn.visible = false;
        if (null != this._data) {
            if (User_1.default.actorSkinIsUnlock(this._data.skinIndex)) {
                if (User_1.default.getCurActorSkin() == this._data.skinIndex) {
                    this._selectBg.visible = true;
                }
                else {
                    this._unlockBg.visible = true;
                }
            }
            else {
                this._luckBg.visible = true;
                if (this._data.costDiamond > 0) {
                    this._crystalUnlockBtn.visible = true;
                    this._crystalCostText.text = String(this._data.costDiamond);
                }
                else if (this._data.vedio > 0) {
                    this._vedioUnlockBtn.visible = true;
                    this._vedioCostText.text = "0/" + String(this._data.vedio);
                }
            }
        }
    };
    ActorSkinBox.prototype.onSpClick = function () {
        if (null != this._data && User_1.default.actorSkinIsUnlock(this._data.skinIndex)) {
            User_1.default.setCurActorSkin(this._data.skinIndex);
        }
    };
    ActorSkinBox.prototype.onCrystalUnlockBtn = function () {
        if (null != this._data
            && this._data.costDiamond > 0
            && User_1.default.getCrystal() >= this._data.costDiamond) {
            User_1.default.subCrystal(this._data.costDiamond);
            var skinIndex = this._data.skinIndex;
            if (User_1.default.unlockActorSkin(skinIndex)) {
                User_1.default.setCurActorSkin(skinIndex);
            }
        }
    };
    ActorSkinBox.prototype.onVedioUnlockBtn = function () {
        if (null != this._data && this._data.vedio > 0) {
            var skinIndex = this._data.skinIndex;
            QQMiniGameAPI_1.default.showRewardedVideoAd(function (ok) {
                if (ok) {
                    if (User_1.default.unlockActorSkin(skinIndex)) {
                        User_1.default.setCurActorSkin(skinIndex);
                    }
                }
            }, function () {
            });
        }
    };
    return ActorSkinBox;
}(Laya.Script));
exports.default = ActorSkinBox;
},{"../../QQMiniGameAPI":56,"../../User/User":63}],66:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var Utilit_1 = require("../../Utilit");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var ActorSkinBox_1 = require("./ActorSkinBox");
var SkinConfig_1 = require("../../Config/SkinConfig");
var User_1 = require("../../User/User");
var CachedQQBannerAd_1 = require("../../CachedQQBannerAd");
var ActorSkinView = /** @class */ (function (_super) {
    __extends(ActorSkinView, _super);
    function ActorSkinView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ActorSkinView.prototype.onAwake = function () {
        this._topZone = this.owner.getChildByName("TopZone");
        if (Utilit_1.default.isIphoneX()) {
            this._topZone.top = 70;
        }
        this._crystalText = this._topZone.getChildByName("Crystal").getChildByName("Text");
        this._energyText = this._topZone.getChildByName("Energy").getChildByName("Text");
        this._closeBtn = this._topZone.getChildByName("CloseBtn");
        this._centerZone = this.owner.getChildByName("CenterZone");
        this._skinStateList = this._centerZone.getChildByName("List");
        this._skinStateList.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);
        this._skinStateList.hScrollBarSkin = "";
    };
    ActorSkinView.prototype.addEvent = function () {
        this._closeBtn.on(Laya.Event.CLICK, this, this.closeView);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_OnUserCrystalChange, this, this.onCrystalChange);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_OnUserEnergyChange, this, this.onEnergyChange);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_OnUserUnlockActorSkin, this, this.refreshActorSkinStateList);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_OnUserActorSkinChange, this, this.refreshActorSkinStateList);
    };
    ActorSkinView.prototype.removeEvent = function () {
        this._closeBtn.on(Laya.Event.CLICK, this, this.closeView);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Game_OnUserCrystalChange, this, this.onCrystalChange);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Game_OnUserEnergyChange, this, this.onEnergyChange);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Game_OnUserUnlockActorSkin, this, this.refreshActorSkinStateList);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Game_OnUserActorSkinChange, this, this.refreshActorSkinStateList);
    };
    ActorSkinView.prototype.openView = function (data) {
        _super.prototype.openView.call(this, data);
        this.refreshActorSkinStateList();
        CachedQQBannerAd_1.default.hide();
        var currentSkinIndex = User_1.default.getCurActorSkin();
        for (var i = 0; i < this._skinStateList.array.length; ++i) {
            if (this._skinStateList.array[i].skinIndex == currentSkinIndex) {
                this._skinStateList.scrollTo(i);
                break;
            }
        }
        this._crystalText.text = String(User_1.default.getCrystal());
        this._energyText.text = String(User_1.default.getEnergy());
    };
    ActorSkinView.prototype.onCrystalChange = function (para) {
        var curr = para.curr;
        var last = para.last;
        this._crystalText.text = String(curr);
    };
    ActorSkinView.prototype.onEnergyChange = function (para) {
        var curr = para.curr;
        var last = para.last;
        this._energyText.text = String(curr);
    };
    ActorSkinView.prototype.onListRender = function (cell, index) {
        var data = this._skinStateList.array[index];
        var box = cell.getComponent(ActorSkinBox_1.default);
        box.setData(data);
    };
    ActorSkinView.prototype.refreshActorSkinStateList = function () {
        var skinDatas = SkinConfig_1.default.getInstance().getSkinConfigDatas();
        var dataArray = new Array();
        for (var i = 0; i < skinDatas.length; ++i) {
            var data = skinDatas[i].clone();
            dataArray.push(data);
        }
        this._skinStateList.array = dataArray;
    };
    return ActorSkinView;
}(ViewBase_1.default));
exports.default = ActorSkinView;
},{"../../CachedQQBannerAd":3,"../../Config/SkinConfig":8,"../../Event/EventDef":9,"../../Event/EventMgr":10,"../../User/User":63,"../../Utilit":64,"../ViewBase":110,"./ActorSkinBox":65}],67:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SoundMgr_1 = require("../Mgr/SoundMgr");
var ButtonAnim = /** @class */ (function (_super) {
    __extends(ButtonAnim, _super);
    function ButtonAnim() {
        var _this = _super.call(this) || this;
        _this.useSound = true;
        return _this;
    }
    ButtonAnim.prototype.onAwake = function () {
        this.owner.on(Laya.Event.MOUSE_DOWN, this, this.onDown);
        this.owner.on(Laya.Event.MOUSE_UP, this, this.onUp);
        this.owner.on(Laya.Event.MOUSE_OUT, this, this.onUp);
    };
    ButtonAnim.prototype.onDisable = function () {
        this.owner.offAll();
        Laya.Tween.clearAll(this);
    };
    ButtonAnim.prototype.onDown = function () {
        Laya.Tween.to(this.owner, { scaleX: 0.9, scaleY: 0.9 }, 50);
        if (this.useSound) {
            SoundMgr_1.default.instance.playSound("anniu");
        }
    };
    ButtonAnim.prototype.onUp = function () {
        Laya.Tween.to(this.owner, { scaleX: 1, scaleY: 1 }, 50);
    };
    return ButtonAnim;
}(Laya.Script));
exports.default = ButtonAnim;
},{"../Mgr/SoundMgr":47}],68:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../View/ViewBase");
var EventDef_1 = require("../../Event/EventDef");
var EventMgr_1 = require("../../Event/EventMgr");
var CachedWXBannerAd_1 = require("../../CachedWXBannerAd");
/**
 * 狂点窗口使用范例如下
    //首先判断狂点功能开关WudianMgr.WudianFlag是否打开，如果没打开就直接跳过整个逻辑
    WudianMgr.GetIpBlockState();//在游戏里初始化的时候调用这个方法初始化Ip屏蔽flag
    //将这段代码插入需要调用狂点窗口的地方
    let data : any = {};
    //狂点逻辑完成后的回调方法
    data.Complete = function(){
        console.log("狂点按钮结束");//在这里写入狂点窗口结束后需要调用的逻辑，例如弹出结算页面
    }
    // 完成点击之后获得的奖励数量，依照各项目不同自行实现
    data.PrizeCount = 30;
    // 在调用窗口前必须关闭当前正在显示的官方Banner广告，这个窗口才能正常运行，具体的逻辑各人需自行实现
    // 而且关闭官方Banner可以稍微提早一些，避免频繁调用出错或者不稳定
    Event_PK_Mgr.instance.dispatch(Event_PK_Def.AD_CloseBanner, true);//这句代码是我用来关闭官方Banner，各项目自行实现
    ViewMgr.instance.openView(ViewDef.ClickGetPrize,data);
 *
 * @export
 * @class ClickGetPrize
 * @extends {ViewBase}
 */
var ClickGetPrize = /** @class */ (function (_super) {
    __extends(ClickGetPrize, _super);
    function ClickGetPrize() {
        var _this = _super.call(this) || this;
        _this._totalClickTimer = 22; //用户一直没中套路，那么点击了这么多次都还是让他继续玩下去，不要卡死程序
        _this._needClickTime = 10; //一共点多少次能够获得奖励，用于显示进度条
        _this._bannerClickTime = 7; //点多少次开始显示bannerr套路用户，可微调    
        return _this;
    }
    // private _wudianLoadFlag: boolean;
    ClickGetPrize.prototype.onAwake = function () {
        this._click_Btn = this.owner.getChildByName("Click_Btn");
        this._click_Btn.on(Laya.Event.CLICK, this, this.ButtonClicked);
        this._arrow_Img = this._click_Btn.getChildByName("Arrow_Img");
        this._bg = this.owner.getChildByName("BG");
        this._open_Btn = this._bg.getChildByName("Open_Btn");
        this._getPrize_View = this.owner.getChildByName("GetPrize_View");
        this._prizeCount_Text = this._getPrize_View.getChildByName("PrizeCount_Text");
        this._confirm_Btn = this._getPrize_View.getChildByName("Confirm_Btn");
        this._getPrize_View.visible = false;
        this._clickTime_PBar = this._bg.getChildByName("ClickTime_PBar");
        this._clickTime_PBar$Bar = this._clickTime_PBar.getChildByName("ClickTime_PBar$Bar");
        this._clickBarOriginalWidth = this._clickTime_PBar$Bar.width;
        this._bannerAd_View = this.owner.getChildByName("BannerAd_View");
        this._clickTime_PBar$Bar.width = 0;
        this._clickTime = 0;
        this._totalClickTime = 0;
        //EventMgr.instance.regOnceEvent(EventDef.AD_WudianBanner_LoadComplete, this, this.WudianLoadComplete);
    };
    ClickGetPrize.prototype.onUpdate = function () {
        /* 箭头上下移动 */
        if (this._arrowUp) {
            this._arrow_Img.top += Laya.timer.delta / 5;
            if (this._arrow_Img.top > -140) {
                this._arrowUp = false;
            }
        }
        else {
            this._arrow_Img.top -= Laya.timer.delta / 5;
            if (this._arrow_Img.top < -180) {
                this._arrowUp = true;
            }
        }
        /* 按钮不按，进度条自动退回 */
        if (!this._bannerClicked) {
            var spd = 2 + (this._clickTime_PBar$Bar.width / this._clickBarOriginalWidth) * 6;
            if (this._clickTime_PBar$Bar.width >= spd) {
                this._clickTime_PBar$Bar.width -= spd;
            }
            if ((this._clickTime_PBar$Bar.width / this._clickBarOriginalWidth) + 0.1 < (this._clickTime / this._needClickTime)) {
                this._clickTime--;
            }
        }
        // else {
        //     if (this._clickTime_PBar$Bar.width <= this._clickBarOriginalWidth) {
        //         this._clickTime_PBar$Bar.width += 2;
        //         if (this._clickTime_PBar$Bar.width > this._clickBarOriginalWidth) {
        //             this._clickTime_PBar$Bar.width = this._clickBarOriginalWidth
        //         }
        //     }
        // }
    };
    /**
     * 打开Banner
     *
     * @param {*} [data]
     * @memberof ClickGetPrize
     */
    ClickGetPrize.prototype.openView = function (data) {
        this._compeletFunction = data.Complete;
        this._prizeCount = data.PrizeCount;
        _super.prototype.openView.call(this, data);
    };
    /**
     * 用户成功获得奖励
     *
     * @memberof ClickGetPrize
     */
    ClickGetPrize.prototype.OpenPrizeWindow = function () {
        this._bg.visible = false;
        var self = this;
        this._prizeCount_Text.text = this._prizeCount.toString();
        this._getPrize_View.visible = true;
        /* 确认按钮 */
        this._confirm_Btn.once(Laya.Event.CLICK, this, function () {
            if (self._compeletFunction) {
                self._compeletFunction();
            }
            self.closeView();
        });
    };
    /**
     * 误点预加载完成
     *
     * @memberof ClickGetPrize
     */
    // WudianLoadComplete() {
    //     console.log("WudianBanner预加载完毕");
    //     this._wudianLoadFlag = true;
    // }
    /**
     * 将Banner显示
     *
     * @memberof ClickGetPrize
     */
    ClickGetPrize.prototype.ShowBanner = function () {
        console.log("AD_WudianBanner_Show");
        CachedWXBannerAd_1.default.show();
    };
    /**
     * 狂点按钮逻辑
     *
     *
     * @memberof ClickGetPrize
     */
    ClickGetPrize.prototype.ButtonClicked = function () {
        this._clickTime++;
        this._totalClickTime++;
        //nanner一直没加载成功,保持进度条
        if (this._clickTime > this._needClickTime) {
            this._clickTime = this._needClickTime;
        }
        if (this._clickTime >= this._bannerClickTime /*&& this._wudianLoadFlag*/) {
            if (this._clickTime >= this._needClickTime) {
                this._clickTime = this._needClickTime - 1;
            }
            this._bannerClicked = true;
            console.log("误点Banner套路启动");
            //用户连点，出banner
            this.ShowBanner();
            Laya.timer.once(2000, this, function () {
                this.BannerClicked();
            });
        }
        //用户一直没被套路到，让他继续玩
        else if (this._totalClickTime > this._totalClickTimer) {
            console.log("用户一直没点到，放他一马", this._totalClickTime);
            this.BannerClicked();
        }
        var progress = (this._clickTime / this._needClickTime) * this._clickBarOriginalWidth;
        this._clickTime_PBar$Bar.width = progress;
    };
    /**
     * Banner已经点击之后，让用户获得奖励
     *
     * @memberof ClickGetPrize
     */
    ClickGetPrize.prototype.BannerClicked = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_WudianBanner_Hide);
        this._bannerClicked = true;
        this._clickTime = this._needClickTime;
        this._clickTime_PBar$Bar.width = this._clickBarOriginalWidth;
        this._click_Btn.visible = false;
        this._open_Btn.visible = true;
        // this._bannerAd_View.visible = false;
        // this._bannerAd_View.active = false;
        this.OpenPrizeWindow();
    };
    ClickGetPrize.prototype.onDestroy = function () {
        _super.prototype.onDestroy.call(this);
        CachedWXBannerAd_1.default.hide();
    };
    return ClickGetPrize;
}(ViewBase_1.default));
exports.default = ClickGetPrize;
},{"../../CachedWXBannerAd":4,"../../Event/EventDef":9,"../../Event/EventMgr":10,"../../View/ViewBase":110}],69:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../View/ViewBase");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var CachedQQBannerAd_1 = require("../../CachedQQBannerAd");
/**
 * 狂点窗口使用范例如下
    //首先判断狂点功能开关WudianMgr.WudianFlag是否打开，如果没打开就直接跳过整个逻辑
    WudianMgr.GetIpBlockState();//在游戏里初始化的时候调用这个方法初始化Ip屏蔽flag
    //将这段代码插入需要调用狂点窗口的地方
    let data : any = {};
    //狂点逻辑完成后的回调方法
    data.Complete = function(){
        console.log("狂点按钮结束");//在这里写入狂点窗口结束后需要调用的逻辑，例如弹出结算页面
    }
    // 完成点击之后获得的奖励数量，依照各项目不同自行实现
    data.PrizeCount = 30;
    // 在调用窗口前必须关闭当前正在显示的官方Banner广告，这个窗口才能正常运行，具体的逻辑各人需自行实现
    // 而且关闭官方Banner可以稍微提早一些，避免频繁调用出错或者不稳定
    EventMgr.instance.dispatch(EventDef.AD_CloseBanner, true);//这句代码是我用来关闭官方Banner，各项目自行实现
    ViewMgr.instance.openView(ViewDef.ClickGetPrize,data);
 *
 * @export
 * @class ClickGetPrize
 * @extends {ViewBase}
 */
var ClickGetPrize_2 = /** @class */ (function (_super) {
    __extends(ClickGetPrize_2, _super);
    function ClickGetPrize_2() {
        var _this = _super.call(this) || this;
        _this._totalClickTimer = 22; //用户一直没中套路，那么点击了这么多次都还是让他继续玩下去，不要卡死程序
        _this._needClickTime = 10; //一共点多少次能够获得奖励，用于显示进度条
        _this._bannerClickTime = 6; //点多少次开始显示bannerr套路用户，可微调    
        _this._arrowUp = false;
        _this._bannerClicked = false;
        _this._punchTimer = 0;
        return _this;
    }
    ClickGetPrize_2.prototype.onAwake = function () {
        var _this = this;
        // localStorage.clear();
        this._click1_Btn = this.owner.getChildByName("Click1_Btn");
        this._click1_Btn.on(Laya.Event.CLICK, this, this.ButtonClicked);
        this._click2_Btn = this.owner.getChildByName("Click2_Btn");
        this._click2_Btn.on(Laya.Event.CLICK, this, this.ButtonClicked);
        this._arrow_Img = this._click2_Btn.getChildByName("Arrow_Img");
        this._bg = this.owner.getChildByName("BG");
        // this._open_Btn = this._bg.getChildByName("Open_Btn") as Laya.Sprite;
        this._getPrize_View = this.owner.getChildByName("GetPrize_View");
        this._prizeCount_Text = this._getPrize_View.getChildByName("PrizeCount_Text");
        this._confirm_Btn = this._getPrize_View.getChildByName("Confirm_Btn");
        this._confirm_Btn.on(Laya.Event.CLICK, this, this.closeView);
        this._getPrize_View.visible = false;
        this._clickTime_PBar = this._bg.getChildByName("ClickTime_PBar");
        this._clickTime_PBar$Bar = this._clickTime_PBar.getChildByName("ClickTime_PBar$Bar");
        this._clickBarOriginalWidth = this._clickTime_PBar$Bar.width;
        this._bannerAd_View = this.owner.getChildByName("BannerAd_View");
        this._clickTime_PBar$Bar.width = 0;
        this._clickTime = 0;
        this._totalClickTime = 0;
        this._blockMask = this.owner.getChildByName("Block");
        //EventMgr.instance.regOnceEvent(EventDef.AD_WudianBanner_LoadComplete, this, this.WudianLoadComplete);
        this._punchSkeleton_Par = this.owner.getChildByName("Punck_Skeleton");
        this._punchSkeleton = new Laya.Skeleton();
        this._punchSkeleton.load("subRes/spine/Character/NewProject.sk", Laya.Handler.create(this, function () {
            _this._punchSkeleton_Par.addChild(_this._punchSkeleton);
            _this._punchSkeleton.play(0, true);
        }));
        this._clickSkeleton_Par = this._click1_Btn.getChildByName("ClickSkeleton_Par");
        this._clickSkeleton = new Laya.Skeleton();
        this._clickSkeleton.load("subRes/spine/Tip/NewProject.sk", Laya.Handler.create(this, function () {
            _this._clickSkeleton_Par.addChild(_this._clickSkeleton);
            _this._clickSkeleton.play(0, true);
        }));
        this._prize_Img = this._getPrize_View.getChildByName("Prize_Img");
        this._noPrize_Text = this._getPrize_View.getChildByName("NoPrize_Text");
    };
    ClickGetPrize_2.prototype.onUpdate = function () {
        /* 箭头上下移动 */
        if (this._arrowUp) {
            this._arrow_Img.top += Laya.timer.delta / 5;
            if (this._arrow_Img.top > -140) {
                this._arrowUp = false;
            }
        }
        else {
            this._arrow_Img.top -= Laya.timer.delta / 5;
            if (this._arrow_Img.top < -180) {
                this._arrowUp = true;
            }
        }
        if (this._punchTimer > 0) {
            this._punchTimer -= Laya.timer.delta;
            if (this._punchTimer <= 0) {
                this._punchSkeleton.play(0, true);
            }
        }
        /* 按钮不按，进度条自动退回 */
        if (!this._bannerClicked) {
            var spd = 2 + (this._clickTime_PBar$Bar.width / this._clickBarOriginalWidth) * 6;
            if (this._clickTime_PBar$Bar.width >= spd) {
                this._clickTime_PBar$Bar.width -= spd;
            }
            if ((this._clickTime_PBar$Bar.width / this._clickBarOriginalWidth) + 0.1 < (this._clickTime / this._needClickTime)) {
                this._clickTime--;
            }
        }
        // else {
        //     if (this._clickTime_PBar$Bar.width <= this._clickBarOriginalWidth) {
        //         this._clickTime_PBar$Bar.width += 2;
        //         if (this._clickTime_PBar$Bar.width > this._clickBarOriginalWidth) {
        //             this._clickTime_PBar$Bar.width = this._clickBarOriginalWidth
        //         }
        //     }
        // }
    };
    ClickGetPrize_2.prototype.punchPlay = function () {
        if (this._punchTimer > 0) {
            this._punchSkeleton.play(1, false);
        }
        else {
            this._punchSkeleton.play(0, true);
        }
    };
    ClickGetPrize_2.prototype.onShow = function () {
        this._compeletHander = this._data.CompleteHander;
        this._prizeCount = this._data.PrizeCount;
        this._clickType = this._data.ClickType;
        if (this._clickType == 2) {
            this._click1_Btn.visible = true;
            this._click2_Btn.visible = false;
        }
        else if (this._clickType == 1) {
            this._click1_Btn.visible = false;
            this._click2_Btn.visible = true;
        }
        CachedQQBannerAd_1.default.hide();
    };
    /**
     * 用户成功获得奖励
     *
     * @memberof ClickGetPrize
     */
    ClickGetPrize_2.prototype.OpenPrizeWindow = function () {
        var rate = AppSwitchConfig_1.default.getInstance().getAppSwitchData().skinPR;
        var bg = this._getPrize_View.getChildByName("bg");
        bg.visible = false;
        this._noPrize_Text.visible = false;
        this._bg.visible = false;
        // let rdRate = Math.random() * 100;
        // if (rdRate > rate) {
        //     this._prizeCount_Text.text = this._prizeCount.toString();
        //     // let owned = SkinMgr.Instance.CurrentSkinDate.Owned;
        //     User.getActorSkins()
        //     let skinIndex = 0;
        //     for (skinIndex = 0; skinIndex < owned.length; skinIndex++) {
        //         let o = owned[skinIndex];
        //         if (!o) {
        //             break;
        //         }
        //     }
        //     skinIndex = Math.min(skinIndex, owned.length - 1);
        //     // SkinMgr.Instance.UnLockSkin(skinIndex);
        //     // SkinMgr.Instance.SetCurrentSkin(skinIndex);
        //     // EventMgr.instance.dispatch(EventDef.Game_ChangeSkin, [skinIndex]);
        //     this._prize_Img.loadImage("subRes/player/" + skinIndex + ".png", Laya.Handler.create(this, () => {
        //         bg.visible = true;
        //         this._getPrize_View.visible = true;
        //     }));
        // }
        /* else */ {
            bg.visible = false;
            this._getPrize_View.getChildByName("Title").visible = false;
            this._prizeCount_Text.visible = false;
            this._noPrize_Text.visible = true;
            this._getPrize_View.visible = true;
        }
        /* 确认按钮 */
    };
    /**
     * 误点预加载完成
     *
     * @memberof ClickGetPrize
     */
    // WudianLoadComplete() {
    //     console.log("WudianBanner预加载完毕");
    //     this._wudianLoadFlag = true;
    // }
    /**
     * 将Banner显示
     *
     * @memberof ClickGetPrize
     */
    ClickGetPrize_2.prototype.ShowBanner = function () {
        console.log("AD_WudianBanner_Show");
        // CachedWXBannerAd.show();
        if (this._clickType == 2) {
            QQMiniGameAPI_1.default.showAppBoxAd(function () { }, function () { });
        }
        else if (this._clickType == 1) {
            CachedQQBannerAd_1.default.changeShow();
        }
    };
    ClickGetPrize_2.prototype.onClose = function () {
        if (this._compeletHander) {
            this._compeletHander.run();
        }
        CachedQQBannerAd_1.default.hide();
        // if (this._clickType == 2) {
        // }
        // else if (this._clickType == 1) {
        //     CachedQQBannerAd.hide();
        // }
        _super.prototype.onClose.call(this);
    };
    /**
     * 狂点按钮逻辑
     *
     *
     * @memberof ClickGetPrize
     */
    ClickGetPrize_2.prototype.ButtonClicked = function () {
        this._blockMask.visible = false;
        this._punchTimer = 320;
        this._punchSkeleton.play(1, true);
        this._clickTime++;
        this._totalClickTime++;
        //nanner一直没加载成功,保持进度条
        if (this._clickTime > this._needClickTime) {
            this._clickTime = this._needClickTime;
        }
        if (this._clickTime >= this._bannerClickTime /*&& this._wudianLoadFlag*/ && !this._bannerClicked) {
            if (this._clickTime >= this._needClickTime) {
                this._clickTime = this._needClickTime - 1;
            }
            this._bannerClicked = true;
            console.log("误点Banner套路启动");
            //用户连点，出banner
            this.ShowBanner();
            Laya.timer.once(2000, this, this.BannerClicked);
        }
        //用户一直没被套路到，让他继续玩
        else if (this._totalClickTime > this._totalClickTimer && !this._bannerClicked) {
            console.log("用户一直没点到，放他一马", this._totalClickTime);
            this.BannerClicked();
        }
        var progress = (this._clickTime / this._needClickTime) * this._clickBarOriginalWidth;
        this._clickTime_PBar$Bar.width = progress;
    };
    /**
     * Banner已经点击之后，让用户获得奖励
     *
     * @memberof ClickGetPrize
     */
    ClickGetPrize_2.prototype.BannerClicked = function () {
        this._bannerClicked = true;
        this._clickTime = this._needClickTime;
        this._clickTime_PBar$Bar.width = this._clickBarOriginalWidth;
        this._click1_Btn.visible = false;
        this._click2_Btn.visible = false;
        // this._open_Btn.visible = true;
        // this._bannerAd_View.visible = false;
        // this._bannerAd_View.active = false;
        this.OpenPrizeWindow();
    };
    return ClickGetPrize_2;
}(ViewBase_1.default));
exports.default = ClickGetPrize_2;
},{"../../CachedQQBannerAd":3,"../../Config/AppSwitchConfig":5,"../../QQMiniGameAPI":56,"../../View/ViewBase":110}],70:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BannerAdView_1 = require("../../ShareAd/View/BannerAdView");
var UniversalBottomZone = /** @class */ (function (_super) {
    __extends(UniversalBottomZone, _super);
    function UniversalBottomZone() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UniversalBottomZone.prototype.onAwake = function () {
        this._ownerSprite = this.owner;
        this._autoZone = this._ownerSprite.getChildByName("AutoZone");
        this._loopADZone = this._ownerSprite.getChildByName("LoopAD");
        this._bannerADZone = this._ownerSprite.getChildByName("BannerAD");
        this._bannerAd = this._bannerADZone.getComponent(BannerAdView_1.default);
    };
    UniversalBottomZone.prototype.onEnable = function () {
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            this._autoZone.bottom = this._loopADZone.height + this._bannerADZone.height;
            this._loopADZone.bottom = this._bannerADZone.height;
            this._bannerADZone.visible = true;
        }
        else {
            this._autoZone.bottom = this._loopADZone.height;
            this._loopADZone.bottom = 0;
            this._bannerADZone.visible = false;
        }
    };
    return UniversalBottomZone;
}(Laya.Script));
exports.default = UniversalBottomZone;
},{"../../ShareAd/View/BannerAdView":58}],71:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var User_1 = require("../../User/User");
var GameCommonConfig_1 = require("../../Config/GameCommonConfig");
var Utilit_1 = require("../../Utilit");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var CachedQQBannerAd_1 = require("../../CachedQQBannerAd");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var FreeRewardType;
(function (FreeRewardType) {
    FreeRewardType["None"] = "0";
    FreeRewardType["Crystal"] = "1";
    FreeRewardType["Energy"] = "2";
})(FreeRewardType = exports.FreeRewardType || (exports.FreeRewardType = {}));
var FreeRewardView = /** @class */ (function (_super) {
    __extends(FreeRewardView, _super);
    function FreeRewardView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._rewardTags = {};
        _this._curRewardType = FreeRewardType.None;
        _this._bannerClosed = false;
        return _this;
    }
    FreeRewardView.prototype.onAwake = function () {
        this._topZone = this.owner.getChildByName("TopZone");
        if (Utilit_1.default.isIphoneX()) {
            this._topZone.top = 70;
        }
        this._crystalText = this._topZone.getChildByName("Crystal").getChildByName("Text");
        this._energyText = this._topZone.getChildByName("Energy").getChildByName("Text");
        this._centerZone = this.owner.getChildByName("CenterZone");
        this._rewardBtn = this._centerZone.getChildByName("RewardBtn");
        this._rewardText = this._centerZone.getChildByName("RewardText");
        this._closeBtn = this._centerZone.getChildByName("CloseBtn");
        this._rewardTags[FreeRewardType.Crystal] = this._centerZone.getChildByName("CrystalTag");
        this._rewardTags[FreeRewardType.Energy] = this._centerZone.getChildByName("EnergyTag");
        this.showTag(FreeRewardType.None);
        if (ViewMgr_1.default.instance.getView(ViewMgr_1.ViewDef.GameMainView) != null) {
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_SwitchBanner, [false]);
            this._bannerClosed = true;
        }
        if (ViewMgr_1.default.instance.getView(ViewMgr_1.ViewDef.GameOverView) != null) {
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_SwitchBanner, [false]);
            this._bannerClosed = true;
        }
    };
    FreeRewardView.prototype.addEvent = function () {
        this._rewardBtn.on(Laya.Event.CLICK, this, this.onRewardBtn);
        this._closeBtn.on(Laya.Event.CLICK, this, this.closeView);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_OnUserCrystalChange, this, this.onCrystalChange);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_OnUserEnergyChange, this, this.onEnergyChange);
    };
    FreeRewardView.prototype.removeEvent = function () {
        this._rewardBtn.off(Laya.Event.CLICK, this, this.onRewardBtn);
        this._closeBtn.off(Laya.Event.CLICK, this, this.closeView);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Game_OnUserCrystalChange, this, this.onCrystalChange);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Game_OnUserEnergyChange, this, this.onEnergyChange);
    };
    FreeRewardView.prototype.onShow = function () {
        this._curRewardType = null == this._data.rewardType ? FreeRewardType.None : this._data.rewardType;
        switch (this._curRewardType) {
            case FreeRewardType.Crystal:
                this._rewardText.text = "x" + GameCommonConfig_1.default.getInstance().getGameConfigData().freeDiamond;
                break;
            case FreeRewardType.Energy:
                this._rewardText.text = "x" + GameCommonConfig_1.default.getInstance().getGameConfigData().freeEnergy;
                break;
        }
        this.showTag(this._curRewardType);
        CachedQQBannerAd_1.default.hide();
        this._crystalText.text = String(User_1.default.getCrystal());
        this._energyText.text = String(User_1.default.getEnergy());
    };
    FreeRewardView.prototype.onCrystalChange = function (para) {
        var curr = para.curr;
        var last = para.last;
        this._crystalText.text = String(curr);
    };
    FreeRewardView.prototype.onEnergyChange = function (para) {
        var curr = para.curr;
        var last = para.last;
        this._energyText.text = String(curr);
    };
    FreeRewardView.prototype.onRewardBtn = function () {
        sessionStorage.setItem("reward-type","reward-Free");
            if (!is_rewarded_noFill) {
                this.onRewardBtn.visible = false;
                Laya.SoundManager.stopMusic();
                window.GlanceGamingAdInterface.showRewarededAd(rewardInstance); 
            } 
            else{
                 var rewardType = this._curRewardType;
        var rewardNum = 0;
        switch (this._curRewardType) {
            case FreeRewardType.Crystal:
                rewardNum = GameCommonConfig_1.default.getInstance().getGameConfigData().freeDiamond;
                break;
            case FreeRewardType.Energy:
                rewardNum = GameCommonConfig_1.default.getInstance().getGameConfigData().freeEnergy;
                break;
        }
                var url = "subRes/sound/bgm.ogg"
                Laya.SoundManager.playMusic(url,0);
                rewardInstance.destroyAd();
                this.onRewardBtn.visible = false;
                rewardInstance=window.GlanceGamingAdInterface.loadRewardedAd(rewardObj,FreeRewardView.prototype.rewardedCallbacks);
                sessionStorage.setItem("GiveFreeRewards",1);
            }
       
        var self = this;
        this._rewardBtn.visible = false;
        QQMiniGameAPI_1.default.showRewardedVideoAd(function (ok) {
            if (ok) {
                switch (rewardType) {
                    case FreeRewardType.Crystal:
                        User_1.default.addCrystal(rewardNum);
                        break;
                    case FreeRewardType.Energy:
                        User_1.default.addEnergy(rewardNum);
                        break;
                }
            }
            else {
            }
            self._rewardBtn.visible = true;
        }, function () {
            self._rewardBtn.visible = true;
        });
    };
    FreeRewardView.prototype.showTag = function (type) {
        for (var key in this._rewardTags) {
            var tag = this._rewardTags[key];
            tag.visible = (type == key);
        }
    };
    FreeRewardView.prototype.onClose = function () {
        _super.prototype.onClose.call(this);
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_SwitchBanner, [true]);
    };
    return FreeRewardView;
}(ViewBase_1.default));
exports.default = FreeRewardView;
},{"../../CachedQQBannerAd":3,"../../Config/GameCommonConfig":6,"../../Event/EventDef":9,"../../Event/EventMgr":10,"../../Mgr/ViewMgr":48,"../../QQMiniGameAPI":56,"../../User/User":63,"../../Utilit":64,"../ViewBase":110}],72:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var Utilit_1 = require("../../Utilit");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var LevelConfig_1 = require("../../Config/LevelConfig");
var User_1 = require("../../User/User");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var GameMgr_1 = require("../../Mgr/GameMgr");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
;
var CachedWXBannerAd_1 = require("../../CachedWXBannerAd");
var WudianMgr_1 = require("../../Mgr/WudianMgr");
var FreeRewardView_1 = require("../FreeReward/FreeRewardView");
var CachedQQBannerAd_1 = require("../../CachedQQBannerAd");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var GameOver = /** @class */ (function (_super) {
    __extends(GameOver, _super);
    function GameOver() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GameOver.prototype.onAwake = function () {
        this._topZone = this.owner.getChildByName("TopZone");
        if (Utilit_1.default.isIphoneX()) {
            this._topZone.top = 70;
        }
        this._crystalText = this._topZone.getChildByName("Crystal").getChildByName("Text");
        this._energyText = this._topZone.getChildByName("Energy").getChildByName("Text");
        this._levelCompleted = this._topZone.getChildByName("COMP");
        this._levelFailed = this._topZone.getChildByName("FAIL");
        this._buttons = this.owner.getChildByName("Buttons");
        this._centerZone = this.owner.getChildByName("CenterZone");
        this._backBtn = this._buttons.getChildByName("BackBtn");
        this._nextBtn = this._buttons.getChildByName("NextBtn");
        this._shareBtn = this._buttons.getChildByName("ShareBtn");
        this._shareBtn.visible = false;
        this._winTag = this._centerZone.getChildByName("LoopAD").getChildByName("WinTag");
        this._loseTag = this._centerZone.getChildByName("LoopAD").getChildByName("LoseTag");
        this._nextBtnWinTag = this._nextBtn.getChildByName("win");
        this._nextBtnLoseTag = this._nextBtn.getChildByName("lose");
        this._banner = this.owner.getChildByName("BannerAD");
        // ALD.aldSendOnlySingleReport(ALDEventDef.EnterGameComplateView);
    };
    GameOver.prototype.addEvent = function () {
        this._backBtn.on(Laya.Event.CLICK, this, this.onBackBtn);
        this._nextBtn.on(Laya.Event.CLICK, this, this.onNextBtn);
        this._shareBtn.on(Laya.Event.CLICK, this, this.onShareBtn);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_OnUserCrystalChange, this, this.onCrystalChange);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_OnUserEnergyChange, this, this.onEnergyChange);
    };
    GameOver.prototype.removeEvent = function () {
        this._backBtn.off(Laya.Event.CLICK, this, this.onBackBtn);
        this._nextBtn.off(Laya.Event.CLICK, this, this.onNextBtn);
        this._shareBtn.off(Laya.Event.CLICK, this, this.onShareBtn);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Game_OnUserCrystalChange, this, this.onCrystalChange);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Game_OnUserEnergyChange, this, this.onEnergyChange);
    };
    GameOver.prototype.onShow = function () {
        var _this = this;
        CachedQQBannerAd_1.default.hide();
        this._levelCompleted.visible = this._data.isWin;
        this._levelFailed.visible = !this._data.isWin;
        this._winTag.visible = this._data.isWin;
        this._loseTag.visible = !this._data.isWin;
        this._nextBtnWinTag.visible = this._data.isWin;
        this._nextBtnLoseTag.visible = !this._data.isWin;
        this._crystalText.text = String(User_1.default.getCrystal());
        this._energyText.text = String(User_1.default.getEnergy());
        if (WudianMgr_1.default.AutoBoxFlag) {
            if (WudianMgr_1.default.WeiYiFlag) {
                this._buttons.bottom = 0;
            }
            QQMiniGameAPI_1.default.showAppBoxAd(function () {
                if (WudianMgr_1.default.WeiYiFlag) {
                    _this.InduceClick();
                }
                else {
                    CachedQQBannerAd_1.default.changeShow();
                }
            }, function () {
                if (WudianMgr_1.default.WeiYiFlag) {
                    _this.InduceClick();
                }
                else {
                    CachedQQBannerAd_1.default.changeShow();
                }
            });
        }
        else {
            if (WudianMgr_1.default.WeiYiFlag) {
                CachedQQBannerAd_1.default.hide();
                this.InduceClick();
            }
            else {
                CachedQQBannerAd_1.default.changeShow();
            }
        }
        _super.prototype.onShow.call(this);
    };
    GameOver.prototype.InduceClick = function () {
        this._buttons.bottom = 0;
        this._buttons.mouseEnabled = false;
        var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer * 1000;
        var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer * 1000;
        Laya.timer.once(bannerMoveTimer, this, this.InduceMethod);
        Laya.timer.once(btnMoveTimer, this, this.MoveUp);
    };
    GameOver.prototype.InduceMethod = function () {
        CachedQQBannerAd_1.default.changeShow();
    };
    GameOver.prototype.MoveUp = function () {
        this._buttons.mouseEnabled = true;
        /* if (AdvertisementView.ShowBothAd) {
            this._buttons.bottom = 500;
        }
        else */ {
            this._buttons.bottom = 250;
        }
    };
    GameOver.prototype.onCrystalChange = function (para) {
        var curr = para.curr;
        var last = para.last;
        this._crystalText.text = String(curr);
    };
    GameOver.prototype.onEnergyChange = function (para) {
        var curr = para.curr;
        var last = para.last;
        this._energyText.text = String(curr);
    };
    GameOver.prototype.onBackBtn = function () {
        var self = this;
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.GameMainView, /* {
            closeFunction: () => {
                ViewMgr.instance.openView(ViewDef.GameMainView);
            }
        } */ null, function () {
            self.closeView();
        });
        //todo:销毁游戏
    };
    GameOver.prototype.onNextBtn = function () {
        var _this = this;
        var levelNum = this._data.levelNum;
        if (this._data.isWin) {
            var levelNum = this._data.levelNum + 1;
        }
        var data = LevelConfig_1.default.getInstance().getLevelConfigDataByLevelNum(levelNum);
        if (null != data) {
            if (1 == data.vedioCostNoEnergy) {
                QQMiniGameAPI_1.default.showRewardedVideoAd(function (ok) {
                    if (ok) {
                        //不消耗体力开局
                        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_StartGame, {
                            levelNum: data.levelNum,
                            costEnergy: data.costEnergy * 0,
                            crystalReward: data.getDiamond,
                        });
                        _this.closeView();
                    }
                    else {
                        if (User_1.default.getEnergy() < data.costEnergy) {
                            ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.FreeRewardView, {
                                rewardType: FreeRewardView_1.FreeRewardType.Energy
                            });
                            // ViewMgr.instance.showTips("体力不足");
                            return;
                        }
                        //正常开局
                        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_StartGame, {
                            levelNum: data.levelNum,
                            costEnergy: data.costEnergy,
                            crystalReward: data.getDiamond,
                        });
                        _this.closeView();
                    }
                }, function () {
                    if (User_1.default.getEnergy() < data.costEnergy) {
                        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.FreeRewardView, {
                            rewardType: FreeRewardView_1.FreeRewardType.Energy
                        });
                        // ViewMgr.instance.showTips("体力不足");
                        return;
                    }
                    //正常开局
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_StartGame, {
                        levelNum: data.levelNum,
                        costEnergy: data.costEnergy,
                        crystalReward: data.getDiamond,
                    });
                    _this.closeView();
                });
            }
            else if (1 == data.vedioDoubleDiamond) {
                if (User_1.default.getEnergy() < data.costEnergy) {
                    ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.FreeRewardView, {
                        rewardType: FreeRewardView_1.FreeRewardType.Energy
                    });
                    // ViewMgr.instance.showTips("体力不足");
                    return;
                }
                QQMiniGameAPI_1.default.showRewardedVideoAd(function (ok) {
                    if (ok) {
                        //双倍奖励开局
                        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_StartGame, {
                            levelNum: data.levelNum,
                            costEnergy: data.costEnergy,
                            crystalReward: data.getDiamond * 2,
                        });
                        _this.closeView();
                    }
                    else {
                        //正常开局
                        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_StartGame, {
                            levelNum: data.levelNum,
                            costEnergy: data.costEnergy,
                            crystalReward: data.getDiamond,
                        });
                    }
                    _this.closeView();
                }, function () {
                    //正常开局
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_StartGame, {
                        levelNum: data.levelNum,
                        costEnergy: data.costEnergy,
                        crystalReward: data.getDiamond,
                    });
                    _this.closeView();
                });
            }
            else {
                if (User_1.default.getEnergy() < data.costEnergy) {
                    ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.FreeRewardView, {
                        rewardType: FreeRewardView_1.FreeRewardType.Energy
                    });
                    // ViewMgr.instance.showTips("体力不足");
                    return;
                }
                //正常开局
                EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_StartGame, {
                    levelNum: data.levelNum,
                    costEnergy: data.costEnergy,
                    crystalReward: data.getDiamond,
                });
                this.closeView();
            }
        }
    };
    GameOver.prototype.onShareBtn = function () {
        QQMiniGameAPI_1.default.share(function (ok) {
        }, "", "");
    };
    GameOver.prototype.onClose = function () {
        GameMgr_1.default.getInstance().saveGameData();
        CachedWXBannerAd_1.default.hide();
        _super.prototype.onClose.call(this);
    };
    return GameOver;
}(ViewBase_1.default));
exports.default = GameOver;
},{"../../CachedQQBannerAd":3,"../../CachedWXBannerAd":4,"../../Config/AppSwitchConfig":5,"../../Config/LevelConfig":7,"../../Event/EventDef":9,"../../Event/EventMgr":10,"../../Mgr/GameMgr":46,"../../Mgr/ViewMgr":48,"../../Mgr/WudianMgr":50,"../../QQMiniGameAPI":56,"../../User/User":63,"../../Utilit":64,"../FreeReward/FreeRewardView":71,"../ViewBase":110}],73:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var Utilit_1 = require("../../Utilit");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var User_1 = require("../../User/User");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var WudianMgr_1 = require("../../Mgr/WudianMgr");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var GameRewardView = /** @class */ (function (_super) {
    __extends(GameRewardView, _super);
    function GameRewardView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GameRewardView.prototype.onAwake = function () {
        this._topZone = this.owner.getChildByName("TopZone");
        if (Utilit_1.default.isIphoneX()) {
            this._topZone.top = 70;
        }
        this._crystalText = this._topZone.getChildByName("Crystal").getChildByName("Text");
        this._energyText = this._topZone.getChildByName("Energy").getChildByName("Text");
        this._centerZone = this.owner.getChildByName("CenterZone");
        this._rewardBtn = this._centerZone.getChildByName("RewardBtn");
        this._moreRewardBtn = this._centerZone.getChildByName("MoreRewardBtn");
        this._rewardText = this._centerZone.getChildByName("RewardText");
    };
    GameRewardView.prototype.onStart = function () {
        var _this = this;
        if (WudianMgr_1.default.GetIpBlocked()) {
            var time = AppSwitchConfig_1.default.getInstance().getAppSwitchData().continueBtnDelayTime;
            if (time > 0) {
                if (time < 100) {
                    time *= 1000;
                }
                this._rewardBtn.visible = false;
                Laya.timer.once(time, this, function () {
                    _this._rewardBtn.visible = true;
                });
            }
        }
    };
    GameRewardView.prototype.addEvent = function () {
        this._rewardBtn.on(Laya.Event.CLICK, this, this.onRewardBtn);
        this._moreRewardBtn.on(Laya.Event.CLICK, this, this.onMoreRewardBtn);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_OnUserCrystalChange, this, this.onCrystalChange);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_OnUserEnergyChange, this, this.onEnergyChange);
    };
    GameRewardView.prototype.removeEvent = function () {
        this._rewardBtn.off(Laya.Event.CLICK, this, this.onRewardBtn);
        this._moreRewardBtn.off(Laya.Event.CLICK, this, this.onMoreRewardBtn);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Game_OnUserCrystalChange, this, this.onCrystalChange);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Game_OnUserEnergyChange, this, this.onEnergyChange);
    };
    GameRewardView.prototype.onShow = function () {
        this._rewardText.text = "X" + this._data.rewardNum;
        this._crystalText.text = String(User_1.default.getCrystal());
        this._energyText.text = String(User_1.default.getEnergy());
    };
    GameRewardView.prototype.onCrystalChange = function (para) {
        var curr = para.curr;
        var last = para.last;
        this._crystalText.text = String(curr);
    };
    GameRewardView.prototype.onEnergyChange = function (para) {
        var curr = para.curr;
        var last = para.last;
        this._energyText.text = String(curr);
    };
    GameRewardView.prototype.onRewardBtn = function () {
        User_1.default.addCrystal(this._data.rewardNum);
        this.closeView();
    };
    GameRewardView.prototype.onMoreRewardBtn = function () {
        // alert("reward")
        console.log(is_replay_noFill);
                if (!is_replay_noFill) {
                    sessionStorage.setItem("reward-type","replay-RP");
                    window.GlanceGamingAdInterface.showRewarededAd(replayInstance);
                }else{
                    if(replayInstance != undefined)
                    replayInstance.destroyAd();
                    replayInstance=window.GlanceGamingAdInterface.loadRewardedAd(replayObj, GameRewardView.prototype.rewardedCallbacks);
                } 
        var self = this;
        this._moreRewardBtn.visible = false;
        this._rewardBtn.visible = false;
        QQMiniGameAPI_1.default.showRewardedVideoAd(function (ok) {
            if (ok) {
                User_1.default.addCrystal(self._data.rewardNum * 3);
            }
            else {
                User_1.default.addCrystal(self._data.rewardNum);
            }
            self.closeView();
        }, function () {
            User_1.default.addCrystal(self._data.rewardNum);
            self.closeView();
        });
    };
    GameRewardView.prototype.onClose = function () {
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.GameOverView, {
            isWin: true,
            levelNum: this._data.levelNum
        });
        _super.prototype.onClose.call(this);
    };
    return GameRewardView;
}(ViewBase_1.default));
exports.default = GameRewardView;
},{"../../Config/AppSwitchConfig":5,"../../Event/EventDef":9,"../../Event/EventMgr":10,"../../Mgr/ViewMgr":48,"../../Mgr/WudianMgr":50,"../../QQMiniGameAPI":56,"../../User/User":63,"../../Utilit":64,"../ViewBase":110}],74:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var Utilit_1 = require("../../Utilit");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var GameMgr_1 = require("../../Mgr/GameMgr");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var TouchCtr_1 = require("../../GameCore/TouchCtr");
var User_1 = require("../../User/User");
var WudianMgr_1 = require("../../Mgr/WudianMgr");
var CachedQQBannerAd_1 = require("../../CachedQQBannerAd");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var GameView = /** @class */ (function (_super) {
    __extends(GameView, _super);
    function GameView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(GameView, "Instance", {
        get: function () {
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameView.prototype, "CurrentScene", {
        get: function () {
            return this._currentScene;
        },
        enumerable: true,
        configurable: true
    });
    GameView.prototype.onAwake = function () {
        GameView._instance = this;
        this._topZone = this.owner.getChildByName("TopZone");
        if (Utilit_1.default.isIphoneX()) {
            this._topZone.top = 70;
        }
        this._exitBtn = this._topZone.getChildByName("ExitBtn");
        this._restartBtn = this._topZone.getChildByName("RestartBtn");
        this._skipBtn = this._topZone.getChildByName("SkipBtn");
        this._levelText = this._topZone.getChildByName("Level");
        // ALD.aldSendOnlySingleReport(ALDEventDef.EnterBattleView);
    };
    GameView.prototype.onUpdate = function () {
        if(sessionStorage.getItem("GiveRewardSL") == 1){
            sessionStorage.removeItem("GiveRewardSL");
            var _this = this;
            this._skipBtn.visible = false;
            QQMiniGameAPI_1.default.showRewardedVideoAd(function (ok) {
                if (ok) {
                    //todo:开始下一关游戏，设置当前关卡进度
                    _this.GameOver(true);
                }
                _this._skipBtn.visible = true;
            }, function () {
                _this._skipBtn.visible = true;
            })
       }
    };
    FreeRewardView.prototype.onUpdate = function () {
        if(sessionStorage.getItem("reward-Free") == 1){
            sessionStorage.removeItem("reward-Free");
            var _this = this;
            this._rewardBtn.visible = false;
            QQMiniGameAPI_1.default.showRewardedVideoAd(function (ok) {
                if (ok) {
                    //todo:开始下一关游戏，设置当前关卡进度
                    _this.GameOver(true);
                }
                _this._rewardBtn.visible = true;
            }, function () {
                _this._rewardBtn.visible = true;
            })
       }
    };
    GameView.prototype.addEvent = function () {
        this._exitBtn.on(Laya.Event.CLICK, this, this.onExitBtn);
        this._restartBtn.on(Laya.Event.CLICK, this, this.onRestarBtn);
        this._skipBtn.on(Laya.Event.CLICK, this, this.onSkipBtn);
    };
    GameView.prototype.removeEvent = function () {
        this._exitBtn.off(Laya.Event.CLICK, this, this.onExitBtn);
        this._restartBtn.off(Laya.Event.CLICK, this, this.onRestarBtn);
        this._skipBtn.off(Laya.Event.CLICK, this, this.onSkipBtn);
    };
    GameView.prototype.onTipClick = function () {
        var url = "subRes/sound/bg.ogg"
        Laya.SoundManager.playMusic(url,0);
        this._tipBtn.visible = false;
        sessionStorage.setItem("reward-type","reward-HT");
            if (!is_rewarded_noFill) {
                this._tipBtn.visible = false;
                setTimeout(() => {Laya.SoundManager.muted = true;
                window.GlanceGamingAdInterface.showRewarededAd(rewardInstance);},1000);
            } 
            else{
                var url = "subRes/sound/bg.ogg"
                Laya.SoundManager.playMusic(url,0);
                rewardInstance.destroyAd();
                this._tipBtn.visible = false;
                rewardInstance=window.GlanceGamingAdInterface.loadRewardedAd(rewardObj,GameMgr_1.prototype.rewardedCallbacks);
                this.giveRewardHT();
            }
    };
    GameView.prototype.onExitBtn = function () {
        this.CloseOldScene();
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_ExitGame);
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.GameMainView);
        this.closeView();
    };
    GameView.prototype.onRestarBtn = function () {
        var _this = this;
        this._skipBtn.visible = false;
        QQMiniGameAPI_1.default.showRewardedVideoAd(function (ok) {
            if (ok) {
                _this.LoadGame();
            }
            _this._skipBtn.visible = true;
        }, function () {
            _this._skipBtn.visible = true;
        });
    };
    GameView.prototype.onSkipBtn = function () {
        // alert("skip")
        // console.log(is_rewarded_noFill);
        // if (!is_rewarded_noFill) {
        //     sessionStorage.setItem("reward-type","replay-RP");
        //     window.GlanceGamingAdInterface.showRewarededAd(replayInstance);
        //     replayInstance.destroyAd();
        // }else{
        //     if(replayInstance != undefined)
        //     replayInstance.destroyAd();
        //     replayInstance=window.GlanceGamingAdInterface.loadRewardedAd(rewardObj, GameView.prototype.rewardedCallbacks);
        // }
        // alert('skip'
        //Approach-2
        // console.log(this._data.levelNum);
        // let level = parseInt( this._data.levelNum+ 1);
        //     sendCustomAnalyticsEvent("game level", { level: level });
        //     var url = "subRes/sound/bgm.ogg";
        //     Laya.SoundManager.playMusic(url, 0);
            
        //     if (rewardInstance && typeof rewardInstance.loadRewardedAd === 'function') {
        //       rewardInstance.destroyAd();
        //     }
            
        //     this.onSkipBtn.visible = false;
            
        //     if (typeof window.GlanceGamingAdInstance === 'object' && typeof window.GlanceGamingAdInstance.loadRewardedAd === 'function') {
        //       rewardInstance = window.GlanceGamingAdInstance;
        //       rewardInstance.loadRewardedAd(rewardObj, GameView.prototype.rewardedCallbacks);
        //     }
        //     sessionStorage.setItem("GiveRewardsSL", 1);
            //approach-3
            sessionStorage.setItem("reward-type","reward-SL");
            if (!is_rewarded_noFill) {
                this.onSkipBtn.visible = false;
                Laya.SoundManager.stopMusic();
                window.GlanceGamingAdInterface.showRewarededAd(rewardInstance); //This should be showRewarededAd. We are showing the ad here. LoadrewardedAd should only be called at the very start in the onAwake function and then loadRewardedAd function should only be called when we show the ad and need to fetch it for the next time.
            } 
            else{
                let level = parseInt(this._data.levelNum+1);
                sendCustomAnalyticsEvent("game_level", {level: level});
                var url = "subRes/sound/bgm.ogg"
                Laya.SoundManager.playMusic(url,0);
                rewardInstance.destroyAd();
                this.onSkipBtn.visible = false;
                rewardInstance=window.GlanceGamingAdInterface.loadRewardedAd(rewardObj,GameMgr_1.prototype.rewardedCallbacks);
                sessionStorage.setItem("GiveRewardSL",1);
            }
    };
    GameView.prototype.LoadGame = function () {
        this.CloseOldScene();
        // Laya.timer.frameOnce(2, this, () => {
        this.LoadStep1();
        this._levelText.text = "LEVEL: " + this._data.levelNum;
        // });
    };
    GameView.prototype.LoadStep1 = function () {
        var _this = this;
        var level = this._data.levelNum;
        if (level > 50) {
            console.log("关卡超出边界,虚假关卡为:" + level);
            level = Math.ceil(this.GetRdSeed(level + 12345) * 48) + 2;
            console.log("关卡超出边界,真实关卡为:" + level);
        }
        // Laya.Scene.load("GameScene/CutRope - 副本.json", Laya.Handler.create(this, (scene: Laya.Scene) => {
        Laya.Scene.load("GameScene/level_" + level + ".json", Laya.Handler.create(this, function (scene) {
            _this.owner.addChildAt(scene, 0);
            _this._currentScene = scene;
            _this._currentScene.addComponent(TouchCtr_1.default);
        }, null));
    };
    GameView.prototype.GetRdSeed = function (seed) {
        seed = (seed * 9301 + 49297) % 233280;
        return seed / (233280.0);
    };
    GameView.prototype.CloseOldScene = function () {
        if (this._currentScene != null) {
            Laya.Physics.I.stop();
            // this._currentScene.removeSelf();
            this._currentScene.visible = false;
            this._currentScene.active = false;
            var self_1 = this;
            // Laya.timer.frameOnce(1, self, () => {
            this._currentScene.destroy();
            this._currentScene = null;
            // });
        }
        Laya.Physics.I._enabled = false;
        Laya.Physics.I.start();
    };
    GameView.prototype.onShow = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_StopBgm);
        ViewMgr_1.default.instance.closeView(ViewMgr_1.ViewDef.GameMainView);
        User_1.default.subEnergy(this._data.costEnergy);
        CachedQQBannerAd_1.default.hide();
        this.LoadGame();
    };
    GameView.prototype.GameOver = function (win) {
        var _this = this;
        console.log("Game Over, Result :", win);
        Laya.timer.frameOnce(1, this, function () {
            _this.CloseOldScene();
            _this.closeView();
        });
        if (WudianMgr_1.default.KuangDiaBoxFlag) {
            var currTime = Laya.timer.currTimer;
            var data = {};
            data.PrizeCount = "恭喜获得皮肤";
            data.ClickType = 2;
            data.CompleteHander = Laya.Handler.create(this, function (data, win) {
                {
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_onGameComplate, { isWin: win, levelNum: data.levelNum, crystalReward: data.crystalReward });
                }
                // console.log("游戏开始狂点停留时间",(Laya.timer.currTimer - currTime) / 1000);
                // ALD.aldSendOnlySingleReport(ALDEventDef.StayComplateClickGetPrizeTime,
                //     {
                //         "时间": (Laya.timer.currTimer - currTime) / 1000
                //     });
            }, [this._data, win]);
            ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.ClickGetPrize_2, data, function () {
                // ALD.aldSendOnlySingleReport(ALDEventDef.EnterComplateClickGetPrize);
                // ALD.aldSendOnlySingleReport(ALDEventDef.EnterComplateClickGetPrizeScene,
                //     {
                //         "场景值": WXAPI.getLaunchOptionsSync().scene
                //     });
            });
        }
        else {
            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_onGameComplate, { isWin: win, levelNum: this._data.levelNum, crystalReward: this._data.crystalReward });
        }
        // ViewMgr.instance.openView(ViewDef.GameView, date);
    };
    return GameView;
}(ViewBase_1.default));
exports.default = GameView;
},{"../../CachedQQBannerAd":3,"../../Event/EventDef":9,"../../Event/EventMgr":10,"../../GameCore/TouchCtr":26,"../../Mgr/GameMgr":46,"../../Mgr/ViewMgr":48,"../../Mgr/WudianMgr":50,"../../QQMiniGameAPI":56,"../../User/User":63,"../../Utilit":64,"../ViewBase":110}],75:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function isIViewStateListener(element) {
    if ((null != element.onViewShow && typeof (element.onViewShow) == "function")
        && (null != element.onViewHide && typeof (element.onViewHide) == "function")) {
        return true;
    }
    return false;
}
exports.isIViewStateListener = isIViewStateListener;
},{}],76:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var User_1 = require("../../User/User");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var FreeRewardView_1 = require("../FreeReward/FreeRewardView");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var LevelStateBox = /** @class */ (function (_super) {
    __extends(LevelStateBox, _super);
    function LevelStateBox() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LevelStateBox.prototype.onAwake = function () {
        this._currentTag = this.owner.getChildByName("Current");
        this._complateTag = this.owner.getChildByName("Complate");
        this._lockTag = this.owner.getChildByName("Lock");
        this._noEnergyCost = this.owner.getChildByName("NoEnergyCost");
        this._moreCrystalReward = this.owner.getChildByName("MoreCrystalReward");
        this._levelNumText = this.owner.getChildByName("LevelNumText");
    };
    LevelStateBox.prototype.setData = function (data) {
        this._currentTag.visible = false;
        this._complateTag.visible = false;
        this._lockTag.visible = false;
        this._data = data;
        if (null != this._data) {
            var currentLevelNum = User_1.default.getLeveNum();
            this._levelNumText.value = String(this._data.levelNum);
            this._levelNumText.y = 69;
            if (currentLevelNum == this._data.levelNum) {
                this._currentTag.visible = true;
            }
            else if (currentLevelNum > this._data.levelNum) {
                this._complateTag.visible = true;
                this._levelNumText.y = 54;
            }
            else if (currentLevelNum < this._data.levelNum) {
                this._lockTag.visible = true;
            }
            this._noEnergyCost.visible = this._data.vedioCostNoEnergy == 1;
            this._moreCrystalReward.visible = this._data.vedioDoubleDiamond == 1;
        }
    };
    LevelStateBox.prototype.onClick = function () {
        var data = this._data;
        if (null != data) {
            var currentLevelNum = User_1.default.getLeveNum();
            if (currentLevelNum >= data.levelNum) {
                if (1 == data.vedioCostNoEnergy) {
                    LevelStateBox.LockClick = true;
                    QQMiniGameAPI_1.default.showRewardedVideoAd(function (ok) {
                        if (ok) {
                            //不消耗体力开局
                            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_StartGame, {
                                levelNum: data.levelNum,
                                costEnergy: data.costEnergy * 0,
                                crystalReward: data.getDiamond,
                            });
                            ViewMgr_1.default.instance.closeView(ViewMgr_1.ViewDef.LevelStateView);
                        }
                        else {
                            if (User_1.default.getEnergy() < data.costEnergy) {
                                ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.FreeRewardView, {
                                    rewardType: FreeRewardView_1.FreeRewardType.Energy
                                });
                                // ViewMgr.instance.showTips("体力不足");
                                return;
                            }
                            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_StartGame, {
                                levelNum: data.levelNum,
                                costEnergy: data.costEnergy,
                                crystalReward: data.getDiamond,
                            });
                            ViewMgr_1.default.instance.closeView(ViewMgr_1.ViewDef.LevelStateView);
                        }
                        LevelStateBox.LockClick = false;
                    }, function () {
                        if (User_1.default.getEnergy() < data.costEnergy) {
                            ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.FreeRewardView, {
                                rewardType: FreeRewardView_1.FreeRewardType.Energy
                            });
                            // ViewMgr.instance.showTips("体力不足");
                            return;
                        }
                        //正常开局
                        LevelStateBox.LockClick = false;
                        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_StartGame, {
                            levelNum: data.levelNum,
                            costEnergy: data.costEnergy,
                            crystalReward: data.getDiamond,
                        });
                        ViewMgr_1.default.instance.closeView(ViewMgr_1.ViewDef.LevelStateView);
                    });
                }
                else if (1 == data.vedioDoubleDiamond) {
                    if (User_1.default.getEnergy() < data.costEnergy) {
                        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.FreeRewardView, {
                            rewardType: FreeRewardView_1.FreeRewardType.Energy
                        });
                        // ViewMgr.instance.showTips("体力不足");
                        return;
                    }
                    QQMiniGameAPI_1.default.showRewardedVideoAd(function (ok) {
                        if (ok) {
                            //双倍奖励开局
                            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_StartGame, {
                                levelNum: data.levelNum,
                                costEnergy: data.costEnergy,
                                crystalReward: data.getDiamond * 2,
                            });
                            ViewMgr_1.default.instance.closeView(ViewMgr_1.ViewDef.LevelStateView);
                        }
                        else {
                            //正常开局
                            EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_StartGame, {
                                levelNum: data.levelNum,
                                costEnergy: data.costEnergy,
                                crystalReward: data.getDiamond,
                            });
                            ViewMgr_1.default.instance.closeView(ViewMgr_1.ViewDef.LevelStateView);
                        }
                        LevelStateBox.LockClick = false;
                    }, function () {
                        //正常开局
                        LevelStateBox.LockClick = false;
                        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_StartGame, {
                            levelNum: data.levelNum,
                            costEnergy: data.costEnergy,
                            crystalReward: data.getDiamond,
                        });
                        ViewMgr_1.default.instance.closeView(ViewMgr_1.ViewDef.LevelStateView);
                    });
                }
                else {
                    if (User_1.default.getEnergy() < data.costEnergy) {
                        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.FreeRewardView, {
                            rewardType: FreeRewardView_1.FreeRewardType.Energy
                        });
                        // ViewMgr.instance.showTips("体力不足");
                        return;
                    }
                    //正常开局
                    EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_StartGame, {
                        levelNum: data.levelNum,
                        costEnergy: data.costEnergy,
                        crystalReward: data.getDiamond,
                    });
                    ViewMgr_1.default.instance.closeView(ViewMgr_1.ViewDef.LevelStateView);
                }
            }
        }
    };
    LevelStateBox.LockClick = false;
    return LevelStateBox;
}(Laya.Script));
exports.default = LevelStateBox;
},{"../../Event/EventDef":9,"../../Event/EventMgr":10,"../../Mgr/ViewMgr":48,"../../QQMiniGameAPI":56,"../../User/User":63,"../FreeReward/FreeRewardView":71}],77:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var User_1 = require("../../User/User");
var Utilit_1 = require("../../Utilit");
var LevelStateBox_1 = require("./LevelStateBox");
var LevelConfig_1 = require("../../Config/LevelConfig");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var CachedQQBannerAd_1 = require("../../CachedQQBannerAd");
var LevelStateView = /** @class */ (function (_super) {
    __extends(LevelStateView, _super);
    function LevelStateView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LevelStateView.prototype.onAwake = function () {
        this._topZone = this.owner.getChildByName("TopZone");
        if (Utilit_1.default.isIphoneX()) {
            this._topZone.top = 70;
        }
        this._crystalText = this._topZone.getChildByName("Crystal").getChildByName("Text");
        this._energyText = this._topZone.getChildByName("Energy").getChildByName("Text");
        this._closeBtn = this._topZone.getChildByName("CloseBtn");
        this._centerZone = this.owner.getChildByName("CenterZone");
        this._levelNumText = this._centerZone.getChildByName("LevelNumText");
        this._levelStateList = this._centerZone.getChildByName("List");
        this._levelStateList.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);
        this._levelStateList.vScrollBarSkin = "";
    };
    LevelStateView.prototype.addEvent = function () {
        var _this = this;
        this._closeBtn.on(Laya.Event.CLICK, this, function () {
            ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.GameMainView);
            _this.closeView();
        });
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_OnUserCrystalChange, this, this.onCrystalChange);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_OnUserEnergyChange, this, this.onEnergyChange);
    };
    LevelStateView.prototype.removeEvent = function () {
        this._closeBtn.on(Laya.Event.CLICK, this, this.closeView);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Game_OnUserCrystalChange, this, this.onCrystalChange);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Game_OnUserEnergyChange, this, this.onEnergyChange);
    };
    LevelStateView.prototype.openView = function (data) {
        _super.prototype.openView.call(this, data);
        CachedQQBannerAd_1.default.hide();
        this._crystalText.text = String(User_1.default.getCrystal());
        this._energyText.text = String(User_1.default.getEnergy());
        this._levelNumText.text = String(User_1.default.getLeveNum());
        this.refreshLevelStateList();
        for (var i = 0; i < this._levelStateList.array.length; ++i) {
            var d = this._levelStateList.array[i];
            if (d.levelNum == User_1.default.getLeveNum()) {
                this._levelStateList.scrollTo(i);
                break;
            }
        }
        LevelStateBox_1.default.LockClick = false;
    };
    LevelStateView.prototype.onCrystalChange = function (para) {
        var curr = para.curr;
        var last = para.last;
        this._crystalText.text = String(curr);
    };
    LevelStateView.prototype.onEnergyChange = function (para) {
        var curr = para.curr;
        var last = para.last;
        this._energyText.text = String(curr);
    };
    LevelStateView.prototype.onListRender = function (cell, index) {
        var data = this._levelStateList.array[index];
        var box = cell.getComponent(LevelStateBox_1.default);
        box.setData(data);
    };
    LevelStateView.prototype.refreshLevelStateList = function () {
        var levelDatas = LevelConfig_1.default.getInstance().getLevelConfigDatas();
        var dataArray = new Array();
        for (var i = 0; i < levelDatas.length; ++i) {
            var data = levelDatas[i].clone();
            dataArray.push(data);
        }
        this._levelStateList.array = dataArray;
    };
    return LevelStateView;
}(ViewBase_1.default));
exports.default = LevelStateView;
},{"../../CachedQQBannerAd":3,"../../Config/LevelConfig":7,"../../Event/EventDef":9,"../../Event/EventMgr":10,"../../Mgr/ViewMgr":48,"../../User/User":63,"../../Utilit":64,"../ViewBase":110,"./LevelStateBox":76}],78:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var LogoAni_1 = require("./LogoAni");
var LoadingView = /** @class */ (function (_super) {
    __extends(LoadingView, _super);
    function LoadingView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._processWidth = 0;
        _this._logoAni = null;
        return _this;
    }
    LoadingView.prototype.onAwake = function () {
        this._bg = this.owner.getChildByName("Bg");
        this._bottomZone = this._bg.getChildByName("BottomZone");
        this._processBarBg = this._bottomZone.getChildByName("processBarBg");
        this._processBar = this._processBarBg.getChildByName("processBar");
        this._processWidth = this._processBar.width;
        this._logoAni = this._bottomZone.getChildByName("LogoAni").getComponent(LogoAni_1.default);
        this._logoAni.enabled = false;
    };
    LoadingView.prototype.onStart = function () {
        Laya.timer.once(250, this, function () {
            //this._logoAni.playAni();
        });
    };
    LoadingView.prototype.onEnable = function () {
        _super.prototype.onEnable.call(this);
    };
    LoadingView.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
    };
    LoadingView.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
    };
    LoadingView.prototype.onUpdate = function () {
        this._bg.width = Laya.stage.width;
        this._bg.height = Laya.stage.height;
    };
    LoadingView.prototype.setProcess = function (process) {
        if (process < 0)
            process = 0;
        if (process > 1)
            process = 1;
        var width = this._processWidth * process;
        if (width < 1)
            width = 1;
        this._processBar.width = width;
    };
    return LoadingView;
}(ViewBase_1.default));
exports.default = LoadingView;
},{"../ViewBase":110,"./LogoAni":79}],79:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LogoAni = /** @class */ (function (_super) {
    __extends(LogoAni, _super);
    function LogoAni() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._aniSprites = [];
        _this._aniSpriteOriginPos = [];
        return _this;
    }
    LogoAni.prototype.onAwake = function () {
        for (var i = 0; i < this.owner.numChildren; ++i) {
            var child = this.owner.getChildAt(i);
            child.alpha = 0;
            this._aniSprites.push(child);
            this._aniSpriteOriginPos.push(new Laya.Point(child.x, child.y));
        }
    };
    LogoAni.prototype.playAni = function () {
        // if(Laya.Browser.onQGMiniGame)
        // {
        //     for (let i = 0; i < this._aniSprites.length; ++i)  
        //     { 
        //         this._aniSprites[i].visible = false;
        //     }
        //     return;
        // }
        // for (let i = 0; i < this._aniSprites.length; ++i)  
        // {   
        //     let isLast = i == (this._aniSprites.length - 1) ? true : false;
        //     let sp = this._aniSprites[i];
        //     let originPos = this._aniSpriteOriginPos[i];
        //     sp.alpha = 0;
        //     sp.y += originPos.y + 50;
        //     let self = this;
        //     Laya.Tween.to(sp,
        //         {
        //             y: originPos.y,
        //             alpha: 1
        //         },
        //         450, Laya.Ease.elasticOut, Laya.Handler.create(this, () => {
        //             if(isLast)
        //             {
        //                 Laya.timer.once(300,self,()=>
        //                 {
        //                     self.playAni();
        //                 })
        //             }
        //         }),i * 80)
        // }
    };
    return LogoAni;
}(Laya.Script));
exports.default = LogoAni;
},{}],80:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var User_1 = require("../../User/User");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var Utilit_1 = require("../../Utilit");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var FreeRewardView_1 = require("../FreeReward/FreeRewardView");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var MainView = /** @class */ (function (_super) {
    __extends(MainView, _super);
    function MainView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MainView.prototype.onAwake = function () {
        this._topZone = this.owner.getChildByName("TopZone");
        if (Utilit_1.default.isIphoneX()) {
            this._topZone.top = 70;
            this.owner.getChildByName("SideAd_View").top += 70;
            this.owner.getChildByName("ShakeLoopAd").top += 70;
            this.owner.getChildByName("AniAd").top += 70;
        }
        this._crystalText = this._topZone.getChildByName("FreeCrystalBtn").getChildByName("Text");
        this._energyText = this._topZone.getChildByName("FreeEnergyBtn").getChildByName("Text");
        this._centerZone = this.owner.getChildByName("CenterZone");
        this._autoZone = this.owner.getChildByName("BottomZone").getChildByName("AutoZone");
        this._startGameBtn = this._autoZone.getChildByName("StartGameBtn");
        this._startGameBtn.visible = true;
        this._moreGameBtn = this._autoZone.getChildByName("MoreGameBtn");
        this._moreGameBtn.visible = false;
        //this._LogoAnim = this._autoZone.getChildByName("LogoAni") as Laya.Sprite;
        //this._LogoAnim.visible = false;
        this._freeCryStalBtn = this._topZone.getChildByName("FreeCrystalBtn");
        this._freeEnergyBtn = this._topZone.getChildByName("FreeEnergyBtn");
        this._skinBtn = this._topZone.getChildByName("SkinBtn");
        // this._shareBtn = this._autoZone.getChildByName("ShareBtn") as Laya.Sprite;
        // ALD.aldSendOnlySingleReport(ALDEventDef.EnterMainView);
        this._adUIMask = this.owner.getChildByName("AdUIMask");
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            this._adUIMask.bottom = 515;
        }
        else {
            this._adUIMask.bottom = 265;
        }
        this._adUIMask.visible = false;
    };
    MainView.prototype.addEvent = function () {
        this._startGameBtn.on(Laya.Event.CLICK, this, this.onStartGameBtn);
        this._moreGameBtn.on(Laya.Event.CLICK, this, this.onMoreGameBtn);
        this._freeCryStalBtn.on(Laya.Event.CLICK, this, this.onFreeCrystalBtn);
        this._freeEnergyBtn.on(Laya.Event.CLICK, this, this.onFreeEnergyBtn);
        this._skinBtn.on(Laya.Event.CLICK, this, this.onSkinBtn);
        // this._shareBtn.on(Laya.Event.CLICK,this,this.onShareBtn);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_OnUserCrystalChange, this, this.onCrystalChange);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_OnUserEnergyChange, this, this.onEnergyChange);
        // EventMgr.instance.regEvemt(EventDef.AD_OnShareAdFail_UseCancel,this,this.onMoreGameBtn);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.AD_MainAdUiMask, this, this.changeAdMask);
    };
    MainView.prototype.removeEvent = function () {
        this._startGameBtn.off(Laya.Event.CLICK, this, this.onStartGameBtn);
        this._moreGameBtn.off(Laya.Event.CLICK, this, this.onMoreGameBtn);
        this._freeCryStalBtn.off(Laya.Event.CLICK, this, this.onFreeCrystalBtn);
        this._freeEnergyBtn.off(Laya.Event.CLICK, this, this.onFreeEnergyBtn);
        this._skinBtn.off(Laya.Event.CLICK, this, this.onSkinBtn);
        // this._shareBtn.off(Laya.Event.CLICK,this,this.onShareBtn);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Game_OnUserCrystalChange, this, this.onCrystalChange);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Game_OnUserEnergyChange, this, this.onEnergyChange);
        // EventMgr.instance.removeEvent(EventDef.AD_OnShareAdFail_UseCancel,this,this.onMoreGameBtn);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.AD_MainAdUiMask, this, this.changeAdMask);
    };
    MainView.prototype.openView = function (data) {
        _super.prototype.openView.call(this, data);
        this._crystalText.text = String(User_1.default.getCrystal());
        this._energyText.text = String(User_1.default.getEnergy());
    };
    MainView.prototype.onCrystalChange = function (para) {
        var curr = para.curr;
        var last = para.last;
        this._crystalText.text = String(curr);
    };
    MainView.prototype.onEnergyChange = function (para) {
        var curr = para.curr;
        var last = para.last;
        this._energyText.text = String(curr);
    };
    MainView.prototype.onFreeEnergyBtn = function () {
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.FreeRewardView, {
            rewardType: FreeRewardView_1.FreeRewardType.Energy
        });
    };
    MainView.prototype.onFreeCrystalBtn = function () {
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.FreeRewardView, {
            rewardType: FreeRewardView_1.FreeRewardType.Crystal
        });
    };
    MainView.prototype.onSkinBtn = function () {
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.ActorSkinView);
    };
    MainView.prototype.onShareBtn = function () {
        QQMiniGameAPI_1.default.share(function (ok) {
        }, "恐龙宝宝被人绑架了，快来救救它吧！", "subRes/image/分享图.png");
    };
    MainView.prototype.onMoreGameBtn = function () {
        // ViewMgr.instance.openView(ViewDef.MoreGameView);
        QQMiniGameAPI_1.default.showAppBoxAd(function () { }, function () { });
    };
    MainView.prototype.onStartGameBtn = function () {
        // ALD.aldSendOnlySingleReport(ALDEventDef.ClickGameStart);        
        this.closeView();
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.LevelStateView);
    };
    MainView.prototype.onShow = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_PlayBgm);
    };
    MainView.prototype.changeAdMask = function (visible) {
        this._adUIMask.visible = visible;
    };
    return MainView;
}(ViewBase_1.default));
exports.default = MainView;
},{"../../Event/EventDef":9,"../../Event/EventMgr":10,"../../Mgr/ViewMgr":48,"../../QQMiniGameAPI":56,"../../User/User":63,"../../Utilit":64,"../FreeReward/FreeRewardView":71,"../ViewBase":110}],81:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var Utilit_1 = require("../../Utilit");
var LoopAdView_1 = require("../../ShareAd/View/LoopAdView");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var CachedWXBannerAd_1 = require("../../CachedWXBannerAd");
var MoreGameView = /** @class */ (function (_super) {
    __extends(MoreGameView, _super);
    function MoreGameView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MoreGameView.prototype.onAwake = function () {
        this._topZone = this.owner.getChildByName("TopZone");
        if (Utilit_1.default.isIphoneX()) {
            this._topZone.top = 70;
        }
        this._closeBtn = this._topZone.getChildByName("CloseBtn");
        this._closeBtn2 = this._topZone.getChildByName("CloseBtn2");
        this._loopAd = this._topZone.getChildByName("LoopAD").getComponent(LoopAdView_1.default);
        this._loopAd.AdPosID = 185;
    };
    MoreGameView.prototype.onShow = function () {
        var _this = this;
        CachedWXBannerAd_1.default.hide();
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_SwitchBanner, [false]);
        // ShareAd.RandomJump(AppSwitchConfig.getInstance().getAppSwitchData().popAdSwitch);
        if (this._data && this._data.closeFunction) {
            this.onCloseEvent = this._data.closeFunction;
        }
        if (this._data && this._data.ContinueGame) {
            // ALD.aldSendOnlySingleReport(ALDEventDef.EnterGameOverMoreGame);
            this._closeBtn.visible = false;
            var time = AppSwitchConfig_1.default.getInstance().getAppSwitchData().continueBtnDelayTime * 1000;
            Laya.timer.once(time, this, function () {
                _this._closeBtn2.visible = true;
            });
        }
        else {
            this._closeBtn2.visible = false;
            this._closeBtn.visible = true;
            // this.onCloseEvent = () => {
            //     if(ViewMgr.instance.getView(ViewDef.MainView) == null){
            //         ViewMgr.instance.openView(ViewDef.MainView);
            //     }
            // }
        }
    };
    MoreGameView.prototype.onClose = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_SwitchBanner, [true]);
        _super.prototype.onClose.call(this);
    };
    MoreGameView.prototype.addEvent = function () {
        this._closeBtn.on(Laya.Event.CLICK, this, this.closeView);
        this._closeBtn2.on(Laya.Event.CLICK, this, this.closeView);
    };
    MoreGameView.prototype.removeEvent = function () {
        this._closeBtn.off(Laya.Event.CLICK, this, this.closeView);
        this._closeBtn2.off(Laya.Event.CLICK, this, this.closeView);
    };
    return MoreGameView;
}(ViewBase_1.default));
exports.default = MoreGameView;
},{"../../CachedWXBannerAd":4,"../../Config/AppSwitchConfig":5,"../../Event/EventDef":9,"../../Event/EventMgr":10,"../../ShareAd/View/LoopAdView":61,"../../Utilit":64,"../ViewBase":110}],82:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WudianMgr_1 = require("../../../Mgr/WudianMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var Utilit_1 = require("../../../Utilit");
var QQTemplateViewBase_1 = require("../QQTemplateViewBase");
var QQMiniGameAPI_1 = require("../../../QQMiniGameAPI");
var QQGameFailViewTemplate = /** @class */ (function (_super) {
    __extends(QQGameFailViewTemplate, _super);
    function QQGameFailViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._centerZone = null;
        _this._backBtn = null;
        _this._continueBtn = null;
        _this._clickTag = false;
        _this._clickTimingTag = false;
        return _this;
    }
    QQGameFailViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._centerZone = this.View.getChildByName("CenterZone");
        if (Utilit_1.default.isIphoneX()) {
            this._centerZone.top = this._centerZone.top + 75;
        }
        this._backBtn = this._centerZone.getChildByName("BackBtn");
        this._continueBtn = this._centerZone.getChildByName("ContinueBtn");
    };
    QQGameFailViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        if (WudianMgr_1.default.WudianFlag) {
            var yPos = this._centerZone.height - 150;
            this._backBtn.y = yPos;
            this._continueBtn.y = yPos;
        }
        var self = this;
        if (AppSwitchConfig_1.default.getInstance().getAppSwitchData().qqcfg.box == 1) {
            QQMiniGameAPI_1.default.showAppBoxAd(function () {
            }, function () {
                var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, self, self.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, self, self.BtnUp);
            });
        }
        else {
            var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
            var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
            Laya.timer.once(bannerMoveTimer * 1000, self, self.BannerUp);
            Laya.timer.once(btnMoveTimer * 1000, self, self.BtnUp);
        }
    };
    QQGameFailViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this._backBtn.on(Laya.Event.CLICK, this, this.onBackBtn);
        this._continueBtn.on(Laya.Event.CLICK, this, this.onContinueBtn);
    };
    QQGameFailViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this._backBtn.off(Laya.Event.CLICK, this, this.onBackBtn);
        this._continueBtn.off(Laya.Event.CLICK, this, this.onContinueBtn);
    };
    QQGameFailViewTemplate.prototype.onBackBtn = function () {
        if (!this._clickTag && WudianMgr_1.default.WudianFlag) {
            var self = this;
            if (!this._clickTimingTag) {
                this._clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    QQGameFailViewTemplate.prototype.onContinueBtn = function () {
        if (!this._clickTag && WudianMgr_1.default.WudianFlag) {
            var self = this;
            if (!this._clickTimingTag) {
                this._clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    QQGameFailViewTemplate.prototype.BannerUp = function () {
        //todo：显示Banner
    };
    QQGameFailViewTemplate.prototype.BtnUp = function () {
        this._clickTag = true;
        this._backBtn.y = 720;
        this._continueBtn.y = 720;
    };
    QQGameFailViewTemplate.prototype.onDestroy = function () {
        //todo：隐藏Banner
    };
    return QQGameFailViewTemplate;
}(QQTemplateViewBase_1.default));
exports.default = QQGameFailViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../Mgr/WudianMgr":50,"../../../QQMiniGameAPI":56,"../../../Utilit":64,"../QQTemplateViewBase":88}],83:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WudianMgr_1 = require("../../../Mgr/WudianMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var Utilit_1 = require("../../../Utilit");
var QQTemplateViewBase_1 = require("../QQTemplateViewBase");
var QQMiniGameAPI_1 = require("../../../QQMiniGameAPI");
var QQGameWinViewTemplate = /** @class */ (function (_super) {
    __extends(QQGameWinViewTemplate, _super);
    function QQGameWinViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._centerZone = null;
        _this._backBtn = null;
        _this._nextBtn = null;
        _this._clickTag = false;
        _this._clickTimingTag = false;
        return _this;
    }
    QQGameWinViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._centerZone = this.View.getChildByName("CenterZone");
        if (Utilit_1.default.isIphoneX()) {
            this._centerZone.top = this._centerZone.top + 75;
        }
        this._backBtn = this._centerZone.getChildByName("BackBtn");
        this._nextBtn = this._centerZone.getChildByName("NextBtn");
    };
    QQGameWinViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        if (WudianMgr_1.default.WudianFlag && 1 == AppSwitchConfig_1.default.getInstance().getAppSwitchData().qqcfg.weiyi) {
            var yPos = this._centerZone.height - 150;
            this._backBtn.y = yPos;
            this._nextBtn.y = yPos;
        }
        var self = this;
        if (AppSwitchConfig_1.default.getInstance().getAppSwitchData().qqcfg.box == 1) {
            QQMiniGameAPI_1.default.showAppBoxAd(function () {
            }, function () {
                var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, self, self.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, self, self.BtnUp);
            });
        }
        else {
            var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
            var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
            Laya.timer.once(bannerMoveTimer * 1000, self, self.BannerUp);
            Laya.timer.once(btnMoveTimer * 1000, self, self.BtnUp);
        }
    };
    QQGameWinViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this._backBtn.on(Laya.Event.CLICK, this, this.onBackBtn);
        this._nextBtn.on(Laya.Event.CLICK, this, this.onNextBtn);
    };
    QQGameWinViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this._backBtn.off(Laya.Event.CLICK, this, this.onBackBtn);
        this._nextBtn.off(Laya.Event.CLICK, this, this.onNextBtn);
    };
    QQGameWinViewTemplate.prototype.onBackBtn = function () {
        if (!this._clickTag && WudianMgr_1.default.WudianFlag) {
            var self = this;
            if (!this._clickTimingTag) {
                this._clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    QQGameWinViewTemplate.prototype.onNextBtn = function () {
        if (!this._clickTag && WudianMgr_1.default.WudianFlag) {
            var self = this;
            if (!this._clickTimingTag) {
                this._clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    QQGameWinViewTemplate.prototype.BannerUp = function () {
        //todo：显示Banner
    };
    QQGameWinViewTemplate.prototype.BtnUp = function () {
        this._clickTag = true;
        this._backBtn.y = 720;
        this._nextBtn.y = 720;
    };
    QQGameWinViewTemplate.prototype.onDestroy = function () {
        //todo：隐藏Banner
    };
    return QQGameWinViewTemplate;
}(QQTemplateViewBase_1.default));
exports.default = QQGameWinViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../Mgr/WudianMgr":50,"../../../QQMiniGameAPI":56,"../../../Utilit":64,"../QQTemplateViewBase":88}],84:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Utilit_1 = require("../../../Utilit");
var QQTemplateViewBase_1 = require("../QQTemplateViewBase");
var QQInGameViewTemplate = /** @class */ (function (_super) {
    __extends(QQInGameViewTemplate, _super);
    function QQInGameViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._centerZone = null;
        return _this;
    }
    QQInGameViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._centerZone = this.View.getChildByName("CenterZone");
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            if (Utilit_1.default.isIphoneX()) {
                this._centerZone.top = this._centerZone.top + 75;
            }
        }
        else {
            this._centerZone.top = this._centerZone.top - 200;
            if (Utilit_1.default.isIphoneX()) {
                this._centerZone.top = this._centerZone.top + 75;
            }
        }
    };
    QQInGameViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
    };
    QQInGameViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
    };
    QQInGameViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
    };
    return QQInGameViewTemplate;
}(QQTemplateViewBase_1.default));
exports.default = QQInGameViewTemplate;
},{"../../../Utilit":64,"../QQTemplateViewBase":88}],85:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../../../Event/EventMgr");
var EventDef_1 = require("../../../Event/EventDef");
var User_1 = require("../../../User/User");
var Utilit_1 = require("../../../Utilit");
var QQTemplateViewBase_1 = require("../QQTemplateViewBase");
var QQMiniGameAPI_1 = require("../../../QQMiniGameAPI");
var QQMainViewTemplate = /** @class */ (function (_super) {
    __extends(QQMainViewTemplate, _super);
    function QQMainViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._centerZone = null;
        _this._startBtn = null;
        _this._levelNum = null;
        _this._moneyNum = null;
        _this._moreGameBtn = null;
        return _this;
    }
    QQMainViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._centerZone = this.View.getChildByName("CenterZone");
        this._moreGameBtn = this._centerZone.getChildByName("MoreGameBtn");
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            if (Utilit_1.default.isIphoneX()) {
                this._centerZone.top = this._centerZone.top + 75;
            }
        }
        else {
            this._centerZone.top = this._centerZone.top - 200;
            if (Utilit_1.default.isIphoneX()) {
                this._centerZone.top = this._centerZone.top + 75;
            }
        }
        this._startBtn = this._centerZone.getChildByName("StartBtn");
        this._levelNum = this._centerZone.getChildByName("LevelInfo").getChildByName("LevelNum");
        this._moneyNum = this._centerZone.getChildByName("MoneyInfo").getChildByName("MoneyNum");
    };
    QQMainViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        this._moneyNum.value = String(User_1.default.getMoney());
        this._levelNum.value = String(User_1.default.getLeveNum());
    };
    QQMainViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this._startBtn.on(Laya.Event.CLICK, this, this.onStartBtn);
        this._moreGameBtn.on(Laya.Event.CLICK, this, this.onMoreGameBtn);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_OnUserMoneyChange, this, this.onUserMoneyChange);
    };
    QQMainViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this._startBtn.off(Laya.Event.CLICK, this, this.onStartBtn);
        this._moreGameBtn.off(Laya.Event.CLICK, this, this.onMoreGameBtn);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Game_OnUserMoneyChange, this, this.onUserMoneyChange);
    };
    QQMainViewTemplate.prototype.onStartBtn = function () {
    };
    QQMainViewTemplate.prototype.onMoreGameBtn = function () {
        QQMiniGameAPI_1.default.showAppBoxAd(function () {
        });
    };
    QQMainViewTemplate.prototype.onUserMoneyChange = function (para) {
        var curr = para.curr;
        var last = para.last;
        this._moneyNum.value = String(curr);
    };
    return QQMainViewTemplate;
}(QQTemplateViewBase_1.default));
exports.default = QQMainViewTemplate;
},{"../../../Event/EventDef":9,"../../../Event/EventMgr":10,"../../../QQMiniGameAPI":56,"../../../User/User":63,"../../../Utilit":64,"../QQTemplateViewBase":88}],86:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../../View/ViewBase");
var EventDef_1 = require("../../../Event/EventDef");
var EventMgr_1 = require("../../../Event/EventMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var CachedQQBannerAd_1 = require("../../../CachedQQBannerAd");
var QQCrazyClick = /** @class */ (function (_super) {
    __extends(QQCrazyClick, _super);
    function QQCrazyClick() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._clickBar = null;
        _this._totalClickTimer = 15; //用户一直没中套路，那么点击了这么多次都还是让他继续玩下去，不要卡死程序
        _this._needClickTime = 10; //一共点多少次能够获得奖励，用于显示进度条
        _this._bannerClickTime = 10; //点多少次开始显示bannerr套路用户，可微调   
        return _this;
    }
    QQCrazyClick.prototype.onAwake = function () {
        var _this = this;
        this._click_Btn = this.owner.getChildByName("Click_Btn");
        this._click_Btn.on(Laya.Event.CLICK, this, this.ButtonClicked);
        this._arrow_Img = this._click_Btn.getChildByName("Arrow_Img");
        this._getPrize_View = this.owner.getChildByName("GetPrize_View");
        this._prizeCount_Text = this._getPrize_View.getChildByName("PrizeCount_Text");
        this._confirm_Btn = this._getPrize_View.getChildByName("Confirm_Btn");
        this._getPrize_View.visible = false;
        this._clickBar = this.owner.getChildByName("ClickBar").getChildByName("ClickBar");
        this._clickBarOriginalWidth = this._clickBar.width;
        this._clickBar.width = 0;
        this._clickTime = 0;
        this._totalClickTime = 0;
        var self = this;
        Laya.loader.load("ClickGetPrize/quanji.png", Laya.Handler.create(this, function (texture) {
            texture.bitmap.lock = true;
            Laya.loader.load("ClickGetPrize/quanji.sk", Laya.Handler.create(_this, function (bytes) {
                console.log("texture", texture);
                console.log("bytes", bytes);
                var template = new Laya.Templet();
                template.parseData(texture, bytes);
                self.drgon = template.buildArmature();
                self.owner.addChild(self.drgon);
                self.drgon.x = 375;
                self.drgon.y = 610;
                self.drgon.scaleX = 2;
                self.drgon.scaleY = 2;
                self.drgon.parent.setChildIndex(self.drgon, 1);
                self.drgon.play(0, true);
                console.log("quanji 加载完成!!!!", template);
            }), Laya.Handler.create(_this, function () { }), "", 0, false, "", true);
        }), Laya.Handler.create(this, function () { }), "", 0, false, "", true);
    };
    QQCrazyClick.prototype.onUpdate = function () {
        if (this._arrowUp) {
            this._arrow_Img.top += Laya.timer.delta / 5;
            if (this._arrow_Img.top > -140) {
                this._arrowUp = false;
            }
        }
        else {
            this._arrow_Img.top -= Laya.timer.delta / 5;
            if (this._arrow_Img.top < -180) {
                this._arrowUp = true;
            }
        }
        if (!this._bannerClicked) {
            var spd = 2 + (this._clickBar.width / this._clickBarOriginalWidth) * 6;
            if (this._clickBar.width >= spd) {
                this._clickBar.width -= spd;
            }
            if ((this._clickBar.width / this._clickBarOriginalWidth) + 0.1 < (this._clickTime / this._needClickTime)) {
                this._clickTime--;
            }
        }
    };
    QQCrazyClick.prototype.openView = function (data) {
        this._compeletFunction = data.Complete;
        this._prizeCount = data.PrizeCount;
        _super.prototype.openView.call(this, data);
    };
    QQCrazyClick.prototype.OpenPrizeWindow = function () {
        var self = this;
        this._prizeCount_Text.text = this._prizeCount.toString();
        this._getPrize_View.visible = true;
        this._confirm_Btn.once(Laya.Event.CLICK, this, function () {
            CachedQQBannerAd_1.default.hide();
            if (self._compeletFunction) {
                self._compeletFunction();
            }
            self.closeView();
        });
    };
    QQCrazyClick.prototype.ShowBanner = function () {
        if (AppSwitchConfig_1.default.getInstance().getAppSwitchData().qqcfg.kuangdianBanner == 1) {
            CachedQQBannerAd_1.default.show();
        }
    };
    QQCrazyClick.prototype.ButtonClicked = function () {
        var _this = this;
        this._clickTime++;
        this._totalClickTime++;
        if (null != this.drgon) {
            this.drgon.play(1, false);
            this.drgon.once(Laya.Event.STOPPED, this, function () {
                _this.drgon.play(0, true);
            });
        }
        if (this._clickTime > this._needClickTime) {
            this._clickTime = this._needClickTime;
        }
        if (this._clickTime >= this._bannerClickTime) {
            if (this._clickTime >= this._needClickTime) {
                this._clickTime = this._needClickTime - 1;
            }
            if (this._bannerClicked) {
                return;
            }
            this._bannerClicked = true;
            this.ShowBanner();
            Laya.timer.once(2000, this, function () {
                this.BannerClicked();
            });
        }
        else if (this._totalClickTime > this._totalClickTimer) {
            this.BannerClicked();
        }
        var progress = (this._clickTime / this._needClickTime) * this._clickBarOriginalWidth;
        this._clickBar.width = progress;
    };
    QQCrazyClick.prototype.BannerClicked = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_WudianBanner_Hide);
        this._bannerClicked = true;
        this._clickTime = this._needClickTime;
        this._clickBar.width = this._clickBarOriginalWidth;
        this._click_Btn.visible = false;
        this.OpenPrizeWindow();
    };
    QQCrazyClick.prototype.onDestroy = function () {
        if (AppSwitchConfig_1.default.getInstance().getAppSwitchData().qqcfg.kuangdianBanner == 1) {
            CachedQQBannerAd_1.default.hide();
        }
    };
    return QQCrazyClick;
}(ViewBase_1.default));
exports.default = QQCrazyClick;
},{"../../../CachedQQBannerAd":3,"../../../Config/AppSwitchConfig":5,"../../../Event/EventDef":9,"../../../Event/EventMgr":10,"../../../View/ViewBase":110}],87:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../../View/ViewBase");
var EventDef_1 = require("../../../Event/EventDef");
var EventMgr_1 = require("../../../Event/EventMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var QQMiniGameAPI_1 = require("../../../QQMiniGameAPI");
var QQCrazyClick2 = /** @class */ (function (_super) {
    __extends(QQCrazyClick2, _super);
    function QQCrazyClick2() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._clickBar = null;
        _this._totalClickTimer = 15; //用户一直没中套路，那么点击了这么多次都还是让他继续玩下去，不要卡死程序
        _this._needClickTime = 10; //一共点多少次能够获得奖励，用于显示进度条
        _this._bannerClickTime = 10; //点多少次开始显示bannerr套路用户，可微调   
        _this._clickBtn = null;
        return _this;
    }
    QQCrazyClick2.prototype.onAwake = function () {
        var _this = this;
        this._clickBtn = this.owner.getChildByName("ClickBtn");
        this._clickBtn.on(Laya.Event.CLICK, this, this.ButtonClicked);
        this._getPrize_View = this.owner.getChildByName("GetPrize_View");
        this._prizeCount_Text = this._getPrize_View.getChildByName("PrizeCount_Text");
        this._confirm_Btn = this._getPrize_View.getChildByName("Confirm_Btn");
        this._getPrize_View.visible = false;
        this._clickBar = this.owner.getChildByName("ClickBar").getChildByName("ClickBar");
        this._clickBarOriginalWidth = this._clickBar.width;
        this._clickBar.width = 0;
        this._clickTime = 0;
        this._totalClickTime = 0;
        var self = this;
        Laya.loader.load("ClickGetPrize/quanji.png", Laya.Handler.create(this, function (texture) {
            texture.bitmap.lock = true;
            Laya.loader.load("ClickGetPrize/quanji.sk", Laya.Handler.create(_this, function (bytes) {
                console.log("texture", texture);
                console.log("bytes", bytes);
                var template = new Laya.Templet();
                template.parseData(texture, bytes);
                self.drgon = template.buildArmature();
                self.owner.addChild(self.drgon);
                self.drgon.x = 375;
                self.drgon.y = 610;
                self.drgon.scaleX = 2;
                self.drgon.scaleY = 2;
                self.drgon.parent.setChildIndex(self.drgon, 1);
                self.drgon.play(0, true);
                console.log("quanji 加载完成!!!!", template);
            }), Laya.Handler.create(_this, function () { }), "", 0, false, "", true);
        }), Laya.Handler.create(this, function () { }), "", 0, false, "", true);
    };
    QQCrazyClick2.prototype.onUpdate = function () {
        if (!this._bannerClicked) {
            var spd = 2 + (this._clickBar.width / this._clickBarOriginalWidth) * 6;
            if (this._clickBar.width >= spd) {
                this._clickBar.width -= spd;
            }
            if ((this._clickBar.width / this._clickBarOriginalWidth) + 0.1 < (this._clickTime / this._needClickTime)) {
                this._clickTime--;
            }
        }
    };
    QQCrazyClick2.prototype.openView = function (data) {
        this._compeletFunction = data.Complete;
        this._prizeCount = data.PrizeCount;
        _super.prototype.openView.call(this, data);
    };
    QQCrazyClick2.prototype.OpenPrizeWindow = function () {
        var self = this;
        this._prizeCount_Text.text = this._prizeCount.toString();
        this._getPrize_View.visible = true;
        this._confirm_Btn.once(Laya.Event.CLICK, this, function () {
            if (self._compeletFunction) {
                self._compeletFunction();
            }
            self.closeView();
        });
    };
    QQCrazyClick2.prototype.ShowBanner = function () {
        if (AppSwitchConfig_1.default.getInstance().getAppSwitchData().qqcfg.kuangdianBox == 1) {
            QQMiniGameAPI_1.default.showAppBoxAd(function () {
            });
        }
    };
    QQCrazyClick2.prototype.ButtonClicked = function () {
        var _this = this;
        this._clickTime++;
        this._totalClickTime++;
        if (null != this.drgon) {
            this.drgon.play(1, false);
            this.drgon.once(Laya.Event.STOPPED, this, function () {
                _this.drgon.play(0, true);
            });
        }
        if (this._clickTime > this._needClickTime) {
            this._clickTime = this._needClickTime;
        }
        if (this._clickTime >= this._bannerClickTime) {
            if (this._clickTime >= this._needClickTime) {
                this._clickTime = this._needClickTime - 1;
            }
            if (this._bannerClicked) {
                return;
            }
            this._bannerClicked = true;
            this.ShowBanner();
            Laya.timer.once(2000, this, function () {
                this.BannerClicked();
            });
        }
        else if (this._totalClickTime > this._totalClickTimer) {
            this.BannerClicked();
        }
        var progress = (this._clickTime / this._needClickTime) * this._clickBarOriginalWidth;
        this._clickBar.width = progress;
    };
    QQCrazyClick2.prototype.BannerClicked = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_WudianBanner_Hide);
        this._bannerClicked = true;
        this._clickTime = this._needClickTime;
        this._clickBar.width = this._clickBarOriginalWidth;
        this._clickBtn.visible = false;
        this.OpenPrizeWindow();
    };
    QQCrazyClick2.prototype.onDestroy = function () {
    };
    return QQCrazyClick2;
}(ViewBase_1.default));
exports.default = QQCrazyClick2;
},{"../../../Config/AppSwitchConfig":5,"../../../Event/EventDef":9,"../../../Event/EventMgr":10,"../../../QQMiniGameAPI":56,"../../../View/ViewBase":110}],88:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var QQTemplateViewBase = /** @class */ (function (_super) {
    __extends(QQTemplateViewBase, _super);
    function QQTemplateViewBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    QQTemplateViewBase.prototype.onAwake = function () {
    };
    QQTemplateViewBase.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
    };
    QQTemplateViewBase.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
    };
    return QQTemplateViewBase;
}(ViewBase_1.default));
exports.default = QQTemplateViewBase;
},{"../ViewBase":110}],89:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ScaleBreathingAni = /** @class */ (function (_super) {
    __extends(ScaleBreathingAni, _super);
    function ScaleBreathingAni() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.breathingSpeed = 2000;
        _this.maxScale = 1;
        _this.minScale = 0.9;
        _this._add = false;
        return _this;
    }
    ScaleBreathingAni.prototype.onAwake = function () {
        this._ownerSprite = this.owner;
    };
    ScaleBreathingAni.prototype.onStart = function () {
        this._ownerSprite.scale(this.maxScale, this.maxScale);
    };
    ScaleBreathingAni.prototype.onEnable = function () {
        this._ownerSprite.on(Laya.Event.FOCUS_CHANGE, this, this.onFocusChange);
    };
    ScaleBreathingAni.prototype.onDisable = function () {
        this._ownerSprite.off(Laya.Event.FOCUS_CHANGE, this, this.onFocusChange);
    };
    ScaleBreathingAni.prototype.onUpdate = function () {
        if (this._ownerSprite.visible) {
            this.bgAni();
        }
    };
    ScaleBreathingAni.prototype.bgAni = function () {
        var delta = Math.min(50, Laya.timer.delta);
        if (!this._add) {
            var value = this._ownerSprite.scaleX - Math.min(50, Laya.timer.delta) / this.breathingSpeed * 1;
            value = Math.max(this.minScale, value);
            this._ownerSprite.scale(value, value);
            if (this._ownerSprite.scaleX <= this.minScale) {
                this._add = true;
            }
        }
        else {
            var value = this._ownerSprite.scaleX + Math.min(50, Laya.timer.delta) / this.breathingSpeed * 1;
            value = Math.min(this.maxScale, value);
            this._ownerSprite.scale(value, value);
            if (this._ownerSprite.scaleX >= this.maxScale) {
                this._add = false;
            }
        }
    };
    ScaleBreathingAni.prototype.onFocusChange = function () {
        this._ownerSprite.scale(this.maxScale, this.maxScale);
        this._add = false;
    };
    return ScaleBreathingAni;
}(Laya.Script));
exports.default = ScaleBreathingAni;
},{}],90:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var User_1 = require("../../User/User");
var GameCommonConfig_1 = require("../../Config/GameCommonConfig");
var CachedQQBannerAd_1 = require("../../CachedQQBannerAd");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var SignInRewardView = /** @class */ (function (_super) {
    __extends(SignInRewardView, _super);
    function SignInRewardView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SignInRewardView.prototype.onAwake = function () {
        this._centerZone = this.owner.getChildByName("CenterZone");
        this._signInBtn = this._centerZone.getChildByName("SignInBtn");
        this._normalSignInBtn = this._centerZone.getChildByName("NormalSignInBtn");
        this._rewardText = this._centerZone.getChildByName("RewardText");
        this._closeBtn = this._centerZone.getChildByName("CloseBtn");
    };
    SignInRewardView.prototype.addEvent = function () {
        this._signInBtn.on(Laya.Event.CLICK, this, this.onSignInBtn);
        this._normalSignInBtn.on(Laya.Event.CLICK, this, this.onNormalSignInBtn);
        this._closeBtn.on(Laya.Event.CLICK, this, this.closeView);
    };
    SignInRewardView.prototype.removeEvent = function () {
        this._signInBtn.off(Laya.Event.CLICK, this, this.onSignInBtn);
        this._normalSignInBtn.off(Laya.Event.CLICK, this, this.onNormalSignInBtn);
        this._closeBtn.off(Laya.Event.CLICK, this, this.closeView);
    };
    SignInRewardView.prototype.onShow = function () {
        CachedQQBannerAd_1.default.hide();
        this._rewardText.text = "x" + GameCommonConfig_1.default.getInstance().getGameConfigData().signGetDiamond;
    };
    SignInRewardView.prototype.onSignInBtn = function () {
        if (this.canSignIn()) {
            var self = this;
            this._signInBtn.visible = false;
            QQMiniGameAPI_1.default.showRewardedVideoAd(function (ok) {
                if (ok) {
                    User_1.default.setlastSignInTime(Date.now());
                    var reward = GameCommonConfig_1.default.getInstance().getGameConfigData().signGetDiamond;
                    User_1.default.addCrystal(reward * 3);
                }
                else {
                }
                self.refreshSignInBtnState();
            }, function () {
                self.refreshSignInBtnState();
            });
        }
    };
    SignInRewardView.prototype.onNormalSignInBtn = function () {
        if (this.canSignIn()) {
            User_1.default.setlastSignInTime(Date.now());
            var reward = GameCommonConfig_1.default.getInstance().getGameConfigData().signGetDiamond;
            User_1.default.addCrystal(reward);
            this.refreshSignInBtnState();
        }
    };
    SignInRewardView.prototype.canSignIn = function () {
        var lastDate = new Date(User_1.default.getlastSignInTime());
        var curDate = new Date(Date.now());
        if (Date.now() - User_1.default.getlastSignInTime() >= 86400000 || lastDate.getUTCDay() != curDate.getUTCDay()) {
            return true;
        }
        return false;
    };
    SignInRewardView.prototype.refreshSignInBtnState = function () {
        this._signInBtn.visible = this.canSignIn();
    };
    return SignInRewardView;
}(ViewBase_1.default));
exports.default = SignInRewardView;
},{"../../CachedQQBannerAd":3,"../../Config/GameCommonConfig":6,"../../QQMiniGameAPI":56,"../../User/User":63,"../ViewBase":110}],91:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WudianMgr_1 = require("../../../Mgr/WudianMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var Utilit_1 = require("../../../Utilit");
var TTTemplateViewBase_1 = require("../TTTemplateViewBase");
var TTAPI_1 = require("../../../TTAPI");
var TTGameFailViewTemplate = /** @class */ (function (_super) {
    __extends(TTGameFailViewTemplate, _super);
    function TTGameFailViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._centerZone = null;
        _this._clickTag = false;
        _this._clickTimingTag = false;
        _this._moreGameBtn = null;
        _this._shareBtn = null;
        _this._backBtn = null;
        _this._okBtn = null;
        _this._videoBtn = null;
        return _this;
    }
    TTGameFailViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._centerZone = this.View.getChildByName("CenterZone");
        if (Utilit_1.default.isIphoneX()) {
            this._centerZone.top = this._centerZone.top + 75;
        }
        this._moreGameBtn = this._centerZone.getChildByName("MoreGameBtn");
        this._shareBtn = this._centerZone.getChildByName("ShareBtn");
        this._backBtn = this._centerZone.getChildByName("BackBtn");
        this._okBtn = this._centerZone.getChildByName("OkBtn");
        this._videoBtn = this._centerZone.getChildByName("VideoBtn");
        this._moreGameBtn.visible = AppSwitchConfig_1.default.getInstance().getAppSwitchData().ttcfg.moreGameSwitch == 1;
    };
    TTGameFailViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        if (WudianMgr_1.default.WudianFlag) {
            var yPos = this._centerZone.height - 150;
            this._backBtn.y = yPos;
            this._okBtn.y = yPos;
            this._videoBtn.y = yPos;
        }
        var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
        var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
        Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
        Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
        if (AppSwitchConfig_1.default.getInstance().getAppSwitchData().ttcfg.luping == 1) {
            TTAPI_1.default.shareRecord(function () {
            });
        }
    };
    TTGameFailViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this._backBtn.on(Laya.Event.CLICK, this, this.onBackBtn);
        this._okBtn.on(Laya.Event.CLICK, this, this.onOkBtn);
        this._videoBtn.on(Laya.Event.CLICK, this, this.onOkBtn);
        this._moreGameBtn.on(Laya.Event.CLICK, this, this.onMoreGameBtn);
        this._shareBtn.on(Laya.Event.CLICK, this, this.onShareBtn);
    };
    TTGameFailViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this._backBtn.off(Laya.Event.CLICK, this, this.onBackBtn);
        this._okBtn.off(Laya.Event.CLICK, this, this.onOkBtn);
        this._videoBtn.off(Laya.Event.CLICK, this, this.onOkBtn);
        this._moreGameBtn.off(Laya.Event.CLICK, this, this.onMoreGameBtn);
        this._shareBtn.off(Laya.Event.CLICK, this, this.onShareBtn);
    };
    TTGameFailViewTemplate.prototype.onBackBtn = function () {
        if (!this._clickTag && WudianMgr_1.default.WudianFlag) {
            var self = this;
            if (!this._clickTimingTag) {
                this._clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    TTGameFailViewTemplate.prototype.onOkBtn = function () {
        if (!this._clickTag && WudianMgr_1.default.WudianFlag) {
            var self = this;
            if (!this._clickTimingTag) {
                this._clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    TTGameFailViewTemplate.prototype.onVideoBtn = function () {
        if (!this._clickTag && WudianMgr_1.default.WudianFlag) {
            var self = this;
            if (!this._clickTimingTag) {
                this._clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
            }
            return;
        }
        TTAPI_1.default.shareRecord(function () {
        });
    };
    TTGameFailViewTemplate.prototype.BannerUp = function () {
        TTAPI_1.default.showBanner();
    };
    TTGameFailViewTemplate.prototype.BtnUp = function () {
        this._clickTag = true;
        this._backBtn.y = 720;
        this._okBtn.y = 720;
        this._videoBtn.y = 720;
    };
    TTGameFailViewTemplate.prototype.onMoreGameBtn = function () {
        TTAPI_1.default.showMoreGamesModal(function () {
        }, function () {
        });
    };
    TTGameFailViewTemplate.prototype.onShareBtn = function () {
        TTAPI_1.default.share(function () {
        });
    };
    TTGameFailViewTemplate.prototype.onDestroy = function () {
        TTAPI_1.default.hideBanner();
    };
    return TTGameFailViewTemplate;
}(TTTemplateViewBase_1.default));
exports.default = TTGameFailViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../Mgr/WudianMgr":50,"../../../TTAPI":62,"../../../Utilit":64,"../TTTemplateViewBase":94}],92:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../../../Event/EventMgr");
var EventDef_1 = require("../../../Event/EventDef");
var User_1 = require("../../../User/User");
var Utilit_1 = require("../../../Utilit");
var TTTemplateViewBase_1 = require("../TTTemplateViewBase");
var TTAPI_1 = require("../../../TTAPI");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var TTMainViewTemplate = /** @class */ (function (_super) {
    __extends(TTMainViewTemplate, _super);
    function TTMainViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._centerZone = null;
        _this._startBtn = null;
        _this._levelNum = null;
        _this._moneyNum = null;
        _this._moreGameBtn = null;
        _this._shareBtn = null;
        return _this;
    }
    TTMainViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._centerZone = this.View.getChildByName("CenterZone");
        this._moreGameBtn = this._centerZone.getChildByName("MoreGameBtn");
        this._shareBtn = this._centerZone.getChildByName("ShareBtn");
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            if (Utilit_1.default.isIphoneX()) {
                this._centerZone.top = this._centerZone.top + 75;
            }
        }
        else {
            this._centerZone.top = this._centerZone.top - 200;
            if (Utilit_1.default.isIphoneX()) {
                this._centerZone.top = this._centerZone.top + 75;
            }
        }
        this._startBtn = this._centerZone.getChildByName("StartBtn");
        this._levelNum = this._centerZone.getChildByName("LevelInfo").getChildByName("LevelNum");
        this._moneyNum = this._centerZone.getChildByName("MoneyInfo").getChildByName("MoneyNum");
        this._moreGameBtn.visible = AppSwitchConfig_1.default.getInstance().getAppSwitchData().ttcfg.moreGameSwitch == 1;
    };
    TTMainViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        this._moneyNum.value = String(User_1.default.getMoney());
        this._levelNum.value = String(User_1.default.getLeveNum());
    };
    TTMainViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this._startBtn.on(Laya.Event.CLICK, this, this.onStartBtn);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_OnUserMoneyChange, this, this.onUserMoneyChange);
        this._moreGameBtn.on(Laya.Event.CLICK, this, this.onMoreGameBtn);
        this._shareBtn.on(Laya.Event.CLICK, this, this.onShareBtn);
    };
    TTMainViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this._startBtn.off(Laya.Event.CLICK, this, this.onStartBtn);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Game_OnUserMoneyChange, this, this.onUserMoneyChange);
        this._moreGameBtn.off(Laya.Event.CLICK, this, this.onMoreGameBtn);
        this._shareBtn.off(Laya.Event.CLICK, this, this.onShareBtn);
    };
    TTMainViewTemplate.prototype.onStartBtn = function () {
    };
    TTMainViewTemplate.prototype.onMoreGameBtn = function () {
        TTAPI_1.default.showMoreGamesModal(function () {
        }, function () {
        });
    };
    TTMainViewTemplate.prototype.onShareBtn = function () {
        TTAPI_1.default.share(function () {
        });
    };
    TTMainViewTemplate.prototype.onUserMoneyChange = function (para) {
        var curr = para.curr;
        var last = para.last;
        this._moneyNum.value = String(curr);
    };
    return TTMainViewTemplate;
}(TTTemplateViewBase_1.default));
exports.default = TTMainViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../Event/EventDef":9,"../../../Event/EventMgr":10,"../../../TTAPI":62,"../../../User/User":63,"../../../Utilit":64,"../TTTemplateViewBase":94}],93:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../../View/ViewBase");
var EventDef_1 = require("../../../Event/EventDef");
var EventMgr_1 = require("../../../Event/EventMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var TTAPI_1 = require("../../../TTAPI");
var TTCrazyClick = /** @class */ (function (_super) {
    __extends(TTCrazyClick, _super);
    function TTCrazyClick() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._clickBar = null;
        _this._totalClickTimer = 15; //用户一直没中套路，那么点击了这么多次都还是让他继续玩下去，不要卡死程序
        _this._needClickTime = 10; //一共点多少次能够获得奖励，用于显示进度条
        _this._bannerClickTime = 10; //点多少次开始显示bannerr套路用户，可微调   
        return _this;
    }
    TTCrazyClick.prototype.onAwake = function () {
        var _this = this;
        this._click_Btn = this.owner.getChildByName("Click_Btn");
        this._click_Btn.on(Laya.Event.CLICK, this, this.ButtonClicked);
        this._arrow_Img = this._click_Btn.getChildByName("Arrow_Img");
        this._getPrize_View = this.owner.getChildByName("GetPrize_View");
        this._prizeCount_Text = this._getPrize_View.getChildByName("PrizeCount_Text");
        this._confirm_Btn = this._getPrize_View.getChildByName("Confirm_Btn");
        this._getPrize_View.visible = false;
        this._clickBar = this.owner.getChildByName("ClickBar").getChildByName("ClickBar");
        this._clickBarOriginalWidth = this._clickBar.width;
        this._clickBar.width = 0;
        this._clickTime = 0;
        this._totalClickTime = 0;
        var self = this;
        Laya.loader.load("ClickGetPrize/quanji.png", Laya.Handler.create(this, function (texture) {
            texture.bitmap.lock = true;
            Laya.loader.load("ClickGetPrize/quanji.sk", Laya.Handler.create(_this, function (bytes) {
                console.log("texture", texture);
                console.log("bytes", bytes);
                var template = new Laya.Templet();
                template.parseData(texture, bytes);
                self.drgon = template.buildArmature();
                self.owner.addChild(self.drgon);
                self.drgon.x = 375;
                self.drgon.y = 610;
                self.drgon.scaleX = 2;
                self.drgon.scaleY = 2;
                self.drgon.parent.setChildIndex(self.drgon, 1);
                self.drgon.play(0, true);
                console.log("quanji 加载完成!!!!", template);
            }), Laya.Handler.create(_this, function () { }), "", 0, false, "", true);
        }), Laya.Handler.create(this, function () { }), "", 0, false, "", true);
    };
    TTCrazyClick.prototype.onUpdate = function () {
        if (this._arrowUp) {
            this._arrow_Img.top += Laya.timer.delta / 5;
            if (this._arrow_Img.top > -140) {
                this._arrowUp = false;
            }
        }
        else {
            this._arrow_Img.top -= Laya.timer.delta / 5;
            if (this._arrow_Img.top < -180) {
                this._arrowUp = true;
            }
        }
        if (!this._bannerClicked) {
            var spd = 2 + (this._clickBar.width / this._clickBarOriginalWidth) * 6;
            if (this._clickBar.width >= spd) {
                this._clickBar.width -= spd;
            }
            if ((this._clickBar.width / this._clickBarOriginalWidth) + 0.1 < (this._clickTime / this._needClickTime)) {
                this._clickTime--;
            }
        }
    };
    TTCrazyClick.prototype.openView = function (data) {
        this._compeletFunction = data.Complete;
        this._prizeCount = data.PrizeCount;
        _super.prototype.openView.call(this, data);
    };
    TTCrazyClick.prototype.OpenPrizeWindow = function () {
        var self = this;
        this._prizeCount_Text.text = this._prizeCount.toString();
        this._getPrize_View.visible = true;
        this._confirm_Btn.once(Laya.Event.CLICK, this, function () {
            TTAPI_1.default.hideBanner();
            if (self._compeletFunction) {
                self._compeletFunction();
            }
            self.closeView();
        });
    };
    TTCrazyClick.prototype.ShowBanner = function () {
        if (AppSwitchConfig_1.default.getInstance().getAppSwitchData().ttcfg.kuangdianBanner == 1) {
            TTAPI_1.default.showBanner();
        }
    };
    TTCrazyClick.prototype.ButtonClicked = function () {
        var _this = this;
        this._clickTime++;
        this._totalClickTime++;
        if (null != this.drgon) {
            this.drgon.play(1, false);
            this.drgon.once(Laya.Event.STOPPED, this, function () {
                _this.drgon.play(0, true);
            });
        }
        if (this._clickTime > this._needClickTime) {
            this._clickTime = this._needClickTime;
        }
        if (this._clickTime >= this._bannerClickTime) {
            if (this._clickTime >= this._needClickTime) {
                this._clickTime = this._needClickTime - 1;
            }
            if (this._bannerClicked) {
                return;
            }
            this._bannerClicked = true;
            this.ShowBanner();
            Laya.timer.once(2000, this, function () {
                this.BannerClicked();
            });
        }
        else if (this._totalClickTime > this._totalClickTimer) {
            this.BannerClicked();
        }
        var progress = (this._clickTime / this._needClickTime) * this._clickBarOriginalWidth;
        this._clickBar.width = progress;
    };
    TTCrazyClick.prototype.BannerClicked = function () {
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.AD_WudianBanner_Hide);
        this._bannerClicked = true;
        this._clickTime = this._needClickTime;
        this._clickBar.width = this._clickBarOriginalWidth;
        this._click_Btn.visible = false;
        this.OpenPrizeWindow();
    };
    TTCrazyClick.prototype.onDestroy = function () {
        TTAPI_1.default.hideBanner();
    };
    return TTCrazyClick;
}(ViewBase_1.default));
exports.default = TTCrazyClick;
},{"../../../Config/AppSwitchConfig":5,"../../../Event/EventDef":9,"../../../Event/EventMgr":10,"../../../TTAPI":62,"../../../View/ViewBase":110}],94:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var TTTemplateViewBase = /** @class */ (function (_super) {
    __extends(TTTemplateViewBase, _super);
    function TTTemplateViewBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TTTemplateViewBase.prototype.onAwake = function () {
    };
    TTTemplateViewBase.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
    };
    TTTemplateViewBase.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
    };
    return TTTemplateViewBase;
}(ViewBase_1.default));
exports.default = TTTemplateViewBase;
},{"../ViewBase":110}],95:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TemplateViewBase_1 = require("../TemplateViewBase");
var KRQ_VLoopAd_1 = require("../../../KRQ/Com/KRQ_LoopAd/KRQ_VLoopAd");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var Exprot2ViewTemplate = /** @class */ (function (_super) {
    __extends(Exprot2ViewTemplate, _super);
    function Exprot2ViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._continueBtn = null;
        _this._krqVLoopAd = null;
        return _this;
    }
    Exprot2ViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._krqVLoopAd = this.View.getChildByName("KRQ_VLoopAd").getComponent(KRQ_VLoopAd_1.default);
        this._krqVLoopAd.useMovePause = false;
        this._continueBtn = this.View.getChildByName("ContinueBtn");
        this._continueBtn.visible = false;
        var self = this;
        Laya.timer.once(AppSwitchConfig_1.default.getInstance().getAppSwitchData().continueBtnDelayTime * 1000, this, function () {
            self._continueBtn.visible = true;
        });
    };
    Exprot2ViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
    };
    Exprot2ViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this._continueBtn.on(Laya.Event.CLICK, this, this.onContinueBtn);
    };
    Exprot2ViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this._continueBtn.off(Laya.Event.CLICK, this, this.onContinueBtn);
    };
    Exprot2ViewTemplate.prototype.onContinueBtn = function () {
    };
    return Exprot2ViewTemplate;
}(TemplateViewBase_1.default));
exports.default = Exprot2ViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../KRQ/Com/KRQ_LoopAd/KRQ_VLoopAd":34,"../TemplateViewBase":104}],96:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TemplateViewBase_1 = require("../TemplateViewBase");
var KRQ_VLoopAd_1 = require("../../../KRQ/Com/KRQ_LoopAd/KRQ_VLoopAd");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var ExportViewTemplate = /** @class */ (function (_super) {
    __extends(ExportViewTemplate, _super);
    function ExportViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._continueBtn = null;
        _this._krqVLoopAd = null;
        return _this;
    }
    ExportViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._krqVLoopAd = this.View.getChildByName("KRQ_VLoopAd").getComponent(KRQ_VLoopAd_1.default);
        this._krqVLoopAd.useMovePause = false;
        this._continueBtn = this._krqVLoopAd.Sprite.getChildByName("ContinueBtn");
        this._continueBtn.visible = false;
        var self = this;
        Laya.timer.once(AppSwitchConfig_1.default.getInstance().getAppSwitchData().continueBtnDelayTime * 1000, this, function () {
            self._continueBtn.visible = true;
        });
    };
    ExportViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
    };
    ExportViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this._continueBtn.on(Laya.Event.CLICK, this, this.onContinueBtn);
    };
    ExportViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this._continueBtn.off(Laya.Event.CLICK, this, this.onContinueBtn);
    };
    ExportViewTemplate.prototype.onContinueBtn = function () {
    };
    return ExportViewTemplate;
}(TemplateViewBase_1.default));
exports.default = ExportViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../KRQ/Com/KRQ_LoopAd/KRQ_VLoopAd":34,"../TemplateViewBase":104}],97:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TemplateViewBase_1 = require("../TemplateViewBase");
var WudianMgr_1 = require("../../../Mgr/WudianMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var WXADMgr_1 = require("../../../Mgr/WXADMgr");
var KRQ_RollSingleAd_1 = require("../../../KRQ/Com/KRQ_RollSingleAd");
var Utilit_1 = require("../../../Utilit");
var ViewMgr_1 = require("../../../Mgr/ViewMgr");
var GameFailViewTemplate = /** @class */ (function (_super) {
    __extends(GameFailViewTemplate, _super);
    function GameFailViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._centerZone = null;
        _this._backBtn = null;
        _this._continueBtn = null;
        _this._rollSingleAds = new Array();
        _this._clickTag = false;
        _this._clickTimingTag = false;
        _this._banner = null;
        return _this;
    }
    GameFailViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._centerZone = this.View.getChildByName("CenterZone");
        if (Utilit_1.default.isIphoneX()) {
            this._centerZone.top = this._centerZone.top + 75;
        }
        this._backBtn = this._centerZone.getChildByName("BackBtn");
        this._continueBtn = this._centerZone.getChildByName("ContinueBtn");
        for (var i = 0; i < this._centerZone.numChildren; ++i) {
            var ad = this._centerZone.getChildAt(i).getComponent(KRQ_RollSingleAd_1.default);
            if (null == ad)
                continue;
            this._rollSingleAds.push(ad);
        }
        if (WudianMgr_1.default.WudianFlag) {
            this.HistoryBtn.visible = false;
        }
    };
    GameFailViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        if (WudianMgr_1.default.WudianFlag) {
            var yPos = this._centerZone.height - 150;
            this._backBtn.y = yPos;
            this._continueBtn.y = yPos;
        }
        var _loop_1 = function (i) {
            var ad = this_1._rollSingleAds[i];
            Laya.timer.once(150, this_1, function () {
                ad.playAni();
            });
        };
        var this_1 = this;
        for (var i = 0; i < this._rollSingleAds.length; ++i) {
            _loop_1(i);
        }
        var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
        var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
        Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
        Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
    };
    GameFailViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this._backBtn.on(Laya.Event.CLICK, this, this.onBackBtn);
        this._continueBtn.on(Laya.Event.CLICK, this, this.onContinueBtn);
    };
    GameFailViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this._backBtn.off(Laya.Event.CLICK, this, this.onBackBtn);
        this._continueBtn.off(Laya.Event.CLICK, this, this.onContinueBtn);
    };
    GameFailViewTemplate.prototype.onBackBtn = function () {
        if (!this._clickTag && WudianMgr_1.default.WudianFlag) {
            var self = this;
            if (!this._clickTimingTag) {
                this._clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    GameFailViewTemplate.prototype.onContinueBtn = function () {
        if (!this._clickTag && WudianMgr_1.default.WudianFlag) {
            var self = this;
            if (!this._clickTimingTag) {
                this._clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    GameFailViewTemplate.prototype.BannerUp = function () {
        var self = this;
        WXADMgr_1.default.getBanner(function (banner) {
            if (null != self._banner) {
                self._banner.hide();
            }
            self._banner = banner;
            if (null != self._banner) {
                self._banner.show();
            }
            self.HistoryBtn.visible = true;
        });
    };
    GameFailViewTemplate.prototype.BtnUp = function () {
        this._clickTag = true;
        this._backBtn.y = 720;
        this._continueBtn.y = 720;
    };
    GameFailViewTemplate.prototype.onDestroy = function () {
        if (null != this._banner) {
            this._banner.hide();
        }
        this._banner = null;
    };
    GameFailViewTemplate.prototype.onHistoryBtn = function () {
        var self = this;
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.MiniGameView, null, function (v) {
            self.hide();
            if (null != self._banner) {
                self._banner.hide();
            }
            v.onCloseEvent = function () {
                if (null != self.View && !self.View.destroyed) {
                    self.show();
                    if (null != self._banner) {
                        self._banner.show();
                    }
                }
            };
        });
    };
    return GameFailViewTemplate;
}(TemplateViewBase_1.default));
exports.default = GameFailViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../KRQ/Com/KRQ_RollSingleAd":36,"../../../Mgr/ViewMgr":48,"../../../Mgr/WXADMgr":49,"../../../Mgr/WudianMgr":50,"../../../Utilit":64,"../TemplateViewBase":104}],98:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TemplateViewBase_1 = require("../TemplateViewBase");
var WXADMgr_1 = require("../../../Mgr/WXADMgr");
var WudianMgr_1 = require("../../../Mgr/WudianMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var KRQ_RollSingleAd_1 = require("../../../KRQ/Com/KRQ_RollSingleAd");
var Utilit_1 = require("../../../Utilit");
var ViewMgr_1 = require("../../../Mgr/ViewMgr");
var GameWinViewTemplate = /** @class */ (function (_super) {
    __extends(GameWinViewTemplate, _super);
    function GameWinViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._centerZone = null;
        _this._backBtn = null;
        _this._nextBtn = null;
        _this._rollSingleAds = new Array();
        _this._clickTag = false;
        _this._clickTimingTag = false;
        _this._banner = null;
        return _this;
    }
    GameWinViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._centerZone = this.View.getChildByName("CenterZone");
        if (Utilit_1.default.isIphoneX()) {
            this._centerZone.top = this._centerZone.top + 75;
        }
        this._backBtn = this._centerZone.getChildByName("BackBtn");
        this._nextBtn = this._centerZone.getChildByName("NextBtn");
        for (var i = 0; i < this._centerZone.numChildren; ++i) {
            var ad = this._centerZone.getChildAt(i).getComponent(KRQ_RollSingleAd_1.default);
            if (null == ad)
                continue;
            this._rollSingleAds.push(ad);
        }
        if (WudianMgr_1.default.WudianFlag) {
            this.HistoryBtn.visible = false;
        }
    };
    GameWinViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        if (WudianMgr_1.default.WudianFlag) {
            var yPos = this._centerZone.height - 150;
            this._backBtn.y = yPos;
            this._nextBtn.y = yPos;
        }
        var _loop_1 = function (i) {
            var ad = this_1._rollSingleAds[i];
            Laya.timer.once(150, this_1, function () {
                ad.playAni();
            });
        };
        var this_1 = this;
        for (var i = 0; i < this._rollSingleAds.length; ++i) {
            _loop_1(i);
        }
        var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
        var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
        Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
        Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
    };
    GameWinViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this._backBtn.on(Laya.Event.CLICK, this, this.onBackBtn);
        this._nextBtn.on(Laya.Event.CLICK, this, this.onNextBtn);
    };
    GameWinViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this._backBtn.off(Laya.Event.CLICK, this, this.onBackBtn);
        this._nextBtn.off(Laya.Event.CLICK, this, this.onNextBtn);
    };
    GameWinViewTemplate.prototype.onBackBtn = function () {
        if (!this._clickTag && WudianMgr_1.default.WudianFlag) {
            var self = this;
            if (!this._clickTimingTag) {
                this._clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    GameWinViewTemplate.prototype.onNextBtn = function () {
        if (!this._clickTag && WudianMgr_1.default.WudianFlag) {
            var self = this;
            if (!this._clickTimingTag) {
                this._clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.getInstance().getAppSwitchData().bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    GameWinViewTemplate.prototype.BannerUp = function () {
        var self = this;
        WXADMgr_1.default.getBanner(function (banner) {
            if (null != self._banner) {
                self._banner.hide();
            }
            self._banner = banner;
            if (null != self._banner) {
                self._banner.show();
            }
            self.HistoryBtn.visible = true;
        });
    };
    GameWinViewTemplate.prototype.BtnUp = function () {
        this._clickTag = true;
        this._backBtn.y = 720;
        this._nextBtn.y = 720;
    };
    GameWinViewTemplate.prototype.onDestroy = function () {
        if (null != this._banner) {
            this._banner.hide();
        }
        this._banner = null;
    };
    GameWinViewTemplate.prototype.onHistoryBtn = function () {
        var self = this;
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.MiniGameView, null, function (v) {
            self.hide();
            if (null != self._banner) {
                self._banner.hide();
            }
            v.onCloseEvent = function () {
                if (null != self.View && !self.View.destroyed) {
                    self.show();
                    if (null != self._banner) {
                        self._banner.show();
                    }
                }
            };
        });
    };
    return GameWinViewTemplate;
}(TemplateViewBase_1.default));
exports.default = GameWinViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../KRQ/Com/KRQ_RollSingleAd":36,"../../../Mgr/ViewMgr":48,"../../../Mgr/WXADMgr":49,"../../../Mgr/WudianMgr":50,"../../../Utilit":64,"../TemplateViewBase":104}],99:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TemplateViewBase_1 = require("../TemplateViewBase");
var KRQ_Main_1 = require("../../../KRQ/ViewCom/KRQ_Main");
var Utilit_1 = require("../../../Utilit");
var InGameShowType;
(function (InGameShowType) {
    InGameShowType[InGameShowType["Normal"] = 0] = "Normal";
    InGameShowType[InGameShowType["NoLoopAd"] = 1] = "NoLoopAd";
    InGameShowType[InGameShowType["NoBannerAd"] = 2] = "NoBannerAd";
})(InGameShowType = exports.InGameShowType || (exports.InGameShowType = {}));
var InGameViewTemplate = /** @class */ (function (_super) {
    __extends(InGameViewTemplate, _super);
    function InGameViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._centerZone = null;
        _this._krqMain = null;
        return _this;
    }
    InGameViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._centerZone = this.View.getChildByName("CenterZone");
        this._krqMain = this.View.getChildByName("KRQ_Main").getComponent(KRQ_Main_1.default);
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            if (Utilit_1.default.isIphoneX()) {
                this._centerZone.top = this._centerZone.top + 75;
            }
        }
        else {
            this._centerZone.top = this._centerZone.top - 200;
            if (Utilit_1.default.isIphoneX()) {
                this._centerZone.top = this._centerZone.top + 75;
            }
        }
    };
    InGameViewTemplate.prototype.openView = function (data) {
        _super.prototype.openView.call(this, data);
        if (null != data && null != data.showType) {
            var showType = data.showType;
            switch (showType) {
                case InGameShowType.Normal:
                    this._krqMain.switchState(KRQ_Main_1.KRQ_MainState.Normal);
                    break;
                case InGameShowType.NoLoopAd:
                    this._krqMain.switchState(KRQ_Main_1.KRQ_MainState.NoLoopAd);
                    break;
                case InGameShowType.NoBannerAd:
                    this._krqMain.switchState(KRQ_Main_1.KRQ_MainState.NoBannerAd);
                    break;
            }
        }
    };
    InGameViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
    };
    InGameViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
    };
    InGameViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
    };
    return InGameViewTemplate;
}(TemplateViewBase_1.default));
exports.default = InGameViewTemplate;
},{"../../../KRQ/ViewCom/KRQ_Main":41,"../../../Utilit":64,"../TemplateViewBase":104}],100:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TemplateViewBase_1 = require("../TemplateViewBase");
var KRQ_Main_1 = require("../../../KRQ/ViewCom/KRQ_Main");
var EventMgr_1 = require("../../../Event/EventMgr");
var EventDef_1 = require("../../../Event/EventDef");
var User_1 = require("../../../User/User");
var Utilit_1 = require("../../../Utilit");
var MainViewTemplate = /** @class */ (function (_super) {
    __extends(MainViewTemplate, _super);
    function MainViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._krqMain = null;
        _this._centerZone = null;
        _this._startBtn = null;
        _this._levelNum = null;
        _this._moneyNum = null;
        return _this;
    }
    MainViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._krqMain = this.View.getChildByName("KRQ_Main").getComponent(KRQ_Main_1.default);
        this._centerZone = this.View.getChildByName("CenterZone");
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            if (Utilit_1.default.isIphoneX()) {
                this._centerZone.top = this._centerZone.top + 75;
            }
        }
        else {
            this._centerZone.top = this._centerZone.top - 200;
            if (Utilit_1.default.isIphoneX()) {
                this._centerZone.top = this._centerZone.top + 75;
            }
        }
        this._startBtn = this._centerZone.getChildByName("StartBtn");
        this._levelNum = this._centerZone.getChildByName("LevelInfo").getChildByName("LevelNum");
        this._moneyNum = this._centerZone.getChildByName("MoneyInfo").getChildByName("MoneyNum");
    };
    MainViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        this._moneyNum.value = String(User_1.default.getMoney());
        this._levelNum.value = String(User_1.default.getLeveNum());
    };
    MainViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this._startBtn.on(Laya.Event.CLICK, this, this.onStartBtn);
        EventMgr_1.default.instance.regEvemt(EventDef_1.EventDef.Game_OnUserMoneyChange, this, this.onUserMoneyChange);
    };
    MainViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this._startBtn.off(Laya.Event.CLICK, this, this.onStartBtn);
        EventMgr_1.default.instance.removeEvent(EventDef_1.EventDef.Game_OnUserMoneyChange, this, this.onUserMoneyChange);
    };
    MainViewTemplate.prototype.onStartBtn = function () {
    };
    MainViewTemplate.prototype.onUserMoneyChange = function (para) {
        var curr = para.curr;
        var last = para.last;
        this._moneyNum.value = String(curr);
    };
    return MainViewTemplate;
}(TemplateViewBase_1.default));
exports.default = MainViewTemplate;
},{"../../../Event/EventDef":9,"../../../Event/EventMgr":10,"../../../KRQ/ViewCom/KRQ_Main":41,"../../../User/User":63,"../../../Utilit":64,"../TemplateViewBase":104}],101:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../ViewBase");
var KRQ_History_1 = require("../../../KRQ/Com/KRQ_History/KRQ_History");
var MiniGameViewTemplate = /** @class */ (function (_super) {
    __extends(MiniGameViewTemplate, _super);
    function MiniGameViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._krqhistory = null;
        return _this;
    }
    MiniGameViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._krqhistory = this.View.getChildByName("KRQ_History").getComponent(KRQ_History_1.default);
        var self = this;
        this._krqhistory.OnBackBtnClick = function () {
            self.closeView();
        };
    };
    MiniGameViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
    };
    MiniGameViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
    };
    MiniGameViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
    };
    return MiniGameViewTemplate;
}(ViewBase_1.default));
exports.default = MiniGameViewTemplate;
},{"../../../KRQ/Com/KRQ_History/KRQ_History":30,"../../ViewBase":110}],102:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../ViewBase");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var OPPOAPI_1 = require("../../../OPPOAPI");
var WudianMgr_1 = require("../../../Mgr/WudianMgr");
var OPPONativeAdViewTemplate = /** @class */ (function (_super) {
    __extends(OPPONativeAdViewTemplate, _super);
    function OPPONativeAdViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._nativeAd = null;
        _this._curAdItem = null;
        return _this;
    }
    OPPONativeAdViewTemplate.prototype.onAwake = function () {
        this._centerZone = this.owner.getChildByName("CenterZone");
        this._display = this._centerZone.getChildByName("Display");
        this._okBtn = this._centerZone.getChildByName("OkBtn");
        this._closeBtn = this._centerZone.getChildByName("CloseBtn");
        this._bg = this.owner.getChildByName("BG");
    };
    OPPONativeAdViewTemplate.prototype.onEnable = function () {
        var _this = this;
        _super.prototype.onEnable.call(this);
        this.loadAd();
        this._bg.height = Laya.stage.height;
        this._closeBtn.visible = false;
        Laya.timer.once(AppSwitchConfig_1.default.getInstance().getAppSwitchData().oppocfg.btnShowTimer, this, function () {
            _this._closeBtn.visible = true;
        });
    };
    OPPONativeAdViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this._okBtn.on(Laya.Event.CLICK, this, this.onOkBtn);
        this._closeBtn.on(Laya.Event.CLICK, this, this.onCloseBtn);
        this._display.on(Laya.Event.CLICK, this, this.onDisplayClick);
    };
    OPPONativeAdViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this._okBtn.off(Laya.Event.CLICK, this, this.onOkBtn);
        this._closeBtn.off(Laya.Event.CLICK, this, this.onCloseBtn);
        this._display.off(Laya.Event.CLICK, this, this.onDisplayClick);
    };
    OPPONativeAdViewTemplate.prototype.loadAd = function () {
        var self = this;
        var ipBlocked = WudianMgr_1.default.GetIpBlocked();
        if (!ipBlocked) {
            self.closeView();
            return;
        }
        if (Laya.Browser.onQGMiniGame) {
            if (this._nativeAd) {
                this._nativeAd.destroy();
                this._nativeAd = null;
            }
            this._curAdItem = null;
            this._nativeAd = qg.createNativeAd({
                posId: OPPOAPI_1.default.NativeAdId
            });
            this._nativeAd.load();
            this._nativeAd.onLoad(function (res) {
                console.log("原生广告加载成功：", res);
                var adlist = res.adList;
                for (var i = 0; i < adlist.length; ++i) {
                    var ad = adlist[i];
                    console.log("原生广告数据：", i);
                    for (var key in ad) {
                        console.log(key, ad[key]);
                    }
                }
                self._curAdItem = adlist[Math.floor(Math.random() * adlist.length)];
                if (null != self._curAdItem) {
                    for (var i = 0; i < self._curAdItem.imgUrlList.length; ++i) {
                        console.log("imgUrlList : ", i + " ", self._curAdItem.imgUrlList[i]);
                    }
                    var imgulr = self._curAdItem.imgUrlList[Math.floor(Math.random() * self._curAdItem.imgUrlList.length)];
                    self._display.loadImage(imgulr);
                    self._nativeAd.reportAdShow({
                        adId: self._curAdItem.adId
                    });
                    console.log("加载图片", imgulr);
                    console.log("点击上报！！！");
                }
                self._centerZone.visible = true;
            });
            this._nativeAd.onError(function (res) {
                console.log("原生广告加载失败：", res);
                for (var key in res) {
                    console.log(key, res[key]);
                }
                self.closeView();
            });
            this._centerZone.visible = false;
        }
    };
    OPPONativeAdViewTemplate.prototype.onCloseBtn = function () {
        this.closeView();
    };
    OPPONativeAdViewTemplate.prototype.onOkBtn = function () {
        if (Math.random() * 100 <= AppSwitchConfig_1.default.getInstance().getAppSwitchData().oppocfg.yuansheng) {
            console.log("进入变态广告");
            this.onDisplayClick();
        }
        this.closeView();
    };
    OPPONativeAdViewTemplate.prototype.onDisplayClick = function () {
        if (null != this._nativeAd && null != this._curAdItem) {
            console.log("点击上报！！！");
            this._nativeAd.reportAdClick({
                adId: this._curAdItem.adId
            });
        }
    };
    OPPONativeAdViewTemplate.prototype.onDestroy = function () {
        _super.prototype.onDestroy.call(this);
        if (Laya.Browser.onQGMiniGame) {
            if (this._nativeAd) {
                this._nativeAd.destroy();
            }
            this._nativeAd = null;
            this._curAdItem = null;
        }
    };
    return OPPONativeAdViewTemplate;
}(ViewBase_1.default));
exports.default = OPPONativeAdViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../Mgr/WudianMgr":50,"../../../OPPOAPI":55,"../../ViewBase":110}],103:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TemplateViewBase_1 = require("../TemplateViewBase");
var RewardViewTemplate = /** @class */ (function (_super) {
    __extends(RewardViewTemplate, _super);
    function RewardViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._centerZone = null;
        _this._rewardBtn = null;
        _this._skipBtn = null;
        return _this;
    }
    RewardViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._centerZone = this.View.getChildByName("CenterZone");
        this._rewardBtn = this._centerZone.getChildByName("RewradBtn");
        this._skipBtn = this._centerZone.getChildByName("SkipBtn");
    };
    RewardViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
    };
    RewardViewTemplate.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this._rewardBtn.on(Laya.Event.CLICK, this, this.onRewardBtn);
        this._skipBtn.on(Laya.Event.CLICK, this, this.onSkipBtn);
    };
    RewardViewTemplate.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this._rewardBtn.off(Laya.Event.CLICK, this, this.onRewardBtn);
        this._skipBtn.off(Laya.Event.CLICK, this, this.onSkipBtn);
    };
    RewardViewTemplate.prototype.onRewardBtn = function () {
    };
    RewardViewTemplate.prototype.onSkipBtn = function () {
    };
    return RewardViewTemplate;
}(TemplateViewBase_1.default));
exports.default = RewardViewTemplate;
},{"../TemplateViewBase":104}],104:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var Utilit_1 = require("../../Utilit");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var TemplateViewBase = /** @class */ (function (_super) {
    __extends(TemplateViewBase, _super);
    function TemplateViewBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._historyBtn = null;
        _this._topZone = null;
        return _this;
    }
    Object.defineProperty(TemplateViewBase.prototype, "HistoryBtn", {
        get: function () {
            if (null == this._historyBtn) {
                this._historyBtn = this.TopZone.getChildByName("HistoryBtn");
            }
            return this._historyBtn;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TemplateViewBase.prototype, "TopZone", {
        get: function () {
            if (null == this._topZone) {
                this._topZone = this.View.getChildByName("TopZone");
            }
            return this._topZone;
        },
        enumerable: true,
        configurable: true
    });
    TemplateViewBase.prototype.onAwake = function () {
        this._topZone = this.View.getChildByName("TopZone");
        if (Utilit_1.default.isIphoneX()) {
            this._topZone.top = this._topZone.top + 75;
        }
        this._historyBtn = this._topZone.getChildByName("HistoryBtn");
        if (Laya.Browser.onQGMiniGame) {
            this._historyBtn.visible = false;
        }
    };
    TemplateViewBase.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this.HistoryBtn.on(Laya.Event.CLICK, this, this.onHistoryBtn);
    };
    TemplateViewBase.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this.HistoryBtn.off(Laya.Event.CLICK, this, this.onHistoryBtn);
    };
    TemplateViewBase.prototype.onHistoryBtn = function () {
        var self = this;
        ViewMgr_1.default.instance.openView(ViewMgr_1.ViewDef.MiniGameView, null, function (v) {
            self.hide();
            v.onCloseEvent = function () {
                if (null != self.View && !self.View.destroyed) {
                    self.show();
                }
            };
        });
    };
    return TemplateViewBase;
}(ViewBase_1.default));
exports.default = TemplateViewBase;
},{"../../Mgr/ViewMgr":48,"../../Utilit":64,"../ViewBase":110}],105:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var TipsView = /** @class */ (function (_super) {
    __extends(TipsView, _super);
    function TipsView() {
        return _super.call(this) || this;
    }
    TipsView.prototype.onAwake = function () {
        this._bg = this.owner.getChildByName("Bg");
        this._bg.x = Laya.stage.width / 2 - this._bg.width / 2;
        this._tipsText = this._bg.getChildByName("Text");
    };
    TipsView.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
    };
    TipsView.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
    };
    TipsView.prototype.openView = function (data) {
        _super.prototype.openView.call(this, data);
        this.setTipsMsg(data);
        this._bg.alpha = 1;
        Laya.timer.clearAll(this);
        Laya.timer.once(2000, this, this.closeView);
        var self = this;
        Laya.Tween.to(this._bg, {
            alpha: 0
        }, 500, Laya.Ease.linearNone, Laya.Handler.create(this, function () {
            self.closeView();
        }), 1500, true);
    };
    TipsView.prototype.setTipsMsg = function (msg) {
        this._tipsText.text = msg;
    };
    return TipsView;
}(ViewBase_1.default));
exports.default = TipsView;
},{"../ViewBase":110}],106:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MiddleAnchor = /** @class */ (function (_super) {
    __extends(MiddleAnchor, _super);
    function MiddleAnchor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MiddleAnchor.prototype.onAwake = function () {
        var sp = this.owner;
        var parentSp = this.owner.parent;
        if (parentSp) {
            var pw = parentSp.width;
            var x = pw / 2;
            sp.x = x;
        }
    };
    return MiddleAnchor;
}(Laya.Script));
exports.default = MiddleAnchor;
},{}],107:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewAutoScale = /** @class */ (function (_super) {
    __extends(ViewAutoScale, _super);
    function ViewAutoScale() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ViewAutoScale.prototype.onAwake = function () {
        var realH = Laya.stage.height;
        var scale = realH / ViewAutoScale.baseHeight;
        var ps = this.owner;
        ps.scale(scale, scale);
    };
    ViewAutoScale.baseWidth = 750;
    ViewAutoScale.baseHeight = 1334;
    return ViewAutoScale;
}(Laya.Script));
exports.default = ViewAutoScale;
},{}],108:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewAutoScaleByW = /** @class */ (function (_super) {
    __extends(ViewAutoScaleByW, _super);
    function ViewAutoScaleByW() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ViewAutoScaleByW.prototype.onAwake = function () {
        var realW = Laya.stage.width;
        var scale = realW / ViewAutoScaleByW.baseWidth;
        var ps = this.owner;
        ps.scale(scale, scale);
    };
    ViewAutoScaleByW.baseWidth = 750;
    ViewAutoScaleByW.baseHeight = 1334;
    return ViewAutoScaleByW;
}(Laya.Script));
exports.default = ViewAutoScaleByW;
},{}],109:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TwinkleSprite = /** @class */ (function (_super) {
    __extends(TwinkleSprite, _super);
    function TwinkleSprite() {
        var _this = _super.call(this) || this;
        /** @prop {name:TwinkleSpeed, tips:"闪动速度", type:Number, default:1000}*/
        _this.TwinkleSpeed = 1000;
        /** @prop {name:TwinkleMinSize, tips:"最小缩放", type:Number, default:0.95}*/
        _this.TwinkleMinSize = 0.95;
        /** @prop {name:TwinkleMaxSize, tips:"最大缩放", type:Number, default:1.05}*/
        _this.TwinkleMaxSize = 1.05;
        _this._aniForward = false;
        _this._fontSize = 25;
        _this._originSize = 1;
        return _this;
    }
    TwinkleSprite.prototype.onAwake = function () {
        this._displaySp = this.owner;
        this._disText = this.owner.getChildByName("TitelText");
        this._originSize = this._displaySp.scaleX;
        if (this._disText != null) {
            this._disText.text = "";
            this._fontSize = this._disText.fontSize;
        }
    };
    TwinkleSprite.prototype.onEnable = function () {
        this._displaySp.scale(this._originSize, this._originSize);
    };
    TwinkleSprite.prototype.onDisable = function () {
    };
    TwinkleSprite.prototype.onUpdate = function () {
        this.displayAni();
    };
    TwinkleSprite.prototype.displayAni = function () {
        if (!this._aniForward) {
            var scale = this._displaySp.scaleX - Laya.timer.delta / this.TwinkleSpeed;
            scale = Math.max(scale, this.TwinkleMinSize * this._originSize);
            this._displaySp.scale(scale, scale);
            if (this._displaySp.scaleX <= this.TwinkleMinSize * this._originSize) {
                this._aniForward = true;
            }
        }
        else {
            var scale = this._displaySp.scaleX + Laya.timer.delta / this.TwinkleSpeed;
            scale = Math.min(scale, this.TwinkleMaxSize * this._originSize);
            this._displaySp.scale(scale, scale);
            if (this._displaySp.scaleX >= this.TwinkleMaxSize * this._originSize) {
                this._aniForward = false;
            }
        }
    };
    return TwinkleSprite;
}(Laya.Script));
exports.default = TwinkleSprite;
},{}],110:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewMgr_1 = require("../Mgr/ViewMgr");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var Utilit_1 = require("../Utilit");
var IViewStateListener_1 = require("./IViewStateListener");
//界面基类，所有功能模块界面继承于这个类。这种类型的界面不能嵌套。
var ViewBase = /** @class */ (function (_super) {
    __extends(ViewBase, _super);
    function ViewBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onCloseEvent = null;
        _this.onOpenEvent = null;
        _this._viewBase = true;
        _this._viewDef = ViewMgr_1.ViewDef.None;
        _this._data = {};
        return _this;
    }
    Object.defineProperty(ViewBase.prototype, "View", {
        get: function () {
            return this.owner;
        },
        enumerable: true,
        configurable: true
    });
    ViewBase.prototype.onAwake = function () {
        this.View.autoDestroyAtClosed = true;
    };
    ViewBase.prototype.onEnable = function () {
        this.addEvent();
    };
    ViewBase.prototype.onDisable = function () {
        this.removeEvent();
    };
    ViewBase.prototype.onDestroy = function () {
        this.removeEvent();
    };
    ViewBase.prototype.openView = function (data) {
        this._data = data;
        this.show();
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnViewOpen, { view: this._viewDef });
        if (this.onOpenEvent) {
            this.onOpenEvent();
        }
    };
    ViewBase.prototype.addEvent = function () {
    };
    ViewBase.prototype.removeEvent = function () {
        Laya.timer.clearAll(this);
    };
    ViewBase.prototype.closeView = function () {
        ViewMgr_1.default.instance.closeView(this._viewDef);
    };
    ViewBase.prototype.hide = function () {
        var _this = this;
        this.View.visible = false;
        this.onHide();
        Utilit_1.default.forEachChild(this.owner, function (child) {
            var coms = child._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (IViewStateListener_1.isIViewStateListener(element)) {
                        element.onViewHide(_this);
                    }
                }
            }
        });
    };
    ViewBase.prototype.show = function () {
        var _this = this;
        this.View.visible = true;
        this.onShow();
        Utilit_1.default.forEachChild(this.owner, function (child) {
            var coms = child._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (IViewStateListener_1.isIViewStateListener(element)) {
                        element.onViewShow(_this);
                    }
                }
            }
        });
    };
    ViewBase.prototype.viewIsHide = function () {
        return this.View.visible;
    };
    ViewBase.prototype.onHide = function () { };
    ViewBase.prototype.onShow = function () { };
    ViewBase.prototype.onClose = function () {
        Laya.timer.clearAll(this);
        Laya.Tween.clearAll(this);
        EventMgr_1.default.instance.dispatch(EventDef_1.EventDef.Game_OnViewClose, { view: this._viewDef });
        if (this.onCloseEvent) {
            this.onCloseEvent();
        }
    };
    return ViewBase;
}(Laya.Script));
exports.default = ViewBase;
},{"../Event/EventDef":9,"../Event/EventMgr":10,"../Mgr/ViewMgr":48,"../Utilit":64,"./IViewStateListener":75}],111:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WXAPI = /** @class */ (function () {
    function WXAPI() {
    }
    WXAPI.wxLogin = function (onSuccess, onFail) {
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window.wx.login({
                success: function (res) {
                    if (res.code) {
                        var code = res.code;
                        onSuccess(code);
                        console.log("登陆成功,获取到code : " + code);
                    }
                }
            });
        }
    };
    WXAPI.onRewardedVideoAdLoad = function () {
        console.log('激励视频 广告加载完成');
    };
    WXAPI.onRewardedVideoAdError = function (err) {
        console.log('激励视频 广告加载失败' + err);
        if (WXAPI._onRewardedVideoAdFailed) {
            WXAPI._onRewardedVideoAdFailed();
        }
    };
    WXAPI.onRewardedVideoAdClose = function (res) {
        if ((res && res.isEnded) || res == null) {
            console.log('激励视频 已完整观看');
            if (WXAPI._onRewardedVideoAdClose) {
                WXAPI._onRewardedVideoAdClose(true);
            }
        }
        else {
            console.log('激励视频 未完整观看');
            if (WXAPI._onRewardedVideoAdClose) {
                WXAPI._onRewardedVideoAdClose(false);
            }
        }
    };
    WXAPI.regRewardedVideoAdEvent = function (rewardedVideoAd) {
        rewardedVideoAd.onLoad(WXAPI.onRewardedVideoAdLoad);
        rewardedVideoAd.onError(WXAPI.onRewardedVideoAdError);
        rewardedVideoAd.onClose(WXAPI.onRewardedVideoAdClose);
        WXAPI._isRegRewardedVideoAdEvent = true;
    };
    WXAPI.showRewardedVideoAd = function (onAdClose, onFailed) {
        // ViewMgr.instance.showTips("今日视频已经看完");
        // if(onFailed)
        // {
        //     onAdClose(false);
        // }
        // return;
        if (Laya.Browser.onMiniGame) {
            WXAPI._onRewardedVideoAdClose = onAdClose;
            WXAPI._onRewardedVideoAdFailed = onFailed;
            var rewardedVideoAd = Laya.Browser.window["wx"].createRewardedVideoAd({
                adUnitId: WXAPI.adUnitId,
            });
            if (!WXAPI._isRegRewardedVideoAdEvent) {
                WXAPI.regRewardedVideoAdEvent(rewardedVideoAd);
            }
            rewardedVideoAd.load().then(function () {
                var promise = rewardedVideoAd.show();
                promise.then(function () { return console.log('激励视频 广告显示成功'); });
                promise.catch(function (err) {
                    rewardedVideoAd.load()
                        .then(function () { return rewardedVideoAd.show(); })
                        .catch(function (err) {
                        console.log('激励视频 广告显示失败');
                        if (onFailed) {
                            onFailed();
                        }
                    });
                });
            }).catch(function (err) {
                console.log('激励视频 广告加载失败');
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            onAdClose(true);
        }
    };
    //----------------------------------------------------------------
    //-------------------------小游戏跳转---------------------------
    WXAPI.navigateToMiniProgram = function (appId, path, onSuccess, onFail, onComplate) {
        if (Laya.Browser.onMiniGame) {
            console.log("跳转游戏： " + appId);
            Laya.Browser.window["wx"].navigateToMiniProgram({
                appId: appId,
                path: path,
                extraData: {
                    foo: 'bar'
                },
                envVersion: 'release',
                success: function (res) {
                    if (onSuccess) {
                        onSuccess(res);
                    }
                },
                fail: function (res) {
                    if (onFail) {
                        onFail(res);
                    }
                },
                complete: function (res) {
                    if (onComplate) {
                        onComplate(res);
                    }
                }
            });
        }
    };
    WXAPI.share = function (complate, titel, imageUrl) {
        var _this = this;
        if (Laya.Browser.onMiniGame) {
            WXAPI._onShow = function () {
                Laya.Browser.window["wx"].offShow(WXAPI._onShow);
                WXAPI._onShow = null;
                var c = Date.now() - _this._lastShareTime;
                if (complate) {
                    if (Date.now() - _this._lastShareTime > 2000) {
                        complate(true);
                    }
                    else {
                        complate(false);
                    }
                }
            };
            Laya.Browser.window["wx"].onShow(WXAPI._onShow);
            this._lastShareTime = Date.now();
            Laya.Browser.window["wx"].shareAppMessage({
                title: titel,
                imageUrl: imageUrl
            });
        }
    };
    //----------------------------------------------------------------------
    //--------------------插屏幕广告---------------------------------------
    WXAPI.showInterstitialAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onMiniGame) {
            var interstitialAd = Laya.Browser.window["wx"].createInterstitialAd({
                adUnitId: WXAPI.InsAdUnitId,
            });
            interstitialAd.onLoad(function () {
                console.log('插屏广告 加载完成');
                interstitialAd.show().catch(function (err) {
                    console.log('插屏广告 显示失败 ：' + err);
                    if (onFailed) {
                        onFailed();
                    }
                });
            });
            interstitialAd.onError(function (err) {
                console.log('插屏广告 加载失败' + err);
                if (onFailed) {
                    onFailed();
                }
            });
            interstitialAd.onClose(function () {
                console.log('插屏广告 关闭');
                if (onAdClose) {
                    onAdClose();
                }
            });
        }
        else {
            onAdClose();
        }
    };
    /**
     * 得到小程序启动参数的同步方法，可得到一个Object返回值，返回值具体的数据结构在下面的列表中
     * scene    number  启动小游戏的场景值
     * query    Object  启动小游戏的 query 参数
     * shareTicket  string  shareTicket，详见获取更多转发信息
     * referrerInfo object  来源信息。从另一个小程序、公众号或 App 进入小程序时返回。否则返回 {}
     * https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.getLaunchOptionsSync.html
     * @static
     * @returns {LaunchOptions}
     * @memberof WXAPI
     */
    WXAPI.getLaunchOptionsSync = function () {
        // let result = { scene: 0, query: null, shareTicket: "", referrerInfo: null };
        if (Laya.Browser.onMiniGame) {
            var obj_1 = Laya.Browser.window["wx"].getLaunchOptionsSync();
            // console.log("场景值 " + obj.scene);
            var str = JSON.stringify(obj_1.query);
            // console.log("Query参数 " + str);
            var key = obj_1.query["key"];
            // console.log("Query参数：key " + key);
            // console.log("ShareTicket " + obj.shareTicket);
            // console.log("ReferrerInfo.appId " + obj.referrerInfo.appId);
            // console.log("ReferrerInfo.extraData " + obj.referrerInfo.extraData);
            return obj_1;
        }
        var obj = { scene: 1001, query: "", shareTicket: "", appId: "", extraData: "" };
        return obj;
    };
    //----------------------------------------------------------------------
    /**
     * 打开微信左上角分享转发点击事件,在游戏逻辑中调用一次即可
     * 注意此方法只会在真机上执行，在微信模拟器环境下点击转发按钮什么都不会发生
     *
     * @static
     * @param {string} titel 分享标题
     * @param {string} imageUrl 分享图片地址
     * @param {Function} [success] 成功回调函数(可不填)
     * @param {Function} [fail] 失败回调函数(可不填)
     * @param {Function} [complate] 完成回调函数，成功失败都会执行(可不填)
     * @memberof WXAPI
     */
    WXAPI.SetShareMenu = function (titel, imageUrl, success, fail, complate) {
        if (Laya.Browser.onMiniGame) {
            console.log("小游戏设置转发按钮");
            Laya.Browser.window["wx"].showShareMenu({
                withShareTicket: false,
                success: success,
                fail: fail,
                complete: complate
            });
            Laya.Browser.window["wx"].onShareAppMessage(function () {
                return {
                    title: titel,
                    imageUrl: imageUrl
                };
            });
        }
    };
    //检测更新
    WXAPI.checkUpdate = function () {
        if (Laya.Browser.onMiniGame) {
            var updateManager = Laya.Browser.window["wx"].getUpdateManager();
            updateManager.onCheckForUpdate(function (res) {
                console.log("是否需要更新 : ", res.hasUpdate);
            });
            updateManager.onUpdateReady(function () {
                Laya.Browser.window["wx"].showModal({
                    title: '更新提示',
                    content: '新版本已经准备好，是否重启小游戏？',
                    success: function (res) {
                        if (res.confirm) {
                            updateManager.applyUpdate();
                        }
                    }
                });
            });
            updateManager.onUpdateFailed(function () {
                console.log("新版本下载失败!!!");
            });
        }
    };
    WXAPI.adUnitId = "adunit-96082578ce9bf9b0";
    WXAPI.bannerAdUnitId = "adunit-863dbccf65dbf276";
    WXAPI.InsAdUnitId = "adunit-08ebd0a4fe9d0680";
    //-------------------------激励视频---------------------------------
    WXAPI._isRegRewardedVideoAdEvent = false;
    WXAPI._onRewardedVideoAdFailed = null;
    WXAPI._onRewardedVideoAdClose = null;
    //----------------------------------------------------------------------
    //---------------------分享----------------------------------------
    WXAPI._onShow = null;
    WXAPI._lastShareTime = 0;
    return WXAPI;
}());
exports.default = WXAPI;
},{}],112:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Scene = Laya.Scene;
var REG = Laya.ClassUtils.regClass;
var ui;
(function (ui) {
    var GameMainUI = /** @class */ (function (_super) {
        __extends(GameMainUI, _super);
        function GameMainUI() {
            return _super.call(this) || this;
        }
        GameMainUI.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.createView(GameMainUI.uiView);
        };
        GameMainUI.uiView = { "type": "Scene", "props": { "y": 0, "x": 0, "width": 1080, "top": 0, "right": 0, "pivotY": 0, "pivotX": 0, "left": 0, "height": 1920 }, "compId": 2, "child": [{ "type": "Script", "props": { "runtime": "Mgr/GameMgr.ts" }, "compId": 148 }], "loadList": [], "loadList3D": [] };
        return GameMainUI;
    }(Scene));
    ui.GameMainUI = GameMainUI;
    REG("ui.GameMainUI", GameMainUI);
})(ui = exports.ui || (exports.ui = {}));
(function (ui) {
    var View;
    (function (View) {
        var LoadingUI = /** @class */ (function (_super) {
            __extends(LoadingUI, _super);
            function LoadingUI() {
                return _super.call(this) || this;
            }
            LoadingUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(LoadingUI.uiView);
            };
            LoadingUI.uiView = { "type": "Scene", "props": { "width": 750, "top": 0, "right": 0, "left": 0, "height": 1334, "bottom": 0 }, "compId": 2, "child": [{ "type": "Image", "props": { "top": 0, "skin": "GameCommon/loding.jpg", "centerX": 0 }, "compId": 24 }, { "type": "Clip", "props": { "y": 0, "x": 1, "width": 750, "name": "Bg", "height": 1334 }, "compId": 6, "child": [{ "type": "Clip", "props": { "skin": "comp/clip_num.png", "right": 0, "name": "BottomZone", "left": 0, "height": 570, "bottom": 100 }, "compId": 23, "child": [{ "type": "Clip", "props": { "y": 326, "x": 376, "width": 615, "skin": "Loading/loading下条.png", "pivotY": 22, "pivotX": 308, "name": "processBarBg", "height": 44, "sizeGrid": "0,25,0,25" }, "compId": 8, "child": [{ "type": "Clip", "props": { "y": 22, "x": 10, "width": 594, "skin": "Loading/loading上条.png", "pivotY": 13, "name": "processBar", "left": 11, "height": 26, "bottom": 9, "sizeGrid": "0,12,0,12" }, "compId": 5, "child": [{ "type": "Sprite", "props": { "y": -24, "x": 292, "width": 143, "visible": true, "texture": "Loading/资源加载中.png", "pivotY": 12, "pivotX": 72, "height": 23 }, "compId": 25, "child": [{ "type": "Sprite", "props": { "y": 15, "x": 149, "width": 6, "texture": "Loading/加载顿号.png", "height": 5 }, "compId": 26 }, { "type": "Sprite", "props": { "y": 15, "x": 159, "width": 6, "texture": "Loading/加载顿号.png", "height": 5 }, "compId": 27 }, { "type": "Sprite", "props": { "y": 15, "x": 168, "width": 6, "texture": "Loading/加载顿号.png", "height": 5 }, "compId": 28 }] }] }] }, { "type": "Clip", "props": { "y": 143, "x": 375, "width": 513, "visible": false, "pivotY": 50, "pivotX": 257, "name": "LogoAni", "height": 100 }, "compId": 14, "child": [{ "type": "Sprite", "props": { "y": 50, "x": 139, "width": 64, "texture": "Loading/任.png", "pivotY": 32, "pivotX": 32, "height": 63 }, "compId": 15 }, { "type": "Sprite", "props": { "y": 50, "x": 209, "width": 70, "texture": "Loading/游.png", "pivotY": 33, "pivotX": 35, "height": 66 }, "compId": 16 }, { "type": "Sprite", "props": { "y": 51, "x": 286, "width": 77, "texture": "Loading/玩.png", "pivotY": 28, "pivotX": 39, "height": 56 }, "compId": 17 }, { "type": "Sprite", "props": { "y": 63, "x": 340, "width": 23, "texture": "Loading/R.png", "pivotY": 16, "pivotX": 12, "height": 32 }, "compId": 18 }, { "type": "Sprite", "props": { "y": 63, "x": 363, "width": 21, "texture": "Loading/Y.png", "pivotY": 16, "pivotX": 11, "height": 31 }, "compId": 19 }, { "type": "Sprite", "props": { "y": 62, "x": 392, "width": 33, "texture": "Loading/W.png", "pivotY": 15, "pivotX": 17, "height": 30 }, "compId": 20 }, { "type": "Script", "props": { "runtime": "View/LoadingView/LogoAni.ts" }, "compId": 21 }] }, { "type": "Sprite", "props": { "y": 501, "x": 1273, "width": 558, "visible": false, "texture": "Loading/健康游戏忠告.png", "pivotY": 53, "pivotX": 279, "height": 105 }, "compId": 22 }] }] }, { "type": "Script", "props": { "y": 0, "x": 0, "runtime": "View/LoadingView/LoadingView.ts" }, "compId": 7 }], "loadList": ["GameCommon/loding.jpg", "comp/clip_num.png", "Loading/loading下条.png", "Loading/loading上条.png", "Loading/资源加载中.png", "Loading/加载顿号.png", "Loading/任.png", "Loading/游.png", "Loading/玩.png", "Loading/R.png", "Loading/Y.png", "Loading/W.png", "Loading/健康游戏忠告.png"], "loadList3D": [] };
            return LoadingUI;
        }(Scene));
        View.LoadingUI = LoadingUI;
        REG("ui.View.LoadingUI", LoadingUI);
    })(View = ui.View || (ui.View = {}));
})(ui = exports.ui || (exports.ui = {}));
},{}]},{},[45])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL0xheWFBaXJJREUoMSkvcmVzb3VyY2VzL2FwcC9ub2RlX21vZHVsZXMvYnJvd3Nlci1wYWNrL19wcmVsdWRlLmpzIiwic3JjL0FMRC50cyIsInNyYy9BcHBDb25maWcudHMiLCJzcmMvQ2FjaGVkUVFCYW5uZXJBZC50cyIsInNyYy9DYWNoZWRXWEJhbm5lckFkLnRzIiwic3JjL0NvbmZpZy9BcHBTd2l0Y2hDb25maWcudHMiLCJzcmMvQ29uZmlnL0dhbWVDb21tb25Db25maWcudHMiLCJzcmMvQ29uZmlnL0xldmVsQ29uZmlnLnRzIiwic3JjL0NvbmZpZy9Ta2luQ29uZmlnLnRzIiwic3JjL0V2ZW50L0V2ZW50RGVmLnRzIiwic3JjL0V2ZW50L0V2ZW50TWdyLnRzIiwic3JjL0dhbWVDb25maWcudHMiLCJzcmMvR2FtZUNvcmUvRmFrZVBsYXllci50cyIsInNyYy9HYW1lQ29yZS9HYW1lT2Jqcy9CYXNlT2JqLnRzIiwic3JjL0dhbWVDb3JlL0dhbWVPYmpzL0RhbmdlclpvbmUudHMiLCJzcmMvR2FtZUNvcmUvR2FtZU9ianMvRW5lbXkudHMiLCJzcmMvR2FtZUNvcmUvR2FtZU9ianMvRXhpdFBvaW50LnRzIiwic3JjL0dhbWVDb3JlL0dhbWVPYmpzL01vdmVBbmNob3IudHMiLCJzcmMvR2FtZUNvcmUvR2FtZU9ianMvUGxhbmVCbG9ja2VyLnRzIiwic3JjL0dhbWVDb3JlL0dhbWVPYmpzL1BsYXllci50cyIsInNyYy9HYW1lQ29yZS9HYW1lT2Jqcy9Sb3BlLnRzIiwic3JjL0dhbWVDb3JlL0dhbWVPYmpzL1JvcGVQaWVjZXMudHMiLCJzcmMvR2FtZUNvcmUvR2FtZU9ianMvUm90YXRlT2JqLnRzIiwic3JjL0dhbWVDb3JlL0dhbWVPYmpzL1RpZGVPYmplY3QudHMiLCJzcmMvR2FtZUNvcmUvR3VpZGVyLnRzIiwic3JjL0dhbWVDb3JlL1BoeXNpY3NVdGlscy50cyIsInNyYy9HYW1lQ29yZS9Ub3VjaEN0ci50cyIsInNyYy9LUlEvQ29tL0tSUV9CYW5uZXIudHMiLCJzcmMvS1JRL0NvbS9LUlFfQ29tQmFzZS50cyIsInNyYy9LUlEvQ29tL0tSUV9HYW1pbmdCYW5uZXIudHMiLCJzcmMvS1JRL0NvbS9LUlFfSGlzdG9yeS9LUlFfSGlzdG9yeS50cyIsInNyYy9LUlEvQ29tL0tSUV9IaXN0b3J5L0tSUV9IaXN0b3J5Qm94LnRzIiwic3JjL0tSUS9Db20vS1JRX0xvb3BBZC9LUlFfSExvb3BBZC50cyIsInNyYy9LUlEvQ29tL0tSUV9Mb29wQWQvS1JRX0xvb3BBZEJveC50cyIsInNyYy9LUlEvQ29tL0tSUV9Mb29wQWQvS1JRX1ZMb29wQWQudHMiLCJzcmMvS1JRL0NvbS9LUlFfUm9ja1NpbmdsZUFkLnRzIiwic3JjL0tSUS9Db20vS1JRX1JvbGxTaW5nbGVBZC50cyIsInNyYy9LUlEvQ29tL0tSUV9TaW5nbGVBZC50cyIsInNyYy9LUlEvVmlld0NvbS9LUlFfRXhwb3J0LnRzIiwic3JjL0tSUS9WaWV3Q29tL0tSUV9GbG9hdGluZy50cyIsInNyYy9LUlEvVmlld0NvbS9LUlFfR2FtZU92ZXIudHMiLCJzcmMvS1JRL1ZpZXdDb20vS1JRX01haW4udHMiLCJzcmMvS1JRL1ZpZXdDb20vS1JRX1NpZGVQdWxsLnRzIiwic3JjL0tSUS9WaWV3Q29tL0tSUV9WaWV3Q29tQmFzZS50cyIsInNyYy9NYWlMaWFuZ0FQSS9NYWlMaWFuZy50cyIsInNyYy9NYWluLnRzIiwic3JjL01nci9HYW1lTWdyLnRzIiwic3JjL01nci9Tb3VuZE1nci50cyIsInNyYy9NZ3IvVmlld01nci50cyIsInNyYy9NZ3IvV1hBRE1nci50cyIsInNyYy9NZ3IvV3VkaWFuTWdyLnRzIiwic3JjL05ldC9BZXNUb29scy50cyIsInNyYy9OZXQvSHR0cFVuaXQudHMiLCJzcmMvTmV0L05ldENvbmZpZy50cyIsInNyYy9OZXQvYWVzLmpzIiwic3JjL09QUE9BUEkudHMiLCJzcmMvUVFNaW5pR2FtZUFQSS50cyIsInNyYy9TaGFyZUFkL1NoYXJlQWQudHMiLCJzcmMvU2hhcmVBZC9WaWV3L0Jhbm5lckFkVmlldy50cyIsInNyYy9TaGFyZUFkL1ZpZXcvSG9yaXpvbnRhbExvb3BBZFZpZXcudHMiLCJzcmMvU2hhcmVBZC9WaWV3L0xvb3BBZEJveC50cyIsInNyYy9TaGFyZUFkL1ZpZXcvTG9vcEFkVmlldy50cyIsInNyYy9UVEFQSS50cyIsInNyYy9Vc2VyL1VzZXIudHMiLCJzcmMvVXRpbGl0LnRzIiwic3JjL1ZpZXcvQWN0b3JTa2luL0FjdG9yU2tpbkJveC50cyIsInNyYy9WaWV3L0FjdG9yU2tpbi9BY3RvclNraW5WaWV3LnRzIiwic3JjL1ZpZXcvQnV0dG9uQW5pbS50cyIsInNyYy9WaWV3L0NsaWNrR2V0UHJpemUvQ2xpY2tHZXRQcml6ZS50cyIsInNyYy9WaWV3L0NsaWNrR2V0UHJpemUvQ2xpY2tHZXRQcml6ZV8yLnRzIiwic3JjL1ZpZXcvQ29tbW9uL1VuaXZlcnNhbEJvdHRvbVpvbmUudHMiLCJzcmMvVmlldy9GcmVlUmV3YXJkL0ZyZWVSZXdhcmRWaWV3LnRzIiwic3JjL1ZpZXcvR2FtZU92ZXIvR2FtZU92ZXIudHMiLCJzcmMvVmlldy9HYW1lUmV3YXJkL0dhbWVSZXdhcmRWaWV3LnRzIiwic3JjL1ZpZXcvR2FtZVZpZXcvR2FtZVZpZXcudHMiLCJzcmMvVmlldy9JVmlld1N0YXRlTGlzdGVuZXIudHMiLCJzcmMvVmlldy9MZXZlbFN0YXRlVmlldy9MZXZlbFN0YXRlQm94LnRzIiwic3JjL1ZpZXcvTGV2ZWxTdGF0ZVZpZXcvTGV2ZWxTdGF0ZVZpZXcudHMiLCJzcmMvVmlldy9Mb2FkaW5nVmlldy9Mb2FkaW5nVmlldy50cyIsInNyYy9WaWV3L0xvYWRpbmdWaWV3L0xvZ29BbmkudHMiLCJzcmMvVmlldy9NYWluVmlldy9NYWluVmlldy50cyIsInNyYy9WaWV3L01vcmVHYW1lVmlldy9Nb3JlR2FtZVZpZXcudHMiLCJzcmMvVmlldy9RUVRlbXBsYXRlL0dhbWVGYWlsL1FRR2FtZUZhaWxWaWV3VGVtcGxhdGUudHMiLCJzcmMvVmlldy9RUVRlbXBsYXRlL0dhbWVXaW4vUVFHYW1lV2luVmlld1RlbXBsYXRlLnRzIiwic3JjL1ZpZXcvUVFUZW1wbGF0ZS9JbkdhbWUvUVFJbkdhbWVWaWV3VGVtcGxhdGUudHMiLCJzcmMvVmlldy9RUVRlbXBsYXRlL01haW4vUVFNYWluVmlld1RlbXBsYXRlLnRzIiwic3JjL1ZpZXcvUVFUZW1wbGF0ZS9RUUNyYXp5Q2xpY2svUVFDcmF6eUNsaWNrLnRzIiwic3JjL1ZpZXcvUVFUZW1wbGF0ZS9RUUNyYXp5Q2xpY2svUVFDcmF6eUNsaWNrMi50cyIsInNyYy9WaWV3L1FRVGVtcGxhdGUvUVFUZW1wbGF0ZVZpZXdCYXNlLnRzIiwic3JjL1ZpZXcvU2NhbGVCcmVhdGhpbmdBbmkudHMiLCJzcmMvVmlldy9TaWduSW5SZXdhcmQvU2lnbkluUmV3YXJkVmlldy50cyIsInNyYy9WaWV3L1RUVGVtcGxhdGUvR2FtZUZhaWwvVFRHYW1lRmFpbFZpZXdUZW1wbGF0ZS50cyIsInNyYy9WaWV3L1RUVGVtcGxhdGUvTWFpbi9UVE1haW5WaWV3VGVtcGxhdGUudHMiLCJzcmMvVmlldy9UVFRlbXBsYXRlL1RUQ3JhenlDbGljay9UVENyYXp5Q2xpY2sudHMiLCJzcmMvVmlldy9UVFRlbXBsYXRlL1RUVGVtcGxhdGVWaWV3QmFzZS50cyIsInNyYy9WaWV3L1RlbXBsYXRlVmlld3MvRXhwb3J0Mi9FeHByb3QyVmlld1RlbXBsYXRlLnRzIiwic3JjL1ZpZXcvVGVtcGxhdGVWaWV3cy9FeHBvcnQvRXhwb3J0Vmlld1RlbXBsYXRlLnRzIiwic3JjL1ZpZXcvVGVtcGxhdGVWaWV3cy9HYW1lRmFpbC9HYW1lRmFpbFZpZXdUZW1wbGF0ZS50cyIsInNyYy9WaWV3L1RlbXBsYXRlVmlld3MvR2FtZVdpbi9HYW1lV2luVmlld1RlbXBsYXRlLnRzIiwic3JjL1ZpZXcvVGVtcGxhdGVWaWV3cy9JbkdhbWUvSW5HYW1lVmlld1RlbXBsYXRlLnRzIiwic3JjL1ZpZXcvVGVtcGxhdGVWaWV3cy9NYWluL01haW5WaWV3VGVtcGxhdGUudHMiLCJzcmMvVmlldy9UZW1wbGF0ZVZpZXdzL01pbmlHYW1lL01pbmlHYW1lVmlld1RlbXBsYXRlLnRzIiwic3JjL1ZpZXcvVGVtcGxhdGVWaWV3cy9PUFBPTmF0aXZlQWQvT1BQT05hdGl2ZUFkVmlld1RlbXBsYXRlLnRzIiwic3JjL1ZpZXcvVGVtcGxhdGVWaWV3cy9SZXdhcmQvUmV3YXJkVmlld1RlbXBsYXRlLnRzIiwic3JjL1ZpZXcvVGVtcGxhdGVWaWV3cy9UZW1wbGF0ZVZpZXdCYXNlLnRzIiwic3JjL1ZpZXcvVGlwc1ZpZXcvVGlwc1ZpZXcudHMiLCJzcmMvVmlldy9Ub29scy9NaWRkbGVBbmNob3IudHMiLCJzcmMvVmlldy9Ub29scy9WaWV3QXV0b1NjYWxlLnRzIiwic3JjL1ZpZXcvVG9vbHMvVmlld0F1dG9TY2FsZUJ5Vy50cyIsInNyYy9WaWV3L1R3aW5rbGVTcHJpdGUudHMiLCJzcmMvVmlldy9WaWV3QmFzZS50cyIsInNyYy9XWEFQSS50cyIsInNyYy91aS9sYXlhTWF4VUkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDVkEsSUFBWSxXQU9YO0FBUEQsV0FBWSxXQUFXO0lBRW5CLHdCQUFTLENBQUE7SUFDVCw0RUFBK0IsQ0FBQTtJQUMvQix5RUFBNEIsQ0FBQTtJQUM1QiwyRUFBOEIsQ0FBQTtJQUM5QixrQkFBa0I7QUFDdEIsQ0FBQyxFQVBXLFdBQVcsR0FBWCxtQkFBVyxLQUFYLG1CQUFXLFFBT3RCO0FBRUQsU0FBUztBQUNUO0lBQUE7SUF5REEsQ0FBQztJQXZEaUIsaUJBQWEsR0FBM0IsVUFBNEIsTUFBZTtRQUV2QyxJQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUMxQjtZQUNJLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUNoRCxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixFQUFDLE1BQU0sQ0FBQyxDQUFDO1NB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QUFJLEVBQUMsRUFBQyxRQUFRLEVBQUMsQ0FBQyxFQUFDLE9BQU8sRUFBQyxDQUFDLEVBQUMsTUFBTSxFQUFDLE1BQU0sRUFBQyxPQUFPLEVBQUMsRUFBQyxNQUFNLEVBQUMsbUJBQW1CLEVBQUMsT0FBTyxFQUFDLENBQUMsRUFBQyxNQUFNLEVBQUMsWUFBWSxFQUFDLE1BQU0sRUFBQyxDQUFDLEVBQUMsUUFBUSxFQUFDLEdBQUcsRUFBQyxRQUFRLEVBQUMsR0FBRyxFQUFDLEVBQUMsUUFBUSxFQUFDLEVBQUUsRUFBQyxPQUFPLEVBQUMsQ0FBQyxFQUFDLE1BQU0sRUFBQyxNQUFNLEVBQUMsT0FBTyxFQUFDLEVBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLE9BQU8sRUFBQyxHQUFHLEVBQUMsTUFBTSxFQUFDLHVCQUF1QixFQUFDLFFBQVEsRUFBQyxFQUFFLEVBQUMsUUFBUSxFQUFDLEdBQUcsRUFBQyxNQUFNLEVBQUMsY0FBYyxFQUFDLFFBQVEsRUFBQyxFQUFFLEVBQUMsVUFBVSxFQUFDLFdBQVcsRUFBQyxFQUFDLFFBQVEsRUFBQyxDQUFDLEVBQUMsT0FBTyxFQUFDLENBQUMsRUFBQyxNQUFNLEVBQUMsTUFBTSxFQUFDLE9BQU8sRUFBQyxFQUFDLEdBQUcsRUFBQyxFQUFFLEVBQUMsR0FBRyxFQUFDLEVBQUUsRUFBQyxPQUFPLEVBQUMsR0FBRyxFQUFDLE1BQU0sRUFBQyx1QkFBdUIsRUFBQyxRQUFRLEVBQUMsRUFBRSxFQUFDLE1BQU0sRUFBQyxZQUFZLEVBQUMsTUFBTSxFQUFDLEVBQUUsRUFBQyxRQUFRLEVBQUMsRUFBRSxFQUFDLFFBQVEsRUFBQyxDQUFDLEVBQUMsVUFBVSxFQUFDLFdBQVcsRUFBQyxFQUFDLFFBQVEsRUFBQyxDQUFDLEVBQUMsT0FBTyxFQUFDLENBQUMsRUFBQyxNQUFNLEVBQUMsUUFBUSxFQUFDLE9BQU8sRUFBQyxFQUFDLEdBQUcsRUFBQyxDQUFDLEVBQUUsRUFBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLE9BQU8sRUFBQyxHQUFHLEVBQUMsU0FBUyxFQUFDLElBQUksRUFBQyxTQUFTLEVBQUMsbUJBQW1CLEVBQUMsUUFBUSxFQUFDLEVBQUUsRUFBQyxRQUFRLEVBQUMsRUFBRSxFQUFDLFFBQVEsRUFBQyxFQUFFLEVBQUMsRUFBQyxRQUFRLEVBQUMsRUFBRSxFQUFDLE9BQU8sRUFBQyxDQUFDLEVBQUMsTUFBTSxFQUFDLFFBQVEsRUFBQyxPQUFPLEVBQUMsRUFBQyxHQUFHLEVBQUMsRUFBRSxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsT0FBTyxFQUFDLENBQUMsRUFBQyxTQUFTLEVBQUMsa0JBQWtCLEVBQUMsUUFBUSxFQUFDLENBQUMsRUFBQyxFQUFDLFFBQVEsRUFBQyxFQUFFLEVBQUMsRUFBQyxFQUFDLE1BQU0sRUFBQyxRQUFRLEVBQUMsT0FBTyxFQUFDLEVBQUMsR0FBRyxFQUFDLEVBQUUsRUFBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLE9BQU8sRUFBQyxDQUFDLEVBQUMsU0FBUyxFQUFDLGtCQUFrQixFQUFDLFFBQVEsRUFBQyxDQUFDLEVBQUMsRUFBQyxRQUFRLEVBQUMsRUFBRSxFQUFDLEVBQUMsRUFBQyxNQUFNLEVBQUMsUUFBUSxFQUFDLE9BQU8sRUFBQyxFQUFDLEdBQUcsRUFBQyxFQUFFLEVBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxPQUFPLEVBQUMsQ0FBQyxFQUFDLFNBQVMsRUFBQyxrQkFBa0IsRUFBQyxRQUFRLEVBQUMsQ0FBQyxFQUFDLEVBQUMsUUFBUSxFQUFDLEVBQUUsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxFQUFDLEVBQUMsTUFBTSxFQUFDLE1BQU0sRUFBQyxPQUFPLEVBQUMsRUFBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsT0FBTyxFQUFDLEdBQUcsRUFBQyxTQUFTLEVBQUMsS0FBSyxFQUFDLFFBQVEsRUFBQyxFQUFFLEVBQUMsUUFBUSxFQUFDLEdBQUcsRUFBQyxNQUFNLEVBQUMsU0FBUyxFQUFDLFFBQVEsRUFBQyxHQUFHLEVBQUMsRUFBQyxRQUFRLEVBQUMsRUFBRSxFQUFDLE9BQU8sRUFBQyxDQUFDLEVBQUMsTUFBTSxFQUFDLFFBQVEsRUFBQyxPQUFPLEVBQUMsRUFBQyxHQUFHLEVBQUMsRUFBRSxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsT0FBTyxFQUFDLEVBQUUsRUFBQyxTQUFTLEVBQUMsZUFBZSxFQUFDLFFBQVEsRUFBQyxFQUFFLEVBQUMsUUFBUSxFQUFDLEVBQUUsRUFBQyxRQUFRLEVBQUMsRUFBRSxFQUFDLEVBQUMsUUFBUSxFQUFDLEVBQUUsRUFBQyxFQUFDLEVBQUMsTUFBTSxFQUFDLFFBQVEsRUFBQyxPQUFPLEVBQUMsRUFBQyxHQUFHLEVBQUMsRUFBRSxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsT0FBTyxFQUFDLEVBQUUsRUFBQyxTQUFTLEVBQUMsZUFBZSxFQUFDLFFBQVEsRUFBQyxFQUFFLEVBQUMsUUFBUSxFQUFDLEVBQUUsRUFBQyxRQUFRLEVBQUMsRUFBRSxFQUFDLEVBQUMsUUFBUSxFQUFDLEVBQUUsRUFBQyxFQUFDLEVBQUMsTUFBTSxFQUFDLFFBQVEsRUFBQyxPQUFPLEVBQUMsRUFBQyxHQUFHLEVBQUMsRUFBRSxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsT0FBTyxFQUFDLEVBQUUsRUFBQyxTQUFTLEVBQUMsZUFBZSxFQUFDLFFBQVEsRUFBQyxFQUFFLEVBQUMsUUFBUSxFQUFDLEVBQUUsRUFBQyxRQUFRLEVBQUMsRUFBRSxFQUFDLEVBQUMsUUFBUSxFQUFDLEVBQUUsRUFBQyxFQUFDLEVBQUMsTUFBTSxFQUFDLFFBQVEsRUFBQyxPQUFPLEVBQUMsRUFBQyxHQUFHLEVBQUMsRUFBRSxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsT0FBTyxFQUFDLEVBQUUsRUFBQyxTQUFTLEVBQUMsZUFBZSxFQUFDLFFBQVEsRUFBQyxFQUFFLEVBQUMsUUFBUSxFQUFDLEVBQUUsRUFBQyxRQUFRLEVBQUMsRUFBRSxFQUFDLEVBQUMsUUFBUSxFQUFDLEVBQUUsRUFBQyxFQUFDLEVBQUMsTUFBTSxFQUFDLFFBQVEsRUFBQyxPQUFPLEVBQUMsRUFBQyxHQUFHLEVBQUMsRUFBRSxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsT0FBTyxFQUFDLEVBQUUsRUFBQyxTQUFTLEVBQUMsZUFBZSxFQUFDLFFBQVEsRUFBQyxFQUFFLEVBQUMsUUFBUSxFQUFDLEVBQUUsRUFBQyxRQUFRLEVBQUMsRUFBRSxFQUFDLEVBQUMsUUFBUSxFQUFDLEVBQUUsRUFBQyxFQUFDLEVBQUMsTUFBTSxFQUFDLFFBQVEsRUFBQyxPQUFPLEVBQUMsRUFBQyxHQUFHLEVBQUMsRUFBRSxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsT0FBTyxFQUFDLEVBQUUsRUFBQyxTQUFTLEVBQUMsZUFBZSxFQUFDLFFBQVEsRUFBQyxFQUFFLEVBQUMsUUFBUSxFQUFDLEVBQUUsRUFBQyxRQUFRLEVBQUMsRUFBRSxFQUFDLEVBQUMsUUFBUSxFQUFDLEVBQUUsRUFBQyxFQUFDLEVBQUMsTUFBTSxFQUFDLFFBQVEsRUFBQyxPQUFPLEVBQUMsRUFBQyxTQUFTLEVBQUMsNkJBQTZCLEVBQUMsRUFBQyxRQUFRLEVBQUMsRUFBRSxFQUFDLENBQUMsRUFBQyxFQUFDLEVBQUMsTUFBTSxFQUFDLFFBQVEsRUFBQyxPQUFPLEVBQUMsRUFBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxJQUFJLEVBQUMsT0FBTyxFQUFDLEdBQUcsRUFBQyxTQUFTLEVBQUMsS0FBSyxFQUFDLFNBQVMsRUFBQyxvQkFBb0IsRUFBQyxRQUFRLEVBQUMsRUFBRSxFQUFDLFFBQVEsRUFBQyxHQUFHLEVBQUMsUUFBUSxFQUFDLEdBQUcsRUFBQyxFQUFDLFFBQVEsRUFBQyxFQUFFLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxFQUFDLEVBQUMsTUFBTSxFQUFDLFFBQVEsRUFBQyxPQUFPLEVBQUMsRUFBQyxHQUFHLEVBQUMsQ0FBQyxFQUFDLEdBQUcsRUFBQyxDQUFDLEVBQUMsU0FBUyxFQUFDLGlDQUFpQyxFQUFDLEVBQUMsUUFBUSxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsVUFBVSxFQUFDLENBQUMsdUJBQXVCLEVBQUMsbUJBQW1CLEVBQUMsdUJBQXVCLEVBQUMsdUJBQXVCLEVBQUMsbUJBQW1CLEVBQUMsa0JBQWtCLEVBQUMsZUFBZSxFQUFDLGVBQWUsRUFBQyxlQUFlLEVBQUMsZUFBZSxFQUFDLGVBQWUsRUFBQyxlQUFlLEVBQUMsb0JBQW9CLENBQUMsRUFBQyxZQUFZLEVBQUMsRUFBRSxFQUFDLENBQUM7WUFNN3hGLGdCQUFDO1NBUEQsQUFPQyxDQVA4QixLQUFLLEdBT25DO1FBUFksY0FBUyxZQU9yQixDQUFBO1FBQ0QsR0FBRyxDQUFDLG1CQUFtQixFQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3ZDLENBQUMsRUFWZ0IsSUFBSSxHQUFKLE9BQUksS0FBSixPQUFJLFFBVXBCO0FBQUQsQ0FBQyxFQVZhLEVBQUUsR0FBRixVQUFFLEtBQUYsVUFBRSxRQVVmIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxyXG4gICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcclxuICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcclxuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xyXG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XHJcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XHJcbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xyXG4gICAgfTtcclxufSkoKTtcclxuKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIraStcIidcIik7dGhyb3cgYS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGk9MDtpPHQubGVuZ3RoO2krKylvKHRbaV0pO3JldHVybiBvfXJldHVybiByfSkoKSIsImV4cG9ydCBlbnVtIEFMREV2ZW50RGVmXG57XG4gICAgTm9uZSA9IFwiXCIsXG4gICAgUmVwb3J0QWRDbGlja1N1Y2Nlc3MgPSBcIuW5v+WRiuWvvOWHuuaIkOWKn1wiLFxuICAgIFJlcG9ydEFkQ2xpY2tGYWlsID0gXCLlub/lkYrlr7zlh7rlpLHotKVcIixcbiAgICBSZXBvcnRMYXVuY2hPcHRpb25zID0gXCLnlKjmiLflkK/liqjlj4LmlbBcIlxuICAgIC8vdG9kbzrmt7vliqDkvaDoh6rlt7HnmoTpmL/mi4nkuIHkuovku7Zcbn1cblxuLy/pmL/mi4nkuIHnm7jlhbPmjqXlj6NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFMRCBcbntcbiAgICBwdWJsaWMgc3RhdGljIGFsZFNlbmRPcGVuSWQob3BlbmlkIDogc3RyaW5nKVxuICAgIHsgICBcbiAgICAgICAgaWYoTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpXG4gICAgICAgIHtcbiAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJ3eFwiXS5hbGRTZW5kT3BlbmlkKG9wZW5pZCk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkFMRCDkuIrmiqUgb3BlbmlkIDogXCIsb3BlbmlkKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmKExheWEuQnJvd3Nlci5vblFRTWluaUdhbWUpXG4gICAgICAgIHtcbiAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJxcVwiXS5hbGRTZW5kT3BlbmlkKG9wZW5pZCk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkFMRCDkuIrmiqUgb3BlbmlkIDogXCIsb3BlbmlkKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgYWxkU2VuZEV2ZW50KGV2ZW50IDogQUxERXZlbnREZWYgfCBzdHJpbmcsZGF0YSA6IGFueSlcbiAgICB7XG4gICAgICAgIHZhciBldmVudE5hbWUgOiBzdHJpbmcgPSBldmVudDtcbiAgICAgICAgaWYoTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpXG4gICAgICAgIHtcbiAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJ3eFwiXS5hbGRTZW5kRXZlbnQoZXZlbnROYW1lLGRhdGEpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYoTGF5YS5Ccm93c2VyLm9uUVFNaW5pR2FtZSlcbiAgICAgICAge1xuICAgICAgICAgICAgTGF5YS5Ccm93c2VyLndpbmRvd1tcInFxXCJdLmFsZFNlbmRFdmVudChldmVudE5hbWUsZGF0YSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIGFsZFNlbmRSZXBvcnRBZENsaWNrU3VjY2VzcyhkYXRhIDogYW55KVxuICAgIHtcbiAgICAgICAgdmFyIHR5cGUgPSBBTERFdmVudERlZi5SZXBvcnRBZENsaWNrU3VjY2VzcyAgKyBcIiBcIiArICBkYXRhLnRpdGxlICsgXCI6XCIgKyBTdHJpbmcoZGF0YS5hcHBpZClcbiAgICAgICAgQUxELmFsZFNlbmRFdmVudCh0eXBlLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIFwi5a+85Ye65oiQ5YqfXCIgOiBkYXRhLnRpdGxlICsgXCI6XCIgKyBTdHJpbmcoZGF0YS5hcHBpZClcbiAgICAgICAgICAgIH0pXG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyBhbGRTZW5kUmVwb3J0QWRDbGlja0ZhaWwoZGF0YSA6IGFueSlcbiAgICB7XG4gICAgICAgIHZhciB0eXBlID0gQUxERXZlbnREZWYuUmVwb3J0QWRDbGlja0ZhaWwgICsgXCIgXCIgKyAgZGF0YS50aXRsZSArIFwiOlwiICsgU3RyaW5nKGRhdGEuYXBwaWQpXG4gICAgICAgIEFMRC5hbGRTZW5kRXZlbnQodHlwZSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBcIuWvvOWHuuWksei0pVwiICA6ICBkYXRhLnRpdGxlICsgXCI6XCIgKyBTdHJpbmcoZGF0YS5hcHBpZClcbiAgICAgICAgICAgIH0pXG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyBhbGRTZW5kUmVwb3J0TGF1bmNoT3B0aW9ucyhzY2VuZWlkIDogc3RyaW5nLGlwIDogc3RyaW5nLGxvY2F0aW9uIDogT2JqZWN0KVxuICAgIHtcbiAgICAgICAgdmFyIHR5cGUgPSBBTERFdmVudERlZi5SZXBvcnRMYXVuY2hPcHRpb25zO1xuICAgICAgICBBTEQuYWxkU2VuZEV2ZW50KHR5cGUsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgXCLlnLrmma/lgLzvvJpcIiAgOiBTdHJpbmcoc2NlbmVpZCksXG4gICAgICAgICAgICAgICAgXCJJcO+8mlwiICA6IFN0cmluZyhpcCksXG4gICAgICAgICAgICAgICAgXCLlnLDljLrvvJpcIiA6IEpTT04uc3RyaW5naWZ5KGxvY2F0aW9uKVxuICAgICAgICAgICAgfSlcbiAgICB9XG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBwQ29uZmlnXG57XG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBcHBJRCA6IHN0cmluZyA9IFwiMTExMDE3MTU3M1wiO1xuICAgIHB1YmxpYyBzdGF0aWMgUmVzU2VydmVyIDogc3RyaW5nID0gXCJodHRwczovL29zcy5yZW55b3V3YW5nbHVvLmNuL3FxLWpqa2xiYlwiOy8v6LWE5rqQ5pyN5Yqh5Zmo5Zyw5Z2AXG4gICAgcHVibGljIHN0YXRpYyBMb2NhbFRlc3RSZVNlcnZlciA6IHN0cmluZyA9IFwicmVzL2pzb25cIjsvL+acrOWcsOa1i+ivlei1hOa6kOacjeWKoeWZqOWcsOWdgFxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgVmVyc2lvbnMgOiBzdHJpbmcgPSBcIjEuMC4wXCI7XG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBvblRUTWluaUdhbWUgOiBib29sZWFuID0gZmFsc2U7Ly/mmK/lkKbmmK/lpLTmnaHlsI/muLjmiI9cbn0iLCJpbXBvcnQgQXBwU3dpdGNoQ29uZmlnIGZyb20gXCIuL0NvbmZpZy9BcHBTd2l0Y2hDb25maWdcIjtcbmltcG9ydCBXWF9TU1BEX0FQSV9TU1BEXyBmcm9tIFwiLi9XWEFQSVwiO1xuaW1wb3J0IFFRTWluaUdhbWVBUEkgZnJvbSBcIi4vUVFNaW5pR2FtZUFQSVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDYWNoZWRRUUJhbm5lckFkIHtcbiAgICBwcm90ZWN0ZWQgc3RhdGljIF9jdXJCYW5uZXI6IGFueSA9IG51bGw7XG4gICAgcHJvdGVjdGVkIHN0YXRpYyBfb25Mb2FkIDogRnVuY3Rpb24gPSBudWxsO1xuICAgIHByb3RlY3RlZCBzdGF0aWMgX29uRXJyb3IgOiBGdW5jdGlvbiA9IG51bGw7XG5cbiAgICBwdWJsaWMgc3RhdGljIHByZWxvYWRCYW5uZXIoKSB7XG5cbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIHNob3coYmFubmVyaWQ/OiBzdHJpbmcpIHtcbiAgICAgICAgbGV0IHd4V3VEaWFuQmFubmVycyA9IEFwcFN3aXRjaENvbmZpZy5nZXRJbnN0YW5jZSgpLmdldEFwcFN3aXRjaERhdGEoKS53eFd1RGlhbkJhbm5lcnM7XG4gICAgICAgIGxldCBiYW5uZXJUb2RheUJhbm5lck1heCA9IEFwcFN3aXRjaENvbmZpZy5nZXRJbnN0YW5jZSgpLmdldEFwcFN3aXRjaERhdGEoKS5iYW5uZXJUb2RheUJhbm5lck1heDtcbiAgICAgICAgYmFubmVyaWQgPSB3eFd1RGlhbkJhbm5lcnNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogd3hXdURpYW5CYW5uZXJzLmxlbmd0aCldO1xuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uUVFNaW5pR2FtZSAmJiBudWxsICE9IGJhbm5lcmlkKSB7XG4gICAgICAgICAgICBsZXQgc3lzSW5mbyA9IExheWEuQnJvd3Nlci53aW5kb3dbXCJxcVwiXS5nZXRTeXN0ZW1JbmZvU3luYygpO1xuICAgICAgICAgICAgbGV0IHN3ID0gc3lzSW5mby5zY3JlZW5XaWR0aDtcbiAgICAgICAgICAgIGxldCBzaCA9IHN5c0luZm8uc2NyZWVuSGVpZ2h0O1xuICAgICAgICAgICAgbGV0IGJhbm5lciA9IExheWEuQnJvd3Nlci53aW5kb3dbXCJxcVwiXS5jcmVhdGVCYW5uZXJBZChcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGFkVW5pdElkOiBiYW5uZXJpZCxcbiAgICAgICAgICAgICAgICAgICAgYWRJbnRlcnZhbHM6IDMwLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTpcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogKExheWEuc3RhZ2UuaGVpZ2h0IC0gMjQwKSAvIExheWEuc3RhZ2UuaGVpZ2h0ICogc2gsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IHN3LFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBpZiAoYmFubmVyKSB7XG4gICAgICAgICAgICAgICAgQ2FjaGVkUVFCYW5uZXJBZC5fb25Mb2FkID0gKHJlcykgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkNhY2hlZFFRQmFubmVyIOW5v+WRiiDliqDovb3lrozmiJBcIiwgYmFubmVyaWQpO1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpO1xuICAgICAgICAgICAgICAgICAgICBiYW5uZXIuc2hvdygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBiYW5uZXIub25Mb2FkKENhY2hlZFFRQmFubmVyQWQuX29uTG9hZCk7XG4gICAgICAgICAgICAgICAgQ2FjaGVkUVFCYW5uZXJBZC5fb25FcnJvciA9IChlcnIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJDYWNoZWRRUUJhbm5lciDlub/lkYog5Yqg6L295aSx6LSlXCIsIGJhbm5lcmlkKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgYmFubmVyLm9mZkxvYWQoQ2FjaGVkUVFCYW5uZXJBZC5fb25Mb2FkKTtcbiAgICAgICAgICAgICAgICAgICAgYmFubmVyLm9mZkVycm9yKENhY2hlZFFRQmFubmVyQWQuX29uRXJyb3IpO1xuICAgICAgICAgICAgICAgICAgICBiYW5uZXIuZGVzdHJveSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBiYW5uZXIub25FcnJvcihDYWNoZWRRUUJhbm5lckFkLl9vbkVycm9yKTtcbiAgICAgICAgICAgICAgICBDYWNoZWRRUUJhbm5lckFkLl9jdXJCYW5uZXIgPSBiYW5uZXJcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuXG4gICAgcHVibGljIHN0YXRpYyBoaWRlKCkge1xuICAgICAgICBMYXlhLnRpbWVyLmNsZWFyQWxsKENhY2hlZFFRQmFubmVyQWQpO1xuICAgICAgICBpZiAobnVsbCAhPSBDYWNoZWRRUUJhbm5lckFkLl9jdXJCYW5uZXIpICB7XG4gICAgICAgICAgICBDYWNoZWRRUUJhbm5lckFkLl9jdXJCYW5uZXIub2ZmTG9hZChDYWNoZWRRUUJhbm5lckFkLl9vbkxvYWQpO1xuICAgICAgICAgICAgQ2FjaGVkUVFCYW5uZXJBZC5fY3VyQmFubmVyLm9mZkVycm9yKENhY2hlZFFRQmFubmVyQWQuX29uRXJyb3IpO1xuICAgICAgICAgICAgQ2FjaGVkUVFCYW5uZXJBZC5fY3VyQmFubmVyLmRlc3Ryb3koKTtcbiAgICAgICAgICAgIENhY2hlZFFRQmFubmVyQWQuX2N1ckJhbm5lciA9IG51bGw7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkNhY2hlZFFRQmFubmVyIOW5v+WRiumakOiXj1wiKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgY2hhbmdlU2hvdygpIHtcbiAgICAgICAgaWYgKG51bGwgIT0gQ2FjaGVkUVFCYW5uZXJBZC5fY3VyQmFubmVyKSB7XG4gICAgICAgICAgICBDYWNoZWRRUUJhbm5lckFkLl9jdXJCYW5uZXIuaGlkZSgpO1xuICAgICAgICAgICAgQ2FjaGVkUVFCYW5uZXJBZC5fY3VyQmFubmVyID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBDYWNoZWRRUUJhbm5lckFkLnNob3coKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIGNsZWFyKCkge1xuXG4gICAgfVxufSIsImltcG9ydCBBcHBTd2l0Y2hDb25maWcgZnJvbSBcIi4vQ29uZmlnL0FwcFN3aXRjaENvbmZpZ1wiO1xuaW1wb3J0IFdYX1NTUERfQVBJX1NTUERfIGZyb20gXCIuL1dYQVBJXCI7XG5pbXBvcnQgV1hBUEkgZnJvbSBcIi4vV1hBUElcIjtcbmltcG9ydCBBTEQsIHsgQUxERXZlbnREZWYgfSBmcm9tIFwiLi9BTERcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FjaGVkV1hCYW5uZXJBZFxue1xuICAgIHByb3RlY3RlZCBzdGF0aWMgX2Jhbm5lckNhY2hlIDogYW55ID0ge307XG4gICAgcHJvdGVjdGVkIHN0YXRpYyBfY3VyQmFubmVyIDogYW55ID0gbnVsbDtcblxuICAgIHByb3RlY3RlZCBzdGF0aWMgcmVhZG9ubHkgX3ByZUxvb3BPYmogPSB7fVxuXG4gICAgcHVibGljIHN0YXRpYyBwcmVsb2FkQmFubmVyKCkgXG4gICAge1xuICAgICAgICB2YXIgd3hXdURpYW5CYW5uZXJzID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLnd4V3VEaWFuQmFubmVycztcbiAgICAgICAgdmFyIGJhbm5lclRvZGF5QmFubmVyTWF4ID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLmJhbm5lclRvZGF5QmFubmVyTWF4O1xuICAgICAgICAvLyB2YXIgd3hXdURpYW5CYW5uZXJzID0gW1dYQVBJLmJhbm5lckFkVW5pdElkXTtcbiAgICAgICAgdmFyIGJhbm5lclRvZGF5QmFubmVyTWF4ID0gNTtcbiAgICAgICAgdmFyIHByZUxvYWRCYW5uZXJzIDogQXJyYXk8c3RyaW5nPiA9IG5ldyBBcnJheTxzdHJpbmc+KCk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgd3hXdURpYW5CYW5uZXJzLmxlbmd0aDsgKytpKVxuICAgICAgICB7XG4gICAgICAgICAgICBwcmVMb2FkQmFubmVycy5wdXNoKHd4V3VEaWFuQmFubmVyc1tpXSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYocHJlTG9hZEJhbm5lcnMubGVuZ3RoID4gYmFubmVyVG9kYXlCYW5uZXJNYXgpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHZhciBkZWxOdW0gPSBwcmVMb2FkQmFubmVycy5sZW5ndGggLSBiYW5uZXJUb2RheUJhbm5lck1heDtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZGVsTnVtOyArK2kpICBcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBwcmVMb2FkQmFubmVycy5zcGxpY2UoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcHJlTG9hZEJhbm5lcnMubGVuZ3RoKSwxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjb25zb2xlLmxvZyhcIuW8gOWni+mihOWIm+W7uuW+ruS/oUJhbm5hZXJcIixwcmVMb2FkQmFubmVycyk7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiQmFubmFlciDmnIDlpKfmlbDpmZDliLYg77yaXCIsYmFubmVyVG9kYXlCYW5uZXJNYXgpO1xuICAgICAgICB2YXIgY291bnRlciA9IDA7XG4gICAgICAgIExheWEudGltZXIubG9vcCgyMDAwLENhY2hlZFdYQmFubmVyQWQuX3ByZUxvb3BPYmosKCk9PlxuICAgICAgICB7XG4gICAgICAgICAgICBpZihjb3VudGVyID49IHByZUxvYWRCYW5uZXJzLmxlbmd0aClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBMYXlhLnRpbWVyLmNsZWFyQWxsKENhY2hlZFdYQmFubmVyQWQuX3ByZUxvb3BPYmopO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBiYW5uZXJpZCA9IHByZUxvYWRCYW5uZXJzW2NvdW50ZXJdO1xuICAgICAgICAgICAgdmFyIGJhbm5lciA9IENhY2hlZFdYQmFubmVyQWQuX2Jhbm5lckNhY2hlW2Jhbm5lcmlkXTtcbiAgICAgICAgICAgIGlmKG51bGwgPT0gYmFubmVyKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGJhbm5lciA9IENhY2hlZFdYQmFubmVyQWQuY3JlYXRlKGJhbm5lcmlkKTtcbiAgICAgICAgICAgICAgICBpZihudWxsICE9IGJhbm5lcilcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIENhY2hlZFdYQmFubmVyQWQuX2Jhbm5lckNhY2hlW2Jhbm5lcmlkXSA9IGJhbm5lcjtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLpooTliJvlu7rlvq7kv6FCYW5uYWVyXCIsYmFubmVyaWQsXCLlrozmiJBcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgKytjb3VudGVyO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgc3RhdGljIGdldEJhbm5lcihiYW5uZXJpZCA6IHN0cmluZykgOiBhbnlcbiAgICB7XG4gICAgICAgIGlmKG51bGwgPT0gYmFubmVyaWQgfHwgXCJcIiA9PSBiYW5uZXJpZClcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB2YXIgYmFubmVyID0gQ2FjaGVkV1hCYW5uZXJBZC5fYmFubmVyQ2FjaGVbYmFubmVyaWRdO1xuICAgICAgICBpZihudWxsID09IGJhbm5lcilcbiAgICAgICAge1xuICAgICAgICAgICAgYmFubmVyID0gQ2FjaGVkV1hCYW5uZXJBZC5jcmVhdGUoYmFubmVyaWQpO1xuICAgICAgICAgICAgaWYobnVsbCAhPSBiYW5uZXIpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgQ2FjaGVkV1hCYW5uZXJBZC5fYmFubmVyQ2FjaGVbYmFubmVyaWRdID0gYmFubmVyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBiYW5uZXJcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgc3RhdGljIGNyZWF0ZShiYW5uZXJpZCA6IHN0cmluZylcbiAgICB7XG4gICAgICAgIGlmKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lKVxuICAgICAgICB7XG4gICAgICAgICAgICB2YXIgc3lzSW5mbyA9IExheWEuQnJvd3Nlci53aW5kb3dbXCJ3eFwiXS5nZXRTeXN0ZW1JbmZvU3luYygpO1xuICAgICAgICAgICAgdmFyIHN3ID0gc3lzSW5mby5zY3JlZW5XaWR0aDtcbiAgICAgICAgICAgIHZhciBzaCA9IHN5c0luZm8uc2NyZWVuSGVpZ2h0O1xuICAgICAgICAgICAgdmFyIGJhbm5lciA9IExheWEuQnJvd3Nlci53aW5kb3dbXCJ3eFwiXS5jcmVhdGVCYW5uZXJBZChcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGFkVW5pdElkIDogYmFubmVyaWQsXG4gICAgICAgICAgICAgICAgICAgIGFkSW50ZXJ2YWxzIDogMzAsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlIDogXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQgOiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgdG9wIDogKExheWEuc3RhZ2UuaGVpZ2h0IC0gMjQwKSAvIExheWEuc3RhZ2UuaGVpZ2h0ICogc2gsXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aCA6IHN3LFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIGlmKGJhbm5lcilcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBiYW5uZXIub25Mb2FkKChyZXMpID0+ICB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQ2FjaGVkV1hCYW5uZXIg5bm/5ZGKIOWKoOi9veWujOaIkFwiLGJhbm5lcmlkKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIGJhbm5lci5vbkVycm9yKChlcnIpID0+ICB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQ2FjaGVkV1hCYW5uZXIg5bm/5ZGKIOWKoOi9veWksei0pVwiLGJhbm5lcmlkKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgLy8gQUxELmFsZFNlbmRPbmx5U2luZ2xlUmVwb3J0KEFMREV2ZW50RGVmLldYQmFubmVyTG9hZEZhaWwse1xuICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCJiYW5uZXLliqDovb3lpLHotKXljp/lm6BcIjplcnIgXG4gICAgICAgICAgICAgICAgICAgIC8vIH0pO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgYmFubmVyLm9uUmVzaXplKHJlcyA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGJhbm5lci5zdHlsZS5yZWFsV2lkdGgsIGJhbm5lci5zdHlsZS5yZWFsSGVpZ2h0KVxuICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBiYW5uZXI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZVxuICAgICAgICB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgc2hvdygpXG4gICAge1xuICAgICAgICBpZihudWxsICE9IENhY2hlZFdYQmFubmVyQWQuX2N1ckJhbm5lcilcbiAgICAgICAge1xuICAgICAgICAgICAgQ2FjaGVkV1hCYW5uZXJBZC5fY3VyQmFubmVyLmhpZGUoKTtcbiAgICAgICAgICAgIENhY2hlZFdYQmFubmVyQWQuX2N1ckJhbm5lciA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHd1RGlhbkJhbm5lcnMgPSBBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkud3hXdURpYW5CYW5uZXJzO1xuICAgICAgICB2YXIgYmFubmVyaWQgPSB3dURpYW5CYW5uZXJzW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHd1RGlhbkJhbm5lcnMubGVuZ3RoKV07XG4gICAgICAgIHZhciBiYW5uZXIgPSBDYWNoZWRXWEJhbm5lckFkLmdldEJhbm5lcihiYW5uZXJpZCk7XG4gICAgICAgIGlmKGJhbm5lcilcbiAgICAgICAge1xuICAgICAgICAgICAgQ2FjaGVkV1hCYW5uZXJBZC5fY3VyQmFubmVyID0gYmFubmVyO1xuICAgICAgICAgICAgdmFyIHN5c0luZm8gPSBMYXlhLkJyb3dzZXIud2luZG93W1wid3hcIl0uZ2V0U3lzdGVtSW5mb1N5bmMoKTtcbiAgICAgICAgICAgIHZhciBzdyA9IHN5c0luZm8uc2NyZWVuV2lkdGg7XG4gICAgICAgICAgICB2YXIgc2ggPSBzeXNJbmZvLnNjcmVlbkhlaWdodDtcbiAgICAgICAgICAgIENhY2hlZFdYQmFubmVyQWQuX2N1ckJhbm5lci5zdHlsZS50b3AgPSAoTGF5YS5zdGFnZS5oZWlnaHQgLSAyNDApIC8gTGF5YS5zdGFnZS5oZWlnaHQgKiBzaDtcbiAgICAgICAgICAgIENhY2hlZFdYQmFubmVyQWQuX2N1ckJhbm5lci5zaG93KCk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkNhY2hlZFdYQmFubmVyIOW5v+WRiuaYvuekuiBiYW5uZXJpZCDvvJogXCIsYmFubmVyaWQpO1xuICAgICAgICB9XG4gICAgICAgIHZhciB0aW1lID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLmJhbm5lckZyZXNoVGltZXI7XG4gICAgICAgIC8vTGF5YS50aW1lci5vbmNlKHRpbWUgKiAxMDAwLENhY2hlZFdYQmFubmVyQWQsQ2FjaGVkV1hCYW5uZXJBZC5jaGFuZ2VTaG93KTtcbiAgICB9XG5cblxuICAgIHB1YmxpYyBzdGF0aWMgaGlkZSgpXG4gICAge1xuICAgICAgICBMYXlhLnRpbWVyLmNsZWFyQWxsKENhY2hlZFdYQmFubmVyQWQpO1xuICAgICAgICBpZihudWxsICE9IENhY2hlZFdYQmFubmVyQWQuX2N1ckJhbm5lcilcbiAgICAgICAge1xuICAgICAgICAgICAgQ2FjaGVkV1hCYW5uZXJBZC5fY3VyQmFubmVyLmhpZGUoKTtcbiAgICAgICAgICAgIENhY2hlZFdYQmFubmVyQWQuX2N1ckJhbm5lciA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgY29uc29sZS5sb2coXCJDYWNoZWRXWEJhbm5lciDlub/lkYrpmpDol49cIik7XG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyBjaGFuZ2VTaG93KClcbiAgICB7XG4gICAgICAgIGlmKG51bGwgIT0gQ2FjaGVkV1hCYW5uZXJBZC5fY3VyQmFubmVyKVxuICAgICAgICB7XG4gICAgICAgICAgICBDYWNoZWRXWEJhbm5lckFkLl9jdXJCYW5uZXIuaGlkZSgpO1xuICAgICAgICAgICAgQ2FjaGVkV1hCYW5uZXJBZC5fY3VyQmFubmVyID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBDYWNoZWRXWEJhbm5lckFkLnNob3coKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIGNsZWFyKClcbiAgICB7XG4gICAgICAgIExheWEudGltZXIuY2xlYXJBbGwoQ2FjaGVkV1hCYW5uZXJBZCk7XG4gICAgICAgIGZvcih2YXIga2V5IGluIENhY2hlZFdYQmFubmVyQWQuX2Jhbm5lckNhY2hlKVxuICAgICAgICB7XG4gICAgICAgICAgICB2YXIgYmFubmVyID0gQ2FjaGVkV1hCYW5uZXJBZC5fYmFubmVyQ2FjaGVba2V5XTtcbiAgICAgICAgICAgIGlmKG51bGwgIT0gYmFubmVyKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGJhbm5lci5kZXN0cm95KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBDYWNoZWRXWEJhbm5lckFkLl9iYW5uZXJDYWNoZVtrZXldID0gbnVsbDtcbiAgICAgICAgfVxuICAgIH1cbn0iLCJpbXBvcnQgQXBwQ29uZmlnIGZyb20gXCIuLi9BcHBDb25maWdcIjtcbmltcG9ydCBXWEFQSSBmcm9tIFwiLi4vV1hBUElcIjtcblxuZXhwb3J0IGNsYXNzIEFwcFN3aXRjaERhdGFcbntcbiAgICBwdWJsaWMgdmVyc2lvbiA6IHN0cmluZyA9IFwiXCI7XG4gICAgcHVibGljIGJhbm5lciA6IG51bWJlciA9IDA7XG4gICAgcHVibGljIHd1ZGlhbjogbnVtYmVyID0gMDtcbiAgICBwcml2YXRlIHd1ZGlhbkF2YWlsYWJsZVRpbWU6IG9iamVjdCA9IHtcbiAgICAgICAgXCIwXCI6IDAsIFwiMVwiOiAwLCBcIjJcIjogMCwgXCIzXCI6IDAsXG4gICAgICAgIFwiNFwiOiAwLCBcIjVcIjogMCwgXCI2XCI6IDAsIFwiN1wiOiAwLFxuICAgICAgICBcIjhcIjogMCwgXCI5XCI6IDAsIFwiMTBcIjogMCwgXCIxMVwiOiAwLFxuICAgICAgICBcIjEyXCI6IDAsIFwiMTNcIjogMCwgXCIxNFwiOiAwLCBcIjE1XCI6IDAsXG4gICAgICAgIFwiMTZcIjogMCwgXCIxN1wiOiAwLCBcIjE4XCI6IDAsIFwiMTlcIjogMCxcbiAgICAgICAgXCIyMFwiOiAwLCBcIjIxXCI6IDAsIFwiMjJcIjogMCwgXCIyM1wiOiAwXG4gICAgfVxuICAgIC8qKlxuICAgICAqIOW+l+WIsOW9k+WJjeaXtumXtOW8gOWFs+aYr+WQpuaJk+W8gFxuICAgICAqIFxuICAgICAqIEByZWFkb25seVxuICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAqIEBtZW1iZXJvZiBBcHBTd2l0Y2hEYXRhXG4gICAgICovXG4gICAgcHVibGljIGdldCB3dWRpYW5UaW1lQXZhbGlhYmxlKCk6IGJvb2xlYW57XG4gICAgICAgIHJldHVybiB0aGlzLnd1ZGlhbkF2YWlsYWJsZVRpbWVbbmV3IERhdGUoKS5nZXRIb3VycygpXSA9PSAxO1xuICAgIH1cbiAgICBwdWJsaWMgbWFpbGlhbmc6IG51bWJlciA9IDE7XG4gICAgcHVibGljIHJlYWRvbmx5IG1haWxpYW5nbGlzdCA6IEFycmF5PG51bWJlcj4gPSBuZXcgQXJyYXk8bnVtYmVyPigpO1xuICAgIHB1YmxpYyByZWFkb25seSBtYWlsaWFuZ1NjZW5lTGlzdCA6IEFycmF5PG51bWJlcj4gPSBuZXcgQXJyYXk8bnVtYmVyPigpO1xuXG4gICAgcHVibGljIHJlYWRvbmx5IHd4V3VEaWFuQmFubmVycyA6IEFycmF5PHN0cmluZz4gPSBuZXcgQXJyYXk8c3RyaW5nPigpO1xuICAgIHB1YmxpYyByZWFkb25seSByZWNyZWF0ZUJhbm5lcklETGlzdCA6IEFycmF5PHN0cmluZz4gPSBuZXcgQXJyYXk8c3RyaW5nPigpO1xuICAgIHB1YmxpYyBiYW5uZXJSZWNyZWF0ZVRpbWUgOiBudW1iZXIgPSA1O1xuICAgIFxuICAgIHB1YmxpYyBidG5Nb3ZlVGltZXIgOiBudW1iZXIgPSAxO1xuICAgIHB1YmxpYyBiYW5uZXJNb3ZlVGltZXIgOiBudW1iZXIgPSAwLjU7XG4gICAgcHVibGljIGJhbm5lckZyZXNoVGltZXIgOiBudW1iZXIgPSAyMDA7XG4gICAgcHVibGljIGJhbm5lckNyZWF0ZUZhaWxOdW0gOiBudW1iZXIgPSAzO1xuICAgIHB1YmxpYyBiYW5uZXJUb2RheUJhbm5lck1heCA6IG51bWJlciA9IDEwO1xuXG4gICAgcHVibGljIGFkU3dpdGNoIDogbnVtYmVyID0gMTtcblxuICAgIHB1YmxpYyByZWFkb25seSB3dWRpYW5TY2VuZUxpc3QgOiBBcnJheTxudW1iZXI+ID0gbmV3IEFycmF5PG51bWJlcj4oKTtcblxuICAgIHB1YmxpYyBjb250aW51ZUJ0bkRlbGF5VGltZSA6IG51bWJlciA9IDI7XG4gICAgcHVibGljIGJhbm5lclNob3dUaW1lIDogbnVtYmVyID0gMzA7XG5cbiAgICBwdWJsaWMgcmVhZG9ubHkgb3Bwb2NmZyA9IG5ldyBPUFBPQ2ZnKCk7IFxuICAgIHB1YmxpYyByZWFkb25seSBxcWNmZyA9IG5ldyBRUUNmZygpO1xuICAgIHB1YmxpYyByZWFkb25seSB0dGNmZyA9IG5ldyBUVENmZygpO1xuXG4gICAgcHVibGljIHNraW5QUiA6IG51bWJlciA9IDUwO1xufVxuXG5leHBvcnQgY2xhc3MgT1BQT0NmZ1xue1xuICAgIHB1YmxpYyB5dWFuc2hlbmcgOiBudW1iZXIgPSAxMDA7XG4gICAgcHVibGljIHl1YW5zaGVuZ1N3aXRjaCA6IG51bWJlciA9IDE7XG4gICAgcHVibGljIGFkZFRvRGVza3RvcCA6IG51bWJlciA9IDA7XG4gICAgcHVibGljIG9wcG92ZXJzaW9ucyA6IHN0cmluZyA9IFwiXCI7XG4gICAgcHVibGljIGJ0blNob3dUaW1lciA6IG51bWJlciA9IDA7XG4gICAgcHVibGljIGluZGV4QWRTd2l0Y2ggOiBudW1iZXIgPSAwO1xuICAgIHB1YmxpYyBlbmRBZFN3aXRjaCA6IG51bWJlciA9IDA7XG4gICAgcHVibGljIHl1YW5zaGVuZzIgOiBudW1iZXIgPSAxMDA7XG4gICAgcHVibGljIHl1YW5zaGVuZ1N3aXRjaDIgOiBudW1iZXIgPSAxO1xufVxuXG5leHBvcnQgY2xhc3MgUVFDZmdcbntcbiAgICBwdWJsaWMga3VhbmdkaWFuQmFubmVyIDogbnVtYmVyID0gMDtcbiAgICBwdWJsaWMga3VhbmdkaWFuQm94IDogbnVtYmVyID0gMDtcbiAgICBwdWJsaWMgYm94IDogbnVtYmVyID0gMDtcbiAgICBwdWJsaWMgd2VpeWkgOiBudW1iZXIgPSAwO1xufVxuXG5leHBvcnQgY2xhc3MgVFRDZmdcbntcbiAgICBwdWJsaWMgbW9yZUdhbWVTd2l0Y2ggOiBudW1iZXIgPSAwO1xuICAgIHB1YmxpYyBrdWFuZ2RpYW5CYW5uZXIgOiBudW1iZXIgPSAwO1xuICAgIHB1YmxpYyBsdXBpbmcgOiBudW1iZXIgPSAwO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBcHBTd2l0Y2hDb25maWdcbnsgICBcbiAgICBwdWJsaWMgc3RhdGljIGdldEluc3RhbmNlKCkgOiBBcHBTd2l0Y2hDb25maWdcbiAgICB7XG4gICAgICAgIGlmKG51bGwgPT0gQXBwU3dpdGNoQ29uZmlnLl9pbnN0YW5jZSlcbiAgICAgICAge1xuICAgICAgICAgICAgQXBwU3dpdGNoQ29uZmlnLl9pbnN0YW5jZSA9IEFwcFN3aXRjaENvbmZpZy5sb2FkKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIEFwcFN3aXRjaENvbmZpZy5faW5zdGFuY2VcbiAgICB9XG4gICAgcHJvdGVjdGVkIHN0YXRpYyBfaW5zdGFuY2U6IEFwcFN3aXRjaENvbmZpZztcblxuICAgIHByb3RlY3RlZCBzdGF0aWMgbG9hZCgpIDogQXBwU3dpdGNoQ29uZmlnXG4gICAge1xuICAgICAgICB2YXIgY29uZmlnID0gbmV3IEFwcFN3aXRjaENvbmZpZygpO1xuICAgICAgICB2YXIganNvbjogYW55ID0gTGF5YS5sb2FkZXIuZ2V0UmVzKEFwcENvbmZpZy5SZXNTZXJ2ZXIgKyBcIi9qc29uL2FwcHN3aXRjaC5qc29uXCIpO1xuICAgICAgICBpZihqc29uKXtcbiAgICAgICAgICAgIGZvcih2YXIgaSA9IDA7aSA8IGpzb24ubGVuZ3RoOysraSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB2YXIgcm93ID0ganNvbltpXTtcbiAgICAgICAgICAgICAgICB2YXIgcm93RGF0YTogQXBwU3dpdGNoRGF0YSA9IG5ldyBBcHBTd2l0Y2hEYXRhKCk7XG4gICAgICAgICAgICAgICAgcm93RGF0YS52ZXJzaW9uID0gU3RyaW5nKHJvd1tcInZlcnNpb25cIl0pO1xuICAgICAgICAgICAgICAgIHJvd0RhdGEuYmFubmVyID0gTnVtYmVyKHJvd1tcImJhbm5lclwiXSk7XG4gICAgICAgICAgICAgICAgcm93RGF0YS53dWRpYW4gPSBOdW1iZXIocm93W1wid3VkaWFuXCJdKTtcbiAgICAgICAgICAgICAgICAocm93RGF0YSBhcyBhbnkpLnd1ZGlhbkF2YWlsYWJsZVRpbWUgPSBPYmplY3Qocm93W1wid3VkaWFuVGltZVwiXSk7XG4gICAgICAgICAgICAgICAgcm93RGF0YS5tYWlsaWFuZyA9ICBOdW1iZXIocm93W1wibWFpbGlhbmdcIl0pO1xuICAgICAgICAgICAgICAgIHZhciBtYWlsaWFuZ2xpc3QgPSByb3dbXCJtYWlsaWFuZ2xpc3RcIl07XG4gICAgICAgICAgICAgICAgaWYobnVsbCAhPSBtYWlsaWFuZ2xpc3QpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IG1haWxpYW5nbGlzdC5sZW5ndGg7ICsraikgIFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZmxhZyA9IE51bWJlcihtYWlsaWFuZ2xpc3Rbal0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgcm93RGF0YS5tYWlsaWFuZ2xpc3QucHVzaChmbGFnKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgbWFpbGlhbmdTY2VuZWxpc3QgPSByb3dbXCJtYWlsaWFuZ1NjZW5lbGlzdFwiXTtcbiAgICAgICAgICAgICAgICBpZihudWxsICE9IG1haWxpYW5nU2NlbmVsaXN0KVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBtYWlsaWFuZ1NjZW5lbGlzdC5sZW5ndGg7ICsraikgIFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgc2NlbmVWYWx1ZSA9IE51bWJlcihtYWlsaWFuZ1NjZW5lbGlzdFtqXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByb3dEYXRhLm1haWxpYW5nU2NlbmVMaXN0LnB1c2goc2NlbmVWYWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB2YXIgd3h3dWRpYW5iYW5uZXJzID0gcm93W1wid3h3dWRpYW5iYW5uZXJzXCJdO1xuICAgICAgICAgICAgICAgIGlmKG51bGwgIT0gd3h3dWRpYW5iYW5uZXJzKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB3eHd1ZGlhbmJhbm5lcnMubGVuZ3RoOyArK2opICBcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGJhbm5lcmlkID0gU3RyaW5nKHd4d3VkaWFuYmFubmVyc1tqXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByb3dEYXRhLnd4V3VEaWFuQmFubmVycy5wdXNoKGJhbm5lcmlkKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHZhciByZWNyZWF0ZUJhbm5lcklETGlzdCA9IHJvd1tcInJlY3JlYXRlQmFubmVySURMaXN0XCJdO1xuICAgICAgICAgICAgICAgIGlmKG51bGwgIT0gcmVjcmVhdGVCYW5uZXJJRExpc3QpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHJlY3JlYXRlQmFubmVySURMaXN0Lmxlbmd0aDsgKytqKSAgXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBiYW5uZXJpZCA9IFN0cmluZyhyZWNyZWF0ZUJhbm5lcklETGlzdFtqXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByb3dEYXRhLnJlY3JlYXRlQmFubmVySURMaXN0LnB1c2goYmFubmVyaWQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgcm93RGF0YS5iYW5uZXJSZWNyZWF0ZVRpbWUgPSBudWxsICE9IHJvd1tcImJhbm5lclJlY3JlYXRlVGltZVwiXSA/ICBOdW1iZXIocm93W1wiYmFubmVyUmVjcmVhdGVUaW1lXCJdKSA6IHJvd0RhdGEuYmFubmVyUmVjcmVhdGVUaW1lO1xuICAgICAgICAgICAgICAgIHJvd0RhdGEuYnRuTW92ZVRpbWVyID0gTnVtYmVyKHJvd1tcImJ0bk1vdmVUaW1lclwiXSk7XG4gICAgICAgICAgICAgICAgcm93RGF0YS5iYW5uZXJNb3ZlVGltZXIgPSBOdW1iZXIocm93W1wiYmFubmVyTW92ZVRpbWVyXCJdKTtcbiAgICAgICAgICAgICAgICByb3dEYXRhLmJhbm5lckNyZWF0ZUZhaWxOdW0gPSBOdW1iZXIocm93W1wiY3JlYXRlRmFpbE51bVwiXSk7XG4gICAgICAgICAgICAgICAgcm93RGF0YS5iYW5uZXJGcmVzaFRpbWVyID0gTnVtYmVyKHJvd1tcImJhbm5lckZyZXNoVGltZXJcIl0pO1xuICAgICAgICAgICAgICAgIHJvd0RhdGEuYmFubmVyVG9kYXlCYW5uZXJNYXggPSBOdW1iZXIocm93W1widG9kYXlCYW5uZXJNYXhcIl0pO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIHJvd0RhdGEuYWRTd2l0Y2ggPSBOdW1iZXIocm93W1wiYWRTd2l0Y2hcIl0pO1xuXG4gICAgICAgICAgICAgICAgdmFyIHd1ZGlhblNjZW5lTGlzdCA9IHJvd1tcInd1ZGlhblNjZW5lTGlzdFwiXTtcbiAgICAgICAgICAgICAgICBpZihudWxsICE9IHd1ZGlhblNjZW5lTGlzdClcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgd3VkaWFuU2NlbmVMaXN0Lmxlbmd0aDsgKytqKSAgXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB3dWRpYW5TY2VuZVZhbHVlID0gTnVtYmVyKHd1ZGlhblNjZW5lTGlzdFtqXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByb3dEYXRhLnd1ZGlhblNjZW5lTGlzdC5wdXNoKHd1ZGlhblNjZW5lVmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgcm93RGF0YS5jb250aW51ZUJ0bkRlbGF5VGltZSA9ICBOdW1iZXIocm93W1wiY29udGludWVCdG5EZWxheVRpbWVcIl0pO1xuICAgICAgICAgICAgICAgIHJvd0RhdGEuYmFubmVyU2hvd1RpbWUgPSAgTnVtYmVyKHJvd1tcImJhbm5lclNob3dUaW1lXCJdKTtcblxuICAgICAgICAgICAgICAgIGlmKG51bGwgIT0gcm93W1wib3Bwb2NmZ1wiXSlcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGxldCBjZmcgPSByb3dbXCJvcHBvY2ZnXCJdO1xuICAgICAgICAgICAgICAgICAgICByb3dEYXRhLm9wcG9jZmcueXVhbnNoZW5nID0gTnVtYmVyKGNmZ1tcInl1YW5zaGVuZ1wiXSk7XG4gICAgICAgICAgICAgICAgICAgIHJvd0RhdGEub3Bwb2NmZy55dWFuc2hlbmdTd2l0Y2ggPSBOdW1iZXIoY2ZnW1wieXVhbnNoZW5nU3dpdGNoXCJdKTtcbiAgICAgICAgICAgICAgICAgICAgcm93RGF0YS5vcHBvY2ZnLmFkZFRvRGVza3RvcCA9IE51bWJlcihjZmdbXCJhZGRUb0Rlc2t0b3BcIl0pO1xuICAgICAgICAgICAgICAgICAgICByb3dEYXRhLm9wcG9jZmcub3Bwb3ZlcnNpb25zID0gU3RyaW5nKGNmZ1tcIm9wcG92ZXJzaW9uc1wiXSk7XG4gICAgICAgICAgICAgICAgICAgIHJvd0RhdGEub3Bwb2NmZy5idG5TaG93VGltZXIgPSBOdW1iZXIoY2ZnW1wiYnRuU2hvd1RpbWVyXCJdKTtcbiAgICAgICAgICAgICAgICAgICAgcm93RGF0YS5vcHBvY2ZnLmluZGV4QWRTd2l0Y2ggPSBOdW1iZXIoY2ZnW1wiaW5kZXhBZFN3aXRjaFwiXSk7XG4gICAgICAgICAgICAgICAgICAgIHJvd0RhdGEub3Bwb2NmZy5lbmRBZFN3aXRjaCA9IE51bWJlcihjZmdbXCJlbmRBZFN3aXRjaFwiXSk7XG4gICAgICAgICAgICAgICAgICAgIHJvd0RhdGEub3Bwb2NmZy55dWFuc2hlbmcyID0gbnVsbCAhPSBjZmdbXCJ5dWFuc2hlbmcyXCJdID8gIE51bWJlcihjZmdbXCJ5dWFuc2hlbmcyXCJdKSA6IHJvd0RhdGEub3Bwb2NmZy55dWFuc2hlbmcyO1xuICAgICAgICAgICAgICAgICAgICByb3dEYXRhLm9wcG9jZmcueXVhbnNoZW5nU3dpdGNoMiA9bnVsbCAhPSBjZmdbXCJ5dWFuc2hlbmdTd2l0Y2gyXCJdID8gIE51bWJlcihjZmdbXCJ5dWFuc2hlbmdTd2l0Y2gyXCJdKSA6IHJvd0RhdGEub3Bwb2NmZy55dWFuc2hlbmdTd2l0Y2gyO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmKG51bGwgIT0gcm93W1wicXFjZmdcIl0pXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBsZXQgY2ZnID0gcm93W1wicXFjZmdcIl07XG4gICAgICAgICAgICAgICAgICAgIHJvd0RhdGEucXFjZmcua3VhbmdkaWFuQmFubmVyID0gTnVtYmVyKGNmZ1tcImt1YW5nZGlhbkJhbm5lclwiXSk7XG4gICAgICAgICAgICAgICAgICAgIHJvd0RhdGEucXFjZmcua3VhbmdkaWFuQm94ID0gTnVtYmVyKGNmZ1tcImt1YW5nZGlhbkJveFwiXSk7XG4gICAgICAgICAgICAgICAgICAgIHJvd0RhdGEucXFjZmcuYm94ID0gTnVtYmVyKGNmZ1tcImJveFwiXSk7XG4gICAgICAgICAgICAgICAgICAgIHJvd0RhdGEucXFjZmcud2VpeWkgPSBOdW1iZXIoY2ZnW1wid2VpeWlcIl0pO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmKG51bGwgIT0gcm93W1widHRjZmdcIl0pXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBsZXQgY2ZnID0gcm93W1widHRjZmdcIl07XG4gICAgICAgICAgICAgICAgICAgIHJvd0RhdGEudHRjZmcubW9yZUdhbWVTd2l0Y2ggPSBOdW1iZXIoY2ZnW1wibW9yZUdhbWVTd2l0Y2hcIl0pO1xuICAgICAgICAgICAgICAgICAgICByb3dEYXRhLnR0Y2ZnLmt1YW5nZGlhbkJhbm5lciA9IE51bWJlcihjZmdbXCJrdWFuZ2RpYW5CYW5uZXJcIl0pO1xuICAgICAgICAgICAgICAgICAgICByb3dEYXRhLnR0Y2ZnLmx1cGluZyA9IE51bWJlcihjZmdbXCJsdXBpbmdcIl0pO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGNvbmZpZy5fZGF0YS5wdXNoKHJvd0RhdGEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNvbmZpZztcbiAgICAgICAgfVxuICAgICAgICBlbHNle1xuICAgICAgICAgICAgY29uZmlnLl9kYXRhLnB1c2gobmV3IEFwcFN3aXRjaERhdGEoKSk7XG4gICAgICAgICAgICByZXR1cm4gY29uZmlnO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IF9kYXRhIDogQXJyYXk8QXBwU3dpdGNoRGF0YT4gPSBuZXcgQXJyYXk8QXBwU3dpdGNoRGF0YT4oKTtcblxuICAgIHB1YmxpYyBnZXRBcHBTd2l0Y2hEYXRhKCk6IEFwcFN3aXRjaERhdGFcbiAgICB7XG4gICAgICAgIHJldHVybiB0aGlzLl9kYXRhWzBdO1xuICAgIH1cbn0iLCJpbXBvcnQgQXBwQ29uZmlnIGZyb20gXCIuLi9BcHBDb25maWdcIjtcbmltcG9ydCBXWEFQSSBmcm9tIFwiLi4vV1hBUElcIjtcblxuZXhwb3J0IGNsYXNzIEdhbWVDb25maWdEYXRhXG57XG4gICAgcHVibGljIHNpZ25HZXREaWFtb25kIDogbnVtYmVyID0gMTA7XG4gICAgcHVibGljIGZyZWVFbmVyZ3kgOiBudW1iZXIgPSA1O1xuICAgIHB1YmxpYyBmcmVlRGlhbW9uZCA6IG51bWJlciA9IDU7XG4gICAgcHVibGljIGRhaWx5RW5lcmd5IDogbnVtYmVyID0gMTAwO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHYW1lQ29tbW9uQ29uZmlnXG57ICAgXG4gICAgcHVibGljIHN0YXRpYyBnZXRJbnN0YW5jZSgpIDogR2FtZUNvbW1vbkNvbmZpZ1xuICAgIHtcbiAgICAgICAgaWYobnVsbCA9PSBHYW1lQ29tbW9uQ29uZmlnLl9pbnN0YW5jZSlcbiAgICAgICAge1xuICAgICAgICAgICAgR2FtZUNvbW1vbkNvbmZpZy5faW5zdGFuY2UgPSBHYW1lQ29tbW9uQ29uZmlnLmxvYWQoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gR2FtZUNvbW1vbkNvbmZpZy5faW5zdGFuY2VcbiAgICB9XG4gICAgcHJvdGVjdGVkIHN0YXRpYyBfaW5zdGFuY2U6IEdhbWVDb21tb25Db25maWc7XG5cbiAgICBwcm90ZWN0ZWQgc3RhdGljIGxvYWQoKSA6IEdhbWVDb21tb25Db25maWdcbiAgICB7XG4gICAgICAgIHZhciBjb25maWcgPSBuZXcgR2FtZUNvbW1vbkNvbmZpZygpO1xuICAgICAgICB2YXIganNvbjogYW55ID0gTGF5YS5sb2FkZXIuZ2V0UmVzKEFwcENvbmZpZy5SZXNTZXJ2ZXIgKyBcIi9qc29uL2dhbWVDb25maWcuanNvblwiKTtcbiAgICAgICAgaWYoanNvbil7XG4gICAgICAgICAgICBmb3IodmFyIGkgPSAwO2kgPCBqc29uLmxlbmd0aDsrK2kpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdmFyIHJvdyA9IGpzb25baV07XG4gICAgICAgICAgICAgICAgdmFyIHJvd0RhdGE6IEdhbWVDb25maWdEYXRhID0gbmV3IEdhbWVDb25maWdEYXRhKCk7XG5cbiAgICAgICAgICAgICAgICByb3dEYXRhLnNpZ25HZXREaWFtb25kID0gTnVtYmVyKHJvd1tcInNpZ25HZXREaWFtb25kXCJdKTtcbiAgICAgICAgICAgICAgICByb3dEYXRhLmZyZWVFbmVyZ3kgPSBOdW1iZXIocm93W1wiZnJlZUVuZXJneVwiXSk7XG4gICAgICAgICAgICAgICAgcm93RGF0YS5mcmVlRGlhbW9uZCA9IE51bWJlcihyb3dbXCJmcmVlRGlhbW9uZFwiXSk7XG4gICAgICAgICAgICAgICAgcm93RGF0YS5kYWlseUVuZXJneSA9IE51bWJlcihyb3dbXCJkYWlseUVuZXJneVwiXSk7XG5cbiAgICAgICAgICAgICAgICBjb25maWcuX2RhdGEucHVzaChyb3dEYXRhKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjb25maWc7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZXtcbiAgICAgICAgICAgIGNvbmZpZy5fZGF0YS5wdXNoKG5ldyBHYW1lQ29uZmlnRGF0YSgpKTtcbiAgICAgICAgICAgIHJldHVybiBjb25maWc7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgX2RhdGEgOiBBcnJheTxHYW1lQ29uZmlnRGF0YT4gPSBuZXcgQXJyYXk8R2FtZUNvbmZpZ0RhdGE+KCk7XG5cbiAgICBwdWJsaWMgZ2V0R2FtZUNvbmZpZ0RhdGEoKTogR2FtZUNvbmZpZ0RhdGFcbiAgICB7XG4gICAgICAgIHJldHVybiB0aGlzLl9kYXRhWzBdO1xuICAgIH1cbn0iLCJpbXBvcnQgQXBwQ29uZmlnIGZyb20gXCIuLi9BcHBDb25maWdcIjtcbmltcG9ydCBXWEFQSSBmcm9tIFwiLi4vV1hBUElcIjtcblxuZXhwb3J0IGNsYXNzIExldmVsQ29uZmlnRGF0YVxue1xuICAgIHB1YmxpYyBsZXZlbE51bSA6IG51bWJlciA9IDA7XG4gICAgcHVibGljIGNvc3RFbmVyZ3kgOiBudW1iZXIgPSAwO1xuICAgIHB1YmxpYyBnZXREaWFtb25kIDogbnVtYmVyID0gMDtcbiAgICBwdWJsaWMgdmVkaW9Db3N0Tm9FbmVyZ3kgOiBudW1iZXIgPSAwO1xuICAgIHB1YmxpYyB2ZWRpb0RvdWJsZURpYW1vbmQgOiBudW1iZXIgPSAwO1xuXG4gICAgcHVibGljIGNsb25lKCkgOiBMZXZlbENvbmZpZ0RhdGFcbiAgICB7XG4gICAgICAgIHZhciBjbG9uZSA9IG5ldyBMZXZlbENvbmZpZ0RhdGEoKTtcbiAgICAgICAgY2xvbmUubGV2ZWxOdW0gPSB0aGlzLmxldmVsTnVtO1xuICAgICAgICBjbG9uZS5jb3N0RW5lcmd5ID0gdGhpcy5jb3N0RW5lcmd5O1xuICAgICAgICBjbG9uZS5nZXREaWFtb25kID0gdGhpcy5nZXREaWFtb25kO1xuICAgICAgICBjbG9uZS52ZWRpb0Nvc3ROb0VuZXJneSA9IHRoaXMudmVkaW9Db3N0Tm9FbmVyZ3k7XG4gICAgICAgIGNsb25lLnZlZGlvRG91YmxlRGlhbW9uZCA9IHRoaXMudmVkaW9Eb3VibGVEaWFtb25kO1xuICAgICAgICByZXR1cm4gY2xvbmU7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMZXZlbENvbmZpZ1xueyAgIFxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0SW5zdGFuY2UoKSA6IExldmVsQ29uZmlnXG4gICAge1xuICAgICAgICBpZihudWxsID09IExldmVsQ29uZmlnLl9pbnN0YW5jZSlcbiAgICAgICAge1xuICAgICAgICAgICAgTGV2ZWxDb25maWcuX2luc3RhbmNlID0gTGV2ZWxDb25maWcubG9hZCgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBMZXZlbENvbmZpZy5faW5zdGFuY2VcbiAgICB9XG4gICAgcHJvdGVjdGVkIHN0YXRpYyBfaW5zdGFuY2U6IExldmVsQ29uZmlnO1xuXG4gICAgcHJvdGVjdGVkIHN0YXRpYyBsb2FkKCkgOiBMZXZlbENvbmZpZ1xuICAgIHtcbiAgICAgICAgdmFyIGNvbmZpZyA9IG5ldyBMZXZlbENvbmZpZygpO1xuICAgICAgICB2YXIganNvbjogYW55ID0gTGF5YS5sb2FkZXIuZ2V0UmVzKEFwcENvbmZpZy5SZXNTZXJ2ZXIgKyBcIi9qc29uL2xldmVsQ29uZmlnLmpzb25cIik7XG4gICAgICAgIGlmKGpzb24pe1xuICAgICAgICAgICAgZm9yKHZhciBpID0gMDtpIDwganNvbi5sZW5ndGg7KytpKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHZhciByb3cgPSBqc29uW2ldO1xuICAgICAgICAgICAgICAgIHZhciByb3dEYXRhOiBMZXZlbENvbmZpZ0RhdGEgPSBuZXcgTGV2ZWxDb25maWdEYXRhKCk7XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIHJvd0RhdGEubGV2ZWxOdW0gPSBOdW1iZXIocm93W1wibGV2ZWxOdW1cIl0pO1xuICAgICAgICAgICAgICAgIHJvd0RhdGEuY29zdEVuZXJneSA9IE51bWJlcihyb3dbXCJjb3N0RW5lcmd5XCJdKTtcbiAgICAgICAgICAgICAgICByb3dEYXRhLmdldERpYW1vbmQgPSBOdW1iZXIocm93W1wiZ2V0RGlhbW9uZFwiXSk7XG4gICAgICAgICAgICAgICAgcm93RGF0YS52ZWRpb0Nvc3ROb0VuZXJneSA9IE51bWJlcihyb3dbXCJ2ZWRpb0Nvc3ROb0VuZXJneVwiXSk7XG4gICAgICAgICAgICAgICAgcm93RGF0YS52ZWRpb0RvdWJsZURpYW1vbmQgPSBOdW1iZXIocm93W1widmVkaW9Eb3VibGVEaWFtb25kXCJdKTtcblxuICAgICAgICAgICAgICAgIGNvbmZpZy5fZGF0YS5wdXNoKHJvd0RhdGEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNvbmZpZztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByb3RlY3RlZCByZWFkb25seSBfZGF0YSA6IEFycmF5PExldmVsQ29uZmlnRGF0YT4gPSBuZXcgQXJyYXk8TGV2ZWxDb25maWdEYXRhPigpO1xuXG4gICAgcHVibGljIGdldExldmVsQ29uZmlnRGF0YXMoKTogQXJyYXk8TGV2ZWxDb25maWdEYXRhPlxuICAgIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2RhdGE7XG4gICAgfVxuXG4gICAgcHVibGljIGdldExldmVsQ29uZmlnRGF0YUJ5TGV2ZWxOdW0obGV2ZWxOdW0gOiBudW1iZXIpOiBMZXZlbENvbmZpZ0RhdGFcbiAgICB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5fZGF0YS5sZW5ndGg7ICsraSkgIFxuICAgICAgICB7XG4gICAgICAgICAgICB2YXIgZCA9IHRoaXMuX2RhdGFbaV07XG4gICAgICAgICAgICBpZihkLmxldmVsTnVtID09IGxldmVsTnVtKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHJldHVybiBkO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbn0iLCJpbXBvcnQgQXBwQ29uZmlnIGZyb20gXCIuLi9BcHBDb25maWdcIjtcbmltcG9ydCBXWEFQSSBmcm9tIFwiLi4vV1hBUElcIjtcblxuZXhwb3J0IGNsYXNzIFNraW5Db25maWdEYXRhXG57XG4gICAgcHVibGljIHNraW5JbmRleCA6IG51bWJlciA9IDA7XG4gICAgcHVibGljIGNvc3REaWFtb25kIDogbnVtYmVyID0gMDtcbiAgICBwdWJsaWMgdmVkaW8gOiBudW1iZXIgPSAwO1xuXG4gICAgcHVibGljIGNsb25lKCkgOiBTa2luQ29uZmlnRGF0YVxuICAgIHtcbiAgICAgICAgdmFyIGNsb25lID0gbmV3IFNraW5Db25maWdEYXRhKCk7XG4gICAgICAgIGNsb25lLnNraW5JbmRleCA9IHRoaXMuc2tpbkluZGV4O1xuICAgICAgICBjbG9uZS5jb3N0RGlhbW9uZCA9IHRoaXMuY29zdERpYW1vbmQ7XG4gICAgICAgIGNsb25lLnZlZGlvID0gdGhpcy52ZWRpbztcbiAgICAgICAgcmV0dXJuIGNsb25lO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2tpbkNvbmZpZ1xueyAgIFxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0SW5zdGFuY2UoKSA6IFNraW5Db25maWdcbiAgICB7XG4gICAgICAgIGlmKG51bGwgPT0gU2tpbkNvbmZpZy5faW5zdGFuY2UpXG4gICAgICAgIHtcbiAgICAgICAgICAgIFNraW5Db25maWcuX2luc3RhbmNlID0gU2tpbkNvbmZpZy5sb2FkKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFNraW5Db25maWcuX2luc3RhbmNlXG4gICAgfVxuICAgIHByb3RlY3RlZCBzdGF0aWMgX2luc3RhbmNlOiBTa2luQ29uZmlnO1xuXG4gICAgcHJvdGVjdGVkIHN0YXRpYyBsb2FkKCkgOiBTa2luQ29uZmlnXG4gICAge1xuICAgICAgICB2YXIgY29uZmlnID0gbmV3IFNraW5Db25maWcoKTtcbiAgICAgICAgdmFyIGpzb246IGFueSA9IExheWEubG9hZGVyLmdldFJlcyhBcHBDb25maWcuUmVzU2VydmVyICsgXCIvanNvbi9za2luQ29uZmlnLmpzb25cIik7XG4gICAgICAgIGlmKGpzb24pe1xuICAgICAgICAgICAgZm9yKHZhciBpID0gMDtpIDwganNvbi5sZW5ndGg7KytpKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHZhciByb3cgPSBqc29uW2ldO1xuICAgICAgICAgICAgICAgIHZhciByb3dEYXRhOiBTa2luQ29uZmlnRGF0YSA9IG5ldyBTa2luQ29uZmlnRGF0YSgpO1xuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICByb3dEYXRhLnNraW5JbmRleCA9IE51bWJlcihyb3dbXCJza2lubE51bVwiXSk7XG4gICAgICAgICAgICAgICAgcm93RGF0YS5jb3N0RGlhbW9uZCA9IE51bWJlcihyb3dbXCJjb3N0RGlhbW9uZFwiXSk7XG4gICAgICAgICAgICAgICAgcm93RGF0YS52ZWRpbyA9IE51bWJlcihyb3dbXCJ2ZWRpb1wiXSk7XG5cbiAgICAgICAgICAgICAgICBjb25maWcuX2RhdGEucHVzaChyb3dEYXRhKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjb25maWc7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgX2RhdGEgOiBBcnJheTxTa2luQ29uZmlnRGF0YT4gPSBuZXcgQXJyYXk8U2tpbkNvbmZpZ0RhdGE+KCk7XG5cbiAgICBwdWJsaWMgZ2V0U2tpbkNvbmZpZ0RhdGFzKCk6IEFycmF5PFNraW5Db25maWdEYXRhPlxuICAgIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2RhdGE7XG4gICAgfVxuXG4gICAgcHVibGljIGdldFNraW5Db25maWdEYXRhQnlTa2luSW5kZXgoaW5kZXggOiBudW1iZXIpOiBTa2luQ29uZmlnRGF0YVxuICAgIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLl9kYXRhLmxlbmd0aDsgKytpKSAgXG4gICAgICAgIHtcbiAgICAgICAgICAgIHZhciBkID0gdGhpcy5fZGF0YVtpXTtcbiAgICAgICAgICAgIGlmKGQuc2tpbkluZGV4ID09IGluZGV4KVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHJldHVybiBkO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbn0iLCJleHBvcnQgZW51bSBFdmVudERlZiBcbntcbiAgICBOb25lID0gMCxcbiAgICBBcHBfQ2xvc2VGaXJzdExvYWRpbmdWaWV3ID0gNTAwLFxuICAgIEFEX09uU2hhcmVBZEZhaWwgPSA1MDEsXG5cbiAgICAvL+W9k+eVjOmdouaJk+W8gFxuICAgIEdhbWVfT25WaWV3T3BlbiA9IDYwMCwvL3t2aWV3IDogVmlld0RlZn1cbiAgICAvL+W9k+eVjOmdouWFs+mXrVxuICAgIEdhbWVfT25WaWV3Q2xvc2UgPSA2MDEsLy97dmlldyA6IFZpZXdEZWZ9XG4gICAgLy/lvZPnjqnlrrbph5HluIHlj5jliqhcbiAgICBHYW1lX09uVXNlck1vbmV5Q2hhbmdlID0gNzAxLC8ve2N1cnI6bnVtYmVyLGxhc3Q6bnVtYmVyfVxuICAgIC8v5b2T546p5a626ZK755+z5Y+Y5YqoXG4gICAgR2FtZV9PblVzZXJDcnlzdGFsQ2hhbmdlID0gNzAyLC8ve2N1cnI6bnVtYmVyLGxhc3Q6bnVtYmVyfVxuICAgIC8v5b2T5YWz5Y2h5byA5aeLXG4gICAgR2FtZV9PbkxldmVsU3RhcnQgPSAxMDAwLFxuICAgIC8v5b2T5YWz5Y2h57uT5p2fXG4gICAgR2FtZV9PbkxldmVsQ29tcGxhdGUgPSAxMDAxLFxuICAgIC8v6K+v54K56aKE5Yqg6L295a6M5q+VXG4gICAgQURfV3VkaWFuQmFubmVyX0xvYWRDb21wbGV0ZSA9IDIyMTcsXG4gICAgLy/mmL7npLror6/ngrlCYW5uZXJcbiAgICBBRF9XdWRpYW5CYW5uZXJfU2hvdyA9IDIyMTgsXG4gICAgLy/lvbHol4/or6/ngrlCYW5uZXJcbiAgICBBRF9XdWRpYW5CYW5uZXJfSGlkZSA9IDIyMTksXG4gICAgLy/pooTliqDovb1CYW5uZXJcbiAgICBBRF9XdWRpYW5CYW5uZXJfUHJlTG9hZCA9MjIyMCwgICAgXG4gICAgLy9UaXBzOuWcqOi/meadoea3u+WKoOWumuS5ieS9oOiHquW3semcgOimgeeahOS6i+S7tu+8jOS7jjEwMDAw5Y+35byA5aeL44CC6K6w5b6X5YiG5q615YiG57G7566h55CG5LiN5ZCM57G75Z6L5LqL5Lu244CC5aaC5p6c5LqL5Lu25pyJ5Lyg6YCS5Y+C5pWwIFwi5b+F6aG7XCIg5Zyo5LqL5Lu25ZCO6Z2i55So5rOo6YeK5YaZ5piO5LqL5Lu25Y+C5pWw57uT5p6E44CCXG4gICAgXG4gICAgLy/lvZPnjqnlrrbkvZPlipvlj5jliqhcbiAgICBHYW1lX09uVXNlckVuZXJneUNoYW5nZSA9IDEwMDAxLC8ve2N1cnI6bnVtYmVyLGxhc3Q6bnVtYmVyfVxuICAgIC8v5b2T546p5a626Kej6ZSB6KeS6Imy55qu6IKkXG4gICAgR2FtZV9PblVzZXJVbmxvY2tBY3RvclNraW4gPSAxMDAwMiwvL3tza2luOm51bWJlcn1cbiAgICAvL+W9k+eOqeWutuW9k+WJjeinkuiJsuearuiCpOWPkeeUn+WPmOWMllxuICAgIEdhbWVfT25Vc2VyQWN0b3JTa2luQ2hhbmdlID0gMTAwMDMsLy97Y3VyU2tpbjpudW1iZXIsbGFzdFNraW46bnVtYmVyfVxuXG4gICAgLy/lvIDlp4vmuLjmiI9cbiAgICBHYW1lX1N0YXJ0R2FtZSA9IDExMDAxLC8ve2xldmVsTnVtIDogbnVtYmVyLGNvc3RFbmVyZ3kgOiBudW1iZXIsY3J5c3RhbFJld2FyZCA6IG51bWJlcn1cbiAgICAvL+mHjeaWsOW8gOWni+a4uOaIj1xuICAgIEdhbWVfUmVzdGFydEdhbWUgPSAxMTAwMixcbiAgICAvL+mAgOWHuua4uOaIj1xuICAgIEdhbWVfRXhpdEdhbWUgPSAxMTAwMyxcbiAgICAvL+W9k+a4uOaIj+e7k+adn1xuICAgIEdhbWVfb25HYW1lQ29tcGxhdGUgPSAxMTAwNCwvL3tpc1dpbiA6IGJvb2xlYW4sbGV2ZWxOdW0gOiBudW1iZXIsY3J5c3RhbFJld2FyZCA6IG51bWJlcn1cbiAgICAvL+aSreaUvkJnbVxuICAgIEdhbWVfUGxheUJnbSA9IDExMDA1LFxuICAgIC8v5YGc5q2iQmdtXG4gICAgR2FtZV9TdG9wQmdtID0gMTEwMDYsXG4gICAgQURfT25TaGFyZUFkRmFpbF9Vc2VDYW5jZWwgPSA1MDIsXG5cbiAgICAvL+iuvue9ruW5v+WRilVJ6YGu572pXG4gICAgQURfTWFpbkFkVWlNYXNrID0gNTAzLC8ve1Zpc2libGUgOiBib29sZWFufVxuICAgIEFEX1NpZGVQb3BWaWV3ID0gNTA0LC8ve1Zpc2libGUgOiBib29sZWFufVxuICAgIEFEX1N3aXRjaEJhbm5lciA9IDUwNSxcbn0iLCJpbXBvcnQgRXZlbnREaXNwYXRjaGVyID0gTGF5YS5FdmVudERpc3BhdGNoZXI7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFdmVudE1nciBleHRlbmRzIEV2ZW50RGlzcGF0Y2hlciB7XG4gICAgc3RhdGljIGV2ZW50RGlzcGF0Y2hlcjogRXZlbnREaXNwYXRjaGVyID0gbmV3IEV2ZW50RGlzcGF0Y2hlcigpO1xuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgaW5zdGFuY2U6IEV2ZW50TWdyID0gbmV3IEV2ZW50TWdyKCk7O1xuICAgIHByaXZhdGUgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgfVxuXG4gICAgLy/lub/mkq3kuovku7ZcbiAgICBwdWJsaWMgZGlzcGF0Y2goSW5OYW1lLCBhZ3Y/OiBhbnkpIHtcbiAgICAgICAgRXZlbnRNZ3IuZXZlbnREaXNwYXRjaGVyLmV2ZW50KEluTmFtZSwgYWd2KTtcbiAgICB9XG4gICAgLy/ms6jlhozkuovku7ZcbiAgICBwdWJsaWMgcmVnRXZlbXQoSW5OYW1lLCBjYWxsZXIsIGxpc3RlbmVyOiBGdW5jdGlvbiwgYXJnPzogYW55W10pOiB2b2lkIHtcbiAgICAgICAgRXZlbnRNZ3IuZXZlbnREaXNwYXRjaGVyLm9uKEluTmFtZSwgY2FsbGVyLCBsaXN0ZW5lciwgKGFyZyA9PSBudWxsKSA/IG51bGwgOiAoW2FyZ10pKTtcbiAgICB9XG4gICAgLy/ms6jlhozljZXmrKHkuovku7ZcbiAgICBwdWJsaWMgcmVnT25jZUV2ZW50KEluTmFtZSwgY2FsbGVyLCBsaXN0ZW5lcjogRnVuY3Rpb24sIGFyZz86IGFueVtdKTogdm9pZCB7XG4gICAgICAgIEV2ZW50TWdyLmV2ZW50RGlzcGF0Y2hlci5vbmNlKEluTmFtZSwgY2FsbGVyLCBsaXN0ZW5lciwgKGFyZyA9PSBudWxsKSA/IG51bGwgOiAoW2FyZ10pKTtcbiAgICB9XG4gICAgLy/np7vpmaTkuovku7bms6jlhoxcbiAgICBwdWJsaWMgcmVtb3ZlRXZlbnQoSW5OYW1lLCBjYWxsZXIsIGxpc3RlbmVyOiBGdW5jdGlvbiwgYXJnPzogYW55W10pOiB2b2lkIHtcbiAgICAgICAgRXZlbnRNZ3IuZXZlbnREaXNwYXRjaGVyLm9mZihJbk5hbWUsIGNhbGxlciwgbGlzdGVuZXIpO1xuICAgIH1cbn0iLCIvKipUaGlzIGNsYXNzIGlzIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkIGJ5IExheWFBaXJJREUsIHBsZWFzZSBkbyBub3QgbWFrZSBhbnkgbW9kaWZpY2F0aW9ucy4gKi9cclxuaW1wb3J0IEdhbWVNZ3IgZnJvbSBcIi4vTWdyL0dhbWVNZ3JcIlxuaW1wb3J0IEV4aXRQb2ludCBmcm9tIFwiLi9HYW1lQ29yZS9HYW1lT2Jqcy9FeGl0UG9pbnRcIlxuaW1wb3J0IFJvdGF0ZU9iaiBmcm9tIFwiLi9HYW1lQ29yZS9HYW1lT2Jqcy9Sb3RhdGVPYmpcIlxuaW1wb3J0IFJvcGUgZnJvbSBcIi4vR2FtZUNvcmUvR2FtZU9ianMvUm9wZVwiXG5pbXBvcnQgVGlkZU9iamVjdCBmcm9tIFwiLi9HYW1lQ29yZS9HYW1lT2Jqcy9UaWRlT2JqZWN0XCJcbmltcG9ydCBQbGFuZUJsb2NrZXIgZnJvbSBcIi4vR2FtZUNvcmUvR2FtZU9ianMvUGxhbmVCbG9ja2VyXCJcbmltcG9ydCBFbmVteSBmcm9tIFwiLi9HYW1lQ29yZS9HYW1lT2Jqcy9FbmVteVwiXG5pbXBvcnQgRGFuZ2VyWm9uZSBmcm9tIFwiLi9HYW1lQ29yZS9HYW1lT2Jqcy9EYW5nZXJab25lXCJcbmltcG9ydCBQbGF5ZXIgZnJvbSBcIi4vR2FtZUNvcmUvR2FtZU9ianMvUGxheWVyXCJcbmltcG9ydCBHdWlkZXIgZnJvbSBcIi4vR2FtZUNvcmUvR3VpZGVyXCJcbmltcG9ydCBUd2lua2xlU3ByaXRlIGZyb20gXCIuL1ZpZXcvVHdpbmtsZVNwcml0ZVwiXG5pbXBvcnQgTW92ZUFuY2hvciBmcm9tIFwiLi9HYW1lQ29yZS9HYW1lT2Jqcy9Nb3ZlQW5jaG9yXCJcbmltcG9ydCBLUlFfTG9vcEFkQm94IGZyb20gXCIuL0tSUS9Db20vS1JRX0xvb3BBZC9LUlFfTG9vcEFkQm94XCJcbmltcG9ydCBLUlFfVkxvb3BBZCBmcm9tIFwiLi9LUlEvQ29tL0tSUV9Mb29wQWQvS1JRX1ZMb29wQWRcIlxuaW1wb3J0IEtSUV9CYW5uZXIgZnJvbSBcIi4vS1JRL0NvbS9LUlFfQmFubmVyXCJcbmltcG9ydCBLUlFfRXhwb3J0IGZyb20gXCIuL0tSUS9WaWV3Q29tL0tSUV9FeHBvcnRcIlxuaW1wb3J0IEtSUV9IaXN0b3J5Qm94IGZyb20gXCIuL0tSUS9Db20vS1JRX0hpc3RvcnkvS1JRX0hpc3RvcnlCb3hcIlxuaW1wb3J0IEtSUV9IaXN0b3J5IGZyb20gXCIuL0tSUS9Db20vS1JRX0hpc3RvcnkvS1JRX0hpc3RvcnlcIlxuaW1wb3J0IEtSUV9Sb2NrU2luZ2xlQWQgZnJvbSBcIi4vS1JRL0NvbS9LUlFfUm9ja1NpbmdsZUFkXCJcbmltcG9ydCBLUlFfRmxvYXRpbmcgZnJvbSBcIi4vS1JRL1ZpZXdDb20vS1JRX0Zsb2F0aW5nXCJcbmltcG9ydCBLUlFfUm9sbFNpbmdsZUFkIGZyb20gXCIuL0tSUS9Db20vS1JRX1JvbGxTaW5nbGVBZFwiXG5pbXBvcnQgS1JRX0dhbWVPdmVyIGZyb20gXCIuL0tSUS9WaWV3Q29tL0tSUV9HYW1lT3ZlclwiXG5pbXBvcnQgS1JRX1NpZGVQdWxsIGZyb20gXCIuL0tSUS9WaWV3Q29tL0tSUV9TaWRlUHVsbFwiXG5pbXBvcnQgS1JRX0hMb29wQWQgZnJvbSBcIi4vS1JRL0NvbS9LUlFfTG9vcEFkL0tSUV9ITG9vcEFkXCJcbmltcG9ydCBLUlFfTWFpbiBmcm9tIFwiLi9LUlEvVmlld0NvbS9LUlFfTWFpblwiXG5pbXBvcnQgS1JRX1NpbmdsZUFkIGZyb20gXCIuL0tSUS9Db20vS1JRX1NpbmdsZUFkXCJcbmltcG9ydCBLUlFfR2FtaW5nQmFubmVyIGZyb20gXCIuL0tSUS9Db20vS1JRX0dhbWluZ0Jhbm5lclwiXG5pbXBvcnQgQnV0dG9uQW5pbSBmcm9tIFwiLi9WaWV3L0J1dHRvbkFuaW1cIlxuaW1wb3J0IFVuaXZlcnNhbEJvdHRvbVpvbmUgZnJvbSBcIi4vVmlldy9Db21tb24vVW5pdmVyc2FsQm90dG9tWm9uZVwiXG5pbXBvcnQgVmlld0F1dG9TY2FsZUJ5VyBmcm9tIFwiLi9WaWV3L1Rvb2xzL1ZpZXdBdXRvU2NhbGVCeVdcIlxuaW1wb3J0IE1pZGRsZUFuY2hvciBmcm9tIFwiLi9WaWV3L1Rvb2xzL01pZGRsZUFuY2hvclwiXG5pbXBvcnQgQWN0b3JTa2luQm94IGZyb20gXCIuL1ZpZXcvQWN0b3JTa2luL0FjdG9yU2tpbkJveFwiXG5pbXBvcnQgQWN0b3JTa2luVmlldyBmcm9tIFwiLi9WaWV3L0FjdG9yU2tpbi9BY3RvclNraW5WaWV3XCJcbmltcG9ydCBDbGlja0dldFByaXplIGZyb20gXCIuL1ZpZXcvQ2xpY2tHZXRQcml6ZS9DbGlja0dldFByaXplXCJcbmltcG9ydCBDbGlja0dldFByaXplXzIgZnJvbSBcIi4vVmlldy9DbGlja0dldFByaXplL0NsaWNrR2V0UHJpemVfMlwiXG5pbXBvcnQgRnJlZVJld2FyZFZpZXcgZnJvbSBcIi4vVmlldy9GcmVlUmV3YXJkL0ZyZWVSZXdhcmRWaWV3XCJcbmltcG9ydCBHYW1lT3ZlciBmcm9tIFwiLi9WaWV3L0dhbWVPdmVyL0dhbWVPdmVyXCJcbmltcG9ydCBHYW1lUmV3YXJkVmlldyBmcm9tIFwiLi9WaWV3L0dhbWVSZXdhcmQvR2FtZVJld2FyZFZpZXdcIlxuaW1wb3J0IEdhbWVWaWV3IGZyb20gXCIuL1ZpZXcvR2FtZVZpZXcvR2FtZVZpZXdcIlxuaW1wb3J0IExldmVsU3RhdGVWaWV3IGZyb20gXCIuL1ZpZXcvTGV2ZWxTdGF0ZVZpZXcvTGV2ZWxTdGF0ZVZpZXdcIlxuaW1wb3J0IExldmVsU3RhdGVCb3ggZnJvbSBcIi4vVmlldy9MZXZlbFN0YXRlVmlldy9MZXZlbFN0YXRlQm94XCJcbmltcG9ydCBMb2dvQW5pIGZyb20gXCIuL1ZpZXcvTG9hZGluZ1ZpZXcvTG9nb0FuaVwiXG5pbXBvcnQgTG9hZGluZ1ZpZXcgZnJvbSBcIi4vVmlldy9Mb2FkaW5nVmlldy9Mb2FkaW5nVmlld1wiXG5pbXBvcnQgTWFpblZpZXcgZnJvbSBcIi4vVmlldy9NYWluVmlldy9NYWluVmlld1wiXG5pbXBvcnQgRmFrZVBsYXllciBmcm9tIFwiLi9HYW1lQ29yZS9GYWtlUGxheWVyXCJcbmltcG9ydCBWaWV3QXV0b1NjYWxlIGZyb20gXCIuL1ZpZXcvVG9vbHMvVmlld0F1dG9TY2FsZVwiXG5pbXBvcnQgU2NhbGVCcmVhdGhpbmdBbmkgZnJvbSBcIi4vVmlldy9TY2FsZUJyZWF0aGluZ0FuaVwiXG5pbXBvcnQgTG9vcEFkQm94IGZyb20gXCIuL1NoYXJlQWQvVmlldy9Mb29wQWRCb3hcIlxuaW1wb3J0IExvb3BBZFZpZXcgZnJvbSBcIi4vU2hhcmVBZC9WaWV3L0xvb3BBZFZpZXdcIlxuaW1wb3J0IE1vcmVHYW1lVmlldyBmcm9tIFwiLi9WaWV3L01vcmVHYW1lVmlldy9Nb3JlR2FtZVZpZXdcIlxuaW1wb3J0IFNpZ25JblJld2FyZFZpZXcgZnJvbSBcIi4vVmlldy9TaWduSW5SZXdhcmQvU2lnbkluUmV3YXJkVmlld1wiXG5pbXBvcnQgRXhwcm90MlZpZXdUZW1wbGF0ZSBmcm9tIFwiLi9WaWV3L1RlbXBsYXRlVmlld3MvRXhwb3J0Mi9FeHByb3QyVmlld1RlbXBsYXRlXCJcbmltcG9ydCBFeHBvcnRWaWV3VGVtcGxhdGUgZnJvbSBcIi4vVmlldy9UZW1wbGF0ZVZpZXdzL0V4cG9ydC9FeHBvcnRWaWV3VGVtcGxhdGVcIlxuaW1wb3J0IEdhbWVGYWlsVmlld1RlbXBsYXRlIGZyb20gXCIuL1ZpZXcvVGVtcGxhdGVWaWV3cy9HYW1lRmFpbC9HYW1lRmFpbFZpZXdUZW1wbGF0ZVwiXG5pbXBvcnQgR2FtZVdpblZpZXdUZW1wbGF0ZSBmcm9tIFwiLi9WaWV3L1RlbXBsYXRlVmlld3MvR2FtZVdpbi9HYW1lV2luVmlld1RlbXBsYXRlXCJcbmltcG9ydCBJbkdhbWVWaWV3VGVtcGxhdGUgZnJvbSBcIi4vVmlldy9UZW1wbGF0ZVZpZXdzL0luR2FtZS9JbkdhbWVWaWV3VGVtcGxhdGVcIlxuaW1wb3J0IE1haW5WaWV3VGVtcGxhdGUgZnJvbSBcIi4vVmlldy9UZW1wbGF0ZVZpZXdzL01haW4vTWFpblZpZXdUZW1wbGF0ZVwiXG5pbXBvcnQgTWluaUdhbWVWaWV3VGVtcGxhdGUgZnJvbSBcIi4vVmlldy9UZW1wbGF0ZVZpZXdzL01pbmlHYW1lL01pbmlHYW1lVmlld1RlbXBsYXRlXCJcbmltcG9ydCBPUFBPTmF0aXZlQWRWaWV3VGVtcGxhdGUgZnJvbSBcIi4vVmlldy9UZW1wbGF0ZVZpZXdzL09QUE9OYXRpdmVBZC9PUFBPTmF0aXZlQWRWaWV3VGVtcGxhdGVcIlxuaW1wb3J0IFFRQ3JhenlDbGljayBmcm9tIFwiLi9WaWV3L1FRVGVtcGxhdGUvUVFDcmF6eUNsaWNrL1FRQ3JhenlDbGlja1wiXG5pbXBvcnQgUVFDcmF6eUNsaWNrMiBmcm9tIFwiLi9WaWV3L1FRVGVtcGxhdGUvUVFDcmF6eUNsaWNrL1FRQ3JhenlDbGljazJcIlxuaW1wb3J0IFFRR2FtZUZhaWxWaWV3VGVtcGxhdGUgZnJvbSBcIi4vVmlldy9RUVRlbXBsYXRlL0dhbWVGYWlsL1FRR2FtZUZhaWxWaWV3VGVtcGxhdGVcIlxuaW1wb3J0IFFRR2FtZVdpblZpZXdUZW1wbGF0ZSBmcm9tIFwiLi9WaWV3L1FRVGVtcGxhdGUvR2FtZVdpbi9RUUdhbWVXaW5WaWV3VGVtcGxhdGVcIlxuaW1wb3J0IFFRSW5HYW1lVmlld1RlbXBsYXRlIGZyb20gXCIuL1ZpZXcvUVFUZW1wbGF0ZS9JbkdhbWUvUVFJbkdhbWVWaWV3VGVtcGxhdGVcIlxuaW1wb3J0IFFRTWFpblZpZXdUZW1wbGF0ZSBmcm9tIFwiLi9WaWV3L1FRVGVtcGxhdGUvTWFpbi9RUU1haW5WaWV3VGVtcGxhdGVcIlxuaW1wb3J0IFJld2FyZFZpZXdUZW1wbGF0ZSBmcm9tIFwiLi9WaWV3L1RlbXBsYXRlVmlld3MvUmV3YXJkL1Jld2FyZFZpZXdUZW1wbGF0ZVwiXG5pbXBvcnQgVFRDcmF6eUNsaWNrIGZyb20gXCIuL1ZpZXcvVFRUZW1wbGF0ZS9UVENyYXp5Q2xpY2svVFRDcmF6eUNsaWNrXCJcbmltcG9ydCBUVEdhbWVGYWlsVmlld1RlbXBsYXRlIGZyb20gXCIuL1ZpZXcvVFRUZW1wbGF0ZS9HYW1lRmFpbC9UVEdhbWVGYWlsVmlld1RlbXBsYXRlXCJcbmltcG9ydCBUVE1haW5WaWV3VGVtcGxhdGUgZnJvbSBcIi4vVmlldy9UVFRlbXBsYXRlL01haW4vVFRNYWluVmlld1RlbXBsYXRlXCJcbmltcG9ydCBUaXBzVmlldyBmcm9tIFwiLi9WaWV3L1RpcHNWaWV3L1RpcHNWaWV3XCJcbmltcG9ydCBIb3Jpem9udGFsTG9vcEFkVmlldyBmcm9tIFwiLi9TaGFyZUFkL1ZpZXcvSG9yaXpvbnRhbExvb3BBZFZpZXdcIlxuaW1wb3J0IEJhbm5lckFkVmlldyBmcm9tIFwiLi9TaGFyZUFkL1ZpZXcvQmFubmVyQWRWaWV3XCJcclxuLypcclxuKiDmuLjmiI/liJ3lp4vljJbphY3nva47XHJcbiovXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWVDb25maWd7XHJcbiAgICBzdGF0aWMgd2lkdGg6bnVtYmVyPTc1MDtcclxuICAgIHN0YXRpYyBoZWlnaHQ6bnVtYmVyPTEzMzQ7XHJcbiAgICBzdGF0aWMgc2NhbGVNb2RlOnN0cmluZz1cImZpeGVkd2lkdGhcIjtcclxuICAgIHN0YXRpYyBzY3JlZW5Nb2RlOnN0cmluZz1cInZlcnRpY2FsXCI7XHJcbiAgICBzdGF0aWMgYWxpZ25WOnN0cmluZz1cIm1pZGRsZVwiO1xyXG4gICAgc3RhdGljIGFsaWduSDpzdHJpbmc9XCJjZW50ZXJcIjtcclxuICAgIHN0YXRpYyBzdGFydFNjZW5lOmFueT1cIkdhbWVNYWluLnNjZW5lXCI7XHJcbiAgICBzdGF0aWMgc2NlbmVSb290OnN0cmluZz1cIlwiO1xyXG4gICAgc3RhdGljIGRlYnVnOmJvb2xlYW49ZmFsc2U7XHJcbiAgICBzdGF0aWMgc3RhdDpib29sZWFuPWZhbHNlO1xyXG4gICAgc3RhdGljIHBoeXNpY3NEZWJ1Zzpib29sZWFuPWZhbHNlO1xyXG4gICAgc3RhdGljIGV4cG9ydFNjZW5lVG9Kc29uOmJvb2xlYW49dHJ1ZTtcclxuICAgIGNvbnN0cnVjdG9yKCl7fVxyXG4gICAgc3RhdGljIGluaXQoKXtcclxuICAgICAgICB2YXIgcmVnOiBGdW5jdGlvbiA9IExheWEuQ2xhc3NVdGlscy5yZWdDbGFzcztcclxuICAgICAgICByZWcoXCJNZ3IvR2FtZU1nci50c1wiLEdhbWVNZ3IpO1xuICAgICAgICByZWcoXCJHYW1lQ29yZS9HYW1lT2Jqcy9FeGl0UG9pbnQudHNcIixFeGl0UG9pbnQpO1xuICAgICAgICByZWcoXCJHYW1lQ29yZS9HYW1lT2Jqcy9Sb3RhdGVPYmoudHNcIixSb3RhdGVPYmopO1xuICAgICAgICByZWcoXCJHYW1lQ29yZS9HYW1lT2Jqcy9Sb3BlLnRzXCIsUm9wZSk7XG4gICAgICAgIHJlZyhcIkdhbWVDb3JlL0dhbWVPYmpzL1RpZGVPYmplY3QudHNcIixUaWRlT2JqZWN0KTtcbiAgICAgICAgcmVnKFwiR2FtZUNvcmUvR2FtZU9ianMvUGxhbmVCbG9ja2VyLnRzXCIsUGxhbmVCbG9ja2VyKTtcbiAgICAgICAgcmVnKFwiR2FtZUNvcmUvR2FtZU9ianMvRW5lbXkudHNcIixFbmVteSk7XG4gICAgICAgIHJlZyhcIkdhbWVDb3JlL0dhbWVPYmpzL0RhbmdlclpvbmUudHNcIixEYW5nZXJab25lKTtcbiAgICAgICAgcmVnKFwiR2FtZUNvcmUvR2FtZU9ianMvUGxheWVyLnRzXCIsUGxheWVyKTtcbiAgICAgICAgcmVnKFwiR2FtZUNvcmUvR3VpZGVyLnRzXCIsR3VpZGVyKTtcbiAgICAgICAgcmVnKFwiVmlldy9Ud2lua2xlU3ByaXRlLnRzXCIsVHdpbmtsZVNwcml0ZSk7XG4gICAgICAgIHJlZyhcIkdhbWVDb3JlL0dhbWVPYmpzL01vdmVBbmNob3IudHNcIixNb3ZlQW5jaG9yKTtcbiAgICAgICAgcmVnKFwiS1JRL0NvbS9LUlFfTG9vcEFkL0tSUV9Mb29wQWRCb3gudHNcIixLUlFfTG9vcEFkQm94KTtcbiAgICAgICAgcmVnKFwiS1JRL0NvbS9LUlFfTG9vcEFkL0tSUV9WTG9vcEFkLnRzXCIsS1JRX1ZMb29wQWQpO1xuICAgICAgICByZWcoXCJLUlEvQ29tL0tSUV9CYW5uZXIudHNcIixLUlFfQmFubmVyKTtcbiAgICAgICAgcmVnKFwiS1JRL1ZpZXdDb20vS1JRX0V4cG9ydC50c1wiLEtSUV9FeHBvcnQpO1xuICAgICAgICByZWcoXCJLUlEvQ29tL0tSUV9IaXN0b3J5L0tSUV9IaXN0b3J5Qm94LnRzXCIsS1JRX0hpc3RvcnlCb3gpO1xuICAgICAgICByZWcoXCJLUlEvQ29tL0tSUV9IaXN0b3J5L0tSUV9IaXN0b3J5LnRzXCIsS1JRX0hpc3RvcnkpO1xuICAgICAgICByZWcoXCJLUlEvQ29tL0tSUV9Sb2NrU2luZ2xlQWQudHNcIixLUlFfUm9ja1NpbmdsZUFkKTtcbiAgICAgICAgcmVnKFwiS1JRL1ZpZXdDb20vS1JRX0Zsb2F0aW5nLnRzXCIsS1JRX0Zsb2F0aW5nKTtcbiAgICAgICAgcmVnKFwiS1JRL0NvbS9LUlFfUm9sbFNpbmdsZUFkLnRzXCIsS1JRX1JvbGxTaW5nbGVBZCk7XG4gICAgICAgIHJlZyhcIktSUS9WaWV3Q29tL0tSUV9HYW1lT3Zlci50c1wiLEtSUV9HYW1lT3Zlcik7XG4gICAgICAgIHJlZyhcIktSUS9WaWV3Q29tL0tSUV9TaWRlUHVsbC50c1wiLEtSUV9TaWRlUHVsbCk7XG4gICAgICAgIHJlZyhcIktSUS9Db20vS1JRX0xvb3BBZC9LUlFfSExvb3BBZC50c1wiLEtSUV9ITG9vcEFkKTtcbiAgICAgICAgcmVnKFwiS1JRL1ZpZXdDb20vS1JRX01haW4udHNcIixLUlFfTWFpbik7XG4gICAgICAgIHJlZyhcIktSUS9Db20vS1JRX1NpbmdsZUFkLnRzXCIsS1JRX1NpbmdsZUFkKTtcbiAgICAgICAgcmVnKFwiS1JRL0NvbS9LUlFfR2FtaW5nQmFubmVyLnRzXCIsS1JRX0dhbWluZ0Jhbm5lcik7XG4gICAgICAgIHJlZyhcIlZpZXcvQnV0dG9uQW5pbS50c1wiLEJ1dHRvbkFuaW0pO1xuICAgICAgICByZWcoXCJWaWV3L0NvbW1vbi9Vbml2ZXJzYWxCb3R0b21ab25lLnRzXCIsVW5pdmVyc2FsQm90dG9tWm9uZSk7XG4gICAgICAgIHJlZyhcIlZpZXcvVG9vbHMvVmlld0F1dG9TY2FsZUJ5Vy50c1wiLFZpZXdBdXRvU2NhbGVCeVcpO1xuICAgICAgICByZWcoXCJWaWV3L1Rvb2xzL01pZGRsZUFuY2hvci50c1wiLE1pZGRsZUFuY2hvcik7XG4gICAgICAgIHJlZyhcIlZpZXcvQWN0b3JTa2luL0FjdG9yU2tpbkJveC50c1wiLEFjdG9yU2tpbkJveCk7XG4gICAgICAgIHJlZyhcIlZpZXcvQWN0b3JTa2luL0FjdG9yU2tpblZpZXcudHNcIixBY3RvclNraW5WaWV3KTtcbiAgICAgICAgcmVnKFwiVmlldy9DbGlja0dldFByaXplL0NsaWNrR2V0UHJpemUudHNcIixDbGlja0dldFByaXplKTtcbiAgICAgICAgcmVnKFwiVmlldy9DbGlja0dldFByaXplL0NsaWNrR2V0UHJpemVfMi50c1wiLENsaWNrR2V0UHJpemVfMik7XG4gICAgICAgIHJlZyhcIlZpZXcvRnJlZVJld2FyZC9GcmVlUmV3YXJkVmlldy50c1wiLEZyZWVSZXdhcmRWaWV3KTtcbiAgICAgICAgcmVnKFwiVmlldy9HYW1lT3Zlci9HYW1lT3Zlci50c1wiLEdhbWVPdmVyKTtcbiAgICAgICAgcmVnKFwiVmlldy9HYW1lUmV3YXJkL0dhbWVSZXdhcmRWaWV3LnRzXCIsR2FtZVJld2FyZFZpZXcpO1xuICAgICAgICByZWcoXCJWaWV3L0dhbWVWaWV3L0dhbWVWaWV3LnRzXCIsR2FtZVZpZXcpO1xuICAgICAgICByZWcoXCJWaWV3L0xldmVsU3RhdGVWaWV3L0xldmVsU3RhdGVWaWV3LnRzXCIsTGV2ZWxTdGF0ZVZpZXcpO1xuICAgICAgICByZWcoXCJWaWV3L0xldmVsU3RhdGVWaWV3L0xldmVsU3RhdGVCb3gudHNcIixMZXZlbFN0YXRlQm94KTtcbiAgICAgICAgcmVnKFwiVmlldy9Mb2FkaW5nVmlldy9Mb2dvQW5pLnRzXCIsTG9nb0FuaSk7XG4gICAgICAgIHJlZyhcIlZpZXcvTG9hZGluZ1ZpZXcvTG9hZGluZ1ZpZXcudHNcIixMb2FkaW5nVmlldyk7XG4gICAgICAgIHJlZyhcIlZpZXcvTWFpblZpZXcvTWFpblZpZXcudHNcIixNYWluVmlldyk7XG4gICAgICAgIHJlZyhcIkdhbWVDb3JlL0Zha2VQbGF5ZXIudHNcIixGYWtlUGxheWVyKTtcbiAgICAgICAgcmVnKFwiVmlldy9Ub29scy9WaWV3QXV0b1NjYWxlLnRzXCIsVmlld0F1dG9TY2FsZSk7XG4gICAgICAgIHJlZyhcIlZpZXcvU2NhbGVCcmVhdGhpbmdBbmkudHNcIixTY2FsZUJyZWF0aGluZ0FuaSk7XG4gICAgICAgIHJlZyhcIlNoYXJlQWQvVmlldy9Mb29wQWRCb3gudHNcIixMb29wQWRCb3gpO1xuICAgICAgICByZWcoXCJTaGFyZUFkL1ZpZXcvTG9vcEFkVmlldy50c1wiLExvb3BBZFZpZXcpO1xuICAgICAgICByZWcoXCJWaWV3L01vcmVHYW1lVmlldy9Nb3JlR2FtZVZpZXcudHNcIixNb3JlR2FtZVZpZXcpO1xuICAgICAgICByZWcoXCJWaWV3L1NpZ25JblJld2FyZC9TaWduSW5SZXdhcmRWaWV3LnRzXCIsU2lnbkluUmV3YXJkVmlldyk7XG4gICAgICAgIHJlZyhcIlZpZXcvVGVtcGxhdGVWaWV3cy9FeHBvcnQyL0V4cHJvdDJWaWV3VGVtcGxhdGUudHNcIixFeHByb3QyVmlld1RlbXBsYXRlKTtcbiAgICAgICAgcmVnKFwiVmlldy9UZW1wbGF0ZVZpZXdzL0V4cG9ydC9FeHBvcnRWaWV3VGVtcGxhdGUudHNcIixFeHBvcnRWaWV3VGVtcGxhdGUpO1xuICAgICAgICByZWcoXCJWaWV3L1RlbXBsYXRlVmlld3MvR2FtZUZhaWwvR2FtZUZhaWxWaWV3VGVtcGxhdGUudHNcIixHYW1lRmFpbFZpZXdUZW1wbGF0ZSk7XG4gICAgICAgIHJlZyhcIlZpZXcvVGVtcGxhdGVWaWV3cy9HYW1lV2luL0dhbWVXaW5WaWV3VGVtcGxhdGUudHNcIixHYW1lV2luVmlld1RlbXBsYXRlKTtcbiAgICAgICAgcmVnKFwiVmlldy9UZW1wbGF0ZVZpZXdzL0luR2FtZS9JbkdhbWVWaWV3VGVtcGxhdGUudHNcIixJbkdhbWVWaWV3VGVtcGxhdGUpO1xuICAgICAgICByZWcoXCJWaWV3L1RlbXBsYXRlVmlld3MvTWFpbi9NYWluVmlld1RlbXBsYXRlLnRzXCIsTWFpblZpZXdUZW1wbGF0ZSk7XG4gICAgICAgIHJlZyhcIlZpZXcvVGVtcGxhdGVWaWV3cy9NaW5pR2FtZS9NaW5pR2FtZVZpZXdUZW1wbGF0ZS50c1wiLE1pbmlHYW1lVmlld1RlbXBsYXRlKTtcbiAgICAgICAgcmVnKFwiVmlldy9UZW1wbGF0ZVZpZXdzL09QUE9OYXRpdmVBZC9PUFBPTmF0aXZlQWRWaWV3VGVtcGxhdGUudHNcIixPUFBPTmF0aXZlQWRWaWV3VGVtcGxhdGUpO1xuICAgICAgICByZWcoXCJWaWV3L1FRVGVtcGxhdGUvUVFDcmF6eUNsaWNrL1FRQ3JhenlDbGljay50c1wiLFFRQ3JhenlDbGljayk7XG4gICAgICAgIHJlZyhcIlZpZXcvUVFUZW1wbGF0ZS9RUUNyYXp5Q2xpY2svUVFDcmF6eUNsaWNrMi50c1wiLFFRQ3JhenlDbGljazIpO1xuICAgICAgICByZWcoXCJWaWV3L1FRVGVtcGxhdGUvR2FtZUZhaWwvUVFHYW1lRmFpbFZpZXdUZW1wbGF0ZS50c1wiLFFRR2FtZUZhaWxWaWV3VGVtcGxhdGUpO1xuICAgICAgICByZWcoXCJWaWV3L1FRVGVtcGxhdGUvR2FtZVdpbi9RUUdhbWVXaW5WaWV3VGVtcGxhdGUudHNcIixRUUdhbWVXaW5WaWV3VGVtcGxhdGUpO1xuICAgICAgICByZWcoXCJWaWV3L1FRVGVtcGxhdGUvSW5HYW1lL1FRSW5HYW1lVmlld1RlbXBsYXRlLnRzXCIsUVFJbkdhbWVWaWV3VGVtcGxhdGUpO1xuICAgICAgICByZWcoXCJWaWV3L1FRVGVtcGxhdGUvTWFpbi9RUU1haW5WaWV3VGVtcGxhdGUudHNcIixRUU1haW5WaWV3VGVtcGxhdGUpO1xuICAgICAgICByZWcoXCJWaWV3L1RlbXBsYXRlVmlld3MvUmV3YXJkL1Jld2FyZFZpZXdUZW1wbGF0ZS50c1wiLFJld2FyZFZpZXdUZW1wbGF0ZSk7XG4gICAgICAgIHJlZyhcIlZpZXcvVFRUZW1wbGF0ZS9UVENyYXp5Q2xpY2svVFRDcmF6eUNsaWNrLnRzXCIsVFRDcmF6eUNsaWNrKTtcbiAgICAgICAgcmVnKFwiVmlldy9UVFRlbXBsYXRlL0dhbWVGYWlsL1RUR2FtZUZhaWxWaWV3VGVtcGxhdGUudHNcIixUVEdhbWVGYWlsVmlld1RlbXBsYXRlKTtcbiAgICAgICAgcmVnKFwiVmlldy9UVFRlbXBsYXRlL01haW4vVFRNYWluVmlld1RlbXBsYXRlLnRzXCIsVFRNYWluVmlld1RlbXBsYXRlKTtcbiAgICAgICAgcmVnKFwiVmlldy9UaXBzVmlldy9UaXBzVmlldy50c1wiLFRpcHNWaWV3KTtcbiAgICAgICAgcmVnKFwiU2hhcmVBZC9WaWV3L0hvcml6b250YWxMb29wQWRWaWV3LnRzXCIsSG9yaXpvbnRhbExvb3BBZFZpZXcpO1xuICAgICAgICByZWcoXCJTaGFyZUFkL1ZpZXcvQmFubmVyQWRWaWV3LnRzXCIsQmFubmVyQWRWaWV3KTtcclxuICAgIH1cclxufVxyXG5HYW1lQ29uZmlnLmluaXQoKTsiLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBGYWtlUGxheWVyIGV4dGVuZHMgTGF5YS5TY3JpcHQge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpO1xuICAgIH1cbiAgICAvKiogQHByb3Age25hbWU6c2tpbkluZGV4LCB0aXBzOlwi55qu6IKk57Si5byVXCIsIHR5cGU6aW50LGRlZmF1bHQ6MX0qL1xuICAgIHB1YmxpYyBza2luSW5kZXg6IG51bWJlciA9IDE7XG4gICAgLyoqIEBwcm9wIHtuYW1lOmF1dG9Nb3ZlLHRpcHM6XCLoh6rliqjnp7vliqhcIix0eXBlOkJvb2wsZGVmYXVsdDp0cnVlfSovXG4gICAgcHVibGljIGF1dG9Nb3ZlOiBCb29sZWFuID0gdHJ1ZTtcbiAgICBwcml2YXRlIF9vd25lclNwOiBMYXlhLlNwcml0ZTtcbiAgICBwcml2YXRlIF9zazogTGF5YS5TcHJpdGU7XG4gICAgcHJpdmF0ZSBfcmlnOiBMYXlhLlJpZ2lkQm9keTtcbiAgICBvbkF3YWtlKCkge1xuICAgICAgICB0aGlzLl9vd25lclNwID0gdGhpcy5vd25lciBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgdGhpcy5fcmlnID0gdGhpcy5vd25lci5nZXRDb21wb25lbnQoTGF5YS5SaWdpZEJvZHkpIGFzIExheWEuUmlnaWRCb2R5O1xuICAgICAgICBpZih0aGlzLmF1dG9Nb3ZlKXtcbiAgICAgICAgICAgIExheWEudGltZXIub25jZSgxMDAsIHRoaXMsIHRoaXMuUmRTd2ltbWluZyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fc2sgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiU2tcIikgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgIGxldCBza2VsZXRvbiA9IG5ldyBMYXlhLlNrZWxldG9uKCk7XG4gICAgICAgIHNrZWxldG9uLmxvYWQoXCJzdWJSZXMvcGxheWVyL1wiICsgdGhpcy5za2luSW5kZXggKyBcIi9OZXdQcm9qZWN0LnNrXCIpO1xuICAgICAgICBza2VsZXRvbi5zY2FsZVggPSBza2VsZXRvbi5zY2FsZVggLyA0O1xuICAgICAgICBza2VsZXRvbi5zY2FsZVkgPSBza2VsZXRvbi5zY2FsZVkgLyA0O1xuICAgICAgICB0aGlzLl9zay5hZGRDaGlsZChza2VsZXRvbik7XG4gICAgfVxuICAgIFJkU3dpbW1pbmcoKSB7XG4gICAgICAgIGlmICh0aGlzLl9yaWcubGluZWFyVmVsb2NpdHlbMF0gPiAwKSB7XG4gICAgICAgICAgICB0aGlzLl9yaWcubGluZWFyVmVsb2NpdHkgPSBbNSwgMF07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLl9yaWcubGluZWFyVmVsb2NpdHkgPSBbLTUsIDBdO1xuICAgICAgICB9XG4gICAgICAgIGxldCByZHRpbWUgPSBNYXRoLnJhbmRvbSgpICogNTAwMCArIDMwMDA7XG4gICAgICAgIExheWEudGltZXIub25jZShyZHRpbWUsIHRoaXMsIHRoaXMuUmRTd2ltbWluZyk7XG4gICAgfVxufSIsImltcG9ydCB7IENvbGxpc2lvbkZpbHRlckdyb3VwRW51bSB9IGZyb20gXCIuLi9QaHlzaWNzVXRpbHNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmFzZU9iaiBleHRlbmRzIExheWEuU2NyaXB0IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICB9XG4gICAgcHJvdGVjdGVkIF9vd25lclNwOiBMYXlhLlNwcml0ZTtcbiAgICAvKiDliJrkvZPnu4Tku7YgKi9cbiAgICBwcm90ZWN0ZWQgX3JpZ0JvZHk6IExheWEuUmlnaWRCb2R5O1xuICAgIC8qIOeisOaSnuS9k+e7hOS7tiAqL1xuICAgIHByb3RlY3RlZCBfY29sbGlkZXI6IExheWEuQ29sbGlkZXJCYXNlO1xuICAgIG9uQXdha2UoKSB7XG4gICAgICAgIHRoaXMuX293bmVyU3AgPSB0aGlzLm93bmVyIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl9yaWdCb2R5ID0gdGhpcy5vd25lci5nZXRDb21wb25lbnQoTGF5YS5SaWdpZEJvZHkpIGFzIExheWEuUmlnaWRCb2R5O1xuICAgICAgICB0aGlzLl9jb2xsaWRlciA9IHRoaXMub3duZXIuZ2V0Q29tcG9uZW50KExheWEuQ29sbGlkZXJCYXNlKSBhcyBMYXlhLkNvbGxpZGVyQmFzZTtcbiAgICAgICAgaWYgKCF0aGlzLl9jb2xsaWRlcikge1xuICAgICAgICAgICAgdGhyb3cgKFwi5rKh5pyJ5oyC6L2956Kw5pKe5L2T77yM6IqC54K55ZCN5Li677yaXCIgKyB0aGlzLl9vd25lclNwLm5hbWUgKyBcIuiKgueCueeItue6p+S4uu+8mlwiICsgdGhpcy5vd25lci5wYXJlbnQubmFtZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLlNldENvbGxpZGVyQ2F0ZWdvcnkoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOiuvue9rueisOaSnue7hOWIq1xuICAgICAqIFxuICAgICAqIEBtZW1iZXJvZiBQbGFuZUJsb2NrZXJcbiAgICAgKi9cbiAgICBwcm90ZWN0ZWQgU2V0Q29sbGlkZXJDYXRlZ29yeSgpIHtcbiAgICAgICAgdGhpcy5fcmlnQm9keS5jYXRlZ29yeSA9IENvbGxpc2lvbkZpbHRlckdyb3VwRW51bS5QbGFuZTtcbiAgICAgICAgdGhpcy5fcmlnQm9keS5tYXNrID0gQ29sbGlzaW9uRmlsdGVyR3JvdXBFbnVtLkdyb3VuZFxuICAgICAgICB0aGlzLl9jb2xsaWRlci5yZWZyZXNoKCk7XG4gICAgfVxufSIsImltcG9ydCBCYXNlT2JqIGZyb20gXCIuL0Jhc2VPYmpcIjtcbmltcG9ydCB7IENvbGxpc2lvbkZpbHRlckdyb3VwRW51bSB9IGZyb20gXCIuLi9QaHlzaWNzVXRpbHNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRGFuZ2VyWm9uZSBleHRlbmRzIEJhc2VPYmoge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpO1xuICAgIH1cbiAgICAvKiogQHByb3Age25hbWU6cHJvamVjdGlsZURpcix0aXBzOlwi5oqV5bCE54mp5pa55ZCRXCIsdHlwZTpPcHRpb24sb3B0aW9uOlwiYm90dG9tLGxlZnQscmlnaHQsdG9wXCIsZGVmYXVsdDpcImJvdHRvbVwifSovXG4gICAgcHVibGljIHByb2plY3RpbGVEaXI6IHN0cmluZyA9IFwiYm90dG9tXCI7XG4gICAgLyoqIEBwcm9wIHtuYW1lOnByb2plY3RpbGVTcGQsdGlwczpcIuaKleWwhOeJqemAn+W6plwiLHR5cGU6bnVtYmVyLGRlZmF1bHQ6MjAwMH0qL1xuICAgIHB1YmxpYyBwcm9qZWN0aWxlU3BkOiBudW1iZXIgPSAyMDAwO1xuICAgIC8qKiBAcHJvcCB7bmFtZTp3YWl0VGltZSx0aXBzOlwi562J5b6F5pe26Ze0XCIsdHlwZTpudW1iZXIsZGVmYXVsdDowfSovXG4gICAgcHVibGljIHdhaXRUaW1lOiBudW1iZXIgPSAwO1xuICAgIC8qKiBAcHJvcCB7bmFtZTpoaWRlUHJvamVjdGlsZSx0aXBzOlwi6ZqQ6JeP5oqV5bCE54mpXCIsdHlwZTpCb29sLGRlZmF1bHQ6ZmFsc2V9Ki9cbiAgICBwdWJsaWMgaGlkZVByb2plY3RpbGU6IEJvb2xlYW4gPSBmYWxzZTtcbiAgICBwcml2YXRlIF9wcm9qZWN0aWxlOiBMYXlhLlNwcml0ZTtcbiAgICBwcml2YXRlIF9wcm9qZWN0aWxlUmlnOiBMYXlhLlJpZ2lkQm9keTtcbiAgICBwcml2YXRlIF9maXJlZDogYm9vbGVhbiA9IGZhbHNlO1xuICAgIG9uQXdha2UoKSB7XG4gICAgICAgIHRoaXMuX3Byb2plY3RpbGUgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiRGFuZ2VyUHJvamVjdGlsZVwiKSBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgdGhpcy5fcHJvamVjdGlsZVJpZyA9IHRoaXMuX3Byb2plY3RpbGUuZ2V0Q29tcG9uZW50KExheWEuUmlnaWRCb2R5KTtcbiAgICAgICAgaWYgKHRoaXMuaGlkZVByb2plY3RpbGUpIHtcbiAgICAgICAgICAgIHRoaXMuX3Byb2plY3RpbGUudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHN1cGVyLm9uQXdha2UoKTtcbiAgICB9XG4gICAgU2V0Q29sbGlkZXJDYXRlZ29yeSgpIHtcbiAgICAgICAgdGhpcy5fcmlnQm9keS5jYXRlZ29yeSA9IENvbGxpc2lvbkZpbHRlckdyb3VwRW51bS5QbGFuZTtcbiAgICAgICAgdGhpcy5fcmlnQm9keS5tYXNrID0gQ29sbGlzaW9uRmlsdGVyR3JvdXBFbnVtLlBsYXllciB8IENvbGxpc2lvbkZpbHRlckdyb3VwRW51bS5FbmVteTtcbiAgICAgICAgdGhpcy5fY29sbGlkZXIucmVmcmVzaCgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiDljbHpmanljLrop6blj5HlmahcbiAgICAgKiBcbiAgICAgKiBAcGFyYW0ge0xheWEuQ29sbGlkZXJCYXNlfSBvdGhlciBcbiAgICAgKiBAcGFyYW0ge0xheWEuQ29sbGlkZXJCYXNlfSBzZWxmIFxuICAgICAqIEBwYXJhbSB7Kn0gY29udGFjdCBcbiAgICAgKiBAbWVtYmVyb2YgRGFuZ2VyWm9uZVxuICAgICAqL1xuICAgIG9uVHJpZ2dlckVudGVyKG90aGVyOiBMYXlhLkNvbGxpZGVyQmFzZSwgc2VsZjogTGF5YS5Db2xsaWRlckJhc2UsIGNvbnRhY3Q6IGFueSkge1xuICAgICAgICBpZiAodGhpcy5fZmlyZWQpIHJldHVybjtcbiAgICAgICAgY29uc29sZS5sb2cob3RoZXIub3duZXIpO1xuICAgICAgICB0aGlzLl9maXJlZCA9IHRydWU7XG4gICAgICAgIHRoaXMub3duZXIucGFyZW50LmV2ZW50KFwic2hvb3RcIik7XG4gICAgICAgIExheWEudGltZXIub25jZSh0aGlzLndhaXRUaW1lLCB0aGlzLCB0aGlzLnNob290UHJvamVjdGlsZSk7XG4gICAgfVxuICAgIHNob290UHJvamVjdGlsZSgpIHtcbiAgICAgICAgdGhpcy5fcHJvamVjdGlsZS52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgTGF5YS50aW1lci5mcmFtZUxvb3AoMSwgdGhpcywgKCkgPT4ge1xuICAgICAgICAgICAgbGV0IHNwZCA9ICh0aGlzLnByb2plY3RpbGVTcGQgKiBMYXlhLnRpbWVyLmRlbHRhKSAvIDEwMDA7XG4gICAgICAgICAgICBpZiAodGhpcy5fcHJvamVjdGlsZS54IDwgLTIgKiBMYXlhLnN0YWdlLmhlaWdodCB8fFxuICAgICAgICAgICAgICAgIHRoaXMuX3Byb2plY3RpbGUueCA+IDIgKiBMYXlhLnN0YWdlLmhlaWdodCB8fFxuICAgICAgICAgICAgICAgIHRoaXMuX3Byb2plY3RpbGUueSA8IC0yICogTGF5YS5zdGFnZS5oZWlnaHQgfHxcbiAgICAgICAgICAgICAgICB0aGlzLl9wcm9qZWN0aWxlLnkgPiAyICogTGF5YS5zdGFnZS5oZWlnaHQpIHtcbiAgICAgICAgICAgICAgICBMYXlhLnRpbWVyLmNsZWFyQWxsKHRoaXMpO1xuICAgICAgICAgICAgICAgIHRoaXMub3duZXIucmVtb3ZlU2VsZigpO1xuICAgICAgICAgICAgICAgIC8vIHRoaXMuX3Byb2plY3RpbGUuZGVzdHJveSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc3dpdGNoICh0aGlzLnByb2plY3RpbGVEaXIpIHtcbiAgICAgICAgICAgICAgICBjYXNlIFwiYm90dG9tXCI6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3Byb2plY3RpbGUueSArPSBzcGQ7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJsZWZ0XCI6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3Byb2plY3RpbGUueCAtPSBzcGQ7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJyaWdodFwiOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9wcm9qZWN0aWxlLnggKz0gc3BkO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIFwidG9wXCI6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3Byb2plY3RpbGUueSAtPSBzcGQ7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cbn0iLCJpbXBvcnQgVGlkZU9iamVjdCBmcm9tIFwiLi9UaWRlT2JqZWN0XCI7XG5pbXBvcnQgeyBDb2xsaXNpb25GaWx0ZXJHcm91cEVudW0gfSBmcm9tIFwiLi4vUGh5c2ljc1V0aWxzXCI7XG5pbXBvcnQgU291bmRNZ3IgZnJvbSBcIi4uLy4uL01nci9Tb3VuZE1nclwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFbmVteSBleHRlbmRzIFRpZGVPYmplY3Qge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpXG4gICAgfVxuICAgIC8vIC8qKiBAcHJvcCB7bmFtZTplbmVteURpcmVjdCwgdGlwczpcIuaVjOS6uuacneWQkVwiLCB0eXBlOk9wdGlvbixvcHRpb246XCJMZWZ0LFJpZ2h0XCIsZGVmYXVsdDpcIkxlZnRcIn0qL1xuICAgIC8vIHB1YmxpYyBlbmVteURpcmVjdDogc3RyaW5nID0gXCJMZWZ0XCI7XG4gICAgcHJpdmF0ZSBfc2tVcmw6IHN0cmluZyA9IFwic3ViUmVzL2VuZW15L05ld1Byb2plY3Quc2tcIjtcbiAgICBwcml2YXRlIF9za2VsZXRvbjogTGF5YS5Ta2VsZXRvbjtcbiAgICBwcml2YXRlIF9za0xvYWRlZDogYm9vbGVhbiA9IGZhbHNlO1xuICAgIHByaXZhdGUgX3NrOiBMYXlhLlNwcml0ZTtcbiAgICBvbkF3YWtlKCkge1xuICAgICAgICBzdXBlci5vbkF3YWtlKCk7XG4gICAgICAgIHRoaXMuX3NrID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIlNrXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl9za2VsZXRvbiA9IG5ldyBMYXlhLlNrZWxldG9uKCk7XG4gICAgICAgIHRoaXMuX3NrZWxldG9uLnNjYWxlWCA9IC0wLjI1O1xuICAgICAgICB0aGlzLl9za2VsZXRvbi5zY2FsZVkgPSAwLjI1O1xuICAgICAgICB0aGlzLl9za2VsZXRvbi5sb2FkKHRoaXMuX3NrVXJsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX3NrTG9hZGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMuU2tQbGF5KFwiZGFpamlcIiwgdHJ1ZSk7XG4gICAgICAgIH0pKTtcbiAgICAgICAgLy8gdGhpcy5vd25lci5hZGRDaGlsZCh0aGlzLl9za2VsZXRvbik7XG4gICAgICAgIHRoaXMuX3NrLmFkZENoaWxkKHRoaXMuX3NrZWxldG9uKTtcbiAgICAgICAgdGhpcy5vd25lci5vbihcInNob290XCIsIHRoaXMsIHRoaXMuc2hvb3QpXG4gICAgICAgIC8vIGlmICh0aGlzLmVuZW15RGlyZWN0ID09IFwiUmlnaHRcIikge1xuICAgICAgICAvLyAgICAgdGhpcy5fb3duZXJTcC5zY2FsZVggPSAtMTtcbiAgICAgICAgLy8gfVxuICAgICAgICAvLyBlbHNlIHtcbiAgICAgICAgLy8gICAgIHRoaXMuX293bmVyU3Auc2NhbGVYID0gMTtcbiAgICAgICAgLy8gfVxuICAgICAgICAvLyB0aGlzLl9jb2xsaWRlci5yZWZyZXNoKCk7XG4gICAgfVxuICAgIFNrUGxheShuYW1lT3JJbmRleDogYW55LCBsb29wOiBib29sZWFuLCBmb3JjZT86IGJvb2xlYW4sIHN0YXI/OiBudW1iZXIsIGVuZD86IG51bWJlciwgZnJlc2hTa2luPzogYm9vbGVhbikge1xuICAgICAgICBpZiAodGhpcy5fc2tMb2FkZWQpIHtcbiAgICAgICAgICAgIHRoaXMuX3NrZWxldG9uLnBsYXkobmFtZU9ySW5kZXgsIGxvb3AsIGZvcmNlLCBzdGFyLCBlbmQsIGZyZXNoU2tpbik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgU2V0Q29sbGlkZXJDYXRlZ29yeSgpIHtcbiAgICAgICAgdGhpcy5fcmlnQm9keS5jYXRlZ29yeSA9IENvbGxpc2lvbkZpbHRlckdyb3VwRW51bS5FbmVteTtcbiAgICAgICAgdGhpcy5fcmlnQm9keS5tYXNrID0gQ29sbGlzaW9uRmlsdGVyR3JvdXBFbnVtLkFMTCBeIENvbGxpc2lvbkZpbHRlckdyb3VwRW51bS5Sb3BlIF4gQ29sbGlzaW9uRmlsdGVyR3JvdXBFbnVtLlBsYXllcjtcbiAgICAgICAgdGhpcy5fY29sbGlkZXIucmVmcmVzaCgpO1xuICAgIH1cbiAgICBvblRyaWdnZXJFbnRlcihvdGhlcjogTGF5YS5Db2xsaWRlckJhc2UsIHNlbGY6IExheWEuQ29sbGlkZXJCYXNlLCBjb250YWN0OiBhbnkpIHtcbiAgICAgICAgaWYgKG90aGVyLm93bmVyLm5hbWUuaW5kZXhPZihcIlNlbnNvclpvbmVcIikgPj0gMCkge1xuICAgICAgICAgICAgdGhpcy5fcmlnQm9keS5saW5lYXJWZWxvY2l0eSA9IFt0aGlzLl9yaWdCb2R5LmxpbmVhclZlbG9jaXR5WzBdIC8gMiwgdGhpcy5fcmlnQm9keS5saW5lYXJWZWxvY2l0eVsxXSAvIDJdO1xuICAgICAgICB9XG4gICAgICAgIGlmIChvdGhlci5vd25lci5uYW1lLmluZGV4T2YoXCJEYW5nZXJcIikgPj0gMCkge1xuICAgICAgICAgICAgU291bmRNZ3IuaW5zdGFuY2UucGxheVNvdW5kKFwi5pKe5Yiw54mp5L2TXCIpO1xuICAgICAgICAgICAgdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIlNlbnNvclpvbmVcIikucmVtb3ZlU2VsZigpO1xuICAgICAgICAgICAgdGhpcy5FbmVteURlYWQoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzaG9vdCgpIHtcbiAgICAgICAgU291bmRNZ3IuaW5zdGFuY2UucGxheVNvdW5kKFwi5omL5p6q5bCE5Ye7XCIpO1xuICAgICAgICB0aGlzLlNrUGxheShcImthaXFpYW5nXCIsIGZhbHNlKTtcbiAgICB9XG4gICAgRW5lbXlEZWFkKCkge1xuICAgICAgICB0aGlzLlNrUGxheShcInN3XCIsIGZhbHNlKTtcbiAgICAgICAgTGF5YS50aW1lci5vbmNlKDIwMCwgdGhpcywgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5vd25lci5kZXN0cm95KCk7XG4gICAgICAgIH0pXG4gICAgfVxufSIsImltcG9ydCBCYXNlT2JqIGZyb20gXCIuL0Jhc2VPYmpcIjtcbmltcG9ydCB7IENvbGxpc2lvbkZpbHRlckdyb3VwRW51bSB9IGZyb20gXCIuLi9QaHlzaWNzVXRpbHNcIjtcbmltcG9ydCBTb3VuZE1nciBmcm9tIFwiLi4vLi4vTWdyL1NvdW5kTWdyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEV4aXRQb2ludCBleHRlbmRzIEJhc2VPYmoge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpO1xuICAgIH1cbiAgICAvKiogQHByb3Age25hbWU6ZXhwb2ludFRleHR1cmUsIHRpcHM6XCLpgIDlh7rngrnliqjnlLvlm77pm4ZcIiwgdHlwZTpzdHJpbmcsYWNjZXB0OnJlcyxkZWZhdWx0OlwiR2FtZU9ianMvUm9wZS5wbmdcIn0qL1xuICAgIHB1YmxpYyBleHBvaW50VGV4dHVyZTogc3RyaW5nID0gXCJyZXMvYXRsYXMvRXhpdFBvaW50LmF0bGFzXCI7XG4gICAgcHJpdmF0ZSBfYW5pbWF0aW9uOiBMYXlhLkFuaW1hdGlvbjtcbiAgICBvbkF3YWtlKCkge1xuICAgICAgICBzdXBlci5vbkF3YWtlKCk7XG4gICAgICAgIHRoaXMuX2FuaW1hdGlvbiA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJBbmlcIikgYXMgTGF5YS5BbmltYXRpb247XG4gICAgICAgIHRoaXMuX2FuaW1hdGlvbi5sb2FkQXRsYXModGhpcy5leHBvaW50VGV4dHVyZSk7XG4gICAgfVxuICAgIFBsYXlBbmkoKSB7XG4gICAgICAgIHRoaXMuX293bmVyU3AubG9hZEltYWdlKG51bGwpO1xuICAgICAgICB0aGlzLl9hbmltYXRpb24ucGxheSgwLCBmYWxzZSk7XG4gICAgICAgIFNvdW5kTWdyLmluc3RhbmNlLnBsYXlTb3VuZChcIuW8gOmXqFwiKTtcbiAgICB9XG4gICAgU2V0Q29sbGlkZXJDYXRlZ29yeSgpIHtcbiAgICAgICAgdGhpcy5fcmlnQm9keS5jYXRlZ29yeSA9IENvbGxpc2lvbkZpbHRlckdyb3VwRW51bS5QbGFuZTtcbiAgICAgICAgdGhpcy5fcmlnQm9keS5tYXNrID0gQ29sbGlzaW9uRmlsdGVyR3JvdXBFbnVtLlBsYXllcjtcbiAgICB9XG59IiwiaW1wb3J0IFJvcGUgZnJvbSBcIi4vUm9wZVwiO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTW92ZUFuY2hvciBleHRlbmRzIExheWEuU2NyaXB0IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICB9XG4gICAgcHJpdmF0ZSBfb3duZXJTcDogTGF5YS5TcHJpdGU7XG4gICAgLyoqIEBwcm9wIHtuYW1lOkhfT3JfVix0aXBzOlwi5ruR5Yqo5pa55ZCR5piv5rC05bmz5oiW6ICF5Z6C55u0XCIsdHlwZTpPcHRpb24sb3B0aW9uOlwiSG9yaXpvbnRhbCxWZXJ0aWNhbFwiLGRlZmF1bHQ6XCJIb3Jpem9udGFsXCJ9Ki9cbiAgICBIX09yX1Y6IFN0cmluZyA9IFwiSG9yaXpvbnRhbFwiO1xuICAgIC8qKiBAcHJvcCB7bmFtZTptb3ZlTWF4UmFuZ2UsIHRpcHM6XCLpk7Dpk77nu7PlrZDplb/luqZcIiwgdHlwZTppbnQsZGVmYXVsdDoxMDB9Ki9cbiAgICBwdWJsaWMgbW92ZU1heFJhbmdlOiBudW1iZXIgPSAxMzA7XG4gICAgcHJpdmF0ZSBfY3VycmVudE1vdmU6IG51bWJlciA9IDA7XG4gICAgcHJpdmF0ZSBfbW92ZUZvcndhcmQ6IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBfb3JpZ2luYWxYOiBudW1iZXI7XG4gICAgcHJpdmF0ZSBfb3JpZ2luYWxZOiBudW1iZXI7XG4gICAgcHJpdmF0ZSBfZHJhZ2dpbmc6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBwcml2YXRlIF9tb3VzZVg6IG51bWJlcjtcbiAgICBwcml2YXRlIF9tb3VzZVk6IG51bWJlcjtcbiAgICBwcml2YXRlIF9tYXhMZW5ndGg6IG51bWJlcjtcbiAgICBwcml2YXRlIF9yb3BlU2NyaXB0OiBSb3BlO1xuICAgIHByaXZhdGUgX2FjY2FjaGVkT2JqOiBMYXlhLlNwcml0ZTtcbiAgICBwcml2YXRlIF9hY2NhY2hlZE9ialJpZzogTGF5YS5SaWdpZEJvZHk7XG4gICAgLy8gcHJpdmF0ZSBfcm9wZVBpZWNlc1BhcmVudDogTGF5YS5TcHJpdGU7XG4gICAgb25Bd2FrZSgpIHtcbiAgICAgICAgdGhpcy5fb3duZXJTcCA9IHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgIHRoaXMuX3JvcGVTY3JpcHQgPSB0aGlzLm93bmVyLmdldENvbXBvbmVudChSb3BlKTtcbiAgICAgICAgaWYgKHRoaXMuX3JvcGVTY3JpcHQpIHtcbiAgICAgICAgICAgIHRoaXMuX2FjY2FjaGVkT2JqID0gdGhpcy5fcm9wZVNjcmlwdC5lbmROb2RlO1xuICAgICAgICAgICAgdGhpcy5fYWNjYWNoZWRPYmpSaWcgPSB0aGlzLl9yb3BlU2NyaXB0LmVuZE5vZGUuZ2V0Q29tcG9uZW50KExheWEuUmlnaWRCb2R5KTtcbiAgICAgICAgfVxuICAgICAgICAvLyB0aGlzLl9yb3BlUGllY2VzUGFyZW50ID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIlJvcGVQaWVjZXNQYXJlbnRcIikgYXMgTGF5YS5TcHJpdGVcbiAgICAgICAgLy8gaWYgKHRoaXMuX3JvcGVQaWVjZXNQYXJlbnQgPT0gbnVsbCkge1xuICAgICAgICAvLyAgICAgdGhpcy5fcm9wZVBpZWNlc1BhcmVudCA9IG5ldyBMYXlhLlNwcml0ZSgpO1xuICAgICAgICAvLyAgICAgdGhpcy5fcm9wZVBpZWNlc1BhcmVudC53aWR0aCA9IHRoaXMuX3N0YXJ0Tm9kZS53aWR0aDtcbiAgICAgICAgLy8gICAgIHRoaXMuX3JvcGVQaWVjZXNQYXJlbnQuaGVpZ2h0ID0gdGhpcy5fc3RhcnROb2RlLmhlaWdodDtcbiAgICAgICAgLy8gICAgIHRoaXMuX3JvcGVQaWVjZXNQYXJlbnQubmFtZSA9IFwiUm9wZVBpZWNlc1BhcmVudFwiO1xuICAgICAgICAvLyAgICAgbGV0IGluZGV4ID0gTWF0aC5tYXgodGhpcy5fc3RhcnROb2RlLm51bUNoaWxkcmVuIC0gMSwgMCk7XG4gICAgICAgIC8vICAgICB0aGlzLl9zdGFydE5vZGUuYWRkQ2hpbGRBdCh0aGlzLl9yb3BlUGllY2VzUGFyZW50LCAwKTtcbiAgICAgICAgLy8gfVxuICAgICAgICAvLyBmb3JcbiAgICAgICAgdGhpcy5fb3JpZ2luYWxYID0gdGhpcy5fb3duZXJTcC54O1xuICAgICAgICB0aGlzLl9vcmlnaW5hbFkgPSB0aGlzLl9vd25lclNwLnk7XG4gICAgICAgIC8vIHRoaXMuX293bmVyU3Aub24oTGF5YS5FdmVudC5EUkFHX1NUQVJULCB0aGlzLCB0aGlzLm9uRHJhZylcbiAgICB9XG4gICAgb25TdGFydCgpIHtcblxuICAgIH1cbiAgICAvLyBvbk1vdXNlRG93bihlOiBMYXlhLkV2ZW50KSB7XG4gICAgLy8gICAgIHRoaXMuX2RyYWdnaW5nID0gdHJ1ZTtcbiAgICAvLyAgICAgdGhpcy5fbW91c2VYID0gTGF5YS5zdGFnZS5tb3VzZVg7XG4gICAgLy8gICAgIHRoaXMuX21vdXNlWSA9IExheWEuc3RhZ2UubW91c2VZO1xuICAgIC8vIH1cbiAgICAvLyBvbk1vdXNlVXAoKSB7XG4gICAgLy8gICAgIHRoaXMuX2RyYWdnaW5nID0gZmFsc2U7XG4gICAgLy8gICAgIHRoaXMuX21vdXNlWCA9IExheWEuc3RhZ2UubW91c2VYO1xuICAgIC8vICAgICB0aGlzLl9tb3VzZVkgPSBMYXlhLnN0YWdlLm1vdXNlWTtcbiAgICAvLyAgICAgdGhpcy5fYWNjYWNoZWRPYmpSaWcubGluZWFyVmVsb2NpdHkgPSB7IHg6IDAsIHk6IDAgfTtcbiAgICAvLyB9XG4gICAgLy8gb25TdGFnZU1vdXNlVXAoKSB7XG4gICAgLy8gICAgIHRoaXMuX2RyYWdnaW5nID0gZmFsc2U7XG4gICAgLy8gICAgIHRoaXMuX21vdXNlWCA9IExheWEuc3RhZ2UubW91c2VYO1xuICAgIC8vICAgICB0aGlzLl9tb3VzZVkgPSBMYXlhLnN0YWdlLm1vdXNlWVxuICAgIC8vICAgICB0aGlzLl9hY2NhY2hlZE9ialJpZy5saW5lYXJWZWxvY2l0eSA9IHsgeDogMCwgeTogMCB9O1xuICAgIC8vIH1cbiAgICBvblVwZGF0ZSgpIHtcbiAgICAgICAgLy8gaWYgKCF0aGlzLl9kcmFnZ2luZykgcmV0dXJuO1xuICAgICAgICAvLyBpZiAodGhpcy5IX09yX1YgPT0gXCJIb3Jpem9udGFsXCIpIHtcbiAgICAgICAgLy8gbGV0IHggPSBMYXlhLnN0YWdlLm1vdXNlWDtcbiAgICAgICAgLy8gbGV0IG9mZnNldCA9ICh4IC0gdGhpcy5fbW91c2VYKTtcbiAgICAgICAgLy8gb2Zmc2V0ID0gb2Zmc2V0ID49IDAgPyBNYXRoLm1pbih0aGlzLm1vdmVNYXhSYW5nZSwgb2Zmc2V0KSA6IE1hdGgubWF4KC0xICogdGhpcy5tb3ZlTWF4UmFuZ2UsIG9mZnNldCk7XG4gICAgICAgIC8vIGxldCB4U3BkID0gMDtcbiAgICAgICAgLy8gbGV0IHlTcGQgPSAwO1xuICAgICAgICAvLyBsZXQgdGlkZU9ialggPSB0aGlzLl9hY2NhY2hlZE9ialxuICAgICAgICAvLyBpZiAob2Zmc2V0ID49IDEpIHtcbiAgICAgICAgLy8gICAgIC8vIG9mZnNldCA9IE1hdGgubWluKDQsIG9mZnNldCk7XG4gICAgICAgIC8vICAgICAvLyB0aGlzLl9hY2NhY2hlZE9ialJpZy5saW5lYXJWZWxvY2l0eSA9IHsgeDogeFNwZCB9O1xuICAgICAgICAvLyAgICAgLy8geVNwZCA9IDEuNTtcbiAgICAgICAgLy8gfVxuICAgICAgICAvLyBlbHNlIGlmIChvZmZzZXQgPD0gLTEpIHtcbiAgICAgICAgLy8gICAgIC8vIG9mZnNldCA9IE1hdGgubWF4KC00LCBvZmZzZXQpO1xuICAgICAgICAvLyAgICAgeFNwZCA9IChvZmZzZXQgKiAxKTtcbiAgICAgICAgLy8gICAgIHlTcGQgPSBvZmZzZXQgKiAwLjE7XG4gICAgICAgIC8vICAgICB0aGlzLl9hY2NhY2hlZE9ialJpZy5saW5lYXJWZWxvY2l0eSA9IHsgeDogeFNwZCwgeTogeVNwZCB9O1xuICAgICAgICAvLyB9XG4gICAgICAgIC8vIHRoaXMuX293bmVyU3AueCArPSBvZmZzZXQ7XG4gICAgICAgIGxldCBzcGQgPSAoTGF5YS50aW1lci5kZWx0YSAvIDEwMDApICogNDA7XG4gICAgICAgIGlmICh0aGlzLl9tb3ZlRm9yd2FyZCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuX2N1cnJlbnRNb3ZlIDwgdGhpcy5tb3ZlTWF4UmFuZ2UpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9jdXJyZW50TW92ZSArPSBzcGQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9tb3ZlRm9yd2FyZCA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaWYgKHRoaXMuX2N1cnJlbnRNb3ZlID4gLTEgKiB0aGlzLm1vdmVNYXhSYW5nZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2N1cnJlbnRNb3ZlIC09IHNwZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuX21vdmVGb3J3YXJkID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9vd25lclNwLnggPSB0aGlzLl9vcmlnaW5hbFggKyB0aGlzLl9jdXJyZW50TW92ZVxuICAgICAgICAvLyBpZiAodGhpcy5fb3duZXJTcC54ID4gdGhpcy5fb3JpZ2luYWxYICsgdGhpcy5tb3ZlTWF4UmFuZ2UpIHtcbiAgICAgICAgLy8gICAgIHRoaXMuX293bmVyU3AueCA9IHRoaXMuX29yaWdpbmFsWCArIHRoaXMubW92ZU1heFJhbmdlXG4gICAgICAgIC8vIH1cbiAgICAgICAgLy8gZWxzZSBpZiAodGhpcy5fb3duZXJTcC54IDwgdGhpcy5fb3JpZ2luYWxYIC0gdGhpcy5tb3ZlTWF4UmFuZ2UpIHtcbiAgICAgICAgLy8gICAgIHRoaXMuX293bmVyU3AueCA9IHRoaXMuX29yaWdpbmFsWCAtIHRoaXMubW92ZU1heFJhbmdlXG4gICAgICAgIC8vIH1cbiAgICAgICAgLy8gfVxuICAgICAgICAvLyBlbHNlIHtcbiAgICAgICAgLy8gICAgIGxldCB5ID0gTGF5YS5zdGFnZS5tb3VzZVk7XG4gICAgICAgIC8vICAgICBsZXQgb2Zmc2V0ID0gKHkgLSB0aGlzLl9tb3VzZVkpO1xuICAgICAgICAvLyAgICAgb2Zmc2V0ID0gb2Zmc2V0ID49IDAgPyBNYXRoLm1pbih0aGlzLm1vdmVNYXhSYW5nZSwgb2Zmc2V0KSA6IE1hdGgubWF4KC0xICogdGhpcy5tb3ZlTWF4UmFuZ2UsIG9mZnNldCk7XG4gICAgICAgIC8vICAgICB0aGlzLl9vd25lclNwLnkgPSB0aGlzLl9vcmlnaW5hbFkgKyBvZmZzZXQ7XG4gICAgICAgIC8vIH1cbiAgICAgICAgdGhpcy5fbW91c2VYID0gTGF5YS5zdGFnZS5tb3VzZVg7XG4gICAgICAgIHRoaXMuX21vdXNlWSA9IExheWEuc3RhZ2UubW91c2VZO1xuICAgIH1cbn0iLCJpbXBvcnQgVGlkZU9iamVjdCBmcm9tIFwiLi9UaWRlT2JqZWN0XCI7XG5pbXBvcnQgeyBDb2xsaXNpb25GaWx0ZXJHcm91cEVudW0gfSBmcm9tIFwiLi4vUGh5c2ljc1V0aWxzXCI7XG5pbXBvcnQgQmFzZU9iaiBmcm9tIFwiLi9CYXNlT2JqXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBsYW5lQmxvY2tlciBleHRlbmRzIEJhc2VPYmoge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpXG4gICAgfVxuICAgIC8qKiBAcHJvcCB7bmFtZTphdXRvRGVzdG9yeVRpbWUsIHRpcHM6XCLoh6rliqjplIDmr4Hml7bpl7TvvIzkuLow5LiN6ZSA5q+BXCIsIHR5cGU6aW50LGRlZmF1bHQ6MH0qL1xuICAgIHB1YmxpYyBhdXRvRGVzdG9yeVRpbWU6IG51bWJlciA9IDA7XG4gICAgLyoqXG4gICAgICog6K6+572u56Kw5pKe57uE5YirXG4gICAgICogXG4gICAgICogQG1lbWJlcm9mIFBsYW5lQmxvY2tlclxuICAgICAqL1xuICAgIHByb3RlY3RlZCBTZXRDb2xsaWRlckNhdGVnb3J5KCkge1xuICAgICAgICB0aGlzLl9yaWdCb2R5LmNhdGVnb3J5ID0gQ29sbGlzaW9uRmlsdGVyR3JvdXBFbnVtLlBsYW5lQmxvY2tlcjtcbiAgICAgICAgdGhpcy5fcmlnQm9keS5tYXNrID0gQ29sbGlzaW9uRmlsdGVyR3JvdXBFbnVtLk5vbmUgfCBDb2xsaXNpb25GaWx0ZXJHcm91cEVudW0uUGxhbmU7XG4gICAgICAgIHRoaXMuX2NvbGxpZGVyLnJlZnJlc2goKTtcbiAgICB9XG4gICAgb25TdGFydCgpIHtcbiAgICAgICAgaWYgKHRoaXMuYXV0b0Rlc3RvcnlUaW1lID4gMCkge1xuICAgICAgICAgICAgTGF5YS50aW1lci5vbmNlKHRoaXMuYXV0b0Rlc3RvcnlUaW1lLCB0aGlzLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5fb3duZXJTcC5kZXN0cm95KCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfVxufSIsImltcG9ydCBUaWRlT2JqZWN0IGZyb20gXCIuL1RpZGVPYmplY3RcIjtcbmltcG9ydCB7IENvbGxpc2lvbkZpbHRlckdyb3VwRW51bSB9IGZyb20gXCIuLi9QaHlzaWNzVXRpbHNcIjtcbmltcG9ydCBFeGl0UG9pbnQgZnJvbSBcIi4vRXhpdFBvaW50XCI7XG5pbXBvcnQgR2FtZVZpZXcgZnJvbSBcIi4uLy4uL1ZpZXcvR2FtZVZpZXcvR2FtZVZpZXdcIjtcbmltcG9ydCBVc2VyIGZyb20gXCIuLi8uLi9Vc2VyL1VzZXJcIjtcbmltcG9ydCBTb3VuZE1nciBmcm9tIFwiLi4vLi4vTWdyL1NvdW5kTWdyXCI7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQbGF5ZXIgZXh0ZW5kcyBUaWRlT2JqZWN0IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICB9XG4gICAgcHJpdmF0ZSBfbGlzdDogQXJyYXk8TGF5YS5Db2xsaWRlckJhc2U+ID0gW107XG4gICAgcHJpdmF0ZSBfbW92ZVN0YXRlOiBudW1iZXIgPSAtOTk7XG4gICAgcHJpdmF0ZSBfbW92ZUV4aXQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBwcml2YXRlIF9tb3ZlVGltZXI6IG51bWJlciA9IDA7XG4gICAgcHJpdmF0ZSBfZ2FtZVN0YXRlOiBudW1iZXIgPSAwO1xuICAgIHByaXZhdGUgX2FuaUN0cjogTGF5YS5BbmltYXRpb247XG4gICAgcHJpdmF0ZSBfb25Hcm91bmQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBwcml2YXRlIF9leGl0UG9pbnQ6IExheWEuU3ByaXRlO1xuICAgIHByaXZhdGUgX3dhaXRGb3JMYW5kOiBib29sZWFuID0gZmFsc2U7XG4gICAgcHJpdmF0ZSBfc2tlbGV0b246IExheWEuU2tlbGV0b247XG4gICAgcHJpdmF0ZSBfc2tMb2FkZWQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBwcml2YXRlIF9yb3BlOiBMYXlhLlNwcml0ZTtcbiAgICBvbkF3YWtlKCkge1xuICAgICAgICBzdXBlci5vbkF3YWtlKCk7XG4gICAgICAgIHRoaXMuX3JvcGUgPSB0aGlzLl9vd25lclNwLmdldENoaWxkQnlOYW1lKFwiUm9wZVwiKSBhcyBMYXlhLlNwcml0ZTsgICAgICBcbiAgICAgICAgdGhpcy5fc2tlbGV0b24gPSBuZXcgTGF5YS5Ta2VsZXRvbigpO1xuICAgICAgICBsZXQgc2tpbkluZGV4ID0gVXNlci5nZXRDdXJBY3RvclNraW4oKTtcbiAgICAgICAgdGhpcy5fc2tlbGV0b24ubG9hZChcInN1YlJlcy9wbGF5ZXIvXCIgKyBza2luSW5kZXggKyBcIi9OZXdQcm9qZWN0LnNrXCIsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5fc2tMb2FkZWQgPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy5Ta1BsYXkoXCJkYWlqaVwiLCB0cnVlKTtcbiAgICAgICAgfSkpO1xuICAgICAgICB0aGlzLlNldFNwRGlyZWN0aW9uKC0xKTtcbiAgICAgICAgLy8gdGhpcy5fc2tlbGV0b24ucGl2b3RYID0gLTE1MDtcbiAgICAgICAgLy8gdGhpcy5fc2tlbGV0b24ucGl2b3RZID0gLTUwO1xuICAgICAgICAvLyB0aGlzLl9za2VsZXRvbi5zY2FsZVggPSAwLjI1O1xuICAgICAgICAvLyB0aGlzLl9za2VsZXRvbi5zY2FsZVkgPSAwLjI1O1xuICAgICAgICAvLyB0aGlzLl9za2VsZXRvbi54ID0gTGF5YS5zdGFnZS53aWR0aCAvIDI7XG4gICAgICAgIC8vIHRoaXMuX3NrZWxldG9uLnkgPSBMYXlhLnN0YWdlLmhlaWdodCAvIDI7XG4gICAgICAgIHRoaXMub3duZXIuYWRkQ2hpbGRBdCh0aGlzLl9za2VsZXRvbiwgMCk7XG4gICAgICAgIHRoaXMuX293bmVyU3AudGV4dHVyZSA9IG51bGw7XG4gICAgfVxuICAgIG9uRGlzYWJsZSgpIHtcbiAgICAgICAgTGF5YS50aW1lci5jbGVhckFsbCh0aGlzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICog6K6+572u546p5a6255qE5pa55ZCRXG4gICAgICogXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gZGlyIFxuICAgICAqIEBtZW1iZXJvZiBQbGF5ZXJcbiAgICAgKi9cbiAgICBwcml2YXRlIFNldFNwRGlyZWN0aW9uKGRpcjogbnVtYmVyKSB7XG4gICAgICAgIGlmIChkaXIgPT0gLTEpIHtcbiAgICAgICAgICAgIHRoaXMuX3NrZWxldG9uLnNjYWxlWCA9IDAuMjU7XG4gICAgICAgICAgICB0aGlzLl9za2VsZXRvbi5zY2FsZVkgPSAwLjI1O1xuICAgICAgICAgICAgdGhpcy5fc2tlbGV0b24ucGl2b3RYID0gLTE1MDtcbiAgICAgICAgICAgIHRoaXMuX3NrZWxldG9uLnBpdm90WSA9IC01MDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChkaXIgPT0gMSkge1xuICAgICAgICAgICAgdGhpcy5fc2tlbGV0b24uc2NhbGVYID0gLTAuMjU7XG4gICAgICAgICAgICB0aGlzLl9za2VsZXRvbi5zY2FsZVkgPSAwLjI1O1xuICAgICAgICAgICAgdGhpcy5fc2tlbGV0b24ucGl2b3RYID0gMzAwO1xuICAgICAgICAgICAgdGhpcy5fc2tlbGV0b24ucGl2b3RZID0gLTUwO1xuICAgICAgICB9XG5cbiAgICB9XG4gICAgLyoqXG4gICAgICog6L+b5YWl6Kem5Y+R5ZmoXG4gICAgICogXG4gICAgICogQHBhcmFtIHtMYXlhLkNvbGxpZGVyQmFzZX0gb3RoZXIgXG4gICAgICogQHBhcmFtIHtMYXlhLkNvbGxpZGVyQmFzZX0gc2VsZiBcbiAgICAgKiBAcGFyYW0geyp9IGNvbnRhY3QgXG4gICAgICogQG1lbWJlcm9mIFRpZGVPYmplY3RcbiAgICAgKi9cbiAgICBvblRyaWdnZXJFbnRlcihvdGhlcjogTGF5YS5Db2xsaWRlckJhc2UsIHNlbGY6IExheWEuQ29sbGlkZXJCYXNlLCBjb250YWN0OiBhbnkpIHtcbiAgICAgICAgc3VwZXIub25UcmlnZ2VyRW50ZXIob3RoZXIsIHNlbGYsIGNvbnRhY3QpO1xuICAgICAgICBpZiAob3RoZXIgPT0gbnVsbCB8fCBvdGhlci5vd25lciA9PSBudWxsIHx8IG90aGVyLm93bmVyLm5hbWUgPT0gbnVsbCkgcmV0dXJuO1xuICAgICAgICBpZiAodGhpcy5fZ2FtZVN0YXRlIDwgMCAmJiBvdGhlci5vd25lci5uYW1lLmluZGV4T2YoXCJHcm91bmRcIikgPj0gMCkge1xuICAgICAgICAgICAgU291bmRNZ3IuaW5zdGFuY2UucGxheVNvdW5kKFwi5q275LqhXCIpO1xuICAgICAgICAgICAgTGF5YS50aW1lci5jbGVhckFsbCh0aGlzLl9vd25lclNwKTtcbiAgICAgICAgICAgIExheWEuVHdlZW4uY2xlYXJBbGwodGhpcy5fb3duZXJTcCk7XG4gICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoMTAwMCwgdGhpcywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIEdhbWVWaWV3Lkluc3RhbmNlLkdhbWVPdmVyKGZhbHNlKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChvdGhlci5vd25lci5uYW1lLmluZGV4T2YoXCJTZW5zb3JcIikgPj0gMCkge1xuICAgICAgICAgICAgdGhpcy5fbW92ZVRpbWVyID0gLTEwMDtcbiAgICAgICAgICAgIHRoaXMuX3JpZ0JvZHkubGluZWFyVmVsb2NpdHkgPSB7IHg6IDAsIHk6IDAgfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAob3RoZXIub3duZXIubmFtZS5pbmRleE9mKFwiRGFuZ2VyXCIpID49IDApIHtcbiAgICAgICAgICAgIFNvdW5kTWdyLmluc3RhbmNlLnBsYXlTb3VuZChcIuaSnuWIsOeJqeS9k1wiKTtcbiAgICAgICAgICAgIHRoaXMuX2dhbWVTdGF0ZSA9IC0xO1xuICAgICAgICAgICAgdGhpcy5HYW1lT3ZlclNldENvbCgpO1xuICAgICAgICAgICAgdGhpcy5Sb3BlQnJva2VuKCk7XG4gICAgICAgICAgICB0aGlzLlNrUGxheShcInNpd2FuZ1wiLCBmYWxzZSwgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG90aGVyLm93bmVyLm5hbWUuaW5kZXhPZihcIkV4aXRQb2ludFwiKSA+PSAwKSB7XG4gICAgICAgICAgICB0aGlzLl93YWl0Rm9yTGFuZCA9IHRydWVcbiAgICAgICAgICAgIGxldCBzcCA9IG90aGVyLm93bmVyIGFzIExheWEuU3ByaXRlO1xuICAgICAgICAgICAgdGhpcy5fZXhpdFBvaW50ID0gb3RoZXIub3duZXIgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG90aGVyLm93bmVyLm5hbWUuaW5kZXhPZihcIkdyb3VuZFwiKSA+PSAwKSB7XG4gICAgICAgICAgICB0aGlzLl9vbkdyb3VuZCA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLl9tb3ZlVGltZXIgPSAtNTA7XG4gICAgICAgICAgICB0aGlzLl9yaWdCb2R5LmxpbmVhclZlbG9jaXR5ID0geyB4OiAwLCB5OiAwIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLl90aWRlICYmIG90aGVyLm93bmVyLm5hbWUuaW5kZXhPZihcIk1fTFwiKSA+PSAwKSB7XG4gICAgICAgICAgICAvLyBpZiAodGhpcy5fbGlzdC5maWx0ZXIodSA9PiB1ID09IG90aGVyKS5sZW5ndGggPT0gMCkge1xuICAgICAgICAgICAgLy8gICAgIHRoaXMuX3JpZ0JvZHkubGluZWFyVmVsb2NpdHkgPSB7IHg6IDAsIHk6IDAgfVxuICAgICAgICAgICAgLy8gICAgIExheWEudGltZXIub25jZSg1MDAsIHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgIC8vICAgICAgICAgdGhpcy5fcmlnQm9keS5saW5lYXJWZWxvY2l0eSA9IHsgeDogLTYsIHk6IDAgfTtcbiAgICAgICAgICAgIC8vICAgICB9KTtcbiAgICAgICAgICAgIC8vICAgICB0aGlzLl9saXN0LnB1c2gob3RoZXIpO1xuICAgICAgICAgICAgLy8gfVxuICAgICAgICAgICAgLy8gdGhpcy5fcmlnQm9keS5saW5lYXJWZWxvY2l0eSA9IHsgeDogMCwgeTogMCB9XG4gICAgICAgICAgICAvLyBMYXlhLnRpbWVyLm9uY2UoNTAwLCB0aGlzLCAoKSA9PiB7XG4gICAgICAgICAgICAvLyAgICAgdGhpcy5fcmlnQm9keS5saW5lYXJWZWxvY2l0eSA9IHsgeDogLTYsIHk6IDAgfTtcbiAgICAgICAgICAgIC8vIH0pO1xuICAgICAgICAgICAgdGhpcy5fbW92ZUV4aXQgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuX21vdmVUaW1lciA9IDA7XG4gICAgICAgICAgICB0aGlzLl9tb3ZlU3RhdGUgPSAtMTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXRoaXMuX3RpZGUgJiYgb3RoZXIub3duZXIubmFtZS5pbmRleE9mKFwiTV9SXCIpID49IDApIHtcbiAgICAgICAgICAgIC8vIHRoaXMuX3JpZ0JvZHkubGluZWFyVmVsb2NpdHkgPSB7IHg6IDAsIHk6IDAgfVxuICAgICAgICAgICAgLy8gTGF5YS50aW1lci5vbmNlKDUwMCwgdGhpcywgKCkgPT4ge1xuICAgICAgICAgICAgLy8gICAgIHRoaXMuX3JpZ0JvZHkubGluZWFyVmVsb2NpdHkgPSB7IHg6IDYsIHk6IDAgfTtcbiAgICAgICAgICAgIC8vIH0pO1xuICAgICAgICAgICAgdGhpcy5fbW92ZUV4aXQgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuX21vdmVUaW1lciA9IDA7XG4gICAgICAgICAgICB0aGlzLl9tb3ZlU3RhdGUgPSAxO1xuICAgICAgICB9XG4gICAgICAgIGlmIChvdGhlci5vd25lci5uYW1lLmluZGV4T2YoXCJKdW1wXCIpID49IDApIHtcbiAgICAgICAgICAgIFNvdW5kTWdyLmluc3RhbmNlLnBsYXlTb3VuZChcIuW8uei3s1wiKTtcbiAgICAgICAgICAgIHRoaXMuX21vdmVFeGl0ID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLlJvcGVCcm9rZW4oKTtcbiAgICAgICAgICAgIHRoaXMuX3JpZ0JvZHkubGluZWFyVmVsb2NpdHkgPSB7IHg6IDAsIHk6IC0yMCB9O1xuICAgICAgICB9XG4gICAgfVxuICAgIG9uVHJpZ2dlckV4aXQob3RoZXI6IExheWEuQ29sbGlkZXJCYXNlLCBzZWxmOiBMYXlhLkNvbGxpZGVyQmFzZSwgY29udGFjdDogYW55KSB7XG4gICAgICAgIC8vIGlmKCFvdGhlci5vd25lciB8fCAhb3RoZXIub3duZXIubmFtZSkgcmV0dXJuO1xuICAgICAgICBpZiAob3RoZXIub3duZXIubmFtZS5pbmRleE9mKFwiTV9cIikgPj0gMCkge1xuICAgICAgICAgICAgLy8gdGhpcy5fcmlnQm9keS5saW5lYXJWZWxvY2l0eSA9IHsgeDogMCwgeTogdGhpcy5fcmlnQm9keS5saW5lYXJWZWxvY2l0eS55IH07XG4gICAgICAgICAgICB0aGlzLl9tb3ZlVGltZXIgPSA1MDtcbiAgICAgICAgICAgIHRoaXMuX21vdmVFeGl0ID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBvblRyaWdnZXJTdGF5KG90aGVyOiBMYXlhLkNvbGxpZGVyQmFzZSwgc2VsZjogTGF5YS5Db2xsaWRlckJhc2UsIGNvbnRhY3Q6IGFueSkge1xuICAgICAgICAvLyBpZighb3RoZXIub3duZXIgfHwgIW90aGVyLm93bmVyLm5hbWUpIHJldHVybjtcbiAgICAgICAgY29uc29sZS5sb2cob3RoZXIub3duZXIubmFtZSk7XG4gICAgfVxuICAgIEdhbWVPdmVyU2V0Q29sKCkge1xuICAgICAgICB0aGlzLl9yaWdCb2R5Lm1hc2sgPSBDb2xsaXNpb25GaWx0ZXJHcm91cEVudW0uTm9uZSB8IENvbGxpc2lvbkZpbHRlckdyb3VwRW51bS5Hcm91bmQ7XG4gICAgICAgIHRoaXMuX2NvbGxpZGVyLnJlZnJlc2goKTtcbiAgICB9XG4gICAgb25VcGRhdGUoKSB7XG4gICAgICAgIGlmICh0aGlzLl9nYW1lU3RhdGUgIT0gMCkgcmV0dXJuO1xuICAgICAgICBpZiAodGhpcy5fd2FpdEZvckxhbmQpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLl9vbkdyb3VuZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2dhbWVTdGF0ZSA9IDE7XG4gICAgICAgICAgICAgICAgdGhpcy5HYW1lT3Zlck1vdmVUb0Rvb3IoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5fbW92ZVRpbWVyIDw9IDIwMCkge1xuICAgICAgICAgICAgdGhpcy5fbW92ZVRpbWVyICs9IExheWEudGltZXIuZGVsdGE7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuX21vdmVFeGl0KSB7XG4gICAgICAgICAgICB0aGlzLl9tb3ZlU3RhdGUgPSAwO1xuICAgICAgICAgICAgdGhpcy5fb25Hcm91bmQgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuX21vdmVFeGl0ID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodGhpcy5fbW92ZVN0YXRlID09IC0xKSB7XG4gICAgICAgICAgICAvLyB0aGlzLl9tb3ZlVGltZXIgPSAwO1xuICAgICAgICAgICAgdGhpcy5Ta1BsYXkoXCJ6b3VsdVwiLCB0cnVlLCBmYWxzZSk7XG4gICAgICAgICAgICB0aGlzLl9yaWdCb2R5LmFwcGx5Rm9yY2VUb0NlbnRlcih7IHg6IC0xODAsIHk6IDAgfSk7XG4gICAgICAgICAgICB0aGlzLlNldFNwRGlyZWN0aW9uKC0xKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0aGlzLl9tb3ZlU3RhdGUgPT0gMSkge1xuICAgICAgICAgICAgLy8gdGhpcy5fbW92ZVRpbWVyID0gMDtcbiAgICAgICAgICAgIHRoaXMuU2tQbGF5KFwiem91bHVcIiwgdHJ1ZSwgZmFsc2UpO1xuICAgICAgICAgICAgdGhpcy5fcmlnQm9keS5hcHBseUZvcmNlVG9DZW50ZXIoeyB4OiAxODAsIHk6IDAgfSk7XG4gICAgICAgICAgICB0aGlzLlNldFNwRGlyZWN0aW9uKDEpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHRoaXMuX21vdmVTdGF0ZSA9PSAwKSB7XG4gICAgICAgICAgICB0aGlzLlNrUGxheShcImRhaWppXCIsIHRydWUsIGZhbHNlKTtcbiAgICAgICAgICAgIHRoaXMuX3JpZ0JvZHkubGluZWFyVmVsb2NpdHkgPSB7IHg6IDAsIHk6IHRoaXMuX3JpZ0JvZHkubGluZWFyVmVsb2NpdHkueSB9O1xuICAgICAgICB9XG4gICAgfVxuICAgIFNldENvbGxpZGVyQ2F0ZWdvcnkoKSB7XG4gICAgICAgIHRoaXMuX3JpZ0JvZHkuY2F0ZWdvcnkgPSBDb2xsaXNpb25GaWx0ZXJHcm91cEVudW0uUGxheWVyO1xuICAgICAgICB0aGlzLl9yaWdCb2R5Lm1hc2sgPSBDb2xsaXNpb25GaWx0ZXJHcm91cEVudW0uQUxMO1xuICAgICAgICB0aGlzLl9jb2xsaWRlci5yZWZyZXNoKCk7XG4gICAgfVxuICAgIEdhbWVPdmVyTW92ZVRvRG9vcigpIHtcbiAgICAgICAgbGV0IHRpbWUgPSBNYXRoLmFicyh0aGlzLl9vd25lclNwLnggLSB0aGlzLl9leGl0UG9pbnQueCkgKiAzO1xuICAgICAgICBsZXQgcmVzID0gdGhpcy5fb3duZXJTcC54IC0gdGhpcy5fZXhpdFBvaW50Lng7XG4gICAgICAgIGlmIChyZXMgPiAwKSB7XG4gICAgICAgICAgICB0aGlzLlNldFNwRGlyZWN0aW9uKC0xKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuU2V0U3BEaXJlY3Rpb24oMSk7XG4gICAgICAgIH1cbiAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLl9vd25lclNwLCB7IHg6IHRoaXMuX2V4aXRQb2ludC54IH0sIHRpbWUsIG51bGwsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5IaWRlUGxheWVyKSwgNTAwLCB0cnVlLCB0cnVlKTtcbiAgICAgICAgLy8gbGV0IG15UG9pbnQgPSBMYXlhLlBvaW50LmNyZWF0ZSgpLnNldFRvKHRoaXMuX293bmVyU3AucGl2b3RYLCB0aGlzLl9vd25lclNwLnBpdm90WSk7XG4gICAgICAgIC8vIGlmIChteVBvaW50LmRpc3RhbmNlKHRoaXMuX2V4aXRQb2ludC54LCB0aGlzLl9leGl0UG9pbnQueSkgPj0gMSkge1xuICAgICAgICAvLyAgICAgdGhpcy5faXNHYW1lT3ZlciA9IHRydWU7XG4gICAgICAgIC8vIH1cbiAgICB9XG4gICAgSGlkZVBsYXllcigpIHtcbiAgICAgICAgdGhpcy5HYW1lT3ZlclNldENvbCgpO1xuICAgICAgICBsZXQgZXhpdCA9IHRoaXMuX2V4aXRQb2ludC5nZXRDb21wb25lbnQoRXhpdFBvaW50KSBhcyBFeGl0UG9pbnQ7XG4gICAgICAgIGV4aXQuUGxheUFuaSgpO1xuICAgICAgICB0aGlzLlNrUGxheShcInFpbmd6aHVcIiwgdHJ1ZSwgdHJ1ZSk7XG4gICAgICAgIFNvdW5kTWdyLmluc3RhbmNlLnBsYXlTb3VuZChcIuaIkOWKn1wiKTtcbiAgICAgICAgTGF5YS50aW1lci5vbmNlKDIwMDAsIHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX293bmVyU3AudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICAgICAgR2FtZVZpZXcuSW5zdGFuY2UuR2FtZU92ZXIodHJ1ZSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBTa1BsYXkobmFtZU9ySW5kZXg6IGFueSwgbG9vcDogYm9vbGVhbiwgZm9yY2U/OiBib29sZWFuLCBzdGFyPzogbnVtYmVyLCBlbmQ/OiBudW1iZXIsIGZyZXNoU2tpbj86IGJvb2xlYW4pIHtcbiAgICAgICAgaWYgKHRoaXMuX3NrTG9hZGVkKSB7XG4gICAgICAgICAgICB0aGlzLl9za2VsZXRvbi5wbGF5KG5hbWVPckluZGV4LCBsb29wLCBmb3JjZSwgc3RhciwgZW5kLCBmcmVzaFNraW4pO1xuICAgICAgICB9XG4gICAgfVxuICAgIFJvcGVCcm9rZW4oKSB7XG4gICAgICAgIHN1cGVyLlJvcGVCcm9rZW4oKTtcbiAgICAgICAgaWYgKHRoaXMuX3JvcGUpIHtcbiAgICAgICAgICAgIHRoaXMuX3JvcGUudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxufSIsImltcG9ydCBSb3BlUGllY2VzIGZyb20gXCIuL1JvcGVQaWVjZXNcIjtcbmltcG9ydCB7IENvbGxpc2lvbkZpbHRlckdyb3VwRW51bSB9IGZyb20gXCIuLi9QaHlzaWNzVXRpbHNcIjtcbmltcG9ydCBUaWRlT2JqZWN0IGZyb20gXCIuL1RpZGVPYmplY3RcIjtcbmltcG9ydCBFdmVudE1nciBmcm9tIFwiLi4vLi4vRXZlbnQvRXZlbnRNZ3JcIjtcbmltcG9ydCB7IEV2ZW50RGVmIH0gZnJvbSBcIi4uLy4uL0V2ZW50L0V2ZW50RGVmXCI7XG5pbXBvcnQgU291bmRNZ3IgZnJvbSBcIi4uLy4uL01nci9Tb3VuZE1nclwiO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUm9wZSBleHRlbmRzIExheWEuU2NyaXB0IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICB9XG4gICAgLyoqIEBwcm9wIHtuYW1lOmVuZE5vZGUsIHRpcHM6XCLpk7Dpk77lsL7pk77mjqXnmoTnu4Tku7ZcIiwgdHlwZTpOb2RlLCBkZWZhdWx0Om51bGx9Ki9cbiAgICBwdWJsaWMgZW5kTm9kZTogTGF5YS5TcHJpdGUgPSBudWxsO1xuICAgIC8qKiBAcHJvcCB7bmFtZTplbmROb2RlUGl2b3QsdGlwczpcIumTsOmTvuWwvue7hOS7tueahOWImuS9k+S4reW/g+eCuVwiLHR5cGU6VmVjLGRlZmF1bHQ6XCJTcHJpdGVQaXZvdFwifSovXG4gICAgcHVibGljIGVuZE5vZGVQaXZvdDogYW55ID0gbnVsbDtcbiAgICAvKiogQHByb3Age25hbWU6cm9wZVRleHR1cmUsIHRpcHM6XCLpk7Dpk77nu7PlrZDmnZDotKhcIiwgdHlwZTpzdHJpbmcsYWNjZXB0OnJlcyxkZWZhdWx0OlwiR2FtZU9ianMvUm9wZS5wbmdcIn0qL1xuICAgIHB1YmxpYyByb3BlVGV4dHVyZTogc3RyaW5nID0gXCJHYW1lT2Jqcy9Sb3BlLnBuZ1wiO1xuICAgIC8qKiBAcHJvcCB7bmFtZTpyb3BlTGVuZ3RoLCB0aXBzOlwi6ZOw6ZO+57uz5a2Q6ZW/5bqmXCIsIHR5cGU6aW50LGRlZmF1bHQ6MTV9Ki9cbiAgICBwdWJsaWMgcm9wZUxlbmd0aDogbnVtYmVyID0gMTU7XG4gICAgLyoqIEBwcm9wIHtuYW1lOmxlbmd0UmF0ZSwgdGlwczpcIue7s+WtkOWunumZheeJqeeQhumVv+W6puS4jui3neemu+eahOavlOS+i++8jOm7mOiupOS4ujFcIiwgdHlwZTpudW1iZXIsZGVmYXVsdDoxfSovXG4gICAgcHVibGljIGxlbmd0UmF0ZTogbnVtYmVyID0gMTtcbiAgICAvKiogQHByb3Age25hbWU6cm9wZVdpZHRoLCB0aXBzOlwi6ZOw6ZO+57uz5a2Q5a695bqmXCIsIHR5cGU6aW50LGRlZmF1bHQ6NDB9Ki9cbiAgICBwdWJsaWMgcm9wZVdpZHRoOiBudW1iZXIgPSAxMDA7XG4gICAgLyoqIEBwcm9wIHtuYW1lOnJvcGVTaG93UmF0ZSwgdGlwczpcIumTsOmTvue7s+WtkOWunumZheWuveW6puS4juaYvuekuuWuveW6pueahOavlOWAvFwiLCB0eXBlOm51bWJlcixkZWZhdWx0OjAuMjV9Ki9cbiAgICBwdWJsaWMgcm9wZVNob3dSYXRlOiBudW1iZXIgPSAwLjE7XG4gICAgLyoqIEBwcm9wIHtuYW1lOmxpbmVhckRhbXBpbmcsdGlwczpcIue7s+WtkOmYu+WKm1wiLHR5cGU6TnVtYmVyLG1pbjowLGRlZmF1bHQ6MC4zfSovXG4gICAgcHVibGljIGxpbmVhckRhbXBpbmc6IG51bWJlciA9IDAuMztcbiAgICBwcml2YXRlIF9lbmRSaWc6IExheWEuUmlnaWRCb2R5O1xuICAgIHByaXZhdGUgX2VuZFBvaW50OiBMYXlhLlBvaW50O1xuICAgIHByaXZhdGUgX3N0YXJ0Tm9kZTogTGF5YS5TcHJpdGU7XG4gICAgcHJpdmF0ZSBfc3RhcnRSaWc6IExheWEuUmlnaWRCb2R5O1xuICAgIHByaXZhdGUgX3N0YXJ0UG9pbnQ6IExheWEuUG9pbnQ7XG4gICAgcHJpdmF0ZSBfcm9wZVBpZWNlc1BhcmVudDogTGF5YS5TcHJpdGU7XG4gICAgcHJpdmF0ZSBfcm9wZU5vZGVMaXN0OiBBcnJheTxMYXlhLlNwcml0ZT4gPSBbXTtcbiAgICBwcml2YXRlIF9yb3BlU3ByaXRlTGlzdDogQXJyYXk8Um9wZVBpZWNlcz4gPSBbXTtcbiAgICBwcml2YXRlIF9jdXRPbmNlOiBib29sZWFuID0gZmFsc2U7XG4gICAgcHJpdmF0ZSBfdGlkZU9iajogVGlkZU9iamVjdDtcbiAgICBwcml2YXRlIF9yb3BlQnJva2VuOiBib29sZWFuID0gZmFsc2U7XG4gICAgb25Bd2FrZSgpIHtcbiAgICAgICAgaWYgKCF0aGlzLmVuZE5vZGUpIHJldHVybjtcbiAgICAgICAgdGhpcy5fdGlkZU9iaiA9IHRoaXMuZW5kTm9kZS5nZXRDb21wb25lbnQoVGlkZU9iamVjdCkgYXMgVGlkZU9iamVjdDtcbiAgICAgICAgaWYgKCF0aGlzLl90aWRlT2JqKSByZXR1cm47XG4gICAgICAgIHRoaXMuX3N0YXJ0Tm9kZSA9IHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgIHRoaXMuX3N0YXJ0UmlnID0gdGhpcy5fc3RhcnROb2RlLmdldENvbXBvbmVudChMYXlhLlJpZ2lkQm9keSk7XG4gICAgICAgIC8vIGlmICh0aGlzLnN0YXJOb2RlUGl2b3QgPT0gbnVsbCkge1xuICAgICAgICB0aGlzLl9zdGFydFBvaW50ID0gdGhpcy5fc3RhcnROb2RlLmxvY2FsVG9HbG9iYWwobmV3IExheWEuUG9pbnQodGhpcy5fc3RhcnROb2RlLnBpdm90WCwgdGhpcy5fc3RhcnROb2RlLnBpdm90WSkpO1xuICAgICAgICAvLyB9XG4gICAgICAgIC8vIGVsc2Uge1xuICAgICAgICAvLyB0aGlzLl9zdGFydFBvaW50ID0gdGhpcy5fc3RhcnROb2RlLmxvY2FsVG9HbG9iYWwobmV3IExheWEuUG9pbnQodGhpcy5zdGFyTm9kZVBpdm90WzBdLCB0aGlzLnN0YXJOb2RlUGl2b3RbMV0pKTtcbiAgICAgICAgLy8gfVxuICAgICAgICAvLyB0aGlzLl9zdGFydFBvaW50ID0gbmV3IExheWEuUG9pbnQodGhpcy5fc3RhcnROb2RlLngsIHRoaXMuX3N0YXJ0Tm9kZS55KTtcbiAgICAgICAgdGhpcy5fZW5kUmlnID0gdGhpcy5lbmROb2RlLmdldENvbXBvbmVudChMYXlhLlJpZ2lkQm9keSk7XG4gICAgICAgIGlmICh0aGlzLmVuZE5vZGVQaXZvdCkge1xuICAgICAgICAgICAgdGhpcy5fZW5kUG9pbnQgPSB0aGlzLmVuZE5vZGUubG9jYWxUb0dsb2JhbChuZXcgTGF5YS5Qb2ludCh0aGlzLmVuZE5vZGVQaXZvdFswXSwgdGhpcy5lbmROb2RlUGl2b3RbMV0pKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuX2VuZFBvaW50ID0gdGhpcy5lbmROb2RlLmxvY2FsVG9HbG9iYWwobmV3IExheWEuUG9pbnQodGhpcy5lbmROb2RlLnBpdm90WCwgdGhpcy5lbmROb2RlLnBpdm90WSkpO1xuICAgICAgICB9XG4gICAgICAgIC8qIOe7mee7s+WtkOW7uueri+WtmOWCqOiKgueCuSAqL1xuICAgICAgICB0aGlzLl9yb3BlUGllY2VzUGFyZW50ID0gdGhpcy5fc3RhcnROb2RlLmdldENoaWxkQnlOYW1lKFwiUm9wZVBpZWNlc1BhcmVudFwiKSBhcyBMYXlhLlNwcml0ZVxuICAgICAgICBpZiAodGhpcy5fcm9wZVBpZWNlc1BhcmVudCA9PSBudWxsKSB7XG4gICAgICAgICAgICB0aGlzLl9yb3BlUGllY2VzUGFyZW50ID0gbmV3IExheWEuU3ByaXRlKCk7XG4gICAgICAgICAgICB0aGlzLl9yb3BlUGllY2VzUGFyZW50LndpZHRoID0gdGhpcy5fc3RhcnROb2RlLndpZHRoO1xuICAgICAgICAgICAgdGhpcy5fcm9wZVBpZWNlc1BhcmVudC5oZWlnaHQgPSB0aGlzLl9zdGFydE5vZGUuaGVpZ2h0O1xuICAgICAgICAgICAgdGhpcy5fcm9wZVBpZWNlc1BhcmVudC5uYW1lID0gXCJSb3BlUGllY2VzUGFyZW50XCI7XG4gICAgICAgICAgICBsZXQgaW5kZXggPSBNYXRoLm1heCh0aGlzLl9zdGFydE5vZGUubnVtQ2hpbGRyZW4gLSAxLCAwKTtcbiAgICAgICAgICAgIHRoaXMuX3N0YXJ0Tm9kZS5hZGRDaGlsZEF0KHRoaXMuX3JvcGVQaWVjZXNQYXJlbnQsIDApO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuQ3JlYXRSb3BlUGllY2VzKCk7XG4gICAgICAgIC8vIEV2ZW50TWdyLmluc3RhbmNlLnJlZ09uY2VFdmVudChFdmVudERlZi5HYW1lX1Jlc3RhcnRHYW1lLCB0aGlzLCB0aGlzLm9uRGlzYWJsZSk7XG4gICAgfVxuICAgIC8vIG9uRGlzYWJsZSgpIHtcbiAgICAvLyAgICAgdGhpcy5fcm9wZU5vZGVMaXN0LmZvckVhY2godSA9PiB7XG4gICAgLy8gICAgICAgICB1LnZpc2libGUgPSBmYWxzZTtcbiAgICAvLyAgICAgICAgIC8vIGxldCByb3BlSm9pbnQgPSB1LmdldENvbXBvbmVudChMYXlhLlJvcGVKb2ludCkgYXMgTGF5YS5Sb3BlSm9pbnQ7XG4gICAgLy8gICAgICAgICAvLyBsZXQgcmlnaWRCb2R5ID0gdS5nZXRDb21wb25lbnQoTGF5YS5SaWdpZEJvZHkpIGFzIExheWEuUmlnaWRCb2R5O1xuICAgIC8vICAgICAgICAgLy8gaWYocm9wZUpvaW50KXJvcGVKb2ludC52aXMoZmFsc2UpO1xuICAgIC8vICAgICAgICAgLy8gaWYocmlnaWRCb2R5KXJpZ2lkQm9keS5fc2V0QWN0aXZlKGZhbHNlKTtcbiAgICAvLyAgICAgfSk7XG4gICAgLy8gfVxuICAgIC8vIG9uRGVzdHJveSgpIHtcblxuICAgIC8vIH1cbiAgICAvKipcbiAgICAgKiDliJvpgKDnu7PlrZDnmoTnoo7niYdcbiAgICAgKiBcbiAgICAgKiBAbWVtYmVyb2YgUm9wZVxuICAgICAqL1xuICAgIENyZWF0Um9wZVBpZWNlcygpIHtcbiAgICAgICAgbGV0IGRpc3RhbmNlID0gdGhpcy5fc3RhcnRQb2ludC5kaXN0YW5jZSh0aGlzLl9lbmRQb2ludC54LCB0aGlzLl9lbmRQb2ludC55KTtcbiAgICAgICAgbGV0IGRpcmVjdCA9IG5ldyBMYXlhLlBvaW50KHRoaXMuX2VuZFBvaW50LnggLSB0aGlzLl9zdGFydFBvaW50LngsIHRoaXMuX2VuZFBvaW50LnkgLSB0aGlzLl9zdGFydFBvaW50LnkpO1xuICAgICAgICBkaXJlY3Qubm9ybWFsaXplKCk7XG4gICAgICAgIGxldCByb3BlQ291bnQgPSBNYXRoLmNlaWwoZGlzdGFuY2UgLyB0aGlzLnJvcGVMZW5ndGgpO1xuICAgICAgICBsZXQgdXBwZXIgPSB0aGlzLl9zdGFydE5vZGU7XG4gICAgICAgIGxldCB1cHBlclJpZyA9IHRoaXMuX3N0YXJ0UmlnO1xuICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgcm9wZUNvdW50OyBpbmRleCsrKSB7XG4gICAgICAgICAgICAvKiDkuIvpnaLnmoTku6PnoIHmmK/liLbpgKDnu7PlrZDnmoTlnZDmoIcgKi9cbiAgICAgICAgICAgIGxldCByb3BlTm9kZTogTGF5YS5TcHJpdGUgPSBuZXcgTGF5YS5TcHJpdGUoKTtcbiAgICAgICAgICAgIHJvcGVOb2RlLm5hbWUgPSBcIlJvcGVcIjtcbiAgICAgICAgICAgIHRoaXMuX3JvcGVQaWVjZXNQYXJlbnQuYWRkQ2hpbGRyZW4ocm9wZU5vZGUpO1xuICAgICAgICAgICAgbGV0IHRlbXBQb2ludCA9IExheWEuUG9pbnQuY3JlYXRlKCk7XG4gICAgICAgICAgICB0ZW1wUG9pbnQuc2V0VG8oZGlyZWN0LnggKiBpbmRleCAqIHRoaXMucm9wZUxlbmd0aCwgZGlyZWN0LnkgKiBpbmRleCAqIHRoaXMucm9wZUxlbmd0aCk7XG4gICAgICAgICAgICAvLyB0ZW1wUG9pbnQuc2V0VG8odGVtcFBvaW50LnggKyB0aGlzLl9zdGFydE5vZGUucGl2b3RYLCB0ZW1wUG9pbnQueSArIHRoaXMuX3N0YXJ0Tm9kZS5waXZvdFkpO1xuICAgICAgICAgICAgLy8gaWYgKHRoaXMuc3Rhck5vZGVQaXZvdCkge1xuICAgICAgICAgICAgLy8gICAgIHRlbXBQb2ludC5zZXRUbyh0ZW1wUG9pbnQueCArIHRoaXMuc3Rhck5vZGVQaXZvdFswXSwgdGVtcFBvaW50LnkgKyB0aGlzLnN0YXJOb2RlUGl2b3RbMV0pO1xuICAgICAgICAgICAgLy8gfVxuICAgICAgICAgICAgLy8gZWxzZSB7XG4gICAgICAgICAgICB0ZW1wUG9pbnQuc2V0VG8odGVtcFBvaW50LnggKyB0aGlzLl9zdGFydE5vZGUucGl2b3RYLCB0ZW1wUG9pbnQueSArIHRoaXMuX3N0YXJ0Tm9kZS5waXZvdFkpO1xuICAgICAgICAgICAgLy8gfVxuICAgICAgICAgICAgcm9wZU5vZGUud2lkdGggPSB0aGlzLnJvcGVXaWR0aDtcbiAgICAgICAgICAgIHJvcGVOb2RlLmhlaWdodCA9IHRoaXMucm9wZUxlbmd0aCAqIDI7XG4gICAgICAgICAgICByb3BlTm9kZS5waXZvdFggPSByb3BlTm9kZS53aWR0aCAvIDI7XG4gICAgICAgICAgICByb3BlTm9kZS5waXZvdFkgPSByb3BlTm9kZS5waXZvdFkgLyAyO1xuICAgICAgICAgICAgcm9wZU5vZGUueCA9IHRlbXBQb2ludC54O1xuICAgICAgICAgICAgcm9wZU5vZGUueSA9IHRlbXBQb2ludC55O1xuICAgICAgICAgICAgLyog5LiL6Z2i55qE5Luj56CB55So5LqO5Yi26YCg57uz5a2Q55qE54mp55CG5pWI5p6cKi9cbiAgICAgICAgICAgIGxldCByb3BlQ29sOiBMYXlhLkNpcmNsZUNvbGxpZGVyO1xuICAgICAgICAgICAgLyogaWYgKGluZGV4IDwgcm9wZUNvdW50KSAgKi97XG4gICAgICAgICAgICAgICAgcm9wZUNvbCA9IHJvcGVOb2RlLmFkZENvbXBvbmVudChMYXlhLkNpcmNsZUNvbGxpZGVyKTs7XG4gICAgICAgICAgICAgICAgcm9wZUNvbC5yYWRpdXMgPSA5O1xuICAgICAgICAgICAgICAgIHJvcGVDb2wueCA9IHJvcGVOb2RlLnBpdm90WDtcbiAgICAgICAgICAgICAgICByb3BlQ29sLnkgPSByb3BlTm9kZS5waXZvdFk7XG4gICAgICAgICAgICAgICAgcm9wZUNvbC5pc1NlbnNvciA9IHRydWU7XG5cbiAgICAgICAgICAgICAgICAvLyByb3BlQ29sLl9zZXRBY3RpdmUoZmFsc2UpO1xuICAgICAgICAgICAgICAgIC8vIHJvcGVDb2wucmVmcmVzaCgpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBsZXQgcm9wZVJpZ0JvZHk6IExheWEuUmlnaWRCb2R5ID0gcm9wZU5vZGUuYWRkQ29tcG9uZW50KExheWEuUmlnaWRCb2R5KTtcbiAgICAgICAgICAgIHJvcGVSaWdCb2R5LmdldEJvZHkoKS5tX21hc3MgPSAwLjAxO1xuICAgICAgICAgICAgcm9wZVJpZ0JvZHkubGluZWFyRGFtcGluZyA9IHRoaXMubGluZWFyRGFtcGluZztcbiAgICAgICAgICAgIHJvcGVSaWdCb2R5LmFsbG93Um90YXRpb24gPSBmYWxzZTtcbiAgICAgICAgICAgIHJvcGVSaWdCb2R5LmNhdGVnb3J5ID0gQ29sbGlzaW9uRmlsdGVyR3JvdXBFbnVtLlJvcGU7XG4gICAgICAgICAgICByb3BlUmlnQm9keS5tYXNrID0gQ29sbGlzaW9uRmlsdGVyR3JvdXBFbnVtLk5vbmUgfCBDb2xsaXNpb25GaWx0ZXJHcm91cEVudW0uR3JvdW5kO1xuICAgICAgICAgICAgbGV0IHJvcGVKb2ludDogTGF5YS5Sb3BlSm9pbnQgPSBuZXcgTGF5YS5Sb3BlSm9pbnQoKTtcbiAgICAgICAgICAgIHJvcGVKb2ludC5vdGhlckJvZHkgPSB1cHBlclJpZztcbiAgICAgICAgICAgIHJvcGVKb2ludC5tYXhMZW5ndGggPSB0aGlzLnJvcGVMZW5ndGggKiB0aGlzLmxlbmd0UmF0ZTtcbiAgICAgICAgICAgIC8qIOa1i+ivlSznu5nnu7PlrZDliqDnorDmkp7lmaggKi9cbiAgICAgICAgICAgIC8qIOa1i+ivleWujOavlSAqL1xuICAgICAgICAgICAgaWYgKHJvcGVDb3VudCAtIDEgPT0gaW5kZXgpIHtcbiAgICAgICAgICAgICAgICByb3BlSm9pbnQuc2VsZkJvZHkgPSB0aGlzLl9lbmRSaWc7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZW5kTm9kZVBpdm90ICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgcm9wZUpvaW50LnNlbGZBbmNob3IgPSBbdGhpcy5lbmROb2RlUGl2b3RbMF0sIHRoaXMuZW5kTm9kZVBpdm90WzFdXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJvcGVKb2ludC5zZWxmQW5jaG9yID0gW3RoaXMuZW5kTm9kZS5waXZvdFgsIHRoaXMuZW5kTm9kZS5waXZvdFldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLl90aWRlT2JqLlNldFJvcGVBbmNob3Iocm9wZUpvaW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJvcGVKb2ludC5zZWxmQW5jaG9yID0gW3RoaXMucm9wZVdpZHRoIC8gMiwgdGhpcy5yb3BlTGVuZ3RoICogMC41XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpbmRleCA9PSAwKSB7XG4gICAgICAgICAgICAgICAgLy8gaWYgKHRoaXMuZW5kTm9kZVBpdm90ICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAvLyAgICAgcm9wZUpvaW50Lm90aGVyQW5jaG9yID0gW3RoaXMuZW5kTm9kZVBpdm90WzBdLCB0aGlzLmVuZE5vZGVQaXZvdFsxXV07XG4gICAgICAgICAgICAgICAgLy8gfVxuICAgICAgICAgICAgICAgIC8vIGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIGlmICh0aGlzLnN0YXJOb2RlUGl2b3QpIHtcbiAgICAgICAgICAgICAgICAvLyAgICAgcm9wZUpvaW50Lm90aGVyQW5jaG9yID0gW3RoaXMuc3Rhck5vZGVQaXZvdFswXSwgdGhpcy5zdGFyTm9kZVBpdm90WzFdXTtcbiAgICAgICAgICAgICAgICAvLyB9XG4gICAgICAgICAgICAgICAgLy8gZWxzZSB7XG4gICAgICAgICAgICAgICAgcm9wZUpvaW50Lm90aGVyQW5jaG9yID0gW3RoaXMuX3N0YXJ0Tm9kZS5waXZvdFgsIHRoaXMuX3N0YXJ0Tm9kZS5waXZvdFldO1xuICAgICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgICAgICAvLyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByb3BlSm9pbnQub3RoZXJBbmNob3IgPSBbdGhpcy5yb3BlV2lkdGggLyAyLCB0aGlzLnJvcGVMZW5ndGggKiAwLjVdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdXBwZXJSaWcgPSByb3BlUmlnQm9keTtcbiAgICAgICAgICAgIHRoaXMuX3JvcGVOb2RlTGlzdC5wdXNoKHJvcGVOb2RlKTtcbiAgICAgICAgICAgIHJvcGVOb2RlLmFkZENvbXBvbmVudEludGFuY2Uocm9wZUpvaW50KTtcbiAgICAgICAgICAgIGlmIChyb3BlQ29sKSB7XG4gICAgICAgICAgICAgICAgcm9wZUNvbC5yZWZyZXNoKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaW5kZXggPj0gMSkge1xuICAgICAgICAgICAgICAgIHJvcGVOb2RlLm9uY2UoTGF5YS5FdmVudC5NT1VTRV9PVkVSLCB0aGlzLCB0aGlzLlJvcGVCZWVuQ3V0LCBbaW5kZXhdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyAvKiDkuIvpnaLnmoTku6PnoIHnlKjkuo7liLbpgKDnu7PlrZDnmoTmmL7npLrmlYjmnpws57uz5a2Q5pi+56S65pWI5p6c5pWw6YeP6KaB5q+U57uz5a2Q6IqC54K55pWw5bCRMSovXG4gICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCB0aGlzLl9yb3BlTm9kZUxpc3QubGVuZ3RoIC0gMTsgaW5kZXgrKykge1xuICAgICAgICAgICAgY29uc3Qgc3AgPSB0aGlzLl9yb3BlTm9kZUxpc3RbaW5kZXhdO1xuICAgICAgICAgICAgbGV0IHJvcGVTcCA9IG5ldyBMYXlhLlNwcml0ZSgpO1xuICAgICAgICAgICAgcm9wZVNwLmxvYWRJbWFnZSh0aGlzLnJvcGVUZXh0dXJlLCBudWxsKTtcbiAgICAgICAgICAgIHJvcGVTcC53aWR0aCA9IHRoaXMucm9wZVdpZHRoICogdGhpcy5yb3BlU2hvd1JhdGU7XG4gICAgICAgICAgICByb3BlU3AuaGVpZ2h0ID0gdGhpcy5yb3BlTGVuZ3RoO1xuICAgICAgICAgICAgcm9wZVNwLnBpdm90WCA9IHJvcGVTcC53aWR0aCAvIDI7XG4gICAgICAgICAgICByb3BlU3AucGl2b3RZID0gcm9wZVNwLmhlaWdodCAvIDI7XG4gICAgICAgICAgICByb3BlU3AueCA9IHNwLnBpdm90WDtcbiAgICAgICAgICAgIHJvcGVTcC55ID0gc3AucGl2b3RZO1xuICAgICAgICAgICAgcm9wZVNwLm1vdXNlRW5hYmxlZCA9IGZhbHNlO1xuICAgICAgICAgICAgc3AuYWRkQ2hpbGQocm9wZVNwKTtcbiAgICAgICAgICAgIGxldCByb3BlUGllY2UgPSByb3BlU3AuYWRkQ29tcG9uZW50KFJvcGVQaWVjZXMpIGFzIFJvcGVQaWVjZXM7XG4gICAgICAgICAgICBsZXQgdG9wID0gaW5kZXggPiAwID8gdGhpcy5fcm9wZU5vZGVMaXN0W2luZGV4IC0gMV0gOiB0aGlzLl9yb3BlTm9kZUxpc3RbMF07XG4gICAgICAgICAgICBsZXQgZG93biA9IGluZGV4IDwgdGhpcy5fcm9wZU5vZGVMaXN0Lmxlbmd0aCAtIDEgPyB0aGlzLl9yb3BlTm9kZUxpc3RbaW5kZXggKyAxXSA6IHRoaXMuX3JvcGVOb2RlTGlzdFt0aGlzLl9yb3BlTm9kZUxpc3QubGVuZ3RoIC0gMV07XG4gICAgICAgICAgICByb3BlUGllY2UuU2V0QW5nbGUodG9wLCBkb3duKTtcbiAgICAgICAgICAgIC8vIHJvcGVQaWVjZS5TZXRBbmdsZSh0b3AsIGRvd24sIHRoaXMuX3JvcGVOb2RlTGlzdC5sZW5ndGgsIGluZGV4KTtcbiAgICAgICAgICAgIHRoaXMuX3JvcGVTcHJpdGVMaXN0LnB1c2gocm9wZVBpZWNlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiDnu7PlrZDlt7LooqvliIfmlq1cbiAgICAgKiBcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gaW5kZXggXG4gICAgICogQG1lbWJlcm9mIFJvcGVcbiAgICAgKi9cbiAgICBSb3BlQmVlbkN1dChpbmRleDogbnVtYmVyKSB7XG4gICAgICAgIGlmICghdGhpcy5fcm9wZUJyb2tlbikge1xuICAgICAgICAgICAgdGhpcy5fdGlkZU9iai5Sb3BlQ3V0KCk7XG4gICAgICAgICAgICB0aGlzLl9yb3BlQnJva2VuID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICAvKiDpmLLmraLnn63ml7bpl7TlhoXlpJrmrKHliIfnu7PlrZAgKi9cbiAgICAgICAgaWYgKHRoaXMuX2N1dE9uY2UpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9jdXRPbmNlID0gdHJ1ZTtcbiAgICAgICAgTGF5YS50aW1lci5vbmNlKDUwMCwgdGhpcywgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5fY3V0T25jZSA9IGZhbHNlO1xuICAgICAgICB9KVxuICAgICAgICBTb3VuZE1nci5pbnN0YW5jZS5wbGF5U291bmQoXCLot7PkuItcIik7XG4gICAgICAgIC8qIOesrOS4gOatpeWwhuW9k+WJjee7s+WtkOeJqeeQhuaViOaenOWIh+aWrSAqL1xuICAgICAgICBsZXQgcm9wZUpvaW50ID0gdGhpcy5fcm9wZU5vZGVMaXN0W2luZGV4XS5nZXRDb21wb25lbnQoTGF5YS5Sb3BlSm9pbnQpIGFzIExheWEuUm9wZUpvaW50O1xuICAgICAgICBsZXQgcm9wZVJpZyA9IHRoaXMuX3JvcGVOb2RlTGlzdFtpbmRleF0uZ2V0Q29tcG9uZW50KExheWEuUmlnaWRCb2R5KSBhcyBMYXlhLlJpZ2lkQm9keTtcbiAgICAgICAgcm9wZUpvaW50Ll9zZXRBY3RpdmUoZmFsc2UpO1xuICAgICAgICBmb3IgKGxldCBpID0gaW5kZXg7IGkgPCB0aGlzLl9yb3BlTm9kZUxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGxldCByb3BlID0gdGhpcy5fcm9wZU5vZGVMaXN0W2ldO1xuICAgICAgICAgICAgTGF5YS50aW1lci5vbmNlKDEwMCwgcm9wZSwgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCByaWcgPSByb3BlLmdldENvbXBvbmVudChMYXlhLlJpZ2lkQm9keSkgYXMgTGF5YS5SaWdpZEJvZHk7XG4gICAgICAgICAgICAgICAgcmlnLmxpbmVhckRhbXBpbmcgPSAwLjM7XG5cbiAgICAgICAgICAgICAgICBsZXQgY29sID0gcm9wZS5nZXRDb21wb25lbnQoTGF5YS5DaXJjbGVDb2xsaWRlcikgYXMgTGF5YS5DaXJjbGVDb2xsaWRlcjtcbiAgICAgICAgICAgICAgICBpZiAoY29sKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbC5pc1NlbnNvciA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vIGNvbC5yYWRpdXMgPSAxXG4gICAgICAgICAgICAgICAgLy8gY29sLnggPSByb3BlLndpZHRoIC8gMjtcbiAgICAgICAgICAgICAgICAvLyBjb2wueSA9IHJvcGUuaGVpZ2h0IC8gMjtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICByb3BlLm9mZkFsbChMYXlhLkV2ZW50Lk1PVVNFX09WRVIpO1xuICAgICAgICB9XG4gICAgICAgIC8qIOesrOS6jOatpeWwhuW9k+WJjee7s+WtkOaYvuekuuaViOaenOWIh+aWrSAqL1xuICAgICAgICAvLyBpZiAoaW5kZXggPiAwKSB7XG4gICAgICAgIC8vICAgICB0aGlzLl9yb3BlU3ByaXRlTGlzdFtpbmRleCAtIDFdLlJvcGVCZWVuQ3V0KGZhbHNlKTtcbiAgICAgICAgLy8gfVxuICAgICAgICAvLyBpZiAoaW5kZXggPCB0aGlzLl9yb3BlU3ByaXRlTGlzdC5sZW5ndGggLSAxKSB7XG4gICAgICAgIC8vICAgICB0aGlzLl9yb3BlU3ByaXRlTGlzdFtpbmRleCArIDFdLlJvcGVCZWVuQ3V0KHRydWUpO1xuICAgICAgICAvLyB9XG4gICAgfVxufSIsIi8qKlxuICog55So5p2l5o6n5Yi257uz5a2Q5pi+56S65pWI5p6c5qC45b+D55qE57G7XG4gKiBcbiAqIEBleHBvcnRcbiAqIEBjbGFzcyBSb3BlUGllY2VzXG4gKiBAZXh0ZW5kcyB7TGF5YS5TY3JpcHR9XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJvcGVQaWVjZXMgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgfVxuICAgIHByaXZhdGUgX3RvcFNwcml0ZTogTGF5YS5TcHJpdGU7XG4gICAgcHJpdmF0ZSBfYm90dG9tU3ByaXRlOiBMYXlhLlNwcml0ZTtcbiAgICBwcml2YXRlIF9vd25lclNwOiBMYXlhLlNwcml0ZTtcbiAgICBwcml2YXRlIF9yb3RhdGU6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBwcml2YXRlIF9yb3BlQ291bnQ6IG51bWJlcjtcbiAgICBwcml2YXRlIF9yb3BlSW5kZXg6IG51bWJlcjtcbiAgICBvbkF3YWtlKCkge1xuICAgICAgICB0aGlzLl9vd25lclNwID0gdGhpcy5vd25lciBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgdGhpcy5fb3duZXJTcC5vbihcIlN0b3BSb3RlXCIsIHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX3JvdGF0ZSA9IGZhbHNlO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgU2V0QW5nbGUodG9wU3ByaXRlOiBMYXlhLlNwcml0ZSwgYm90dG9tU3ByaXRlOiBMYXlhLlNwcml0ZSkge1xuICAgICAgICB0aGlzLl90b3BTcHJpdGUgPSB0b3BTcHJpdGU7XG4gICAgICAgIHRoaXMuX2JvdHRvbVNwcml0ZSA9IGJvdHRvbVNwcml0ZTtcbiAgICAgICAgdGhpcy5fcm90YXRlID0gdHJ1ZTtcbiAgICAgICAgLy8gdGhpcy5fcm9wZUNvdW50ID0gcm9wZUNvdW50O1xuICAgICAgICAvLyB0aGlzLl9yb3BlSW5kZXggPSByb3BlSW5kZXg7XG4gICAgICAgIC8vIGxldCByYWRpbyA9IDEgLSAoTWF0aC5hYnModGhpcy5fcm9wZUluZGV4IC0gKHRoaXMuX3JvcGVDb3VudCAvIDIpKSAvICh0aGlzLl9yb3BlQ291bnQgLyAyKSk7XG4gICAgICAgIHRoaXMuX293bmVyU3Auc2NhbGVZID0gMS41O1xuICAgIH1cbiAgICBSb3BlQmVlbkN1dChpc1VwOiBib29sZWFuKSB7XG4gICAgICAgIGlmIChpc1VwKSB7XG4gICAgICAgICAgICB0aGlzLl90b3BTcHJpdGUgPSB0aGlzLl9vd25lclNwO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fYm90dG9tU3ByaXRlID0gdGhpcy5fb3duZXJTcDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBvblVwZGF0ZSgpIHtcbiAgICAgICAgaWYgKHRoaXMuX3JvdGF0ZSkge1xuICAgICAgICAgICAgbGV0IGRpcmVjdCA9IExheWEuUG9pbnQuY3JlYXRlKCk7XG4gICAgICAgICAgICBkaXJlY3Quc2V0VG8odGhpcy5fdG9wU3ByaXRlLnggLSB0aGlzLl9ib3R0b21TcHJpdGUueCwgdGhpcy5fdG9wU3ByaXRlLnkgLSB0aGlzLl9ib3R0b21TcHJpdGUueSk7XG4gICAgICAgICAgICBsZXQgYW5nZWwgPSBNYXRoLmF0YW4yKGRpcmVjdC54LCBkaXJlY3QueSkgKiAxODAgLyBNYXRoLlBJICogLTE7XG4gICAgICAgICAgICB0aGlzLl9vd25lclNwLnJvdGF0aW9uID0gYW5nZWw7XG4gICAgICAgICAgICBkaXJlY3QucmVjb3ZlcigpO1xuICAgICAgICB9XG4gICAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFJvdGF0ZU9iaiBleHRlbmRzIExheWEuU2NyaXB0IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICB9XG4gICAgLyoqIEBwcm9wIHtuYW1lOnJvdGF0ZURpciwgdGlwczpcIuaXi+i9rOaWueWQkVwiLCB0eXBlOk9wdGlvbixvcHRpb246XCJBZGQsRGVjXCIsZGVmYXVsdDpcIkFkZFwifSovXG4gICAgcHVibGljIHJvdGF0ZURpcjogc3RyaW5nID0gXCJBZGRcIjtcbiAgICBwdWJsaWMgT25lTG9vcFRpbWU6IG51bWJlciA9IDcwMDA7XG4gICAgcHJpdmF0ZSBfdGltZVNjYWxlOiBudW1iZXI7XG4gICAgcHJpdmF0ZSBfb3duZXJTcDogTGF5YS5TcHJpdGU7XG4gICAgb25Bd2FrZSgpIHtcbiAgICAgICAgdGhpcy5fb3duZXJTcCA9IHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgIHRoaXMuX3RpbWVTY2FsZSA9IDM2MCAvIHRoaXMuT25lTG9vcFRpbWU7XG4gICAgfVxuICAgIG9uVXBkYXRlKCkge1xuICAgICAgICBpZiAodGhpcy5yb3RhdGVEaXIgPT0gXCJBZGRcIikge1xuICAgICAgICAgICAgdGhpcy5fb3duZXJTcC5yb3RhdGlvbiArPSBMYXlhLnRpbWVyLmRlbHRhICogdGhpcy5fdGltZVNjYWxlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fb3duZXJTcC5yb3RhdGlvbiAtPSBMYXlhLnRpbWVyLmRlbHRhICogdGhpcy5fdGltZVNjYWxlO1xuICAgICAgICB9XG4gICAgfVxufSIsImltcG9ydCB7IENvbGxpc2lvbkZpbHRlckdyb3VwRW51bSB9IGZyb20gXCIuLi9QaHlzaWNzVXRpbHNcIjtcbmltcG9ydCBCYXNlT2JqIGZyb20gXCIuL0Jhc2VPYmpcIjtcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRpZGVPYmplY3QgZXh0ZW5kcyBCYXNlT2JqIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICB9XG4gICAgLyog57uz5a2Q57uE5Lu2ICovXG4gICAgcHJvdGVjdGVkIF9yb3BlQW5jaG9yTGlzdDogQXJyYXk8TGF5YS5Kb2ludEJhc2U+ID0gW107XG4gICAgLyog5o2G57uR54q25oCBICovXG4gICAgcHJvdGVjdGVkIF90aWRlOiBib29sZWFuID0gZmFsc2U7XG4gICAgLyog57uR5L2P55qE57uz5a2Q5pWw6YePICovXG4gICAgcHJvdGVjdGVkIF9yb3BlQ291bnQ6IG51bWJlciA9IDA7XG4gICAgb25TdGFydCgpIHtcbiAgICAgICAgaWYgKHRoaXMuX3JvcGVBbmNob3JMaXN0Lmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHRoaXMuX3RpZGUgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIOiuvue9rue7s+WtkOeisOaSnue7hOWIq1xuICAgICAqIFxuICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgKiBAbWVtYmVyb2YgVGlkZU9iamVjdFxuICAgICAqL1xuICAgIHByb3RlY3RlZCBTZXRDb2xsaWRlckNhdGVnb3J5KCkge1xuICAgICAgICB0aGlzLl9yaWdCb2R5LmNhdGVnb3J5ID0gQ29sbGlzaW9uRmlsdGVyR3JvdXBFbnVtLlBsYW5lO1xuICAgICAgICB0aGlzLl9yaWdCb2R5Lm1hc2sgPSBDb2xsaXNpb25GaWx0ZXJHcm91cEVudW0uQUxMIF4gQ29sbGlzaW9uRmlsdGVyR3JvdXBFbnVtLlJvcGU7XG4gICAgICAgIHRoaXMuX2NvbGxpZGVyLnJlZnJlc2goKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICog6K6+572u57uz5a2Q6ZSa54K5XG4gICAgICogXG4gICAgICogQHBhcmFtIHtMYXlhLlJvcGVKb2ludH0gcm9wZSBcbiAgICAgKiBAbWVtYmVyb2YgVGlkZU9iamVjdFxuICAgICAqL1xuICAgIHB1YmxpYyBTZXRSb3BlQW5jaG9yKHJvcGU6IExheWEuSm9pbnRCYXNlKSB7XG4gICAgICAgIHRoaXMuX3JvcGVBbmNob3JMaXN0LnB1c2gocm9wZSk7XG4gICAgICAgIHRoaXMuX3JvcGVDb3VudCsrO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiDov5vlhaXop6blj5HlmahcbiAgICAgKiBcbiAgICAgKiBAcGFyYW0ge0xheWEuQ29sbGlkZXJCYXNlfSBvdGhlciBcbiAgICAgKiBAcGFyYW0ge0xheWEuQ29sbGlkZXJCYXNlfSBzZWxmIFxuICAgICAqIEBwYXJhbSB7Kn0gY29udGFjdCBcbiAgICAgKiBAbWVtYmVyb2YgVGlkZU9iamVjdFxuICAgICAqL1xuICAgIG9uVHJpZ2dlckVudGVyKG90aGVyOiBMYXlhLkNvbGxpZGVyQmFzZSwgc2VsZjogTGF5YS5Db2xsaWRlckJhc2UsIGNvbnRhY3Q6IGFueSkge1xuICAgICAgICAvLyBpZighb3RoZXIub3duZXIgfHwgIW90aGVyLm93bmVyLm5hbWUpIHJldHVybjtcbiAgICAgICAgaWYgKCFvdGhlci5pc1NlbnNvciAmJiAhdGhpcy5fdGlkZSkge1xuICAgICAgICAgICAgdGhpcy5Sb3BlQnJva2VuKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG90aGVyLm93bmVyLm5hbWUuaW5kZXhPZihcIkdyb3VuZFwiKSA+PSAwKSB7XG4gICAgICAgICAgICB0aGlzLlJvcGVCcm9rZW4oKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiDlnKjokL3lnLDnmoTml7blgJks5omT5pat57uz5a2QXG4gICAgICogXG4gICAgICogQHBhcmFtIHtMYXlhLlJvcGVKb2ludH0gcm9wZSBcbiAgICAgKiBAbWVtYmVyb2YgVGlkZU9iamVjdFxuICAgICAqL1xuICAgIHB1YmxpYyBSb3BlQnJva2VuKCkge1xuICAgICAgICB0aGlzLl9yb3BlQW5jaG9yTGlzdC5mb3JFYWNoKHUgPT4ge1xuICAgICAgICAgICAgdS5fc2V0QWN0aXZlKGZhbHNlKTtcbiAgICAgICAgfSlcbiAgICAgICAgdGhpcy5fdGlkZSA9IGZhbHNlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiDliIfmlq3kuIDmoLnnu7PlrZBcbiAgICAgKiBcbiAgICAgKiBAbWVtYmVyb2YgVGlkZU9iamVjdFxuICAgICAqL1xuICAgIFJvcGVDdXQoKSB7XG4gICAgICAgIHRoaXMuX3JvcGVDb3VudC0tO1xuICAgICAgICBpZiAodGhpcy5fcm9wZUNvdW50IDw9IDApIHtcbiAgICAgICAgICAgIHRoaXMuX3RpZGUgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBvblVwZGF0ZSgpIHtcbiAgICAvLyAgICAgaWYgKHRoaXMuX3JpZ0JvZHkuYW5ndWxhclZlbG9jaXR5ICE9IDApIHtcbiAgICAvLyAgICAgICAgIHRoaXMuX3JpZ0JvZHkuYW5ndWxhclZlbG9jaXR5ID0gMDtcbiAgICAvLyAgICAgfVxuICAgIC8vIH1cbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBHdWlkZXIgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgfVxuICAgIHByaXZhdGUgX293bmVyU3A6IExheWEuU3ByaXRlO1xuICAgIHByaXZhdGUgX3NrOiBMYXlhLlNwcml0ZTtcbiAgICBvbkF3YWtlKCkge1xuICAgICAgICB0aGlzLl9vd25lclNwID0gdGhpcy5vd25lciBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgdGhpcy5fc2sgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiU2tcIikgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgIGxldCBza2VsZXRvbiA9IG5ldyBMYXlhLlNrZWxldG9uKCk7XG4gICAgICAgIHNrZWxldG9uLmxvYWQoXCJzdWJSZXMvZ3VpZGVyL05ld1Byb2plY3Quc2tcIik7XG4gICAgICAgIHNrZWxldG9uLnNjYWxlWCA9IHNrZWxldG9uLnNjYWxlWCAvIDI7XG4gICAgICAgIHNrZWxldG9uLnNjYWxlWSA9IHNrZWxldG9uLnNjYWxlWSAvIDI7XG4gICAgICAgIHRoaXMuX3NrLmFkZENoaWxkKHNrZWxldG9uKTtcbiAgICB9XG4gICAgb25Nb3VzZU92ZXIoKSB7XG4gICAgICAgIHRoaXMuX293bmVyU3AudmlzaWJsZSA9IGZhbHNlO1xuICAgIH1cbn0iLCJleHBvcnQgY2xhc3MgQ29sbGlzaW9uRmlsdGVyR3JvdXBFbnVtIHtcbiAgICBzdGF0aWMgcmVhZG9ubHkgTm9uZTogbnVtYmVyID0gMDtcbiAgICBzdGF0aWMgcmVhZG9ubHkgQUxMOiBudW1iZXIgPSAtMTtcbiAgICBzdGF0aWMgcmVhZG9ubHkgUGxhbmU6IG51bWJlciA9IE1hdGgucG93KDIsIDApO1xuICAgIHN0YXRpYyByZWFkb25seSBHcm91bmQ6IG51bWJlciA9IE1hdGgucG93KDIsIDEpO1xuICAgIHN0YXRpYyByZWFkb25seSBSb3BlOiBudW1iZXIgPSBNYXRoLnBvdygyLCAyKTtcbiAgICBzdGF0aWMgcmVhZG9ubHkgUGxheWVyOiBudW1iZXIgPSBNYXRoLnBvdygyLCAzKTtcbiAgICBzdGF0aWMgcmVhZG9ubHkgRW5lbXk6IG51bWJlciA9IE1hdGgucG93KDIsIDQpO1xuICAgIHN0YXRpYyByZWFkb25seSBQbGFuZUJsb2NrZXI6IG51bWJlciA9IE1hdGgucG93KDIsIDUpO1xuICAgIC8vIHN0YXRpYyByZWFkb25seSBSb3BlQ3V0OiBudW1iZXIgPSBNYXRoLnBvdygyLCA2KTtcbiAgICAvLyBzdGF0aWMgcmVhZG9ubHkgQ09MTElTSU9ORklMVEVSR1JPVVBfU0VOU09SVFJJR0dFUjogbnVtYmVyO1xuICAgIC8vIHN0YXRpYyByZWFkb25seSBDT0xMSVNJT05GSUxURVJHUk9VUF9DSEFSQUNURVJGSUxURVI6IG51bWJlcjtcbiAgICAvLyBzdGF0aWMgcmVhZG9ubHkgQ09MTElTSU9ORklMVEVSR1JPVVBfQ1VTVE9NRklMVEVSMTogbnVtYmVyO1xuICAgIC8vIHN0YXRpYyByZWFkb25seSBDT0xMSVNJT05GSUxURVJHUk9VUF9DVVNUT01GSUxURVIyOiBudW1iZXI7XG4gICAgLy8gc3RhdGljIHJlYWRvbmx5IENPTExJU0lPTkZJTFRFUkdST1VQX0NVU1RPTUZJTFRFUjM6IG51bWJlcjtcbiAgICAvLyBzdGF0aWMgcmVhZG9ubHkgQ09MTElTSU9ORklMVEVSR1JPVVBfQ1VTVE9NRklMVEVSNDogbnVtYmVyO1xuICAgIC8vIHN0YXRpYyByZWFkb25seSBDT0xMSVNJT05GSUxURVJHUk9VUF9DVVNUT01GSUxURVI1OiBudW1iZXI7XG4gICAgLy8gc3RhdGljIHJlYWRvbmx5IENPTExJU0lPTkZJTFRFUkdST1VQX0NVU1RPTUZJTFRFUjY6IG51bWJlcjtcbiAgICAvLyBzdGF0aWMgcmVhZG9ubHkgQ09MTElTSU9ORklMVEVSR1JPVVBfQ1VTVE9NRklMVEVSNzogbnVtYmVyO1xuICAgIC8vIHN0YXRpYyByZWFkb25seSBDT0xMSVNJT05GSUxURVJHUk9VUF9DVVNUT01GSUxURVI4OiBudW1iZXI7XG4gICAgLy8gc3RhdGljIHJlYWRvbmx5IENPTExJU0lPTkZJTFRFUkdST1VQX0NVU1RPTUZJTFRFUjk6IG51bWJlcjtcbiAgICAvLyBzdGF0aWMgcmVhZG9ubHkgQ09MTElTSU9ORklMVEVSR1JPVVBfQ1VTVE9NRklMVEVSMTA6IG51bWJlcjtcbiAgICAvLyBzdGF0aWMgcmVhZG9ubHkgQ09MTElTSU9ORklMVEVSR1JPVVBfQUxMRklMVEVSOiBudW1iZXI7XG59ICIsImltcG9ydCB7IENvbGxpc2lvbkZpbHRlckdyb3VwRW51bSB9IGZyb20gXCIuL1BoeXNpY3NVdGlsc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUb3VjaEN0ciBleHRlbmRzIExheWEuU2NyaXB0IHtcbiAgICAvKiogQHByb3Age25hbWU6dG91Y2hUZXh0dXJlLCB0aXBzOlwi5pi+56S65pWI5p6c5p2Q6LSoXCIsIHR5cGU6c3RyaW5nLGFjY2VwdDpyZXMsZGVmYXVsdDpcIkdhbWVPYmpzL1RvdWNoRWZmZWN0LnBuZ1wifSovXG4gICAgcHVibGljIHRvdWNoVGV4dHVyZTogc3RyaW5nID0gXCJHYW1lT2Jqcy9Ub3VjaEVmZmVjdC5wbmdcIjtcbiAgICAvKiogQHByb3Age25hbWU6ZWZmZWN0U2l6ZSwgdGlwczpcIuaYvuekuuaViOaenOadkOi0qOWkp+Wwj1wiLCB0eXBlOmludCxkZWZhdWx0OjIwfSovXG4gICAgcHVibGljIGVmZmVjdFNpemU6IG51bWJlciA9IDIwO1xuICAgIC8qKiBAcHJvcCB7bmFtZTplZmZlY1RpbWUsIHRpcHM6XCLmmL7npLrmlYjmnpzmtojlpLHmrKHmlbAs5Y2V5L2N5q+r56eSXCIsIHR5cGU6aW50LGRlZmF1bHQ6MTAwMH0qL1xuICAgIHB1YmxpYyBlZmZlY1RpbWU6IG51bWJlciA9IDEwMDA7XG4gICAgcHJpdmF0ZSBfdG91Y2hFZmZlY3RQYXJlbnQ6IExheWEuU3ByaXRlO1xuICAgIC8vIHByaXZhdGUgX3RvdWNoVGltZTogbnVtYmVyID0gLTE7XG4gICAgLy8gcHJpdmF0ZSBfdG91Y2hDb2xsaWRlcjogTGF5YS5DaGFpbkNvbGxpZGVyO1xuICAgIC8vIHByaXZhdGUgX3RvdWNoUmlnYm9keTogTGF5YS5SaWdpZEJvZHk7XG4gICAgLy8gcHJpdmF0ZSBfbW91c2VYOiBudW1iZXI7XG4gICAgLy8gcHJpdmF0ZSBfbW91c2VZOiBudW1iZXI7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgfVxuICAgIHByaXZhdGUgX21vdXNlRG93bjogYm9vbGVhbjtcbiAgICBvbkF3YWtlKCkge1xuICAgICAgICB0aGlzLl90b3VjaEVmZmVjdFBhcmVudCA9IExheWEuc3RhZ2UuZ2V0Q2hpbGRCeU5hbWUoXCJUb3VjaEVmZmVjdFBhcmVudFwiKSBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgaWYgKHRoaXMuX3RvdWNoRWZmZWN0UGFyZW50ID09IG51bGwpIHtcbiAgICAgICAgICAgIHRoaXMuX3RvdWNoRWZmZWN0UGFyZW50ID0gbmV3IExheWEuU3ByaXRlKCk7XG4gICAgICAgICAgICB0aGlzLl90b3VjaEVmZmVjdFBhcmVudC5tb3VzZUVuYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIExheWEuc3RhZ2UuYWRkQ2hpbGQodGhpcy5fdG91Y2hFZmZlY3RQYXJlbnQpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChMYXlhLnN0YWdlLmdldENoaWxkSW5kZXgodGhpcy5fdG91Y2hFZmZlY3RQYXJlbnQpICE9IExheWEuc3RhZ2UubnVtQ2hpbGRyZW4gLSAxKSB7XG4gICAgICAgICAgICBMYXlhLnN0YWdlLnNldENoaWxkSW5kZXgodGhpcy5fdG91Y2hFZmZlY3RQYXJlbnQsIExheWEuc3RhZ2UubnVtQ2hpbGRyZW4gLSAxKTtcbiAgICAgICAgfVxuICAgICAgICAvLyB0aGlzLl90b3VjaENvbGxpZGVyID0gdGhpcy5vd25lci5hZGRDb21wb25lbnQoTGF5YS5DaGFpbkNvbGxpZGVyKTtcbiAgICAgICAgLy8gdGhpcy5fdG91Y2hDb2xsaWRlci5wb2ludHMgPSBcIjAsMCwwLDBcIjtcbiAgICAgICAgLy8gdGhpcy5fdG91Y2hDb2xsaWRlci5sb29wID0gZmFsc2U7XG4gICAgICAgIC8vIHRoaXMuX3RvdWNoUmlnYm9keSA9IHRoaXMub3duZXIuYWRkQ29tcG9uZW50KExheWEuUmlnaWRCb2R5KTtcbiAgICAgICAgLy8gdGhpcy5fdG91Y2hSaWdib2R5LnR5cGUgPSBcImtpbmVtYXRpY1wiO1xuICAgICAgICAvLyB0aGlzLl90b3VjaFJpZ2JvZHkuYWxsb3dSb3RhdGlvbiA9IGZhbHNlO1xuICAgICAgICAvLyB0aGlzLl90b3VjaFJpZ2JvZHkuY2F0ZWdvcnkgPSBDb2xsaXNpb25GaWx0ZXJHcm91cEVudW0uUm9wZUN1dDtcbiAgICAgICAgLy8gdGhpcy5fdG91Y2hSaWdib2R5Lm1hc2sgPSBDb2xsaXNpb25GaWx0ZXJHcm91cEVudW0uUm9wZTtcbiAgICAgICAgLy8gdGhpcy5fdG91Y2hDb2xsaWRlci5yZWZyZXNoKCk7XG4gICAgfVxuICAgIG9uU3RhZ2VNb3VzZURvd24oKSB7XG4gICAgICAgIHRoaXMuX21vdXNlRG93biA9IHRydWU7XG4gICAgfVxuICAgIG9uU3RhZ2VNb3VzZVVwKCkge1xuICAgICAgICB0aGlzLl9tb3VzZURvd24gPSBmYWxzZTtcbiAgICB9XG4gICAgb25VcGRhdGUoKSB7XG4gICAgICAgIGlmICghdGhpcy5fbW91c2VEb3duKSB7XG4gICAgICAgICAgICAvLyB0aGlzLl9tb3VzZVggPSAtMTtcbiAgICAgICAgICAgIC8vIHRoaXMuX21vdXNlWSA9IC0xO1xuICAgICAgICAgICAgLy8gdGhpcy5fdG91Y2hUaW1lID0gMDtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICAvKiDliJLnl5XmmL7npLrmlYjmnpwgKi9cbiAgICAgICAgbGV0IGVmZmVjdDogTGF5YS5TcHJpdGUgPSBMYXlhLlBvb2wuZ2V0SXRlbUJ5Q3JlYXRlRnVuKFwidG91Y2hFZmZlY3RcIiwgKHJlcykgPT4ge1xuICAgICAgICAgICAgbGV0IGVmZiA9IG5ldyBMYXlhLlNwcml0ZSgpO1xuICAgICAgICAgICAgZWZmLm1vdXNlRW5hYmxlZCA9IGZhbHNlO1xuICAgICAgICAgICAgZWZmLmxvYWRJbWFnZSh0aGlzLnRvdWNoVGV4dHVyZSk7XG4gICAgICAgICAgICBlZmYud2lkdGggPSB0aGlzLmVmZmVjdFNpemU7XG4gICAgICAgICAgICBlZmYuaGVpZ2h0ID0gdGhpcy5lZmZlY3RTaXplO1xuICAgICAgICAgICAgbGV0IGVmZlNjcmlwdCA9IGVmZi5hZGRDb21wb25lbnQoVG91Y2hFZmZlY3QpIGFzIFRvdWNoRWZmZWN0O1xuICAgICAgICAgICAgZWZmU2NyaXB0LmVmZmVjVGltZSA9IHRoaXMuZWZmZWNUaW1lO1xuICAgICAgICAgICAgcmV0dXJuIGVmZjtcbiAgICAgICAgfSwgdGhpcyk7XG4gICAgICAgIGVmZmVjdC54ID0gTGF5YS5zdGFnZS5tb3VzZVg7XG4gICAgICAgIGVmZmVjdC55ID0gTGF5YS5zdGFnZS5tb3VzZVk7XG4gICAgICAgIGVmZmVjdC5waXZvdFggPSB0aGlzLmVmZmVjdFNpemUgLyAyO1xuICAgICAgICBlZmZlY3QucGl2b3RZID0gdGhpcy5lZmZlY3RTaXplIC8gMjtcbiAgICAgICAgdGhpcy5fdG91Y2hFZmZlY3RQYXJlbnQuYWRkQ2hpbGQoZWZmZWN0KTtcbiAgICAgICAgLyog55yf5q2j5YiH57uz5a2QICovXG4gICAgICAgIC8vIGlmICh0aGlzLl90b3VjaFRpbWUgPD0gNTApIHtcbiAgICAgICAgLy8gICAgIHRoaXMuX3RvdWNoVGltZSArPSBMYXlhLnRpbWVyLmRlbHRhO1xuICAgICAgICAvLyAgICAgcmV0dXJuO1xuICAgICAgICAvLyB9XG4gICAgICAgIC8vIGlmICh0aGlzLl9tb3VzZVggPD0gMCB8fCB0aGlzLl9tb3VzZVkgPD0gMCkge1xuICAgICAgICAvLyAgICAgdGhpcy5fbW91c2VYID0gTGF5YS5zdGFnZS5tb3VzZVg7XG4gICAgICAgIC8vICAgICB0aGlzLl9tb3VzZVkgPSBMYXlhLnN0YWdlLm1vdXNlWTtcbiAgICAgICAgLy8gICAgIHJldHVybjtcbiAgICAgICAgLy8gfVxuICAgICAgICAvLyB0aGlzLl90b3VjaENvbGxpZGVyLnBvaW50cyA9IHRoaXMuX21vdXNlWC50b1N0cmluZygpICsgXCIsXCIgKyB0aGlzLl9tb3VzZVkudG9TdHJpbmcoKSArIFwiLFwiICtcbiAgICAgICAgLy8gICAgIExheWEuc3RhZ2UubW91c2VYLnRvU3RyaW5nKCkgKyBcIixcIiArIExheWEuc3RhZ2UubW91c2VZLnRvU3RyaW5nKCk7XG4gICAgICAgIC8vIHRoaXMuX3RvdWNoQ29sbGlkZXIucmVmcmVzaCgpO1xuICAgICAgICAvLyB0aGlzLl9tb3VzZVggPSBMYXlhLnN0YWdlLm1vdXNlWDtcbiAgICAgICAgLy8gdGhpcy5fbW91c2VZID0gTGF5YS5zdGFnZS5tb3VzZVk7XG4gICAgICAgIC8vIHRoaXMuX3RvdWNoVGltZSA9IDA7XG4gICAgfVxufVxuXG5leHBvcnQgY2xhc3MgVG91Y2hFZmZlY3QgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgfVxuICAgIHByaXZhdGUgX3NjYXJlOiBudW1iZXI7XG4gICAgcHJpdmF0ZSBfaXNTY2FyZTogYm9vbGVhbjtcbiAgICBwcml2YXRlIF9vd25lclNwOiBMYXlhLlNwcml0ZTtcbiAgICBwdWJsaWMgZWZmZWNUaW1lOiBudW1iZXIgPSAxMDAwO1xuICAgIG9uQXdha2UoKSB7XG4gICAgICAgIHRoaXMuX2lzU2NhcmUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5fb3duZXJTcCA9IHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGU7XG4gICAgfVxuICAgIG9uRW5hYmxlKCkge1xuICAgICAgICB0aGlzLl9zY2FyZSA9IDE7XG4gICAgICAgIHRoaXMuX2lzU2NhcmUgPSB0cnVlO1xuICAgICAgICAvLyBMYXlhLnRpbWVyLm9uY2UoNTAwLCB0aGlzLCAoKSA9PiB7XG4gICAgICAgIC8vICAgICB0aGlzLm93bmVyLnJlbW92ZVNlbGYoKTtcbiAgICAgICAgLy8gfSlcbiAgICB9XG4gICAgb25VcGRhdGUoKSB7XG4gICAgICAgIGlmICh0aGlzLl9pc1NjYXJlICYmIHRoaXMuX3NjYXJlID4gMCkge1xuICAgICAgICAgICAgdGhpcy5fc2NhcmUgLT0gTGF5YS50aW1lci5kZWx0YSAvIHRoaXMuZWZmZWNUaW1lO1xuICAgICAgICAgICAgdGhpcy5fb3duZXJTcC5zY2FsZVggPSB0aGlzLl9zY2FyZVxuICAgICAgICAgICAgdGhpcy5fb3duZXJTcC5zY2FsZVkgPSB0aGlzLl9zY2FyZVxuICAgICAgICAgICAgdGhpcy5fb3duZXJTcC5hbHBoYSA9IHRoaXMuX3NjYXJlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5vd25lci5yZW1vdmVTZWxmKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgb25EaXNhYmxlKCk6IHZvaWQge1xuICAgICAgICAvL+aViOaenO+8jOWbnuaUtuaViOaenOWvueixoeaxoO+8jOaWueS+v+S4i+asoeWkjeeUqO+8jOWHj+WwkeWvueixoeWIm+W7uuW8gOmUgFxuICAgICAgICB0aGlzLl9pc1NjYXJlID0gZmFsc2U7XG4gICAgICAgIExheWEuUG9vbC5yZWNvdmVyKFwidG91Y2hFZmZlY3RcIiwgdGhpcy5vd25lcik7XG4gICAgfVxufSIsImltcG9ydCBLUlFfQ29tQmFzZSBmcm9tIFwiLi9LUlFfQ29tQmFzZVwiO1xuaW1wb3J0IElWaWV3U3RhdGVMaXN0ZW5lciBmcm9tIFwiLi4vLi4vVmlldy9JVmlld1N0YXRlTGlzdGVuZXJcIjtcbmltcG9ydCBXWEFQSSBmcm9tIFwiLi4vLi4vV1hBUElcIjtcbmltcG9ydCBBcHBTd2l0Y2hDb25maWcgZnJvbSBcIi4uLy4uL0NvbmZpZy9BcHBTd2l0Y2hDb25maWdcIjtcbmltcG9ydCBTaGFyZUFkIGZyb20gXCIuLi8uLi9TaGFyZUFkL1NoYXJlQWRcIjtcbmltcG9ydCBRUU1pbmlHYW1lQVBJIGZyb20gXCIuLi8uLi9RUU1pbmlHYW1lQVBJXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEtSUV9CYW5uZXIgZXh0ZW5kcyBLUlFfQ29tQmFzZSBpbXBsZW1lbnRzIElWaWV3U3RhdGVMaXN0ZW5lclxue1xuICAgIHB1YmxpYyBnZXQgQ2xpcCgpXG4gICAge1xuICAgICAgICByZXR1cm4gdGhpcy5vd25lciBhcyBMYXlhLkNsaXA7XG4gICAgfVxuICAgIHByb3RlY3RlZCBfd3hCYW5uZXIgOiBhbnkgPSBudWxsO1xuXG4gICAgcHJvdGVjdGVkIF9vbkxvYWQgOiBGdW5jdGlvbiA9IG51bGw7XG4gICAgcHJvdGVjdGVkIF9vbkVycm9yIDogRnVuY3Rpb24gPSBudWxsO1xuICAgIHByb3RlY3RlZCBfb25SZXNpemUgOiBGdW5jdGlvbiA9IG51bGw7XG5cbiAgICBvbkF3YWtlKClcbiAgICB7XG4gICAgICAgIHRoaXMuQWRQb3NJRCA9IFNoYXJlQWQuQmFubmVyQWRMb2NhdGlvbklEO1xuICAgIH1cblxuICAgIG9uU3RhcnQoKVxuICAgIHtcbiAgICAgICAgdGhpcy5yZWZyZXNoKCk7XG4gICAgfVxuXG4gICAgb25FbmFibGUoKVxuICAgIHtcbiAgICAgICAgdGhpcy5TcHJpdGUub24oTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25DbGlja0FkKVxuICAgIH1cblxuICAgIG9uRGlzYWJsZSgpXG4gICAge1xuICAgICAgICB0aGlzLlNwcml0ZS5vZmYoTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25DbGlja0FkKVxuICAgIH1cblxuICAgIHByb3RlY3RlZCBvbkNsaWNrQWQoKVxuICAgIHtcbiAgICAgICAgdGhpcy5uYXZpZ2F0ZVRvTWluaVByb2dyYW0oKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgcmVmcmVzaChvbkNvbXBsYXRlPyA6IEZ1bmN0aW9uKVxuICAgIHtcbiAgICAgICAgbGV0IGJhbm5lciA9IEFwcFN3aXRjaENvbmZpZy5nZXRJbnN0YW5jZSgpLmdldEFwcFN3aXRjaERhdGEoKS5iYW5uZXI7XG4gICAgICAgIGlmICgxID09IGJhbm5lcilcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5yZWZyZXNoV1hCYW5uZXIoKTtcbiAgICAgICAgICAgIGxldCBiYW5uZXJSZWNyZWF0ZVRpbWUgPSBBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkuYmFubmVyUmVjcmVhdGVUaW1lO1xuICAgICAgICAgICAgTGF5YS50aW1lci5sb29wKGJhbm5lclJlY3JlYXRlVGltZSAqIDEwMDAsdGhpcyx0aGlzLnJlZnJlc2hXWEJhbm5lcik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLnJlZnJlc2hCYW5uZXIoKTtcbiAgICAgICAgICAgIGxldCBiYW5uZXJSZWNyZWF0ZVRpbWUgPSBBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkuYmFubmVyUmVjcmVhdGVUaW1lO1xuICAgICAgICAgICAgTGF5YS50aW1lci5sb29wKGJhbm5lclJlY3JlYXRlVGltZSAqIDEwMDAsdGhpcyx0aGlzLnJlZnJlc2hCYW5uZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIHJlZnJlc2hCYW5uZXIoKVxuICAgIHsgICAgICAgIFxuICAgICAgICBpZihudWxsID09IHRoaXMuU3ByaXRlIHx8ICF0aGlzLlNwcml0ZS52aXNpYmxlKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBzdXBlci5yZWZyZXNoKCgpID0+ICB7XG4gICAgICAgICAgICBpZihudWxsICE9IHRoaXMuX2RhdGEpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xuICAgICAgICAgICAgICAgIHRoaXMuU3ByaXRlLmxvYWRJbWFnZSh0aGlzLl9kYXRhLmxvZ28sTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLGZ1bmN0aW9uKClcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGlmKG51bGwgIT0gc2VsZi5TcHJpdGUgJiYgIXNlbGYuU3ByaXRlLmRlc3Ryb3llZClcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5TcHJpdGUud2lkdGggPSA2MDA7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLlNwcml0ZS5oZWlnaHQgPSAyMDU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIHJlZnJlc2hXWEJhbm5lcigpXG4gICAge1xuICAgICAgICBpZigoIUxheWEuQnJvd3Nlci5vbk1pbmlHYW1lICYmICFMYXlhLkJyb3dzZXIub25RUU1pbmlHYW1lKSB8fCBudWxsID09IHRoaXMuU3ByaXRlIHx8ICF0aGlzLlNwcml0ZS52aXNpYmxlKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB0aGlzLmNsZWFyV1hCYW5lcigpO1xuICAgICAgICBsZXQgc2VsZiA9IHRoaXM7XG4gICAgICAgIGxldCBzeXNJbmZvID0gbnVsbDtcbiAgICAgICAgaWYoTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHN5c0luZm8gPSBMYXlhLkJyb3dzZXIud2luZG93W1wid3hcIl0uZ2V0U3lzdGVtSW5mb1N5bmMoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChMYXlhLkJyb3dzZXIub25RUU1pbmlHYW1lKVxuICAgICAgICB7XG4gICAgICAgICAgICBzeXNJbmZvID0gTGF5YS5Ccm93c2VyLndpbmRvd1tcInFxXCJdLmdldFN5c3RlbUluZm9TeW5jKCk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHN3ID0gc3lzSW5mby5zY3JlZW5XaWR0aDtcbiAgICAgICAgbGV0IHNoID0gc3lzSW5mby5zY3JlZW5IZWlnaHQ7XG4gICAgICAgIGxldCBwb3MgPSB0aGlzLlNwcml0ZS5sb2NhbFRvR2xvYmFsKG5ldyBMYXlhLlBvaW50KDAsMCkpXG4gICAgICAgIGxldCB3aWR0aCA9IDMwMDtcbiAgICAgICAgbGV0IHNjYWxlID0gc2VsZi5TcHJpdGUud2lkdGggLyBMYXlhLnN0YWdlLndpZHRoO1xuICAgICAgICBsZXQgcmVhbFdpZHRoID0gc3cgKiBzY2FsZTtcbiAgICAgICAgbGV0IG9mZnNldCA9IChyZWFsV2lkdGggLSB3aWR0aCkgLyAyO1xuICAgICAgICBsZXQgbGVmdCA9IHBvcy54IC8gTGF5YS5zdGFnZS53aWR0aCAqIHN3ICsgb2Zmc2V0O1xuICAgICAgICBsZXQgdG9wID0gcG9zLnkgLyBMYXlhLnN0YWdlLmhlaWdodCAqIHNoO1xuXG4gICAgICAgIGlmKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lKVxuICAgICAgICB7XG4gICAgICAgICAgICBsZXQgcmVjcmVhdGVCYW5uZXJJRExpc3QgPSBBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkucmVjcmVhdGVCYW5uZXJJRExpc3RcbiAgICAgICAgICAgIGxldCBiYW5uZXJBZFVuaXRJZCA9IHJlY3JlYXRlQmFubmVySURMaXN0XG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcmVjcmVhdGVCYW5uZXJJRExpc3QubGVuZ3RoKVxuICAgICAgICAgICAgXVxuICAgICAgICAgICAgaWYobnVsbCA9PSBiYW5uZXJBZFVuaXRJZClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBiYW5uZXJBZFVuaXRJZCA9IFdYQVBJLmJhbm5lckFkVW5pdElkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fd3hCYW5uZXIgPSBMYXlhLkJyb3dzZXIud2luZG93W1wid3hcIl0uY3JlYXRlQmFubmVyQWQoXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBhZFVuaXRJZCA6IGJhbm5lckFkVW5pdElkLFxuICAgICAgICAgICAgICAgICAgICBhZEludGVydmFscyA6IDMwLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZSA6IFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OmxlZnQsXG4gICAgICAgICAgICAgICAgICAgICAgICB0b3A6dG9wLFxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IHdpZHRoLFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIGlmKG51bGwgIT0gc2VsZi5fd3hCYW5uZXIpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VsZi5fd3hCYW5uZXIub25Mb2FkKChyZXMpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJLUlEgIFdYQmFubmVy5bm/5ZGKIOWKoOi9veWujOaIkCA6IFwiLCBiYW5uZXJBZFVuaXRJZCk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuX3d4QmFubmVyLnNob3coKTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIHNlbGYuX3d4QmFubmVyLm9uRXJyb3IoKGVycikgPT4gIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJLUlEgV1hCYW5uZXLlub/lkYog5Yqg6L295aSx6LSlIDogXCIsIGJhbm5lckFkVW5pdElkKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5yZWZyZXNoQmFubmVyKCk7XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY2xlYXJXWEJhbmVyKCk7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICBzZWxmLl93eEJhbm5lci5vblJlc2l6ZShyZXMgPT4ge1xuICAgICAgICBcbiAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VsZi5yZWZyZXNoQmFubmVyKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZihMYXlhLkJyb3dzZXIub25RUU1pbmlHYW1lKVxuICAgICAgICB7XG4gICAgICAgICAgICBsZXQgcmVjcmVhdGVCYW5uZXJJRExpc3QgPSBBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkucmVjcmVhdGVCYW5uZXJJRExpc3RcbiAgICAgICAgICAgIGxldCBiYW5uZXJBZFVuaXRJZCA9IHJlY3JlYXRlQmFubmVySURMaXN0XG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcmVjcmVhdGVCYW5uZXJJRExpc3QubGVuZ3RoKVxuICAgICAgICAgICAgXVxuICAgICAgICAgICAgaWYobnVsbCA9PSBiYW5uZXJBZFVuaXRJZClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBiYW5uZXJBZFVuaXRJZCA9IFFRTWluaUdhbWVBUEkuYmFubmVyQWRVbml0SWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZWxmLl93eEJhbm5lciA9IExheWEuQnJvd3Nlci53aW5kb3dbXCJxcVwiXS5jcmVhdGVCYW5uZXJBZChcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGFkVW5pdElkOiBiYW5uZXJBZFVuaXRJZCxcbiAgICAgICAgICAgICAgICAgICAgYWRJbnRlcnZhbHM6IDMwLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTpcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiBsZWZ0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogdG9wLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiB3aWR0aCxcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgaWYgKG51bGwgIT0gc2VsZi5fd3hCYW5uZXIpICB7XG4gICAgICAgICAgICAgICAgc2VsZi5fb25Mb2FkID0gKHJlcykgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIktSUSAgUVFCYW5uZXLlub/lkYog5Yqg6L295a6M5oiQIDogXCIsIGJhbm5lckFkVW5pdElkKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKTtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5fd3hCYW5uZXIuc2hvdygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBzZWxmLl93eEJhbm5lci5vbkxvYWQoc2VsZi5fb25Mb2FkKTtcbiAgICAgICAgICAgICAgICBzZWxmLl9vbkVycm9yID0gKGVycikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIktSUSBRUUJhbm5lcuW5v+WRiiDliqDovb3lpLHotKUgOiBcIiwgYmFubmVyQWRVbml0SWQpO1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICAgICAgICAgICAgICBzZWxmLnJlZnJlc2hCYW5uZXIoKTtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jbGVhcldYQmFuZXIoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc2VsZi5fd3hCYW5uZXIub25FcnJvcihzZWxmLl9vbkVycm9yKTtcbiAgICAgICAgICAgICAgICBzZWxmLl9vblJlc2l6ZSA9IChyZXMpID0+IHtcblxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBzZWxmLl93eEJhbm5lci5vblJlc2l6ZShzZWxmLl9vblJlc2l6ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlICB7XG4gICAgICAgICAgICAgICAgc2VsZi5yZWZyZXNoQmFubmVyKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgcHJvdGVjdGVkIGNsZWFyV1hCYW5lcigpXG4gICAge1xuICAgICAgICBpZih0aGlzLl93eEJhbm5lcilcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5fd3hCYW5uZXIub2ZmTG9hZCh0aGlzLl9vbkxvYWQpO1xuICAgICAgICAgICAgdGhpcy5fd3hCYW5uZXIub2ZmRXJyb3IodGhpcy5fb25FcnJvcik7XG4gICAgICAgICAgICB0aGlzLl93eEJhbm5lci5vZmZSZXNpemUodGhpcy5fb25SZXNpemUpO1xuICAgICAgICAgICAgdGhpcy5fd3hCYW5uZXIuZGVzdHJveSgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3d4QmFubmVyID0gbnVsbDtcbiAgICB9XG5cbiAgICBwdWJsaWMgb25WaWV3U2hvdygpXG4gICAge1xuICAgICAgICBsZXQgYmFubmVyID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLmJhbm5lcjtcbiAgICAgICAgaWYgKDEgPT0gYmFubmVyKVxuICAgICAgICB7XG4gICAgICAgICAgICBpZihudWxsID09IHRoaXMuX3d4QmFubmVyKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRoaXMucmVmcmVzaFdYQmFubmVyKCk7XG4gICAgICAgICAgICAgICAgbGV0IGJhbm5lclJlY3JlYXRlVGltZSA9IEFwcFN3aXRjaENvbmZpZy5nZXRJbnN0YW5jZSgpLmdldEFwcFN3aXRjaERhdGEoKS5iYW5uZXJSZWNyZWF0ZVRpbWU7XG4gICAgICAgICAgICAgICAgTGF5YS50aW1lci5sb29wKGJhbm5lclJlY3JlYXRlVGltZSAqIDEwMDAsdGhpcyx0aGlzLnJlZnJlc2hXWEJhbm5lcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLnJlZnJlc2hCYW5uZXIoKTtcbiAgICAgICAgICAgIGxldCBiYW5uZXJSZWNyZWF0ZVRpbWUgPSBBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkuYmFubmVyUmVjcmVhdGVUaW1lO1xuICAgICAgICAgICAgTGF5YS50aW1lci5sb29wKGJhbm5lclJlY3JlYXRlVGltZSAqIDEwMDAsdGhpcyx0aGlzLnJlZnJlc2hCYW5uZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIG9uVmlld0hpZGUoKVxuICAgIHtcbiAgICAgICAgdGhpcy5jbGVhcldYQmFuZXIoKTtcbiAgICAgICAgTGF5YS50aW1lci5jbGVhckFsbCh0aGlzKTtcbiAgICB9XG5cbiAgICBvbkRlc3Ryb3koKVxuICAgIHtcbiAgICAgICAgdGhpcy5jbGVhcldYQmFuZXIoKTtcbiAgICAgICAgTGF5YS50aW1lci5jbGVhckFsbCh0aGlzKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2hvdygpXG4gICAge1xuICAgICAgICBzdXBlci5zaG93KCk7XG4gICAgICAgIHRoaXMub25WaWV3U2hvdygpO1xuICAgIH1cblxuICAgIHB1YmxpYyBoaWRlKClcbiAgICB7XG4gICAgICAgIHN1cGVyLmhpZGUoKTtcbiAgICAgICAgdGhpcy5vblZpZXdIaWRlKCk7XG4gICAgfVxufVxuXG4iLCJpbXBvcnQgV1hBUEkgZnJvbSBcIi4uLy4uL1dYQVBJXCI7XG5pbXBvcnQgU2hhcmVBZCBmcm9tIFwiLi4vLi4vU2hhcmVBZC9TaGFyZUFkXCI7XG5pbXBvcnQgQUxEIGZyb20gXCIuLi8uLi9BTERcIjtcbmltcG9ydCBFdmVudE1nciBmcm9tIFwiLi4vLi4vRXZlbnQvRXZlbnRNZ3JcIjtcbmltcG9ydCB7IEV2ZW50RGVmIH0gZnJvbSBcIi4uLy4uL0V2ZW50L0V2ZW50RGVmXCI7XG5pbXBvcnQgT1BQT0FQSSBmcm9tIFwiLi4vLi4vT1BQT0FQSVwiO1xuaW1wb3J0IFFRTWluaUdhbWVBUEkgZnJvbSBcIi4uLy4uL1FRTWluaUdhbWVBUElcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgS1JRX0NvbUJhc2UgZXh0ZW5kcyBMYXlhLlNjcmlwdCBcbntcbiAgICBwdWJsaWMgQWRQb3NJRCA6IG51bWJlciA9IC0xMDA4NjtcblxuICAgIHB1YmxpYyBnZXQgU3ByaXRlKClcbiAgICB7XG4gICAgICAgIHJldHVybiB0aGlzLm93bmVyIGFzIExheWEuU3ByaXRlO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZGF0YXMgOiBBcnJheTxhbnk+ID0gW107XG5cbiAgICBwdWJsaWMgZ2V0IERhdGEoKVxuICAgIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2RhdGE7XG4gICAgfVxuICAgIHByb3RlY3RlZCBfZGF0YSA6IGFueSA9IG51bGw7XG5cbiAgICBwdWJsaWMgcmVmcmVzaChvbkNvbXBsYXRlPyA6IEZ1bmN0aW9uKVxuICAgIHtcbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xuICAgICAgICBTaGFyZUFkLmdldEFEVnModGhpcy5BZFBvc0lELChkYXRhcyk9PlxuICAgICAgICB7XG4gICAgICAgICAgICBpZihudWxsICE9IGRhdGFzKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlbGYuX2RhdGFzID0gZGF0YXM7XG4gICAgICAgICAgICAgICAgc2VsZi5fZGF0YSA9IHNlbGYuX2RhdGFzW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGRhdGFzLmxlbmd0aCldO1xuICAgICAgICAgICAgICAgIGlmKG51bGwgIT0gb25Db21wbGF0ZSlcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG9uQ29tcGxhdGUoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sZmFsc2UpXG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG5hdmlnYXRlVG9NaW5pUHJvZ3JhbShkPyA6IGFueSlcbiAgICB7XG4gICAgICAgIHZhciBkYXRhID0gbnVsbCA9PSBkID8gdGhpcy5fZGF0YSA6IGQ7XG4gICAgICAgIGlmKGRhdGEpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi6Lez6L2s5ri45oiP77yaIFwiICsgZGF0YS50aXRsZSk7XG4gICAgICAgICAgICBpZihMYXlhLkJyb3dzZXIub25NaW5pR2FtZSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBXWEFQSS5uYXZpZ2F0ZVRvTWluaVByb2dyYW0oZGF0YS5hcHBpZCxkYXRhLnVybCwocmVzKT0+XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIui3s+i9rOaIkOWKn1wiKVxuICAgICAgICAgICAgICAgICAgICBTaGFyZUFkLnJlcG9ydFVzZXJDbGljayhkYXRhLmFwcGlkKTtcbiAgICAgICAgICAgICAgICAgICAgQUxELmFsZFNlbmRSZXBvcnRBZENsaWNrU3VjY2VzcyhkYXRhKTtcbiAgICAgICAgICAgICAgICB9LChyZXMpPT5cbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi6Lez6L2s5aSx6LSlXCIpXG4gICAgICAgICAgICAgICAgICAgIEV2ZW50TWdyLmluc3RhbmNlLmRpc3BhdGNoKEV2ZW50RGVmLkFEX09uU2hhcmVBZEZhaWwpO1xuICAgICAgICAgICAgICAgICAgICBpZihyZXMuZXJyTXNnID09IFwibmF2aWdhdGVUb01pbmlQcm9ncmFtOmZhaWwgY2FuY2VsXCIpXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi55So5oi35Y+W5raI6Lez6L2sXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgQUxELmFsZFNlbmRSZXBvcnRBZENsaWNrRmFpbChkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sKHJlcyk9PlxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLot7PovazlrozmiJBcIilcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKExheWEuQnJvd3Nlci5vblFHTWluaUdhbWUpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgT1BQT0FQSS5uYXZpZ2F0ZVRvTWluaVByb2dyYW0oZGF0YS5hcHBpZCxkYXRhLnRpdGxlLGRhdGEudXJsLChyZXMpPT5cbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi6Lez6L2s5oiQ5YqfXCIpXG4gICAgICAgICAgICAgICAgICAgIFNoYXJlQWQucmVwb3J0VXNlckNsaWNrKGRhdGEuYXBwaWQpO1xuICAgICAgICAgICAgICAgIH0sKHJlcyk9PlxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLot7PovazlpLHotKVcIilcbiAgICAgICAgICAgICAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UuZGlzcGF0Y2goRXZlbnREZWYuQURfT25TaGFyZUFkRmFpbCk7XG4gICAgICAgICAgICAgICAgfSwocmVzKT0+XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIui3s+i9rOWujOaIkFwiKVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoTGF5YS5Ccm93c2VyLm9uUVFNaW5pR2FtZSkgIC8vcXHlsI/muLjmiI9cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBRUU1pbmlHYW1lQVBJLm5hdmlnYXRlVG9NaW5pUHJvZ3JhbShkYXRhLmFwcGlkLGRhdGEudXJsLChyZXMpPT5cbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi6Lez6L2s5oiQ5YqfXCIpXG4gICAgICAgICAgICAgICAgICAgIFNoYXJlQWQucmVwb3J0VXNlckNsaWNrKGRhdGEuYXBwaWQpO1xuICAgICAgICAgICAgICAgIH0sKHJlcyk9PlxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLot7PovazlpLHotKVcIilcbiAgICAgICAgICAgICAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UuZGlzcGF0Y2goRXZlbnREZWYuQURfT25TaGFyZUFkRmFpbCk7XG4gICAgICAgICAgICAgICAgfSwocmVzKT0+XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIui3s+i9rOWujOaIkFwiKVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgXG4gICAgcHVibGljIHNob3coKVxuICAgIHtcbiAgICAgICAgdGhpcy5TcHJpdGUudmlzaWJsZSA9IHRydWU7XG4gICAgfVxuXG4gICAgcHVibGljIGhpZGUoKVxuICAgIHtcbiAgICAgICAgdGhpcy5TcHJpdGUudmlzaWJsZSA9IGZhbHNlO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBhdXRvU2Nyb2xsVGV4dCh0ZXh0IDogTGF5YS5UZXh0KVxuICAgIHtcbiAgICAgICAgaWYodGV4dC5vdmVyZmxvdyAhPSBMYXlhLlRleHQuU0NST0xMKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBsZXQgZm9yd2FyZCA6IGJvb2xlYW4gPSB0cnVlO1xuICAgICAgICBsZXQgZGVsdGFEaXMgOiBudW1iZXIgPSAwO1xuICAgICAgICBMYXlhLnRpbWVyLmZyYW1lTG9vcCgxLHRleHQsKCk9PlxuICAgICAgICB7XG4gICAgICAgICAgICBsZXQgZCA9IExheWEudGltZXIuZGVsdGEgLyAxMDAwICogMTA7XG4gICAgICAgICAgICBkZWx0YURpcyArPSBkO1xuICAgICAgICAgICAgaWYoZGVsdGFEaXMgPj0gdGV4dC50ZXh0V2lkdGggLyAyKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGZvcndhcmQgPSAhZm9yd2FyZDtcbiAgICAgICAgICAgICAgICBkZWx0YURpcyA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZihmb3J3YXJkKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRleHQuc2Nyb2xsWCArPSBkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRleHQuc2Nyb2xsWCAtPSBkO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cbn0iLCJpbXBvcnQgS1JRX0Jhbm5lciBmcm9tIFwiLi9LUlFfQmFubmVyXCI7XG5pbXBvcnQgV1hBUEkgZnJvbSBcIi4uLy4uL1dYQVBJXCI7XG5pbXBvcnQgUVFNaW5pR2FtZUFQSSBmcm9tIFwiLi4vLi4vUVFNaW5pR2FtZUFQSVwiO1xuaW1wb3J0IEFwcFN3aXRjaENvbmZpZyBmcm9tIFwiLi4vLi4vQ29uZmlnL0FwcFN3aXRjaENvbmZpZ1wiO1xuaW1wb3J0IFd1ZGlhbk1nciBmcm9tIFwiLi4vLi4vTWdyL1d1ZGlhbk1nclwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBLUlFfR2FtaW5nQmFubmVyIGV4dGVuZHMgS1JRX0Jhbm5lclxue1xuICAgIHB1YmxpYyByZWZyZXNoKG9uQ29tcGxhdGU/IDogRnVuY3Rpb24pXG4gICAge1xuICAgICAgICBsZXQgbGF1bmNoU2NlbmUgPSBudWxsO1xuICAgICAgICBpZihMYXlhLkJyb3dzZXIub25NaW5pR2FtZSlcbiAgICAgICAge1xuICAgICAgICAgICAgbGF1bmNoU2NlbmUgPSBXWEFQSS5nZXRMYXVuY2hPcHRpb25zU3luYygpLnNjZW5lO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYoTGF5YS5Ccm93c2VyLm9uUVFNaW5pR2FtZSlcbiAgICAgICAge1xuICAgICAgICAgICAgbGF1bmNoU2NlbmUgPSBRUU1pbmlHYW1lQVBJLmdldExhdW5jaE9wdGlvbnNTeW5jKCkuc2NlbmU7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IG5vRW50ZXJCeVNlYXJjaDogYm9vbGVhbiA9IHRydWU7XG4gICAgICAgIGxldCB3dWRpYW5TY2VuZUxpc3QgPSBBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkud3VkaWFuU2NlbmVMaXN0O1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHd1ZGlhblNjZW5lTGlzdC5sZW5ndGg7ICsraSkgIFxuICAgICAgICB7XG4gICAgICAgICAgICBsZXQgd3VkaWFuU2NlbmVWYWx1ZSA9IHd1ZGlhblNjZW5lTGlzdFtpXTtcbiAgICAgICAgICAgIGlmKGxhdW5jaFNjZW5lID09IHd1ZGlhblNjZW5lVmFsdWUpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbm9FbnRlckJ5U2VhcmNoID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGlwQmxvY2tlZCA9IFd1ZGlhbk1nci5HZXRJcEJsb2NrZWQoKTtcbiAgICAgICAgaWYoIWlwQmxvY2tlZCB8fCAhbm9FbnRlckJ5U2VhcmNoKVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLlNwcml0ZS52aXNpYmxlID0gZmFsc2U7XG4gICAgICAgICAgICBpZihudWxsICE9IG9uQ29tcGxhdGUpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb25Db21wbGF0ZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGxldCBiYW5uZXIgPSBBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkuYmFubmVyO1xuICAgICAgICBpZiAoMSA9PSBiYW5uZXIpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMucmVmcmVzaFdYQmFubmVyKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZVxuICAgICAgICB7XG4gICAgICAgICAgICBzdXBlci5yZWZyZXNoKCgpPT5cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aGlzLnJlZnJlc2hCYW5uZXIoKTtcbiAgICAgICAgICAgICAgICBpZihudWxsICE9IG9uQ29tcGxhdGUpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBvbkNvbXBsYXRlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH1cbn0iLCJpbXBvcnQgS1JRX0hpc3RvcnlCb3ggZnJvbSBcIi4vS1JRX0hpc3RvcnlCb3hcIjtcbmltcG9ydCBLUlFfQ29tQmFzZSBmcm9tIFwiLi4vS1JRX0NvbUJhc2VcIjtcbmltcG9ydCBTaGFyZUFkIGZyb20gXCIuLi8uLi8uLi9TaGFyZUFkL1NoYXJlQWRcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgS1JRX0hpc3RvcnkgZXh0ZW5kcyBLUlFfQ29tQmFzZVxue1xuICAgIHB1YmxpYyBPbkJhY2tCdG5DbGljayA6IEZ1bmN0aW9uID0gbnVsbDtcblxuICAgIHByb3RlY3RlZCBfdG9wWm9uZSA6IExheWEuQ2xpcCA9IG51bGw7XG4gICAgcHJvdGVjdGVkIF9iYWNrQnRuIDogTGF5YS5TcHJpdGUgPSBudWxsO1xuICAgIHByb3RlY3RlZCBfbGlzdCA6IExheWEuTGlzdDtcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgX3N0YXJ0TGlzdCA6IEFycmF5PGJvb2xlYW4+ID0gbmV3IEFycmF5PGJvb2xlYW4+KCk7XG4gICAgXG4gICAgb25Bd2FrZSgpXG4gICAge1xuICAgICAgICB0aGlzLkFkUG9zSUQgPSBTaGFyZUFkLkhpc3RvcnlMb2NhdGlvbklEO1xuXG4gICAgICAgIHRoaXMuX3RvcFpvbmUgPSB0aGlzLlNwcml0ZS5nZXRDaGlsZEJ5TmFtZShcIlRvcFpvbmVcIikgYXMgTGF5YS5DbGlwO1xuICAgICAgICB0aGlzLl9iYWNrQnRuID0gdGhpcy5fdG9wWm9uZS5nZXRDaGlsZEJ5TmFtZShcIkJhY2tCdG5cIikgYXMgTGF5YS5TcHJpdGU7XG5cbiAgICAgICAgdGhpcy5fbGlzdCA9IHRoaXMuU3ByaXRlLmdldENoaWxkQnlOYW1lKFwiTGlzdFwiKSBhcyBMYXlhLkxpc3Q7XG4gICAgICAgIHRoaXMuX2xpc3QucmVuZGVySGFuZGxlciA9IExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5vbkxpc3RSZW5kZXIsIG51bGwsIGZhbHNlKTtcbiAgICAgICAgdGhpcy5fbGlzdC52U2Nyb2xsQmFyU2tpbiA9IFwiXCI7XG4gICAgfSAgIFxuXG4gICAgb25TdGFydCgpXG4gICAge1xuICAgICAgICB0aGlzLnJlZnJlc2goKTtcbiAgICB9XG5cbiAgICBvbkVuYWJsZSgpXG4gICAge1xuICAgICAgICB0aGlzLl9iYWNrQnRuLm9uKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uQmFja0J0bik7XG4gICAgfVxuXG4gICAgb25EaXNhYmxlKClcbiAgICB7XG4gICAgICAgIHRoaXMuX2JhY2tCdG4ub2ZmKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uQmFja0J0bik7XG4gICAgfVxuXG4gICAgcHVibGljIHJlZnJlc2gob25Db21wbGF0ZT8gOiBGdW5jdGlvbilcbiAgICB7XG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcbiAgICAgICAgU2hhcmVBZC5nZXRBRFZzKHRoaXMuQWRQb3NJRCwoZGF0YXMpPT5cbiAgICAgICAge1xuICAgICAgICAgICAgaWYobnVsbCAhPSBkYXRhcylcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzZWxmLl9kYXRhcyA9IGRhdGFzO1xuICAgICAgICAgICAgICAgIHNlbGYuX3N0YXJ0TGlzdC5zcGxpY2UoMCk7XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPHNlbGYuX2RhdGFzLmxlbmd0aDsgKytpKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5fc3RhcnRMaXN0LnB1c2goZmFsc2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBsZXQgbnVtID0gTWF0aC5mbG9vcihzZWxmLl9zdGFydExpc3QubGVuZ3RoICogMC4zMyk7XG4gICAgICAgICAgICAgICAgd2hpbGUobnVtID4gMClcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGxldCBpbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHNlbGYuX3N0YXJ0TGlzdC5sZW5ndGgpO1xuICAgICAgICAgICAgICAgICAgICBpZihmYWxzZSA9PSBzZWxmLl9zdGFydExpc3RbaW5kZXhdKVxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLl9zdGFydExpc3RbaW5kZXhdID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC0tbnVtO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHNlbGYuX2xpc3QuYXJyYXkgPSBzZWxmLl9kYXRhcztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxmYWxzZSkgICAgICAgIFxuICAgIH1cblxuICAgIHByb3RlY3RlZCBvbkxpc3RSZW5kZXIoY2VsbDogTGF5YS5Cb3gsIGluZGV4OiBudW1iZXIpOiB2b2lkIFxuICAgIHtcbiAgICAgICAgbGV0IGRhdGEgPSB0aGlzLl9saXN0LmFycmF5W2luZGV4XTtcbiAgICAgICAgbGV0IHN0YXIgPSB0aGlzLl9zdGFydExpc3RbaW5kZXhdO1xuICAgICAgICBsZXQgaGlzdG9yeUJveCA6IEtSUV9IaXN0b3J5Qm94ID0gY2VsbC5nZXRDb21wb25lbnQoS1JRX0hpc3RvcnlCb3gpO1xuICAgICAgICBoaXN0b3J5Qm94LnNldERhdGEoZGF0YSxzdGFyKTtcbiAgICB9XG4gICAgXG4gICAgcHJvdGVjdGVkIG9uQmFja0J0bigpXG4gICAge1xuICAgICAgICB0aGlzLmhpZGUoKTtcbiAgICAgICAgaWYobnVsbCAhPSB0aGlzLk9uQmFja0J0bkNsaWNrKVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLk9uQmFja0J0bkNsaWNrKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgc2hvdygpXG4gICAge1xuICAgICAgICBzdXBlci5zaG93KCk7XG4gICAgICAgIHRoaXMucmVmcmVzaCgpO1xuICAgIH1cbn0iLCJpbXBvcnQgS1JRX0NvbUJhc2UgZnJvbSBcIi4uLy4uL0NvbS9LUlFfQ29tQmFzZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBLUlFfSGlzdG9yeUJveCBleHRlbmRzIEtSUV9Db21CYXNlXG57XG4gICAgcHJvdGVjdGVkIF9pY29uIDogTGF5YS5TcHJpdGUgPSBudWxsO1xuICAgIHByb3RlY3RlZCBfdGV4dCA6IExheWEuVGV4dCA9IG51bGw7XG4gICAgcHJvdGVjdGVkIF9tYXJrIDogTGF5YS5TcHJpdGUgPSBudWxsO1xuXG4gICAgb25Bd2FrZSgpXG4gICAge1xuICAgICAgICB0aGlzLl9pY29uID0gdGhpcy5TcHJpdGUuZ2V0Q2hpbGRCeU5hbWUoXCJJY29uXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl90ZXh0ID0gdGhpcy5TcHJpdGUuZ2V0Q2hpbGRCeU5hbWUoXCJUZXh0XCIpIGFzIExheWEuVGV4dDtcbiAgICAgICAgdGhpcy5fdGV4dC5vdmVyZmxvdyA9IExheWEuVGV4dC5TQ1JPTEw7XG4gICAgICAgIHRoaXMuX3RleHQudGV4dCA9IFwiXCI7XG4gICAgICAgIHRoaXMuX21hcmsgPSB0aGlzLlNwcml0ZS5nZXRDaGlsZEJ5TmFtZShcIk1hcmtcIikgYXMgTGF5YS5UZXh0O1xuICAgICAgICB0aGlzLl9tYXJrLnZpc2libGUgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBvblN0YXJ0KClcbiAgICB7XG4gICAgICAgIHRoaXMuYXV0b1Njcm9sbFRleHQodGhpcy5fdGV4dCk7XG4gICAgfVxuXG4gICAgb25FbmFibGUoKVxuICAgIHtcbiAgICAgICAgdGhpcy5TcHJpdGUub24oTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25DbGlja0FkKVxuICAgIH1cblxuICAgIG9uRGlzYWJsZSgpXG4gICAge1xuICAgICAgICB0aGlzLlNwcml0ZS5vZmYoTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25DbGlja0FkKVxuICAgIH1cblxuICAgIHByb3RlY3RlZCBvbkNsaWNrQWQoKVxuICAgIHtcbiAgICAgICAgdGhpcy5uYXZpZ2F0ZVRvTWluaVByb2dyYW0oKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2V0RGF0YShkYXRhLHN0YXIgOiBib29sZWFuKVxuICAgIHtcbiAgICAgICAgdGhpcy5fZGF0YSA9IGRhdGE7XG4gICAgICAgIGlmKG51bGwgIT0gdGhpcy5fZGF0YSlcbiAgICAgICAge1xuICAgICAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICAgICAgdGhpcy5faWNvbi5sb2FkSW1hZ2UodGhpcy5fZGF0YS5sb2dvLExheWEuSGFuZGxlci5jcmVhdGUodGhpcyxmdW5jdGlvbigpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaWYoIXNlbGYuX2ljb24uZGVzdHJveWVkKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5faWNvbi53aWR0aCA9IDEwMDtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5faWNvbi5oZWlnaHQgPSAxMDA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgdmFyIHN0ciA9IFN0cmluZyh0aGlzLl9kYXRhLnRpdGxlKTtcbiAgICAgICAgICAgIHRoaXMuX3RleHQudGV4dCA9IHN0cjtcbiAgICAgICAgICAgIHRoaXMuX21hcmsudmlzaWJsZSA9IHN0YXI7XG4gICAgICAgIH1cbiAgICB9XG59IiwiaW1wb3J0IEtSUV9Db21CYXNlIGZyb20gXCIuLi9LUlFfQ29tQmFzZVwiO1xuaW1wb3J0IEtSUV9Mb29wQWRCb3ggZnJvbSBcIi4vS1JRX0xvb3BBZEJveFwiO1xuaW1wb3J0IFNoYXJlQWQgZnJvbSBcIi4uLy4uLy4uL1NoYXJlQWQvU2hhcmVBZFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBLUlFfSExvb3BBZCBleHRlbmRzIEtSUV9Db21CYXNlIFxue1xuICAgIHB1YmxpYyBnZXQgQ2xpcCgpXG4gICAge1xuICAgICAgICByZXR1cm4gdGhpcy5vd25lciBhcyBMYXlhLkNsaXA7XG4gICAgfVxuXG4gICAgcHVibGljIGlzRW5hYmxlIDogYm9vbGVhbiA9IHRydWU7XG4gICAgcHVibGljIHVzZU1vdmVQYXVzZSA6IGJvb2xlYW4gPSB0cnVlO1xuXG4gICAgcHJvdGVjdGVkIF9saXN0OiBMYXlhLkxpc3Q7XG4gICAgcHJvdGVjdGVkIF9zY3JvbGxGb3J3YXJkID0gdHJ1ZTtcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgX2NlbGxTaXplIDogTGF5YS5Qb2ludCA9IG5ldyBMYXlhLlBvaW50KCk7XG5cbiAgICBvbkF3YWtlKCkgIHtcbiAgICAgICAgdGhpcy5BZFBvc0lEID0gU2hhcmVBZC5Mb29wQWRMb2NhdGlvbklEO1xuICAgICAgICBcbiAgICAgICAgdGhpcy5fbGlzdCA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJMaXN0XCIpIGFzIExheWEuTGlzdDtcbiAgICAgICAgdGhpcy5fbGlzdC5yZW5kZXJIYW5kbGVyID0gTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLm9uTGlzdFJlbmRlciwgbnVsbCwgZmFsc2UpXG4gICAgICAgIHRoaXMuX2xpc3QuaFNjcm9sbEJhclNraW4gPSBcIlwiO1xuICAgIH1cbiAgICBcbiAgICBwdWJsaWMgb25TdGFydCgpIFxuICAgIHtcbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xuICAgICAgICB0aGlzLl9saXN0LndpZHRoID0gc2VsZi5DbGlwLndpZHRoO1xuICAgICAgICB0aGlzLl9saXN0LmhlaWdodCA9IHNlbGYuQ2xpcC5oZWlnaHQ7XG4gICAgICAgIHNlbGYucmVmcmVzaCgoKT0+XG4gICAgICAgIHtcbiAgICAgICAgICAgIGlmKG51bGwgIT0gc2VsZi5fbGlzdC5jZWxscyAmJiBzZWxmLl9saXN0LmNlbGxzLmxlbmd0aCA+IDApXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbGV0IGJveCA9IHNlbGYuX2xpc3QuY2VsbHNbMF0gYXMgTGF5YS5Cb3g7XG4gICAgICAgICAgICAgICAgc2VsZi5fY2VsbFNpemUueCA9IGJveC53aWR0aDtcbiAgICAgICAgICAgICAgICBzZWxmLl9jZWxsU2l6ZS55ID0gYm94LmhlaWdodDtcbiAgICAgICAgICAgICAgICBpZihzZWxmLnVzZU1vdmVQYXVzZSlcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNlbGYuX2xpc3Quc2Nyb2xsQmFyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5fbGlzdC5zY3JvbGxCYXIudmFsdWUgPSAwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5tb3ZlKClcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSwgMjAwMCk7ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBwdWJsaWMgcmVmcmVzaChvbkNvbXBsYXRlPyA6IEZ1bmN0aW9uKVxuICAgIHtcbiAgICAgICAgaWYoIXRoaXMuaXNFbmFibGUpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlmKG51bGwgIT0gb25Db21wbGF0ZSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvbkNvbXBsYXRlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xuICAgICAgICBTaGFyZUFkLmdldEFEVnModGhpcy5BZFBvc0lELChkYXRhcyk9PlxuICAgICAgICB7XG4gICAgICAgICAgICBpZihudWxsICE9IGRhdGFzICYmIGRhdGFzLmxlbmd0aCA+IDApXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VsZi5fZGF0YXMgPSBkYXRhcztcbiAgICAgICAgICAgICAgICBzZWxmLl9saXN0LmFycmF5ID0gc2VsZi5fZGF0YXM7XG4gICAgICAgICAgICAgICAgaWYobnVsbCAhPSBzZWxmLlNwcml0ZSAmJiAhc2VsZi5TcHJpdGUuZGVzdHJveWVkKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5TcHJpdGUudmlzaWJsZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmKG51bGwgIT0gb25Db21wbGF0ZSlcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG9uQ29tcGxhdGUoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaWYobnVsbCAhPSBzZWxmLlNwcml0ZSAmJiAhc2VsZi5TcHJpdGUuZGVzdHJveWVkKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5TcHJpdGUudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxudWxsLHRydWUpXG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uTGlzdFJlbmRlcihjZWxsOiBMYXlhLkJveCwgaW5kZXg6IG51bWJlcik6IHZvaWQge1xuICAgICAgICB2YXIgZGF0YSA9IHRoaXMuX2xpc3QuYXJyYXlbaW5kZXhdO1xuICAgICAgICB2YXIgbG9vcEFkQm94IDogS1JRX0xvb3BBZEJveCA9IGNlbGwuZ2V0Q29tcG9uZW50KEtSUV9Mb29wQWRCb3gpO1xuICAgICAgICBsb29wQWRCb3guc2V0RGF0YShkYXRhKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgbW92ZSgpIHtcbiAgICAgICAgbGV0IHRvbnVtID0gdGhpcy5fY2VsbFNpemUueCArIHRoaXMuX2xpc3Quc3BhY2VYO1xuICAgICAgICBsZXQgbGVmdCA9IDA7XG4gICAgICAgIGlmICghdGhpcy5fc2Nyb2xsRm9yd2FyZCkgXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRvbnVtICo9IC0xO1xuICAgICAgICAgICAgbGVmdCA9ICh0aGlzLl9saXN0LnNjcm9sbEJhci5tYXggLSB0aGlzLl9saXN0LnNjcm9sbEJhci52YWx1ZSkgJSB0b251bSAqIC0xO1xuICAgICAgICB9XG4gICAgICAgIGVsc2VcbiAgICAgICAge1xuICAgICAgICAgICAgbGVmdCA9IHRoaXMuX2xpc3Quc2Nyb2xsQmFyLnZhbHVlICUgdG9udW07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuX2xpc3Quc2Nyb2xsQmFyKSB7XG4gICAgICAgICAgICB0aGlzLl9saXN0LnNjcm9sbEJhci5zdG9wU2Nyb2xsKCk7XG4gICAgICAgICAgICBsZXQgc2Nyb2xsRGVsdGEgPSB0b251bTtcbiAgICAgICAgICAgIGlmKDAgIT0gbGVmdClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzY3JvbGxEZWx0YSA9ICAyICogdG9udW0gLSBsZWZ0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xuICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byhzZWxmLl9saXN0LnNjcm9sbEJhciwgeyB2YWx1ZTogc2VsZi5fbGlzdC5zY3JvbGxCYXIudmFsdWUgKyBzY3JvbGxEZWx0YSB9LCAxMDAwLCBudWxsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHNlbGYsICgpID0+IHtcblxuICAgICAgICAgICAgfSkpXG4gICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoMTAxMCwgc2VsZiwgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChzZWxmLl9saXN0LnNjcm9sbEJhci52YWx1ZSA+PSBzZWxmLl9saXN0LnNjcm9sbEJhci5tYXgpIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5fc2Nyb2xsRm9yd2FyZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoc2VsZi5fbGlzdC5zY3JvbGxCYXIudmFsdWUgPD0gMCkge1xuICAgICAgICAgICAgICAgICAgICBzZWxmLl9zY3JvbGxGb3J3YXJkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgTGF5YS50aW1lci5vbmNlKDMwMDAsIHNlbGYsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNlbGYuX2xpc3Quc2Nyb2xsQmFyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLm1vdmUoKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfVxuXG5cbiAgICBvblVwZGF0ZSgpICB7XG4gICAgICAgIGlmKHRoaXMudXNlTW92ZVBhdXNlKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBpZiAodGhpcy5fc2Nyb2xsRm9yd2FyZCkgIHtcbiAgICAgICAgICAgIHRoaXMuX2xpc3Quc2Nyb2xsQmFyLnZhbHVlICs9IDEwMCAqIExheWEudGltZXIuZGVsdGEgLyAxMDAwO1xuICAgICAgICAgICAgaWYgKHRoaXMuX2xpc3Quc2Nyb2xsQmFyLnZhbHVlID49IHRoaXMuX2xpc3Quc2Nyb2xsQmFyLm1heCkgIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9zY3JvbGxGb3J3YXJkID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSAge1xuICAgICAgICAgICAgdGhpcy5fbGlzdC5zY3JvbGxCYXIudmFsdWUgLT0gMTAwICogTGF5YS50aW1lci5kZWx0YSAvIDEwMDA7XG4gICAgICAgICAgICBpZiAodGhpcy5fbGlzdC5zY3JvbGxCYXIudmFsdWUgPD0gMCkgIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9zY3JvbGxGb3J3YXJkID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuXG59ICIsImltcG9ydCBLUlFfQ29tQmFzZSBmcm9tIFwiLi4vS1JRX0NvbUJhc2VcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgS1JRX0xvb3BBZEJveCBleHRlbmRzIEtSUV9Db21CYXNlXG57XG4gICAgcHJvdGVjdGVkIF9kaXNwbGF5U3AgOiBMYXlhLlNwcml0ZTtcbiAgICBwcm90ZWN0ZWQgX2Rpc1RleHQgOiBMYXlhLlRleHQ7XG4gICAgcHJvdGVjdGVkIF9vcmlnaW5XIDogbnVtYmVyID0gMTcwO1xuICAgIHByb3RlY3RlZCBfb3JpZ2luSCA6IG51bWJlciA9IDE3MDtcblxuICAgIG9uQXdha2UoKVxuICAgIHtcbiAgICAgICAgdGhpcy5fZGlzcGxheVNwID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkRpc3BsYXlcIikgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgIHRoaXMuX29yaWdpblcgPSB0aGlzLl9kaXNwbGF5U3Aud2lkdGg7XG4gICAgICAgIHRoaXMuX29yaWdpbkggPSB0aGlzLl9kaXNwbGF5U3AuaGVpZ2h0O1xuICAgICAgICB0aGlzLl9kaXNUZXh0ID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIlRpdGVsVGV4dFwiKSBhcyBMYXlhLlRleHQ7XG4gICAgICAgIHRoaXMuX2Rpc1RleHQub3ZlcmZsb3cgPSBMYXlhLlRleHQuU0NST0xMO1xuICAgICAgICB0aGlzLl9kaXNUZXh0LnRleHQgPSBcIlwiO1xuICAgIH1cblxuICAgIG9uU3RhcnQoKVxuICAgIHtcbiAgICAgICAgdGhpcy5hdXRvU2Nyb2xsVGV4dCh0aGlzLl9kaXNUZXh0KTtcbiAgICB9XG5cbiAgICBvbkVuYWJsZSgpXG4gICAge1xuICAgICAgICB0aGlzLlNwcml0ZS5vbihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5vbkNsaWNrQWQpXG4gICAgfVxuXG4gICAgb25EaXNhYmxlKClcbiAgICB7XG4gICAgICAgIHRoaXMuU3ByaXRlLm9mZihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5vbkNsaWNrQWQpXG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uQ2xpY2tBZCgpXG4gICAge1xuICAgICAgICB0aGlzLm5hdmlnYXRlVG9NaW5pUHJvZ3JhbSgpO1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXREYXRhKGRhdGEpXG4gICAge1xuICAgICAgICB0aGlzLl9kYXRhID0gZGF0YTtcbiAgICAgICAgaWYobnVsbCAhPSB0aGlzLl9kYXRhKVxuICAgICAgICB7XG4gICAgICAgICAgICBsZXQgc2VsZiA9IHRoaXM7XG4gICAgICAgICAgICB0aGlzLl9kaXNwbGF5U3AubG9hZEltYWdlKHRoaXMuX2RhdGEubG9nbyxMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsZnVuY3Rpb24oKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGlmKCFzZWxmLl9kaXNwbGF5U3AuZGVzdHJveWVkKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5fZGlzcGxheVNwLndpZHRoID0gc2VsZi5fb3JpZ2luVztcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5fZGlzcGxheVNwLmhlaWdodCA9IHNlbGYuX29yaWdpbkg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgbGV0IHN0ciA9IFN0cmluZyh0aGlzLl9kYXRhLnRpdGxlKTtcbiAgICAgICAgICAgIHRoaXMuX2Rpc1RleHQudGV4dCA9IHN0cjtcbiAgICAgICAgfVxuICAgIH1cbn0iLCJpbXBvcnQgS1JRX0hMb29wQWQgZnJvbSBcIi4vS1JRX0hMb29wQWRcIjtcbmltcG9ydCBTaGFyZUFkIGZyb20gXCIuLi8uLi8uLi9TaGFyZUFkL1NoYXJlQWRcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgS1JRX1ZMb29wQWQgZXh0ZW5kcyBLUlFfSExvb3BBZFxue1xuXG4gICAgb25Bd2FrZSgpICB7XG4gICAgICAgIHRoaXMuQWRQb3NJRCA9IFNoYXJlQWQuTG9vcEFkTG9jYXRpb25JRDtcbiAgICAgICAgXG4gICAgICAgIHRoaXMuX2xpc3QgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiTGlzdFwiKSBhcyBMYXlhLkxpc3Q7XG4gICAgICAgIHRoaXMuX2xpc3QucmVuZGVySGFuZGxlciA9IExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5vbkxpc3RSZW5kZXIsIG51bGwsIGZhbHNlKVxuICAgICAgICB0aGlzLl9saXN0LnZTY3JvbGxCYXJTa2luID0gXCJcIjtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgbW92ZSgpIHtcbiAgICAgICAgbGV0IHRvbnVtID0gdGhpcy5fY2VsbFNpemUueSArIHRoaXMuX2xpc3Quc3BhY2VZO1xuICAgICAgICBsZXQgbGVmdCA9IDA7XG4gICAgICAgIGlmICghdGhpcy5fc2Nyb2xsRm9yd2FyZCkgXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRvbnVtICo9IC0xO1xuICAgICAgICAgICAgbGVmdCA9ICh0aGlzLl9saXN0LnNjcm9sbEJhci5tYXggLSB0aGlzLl9saXN0LnNjcm9sbEJhci52YWx1ZSkgJSB0b251bSAqIC0xO1xuICAgICAgICB9XG4gICAgICAgIGVsc2VcbiAgICAgICAge1xuICAgICAgICAgICAgbGVmdCA9IHRoaXMuX2xpc3Quc2Nyb2xsQmFyLnZhbHVlICUgdG9udW07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuX2xpc3Quc2Nyb2xsQmFyKSB7XG4gICAgICAgICAgICB0aGlzLl9saXN0LnNjcm9sbEJhci5zdG9wU2Nyb2xsKCk7XG4gICAgICAgICAgICBsZXQgc2Nyb2xsRGVsdGEgPSB0b251bTtcbiAgICAgICAgICAgIGlmKDAgIT0gbGVmdClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzY3JvbGxEZWx0YSA9ICAyICogdG9udW0gLSBsZWZ0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xuICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byhzZWxmLl9saXN0LnNjcm9sbEJhciwgeyB2YWx1ZTogc2VsZi5fbGlzdC5zY3JvbGxCYXIudmFsdWUgKyBzY3JvbGxEZWx0YSB9LCAxMDAwLCBudWxsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHNlbGYsICgpID0+IHtcblxuICAgICAgICAgICAgfSkpXG4gICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoMTAxMCxzZWxmLCgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoc2VsZi5fbGlzdC5zY3JvbGxCYXIudmFsdWUgPj0gc2VsZi5fbGlzdC5zY3JvbGxCYXIubWF4KSB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuX3Njcm9sbEZvcndhcmQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHNlbGYuX2xpc3Quc2Nyb2xsQmFyLnZhbHVlIDw9IDApIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5fc2Nyb2xsRm9yd2FyZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIExheWEudGltZXIub25jZSgzMDAwLHNlbGYsKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoc2VsZi5fbGlzdC5zY3JvbGxCYXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYubW92ZSgpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxufSIsImltcG9ydCBLUlFfU2luZ2xlQWQgZnJvbSBcIi4vS1JRX1NpbmdsZUFkXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEtSUV9Sb2NrU2luZ2xlQWQgZXh0ZW5kcyBLUlFfU2luZ2xlQWRcbntcbiAgICBwdWJsaWMgcGxheUFuaShvbkNvbXBsYXRlPzogRnVuY3Rpb24pICBcbiAgICB7XG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcbiAgICAgICAgc2VsZi5TcHJpdGUucm90YXRpb24gPSAwO1xuICAgICAgICBMYXlhLlR3ZWVuLnRvKHNlbGYuU3ByaXRlLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHJvdGF0aW9uOiAyMCxcbiAgICAgICAgICAgIH0sIDI1MCwgTGF5YS5FYXNlLmxpbmVhck5vbmUsIExheWEuSGFuZGxlci5jcmVhdGUoc2VsZiwgKCkgPT4ge1xuICAgICAgICAgICAgICAgIExheWEuVHdlZW4udG8oc2VsZi5TcHJpdGUsXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJvdGF0aW9uOiAwLFxuICAgICAgICAgICAgICAgICAgICB9LCAyNTAsIExheWEuRWFzZS5saW5lYXJOb25lLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHNlbGYsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuU3ByaXRlLnJvdGF0aW9uID0gMDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKG51bGwgIT0gb25Db21wbGF0ZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNvbXBsYXRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pKVxuICAgICAgICAgICAgfSkpXG4gICAgfVxufSIsImltcG9ydCBLUlFfU2luZ2xlQWQgZnJvbSBcIi4vS1JRX1NpbmdsZUFkXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEtSUV9Sb2xsU2luZ2xlQWQgZXh0ZW5kcyBLUlFfU2luZ2xlQWQgXG57XG4gICAgcHJvdGVjdGVkIF9vcmlnaW5YIDogbnVtYmVyID0gbnVsbDtcblxuICAgIG9uQXdha2UoKVxuICAgIHtcbiAgICAgICAgc3VwZXIub25Bd2FrZSgpO1xuICAgICAgICB0aGlzLl9vcmlnaW5YID0gdGhpcy5TcHJpdGUueDtcbiAgICAgICAgdGhpcy5TcHJpdGUueCAtPSBMYXlhLnN0YWdlLndpZHRoO1xuICAgIH1cblxuICAgIHB1YmxpYyBwbGF5QW5pKG9uQ29tcGxhdGU/IDogRnVuY3Rpb24pXG4gICAge1xuICAgICAgICBsZXQgY3VyID0gdGhpcy5fb3JpZ2luWDtcbiAgICAgICAgbGV0IG5leHQgPSBjdXIgLSBMYXlhLnN0YWdlLndpZHRoO1xuICAgICAgICB0aGlzLlNwcml0ZS54ID0gbmV4dDtcbiAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLlNwcml0ZSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICByb3RhdGlvbiA6IDM2MCxcbiAgICAgICAgICAgIH0sIDUwMCwgTGF5YS5FYXNlLmxpbmVhck5vbmUsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKCkgPT4gIHtcbiAgICAgICAgICAgICAgICB0aGlzLlNwcml0ZS5yb3RhdGlvbiA9IDA7XG4gICAgICAgICAgICB9KSlcbiAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLlNwcml0ZSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB4IDogY3VyLFxuICAgICAgICAgICAgfSw1MDAsTGF5YS5FYXNlLmxpbmVhck5vbmUsTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCgpPT5cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aGlzLlNwcml0ZS54ID0gY3VyO1xuICAgICAgICAgICAgICAgIGlmKG51bGwgIT0gb25Db21wbGF0ZSlcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG9uQ29tcGxhdGUoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KSlcbiAgICB9XG5cbn0iLCJpbXBvcnQgS1JRX0NvbUJhc2UgZnJvbSBcIi4vS1JRX0NvbUJhc2VcIjtcbmltcG9ydCBTaGFyZUFkIGZyb20gXCIuLi8uLi9TaGFyZUFkL1NoYXJlQWRcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgS1JRX1NpbmdsZUFkIGV4dGVuZHMgS1JRX0NvbUJhc2VcbntcbiAgICBwcm90ZWN0ZWQgc3RhdGljIHJlYWRvbmx5IF9yZXBlYXRDaGVja0xpc3QgOiBBcnJheTxzdHJpbmc+ID0gbmV3IEFycmF5PHN0cmluZz4oKTtcblxuICAgIHByb3RlY3RlZCBfZGlzcGxheSA6IExheWEuU3ByaXRlO1xuICAgIHByb3RlY3RlZCBfdGV4dCA6IExheWEuVGV4dDtcblxuICAgIHByb3RlY3RlZCBfb3JpZ2luVyA6IG51bWJlciA9IDMwMDtcbiAgICBwcm90ZWN0ZWQgX29yaWdpbkggOiBudW1iZXIgPSAzMDA7XG5cbiAgICBvbkF3YWtlKClcbiAgICB7XG4gICAgICAgIHRoaXMuQWRQb3NJRCA9IFNoYXJlQWQuTG9vcEFkTG9jYXRpb25JRDtcblxuICAgICAgICB0aGlzLl9kaXNwbGF5ID0gdGhpcy5TcHJpdGUuZ2V0Q2hpbGRCeU5hbWUoXCJEaXNwbGF5XCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl90ZXh0ID0gdGhpcy5TcHJpdGUuZ2V0Q2hpbGRCeU5hbWUoXCJUZXh0XCIpIGFzIExheWEuVGV4dDtcbiAgICAgICAgdGhpcy5fdGV4dC5vdmVyZmxvdyA9IExheWEuVGV4dC5TQ1JPTEw7XG4gICAgICAgIHRoaXMuX3RleHQudGV4dCA9IFwiXCI7XG4gICAgfVxuXG4gICAgb25FbmFibGUoKVxuICAgIHtcbiAgICAgICAgdGhpcy5TcHJpdGUub24oTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25DbGlja0FkKVxuICAgIH1cblxuICAgIG9uRGlzYWJsZSgpXG4gICAge1xuICAgICAgICB0aGlzLlNwcml0ZS5vZmYoTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25DbGlja0FkKVxuICAgIH1cblxuICAgIG9uU3RhcnQoKVxuICAgIHtcbiAgICAgICAgdGhpcy5hdXRvU2Nyb2xsVGV4dCh0aGlzLl90ZXh0KTtcbiAgICAgICAgdGhpcy5yZWZyZXNoKCk7XG4gICAgfVxuXG5cbiAgICBwdWJsaWMgcmVmcmVzaChvbkNvbXBsYXRlPyA6IEZ1bmN0aW9uKVxuICAgIHtcbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xuICAgICAgICBTaGFyZUFkLmdldEFEVnModGhpcy5BZFBvc0lELChkYXRhcyk9PlxuICAgICAgICB7XG4gICAgICAgICAgICBpZihudWxsICE9IGRhdGFzKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlbGYuX2RhdGFzID0gZGF0YXM7XG4gICAgICAgICAgICAgICAgaWYoc2VsZi5TcHJpdGUgJiYgIXNlbGYuU3ByaXRlLmRlc3Ryb3llZClcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGZvcihsZXQgaT0wO2kgPCBzZWxmLl9kYXRhcy5sZW5ndGg7KytpKVxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgZmluZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGRhdGEgPSBzZWxmLl9kYXRhc1tpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvcihsZXQgaj0wO2ogPCBLUlFfU2luZ2xlQWQuX3JlcGVhdENoZWNrTGlzdC5sZW5ndGg7KytqKVxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBhcHBpZCA9IEtSUV9TaW5nbGVBZC5fcmVwZWF0Q2hlY2tMaXN0W2pdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKGFwcGlkID09IGRhdGEuYXBwaWQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaW5kID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYoIWZpbmQpXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5jbGVhclJlcGVhdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuX2RhdGEgPSBkYXRhO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgaWYobnVsbCA9PSBzZWxmLl9kYXRhKVxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLl9kYXRhID0gc2VsZi5fZGF0YXNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogZGF0YXMubGVuZ3RoKV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIGlmKG51bGwgIT0gc2VsZi5fZGF0YSlcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5fZGlzcGxheS5sb2FkSW1hZ2Uoc2VsZi5fZGF0YS5sb2dvLExheWEuSGFuZGxlci5jcmVhdGUoc2VsZixmdW5jdGlvbigpXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYobnVsbCAhPSBzZWxmLlNwcml0ZSAmJiAhc2VsZi5TcHJpdGUuZGVzdHJveSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuU3ByaXRlLnZpc2libGUgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihvbkNvbXBsYXRlKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNvbXBsYXRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgc3RyID0gc2VsZi5fZGF0YS50aXRsZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuX3RleHQudGV4dCA9IHN0cjtcblxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGlzSGFzID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IobGV0IGo9MDtqIDwgS1JRX1NpbmdsZUFkLl9yZXBlYXRDaGVja0xpc3QubGVuZ3RoOysrailcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgYXBwaWQgPSBLUlFfU2luZ2xlQWQuX3JlcGVhdENoZWNrTGlzdFtqXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihhcHBpZCA9PSBzZWxmLl9kYXRhLmFwcGlkKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNIYXMgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZighaXNIYXMpXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgS1JRX1NpbmdsZUFkLl9yZXBlYXRDaGVja0xpc3QucHVzaChzZWxmLl9kYXRhLmFwcGlkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKG51bGwgIT0gc2VsZi5TcHJpdGUgJiYgIXNlbGYuU3ByaXRlLmRlc3Ryb3kpXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5TcHJpdGUudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYob25Db21wbGF0ZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNvbXBsYXRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VsZi5TcHJpdGUudmlzaWJsZSA9IGZhbHNlO1xuXG4gICAgICAgICAgICAgICAgaWYob25Db21wbGF0ZSlcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG9uQ29tcGxhdGUoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgcHVibGljIGhpZGUoKVxuICAgIHtcbiAgICAgICAgdGhpcy5TcHJpdGUudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLmNsZWFyUmVwZWF0KCk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIGNsZWFyUmVwZWF0KClcbiAgICB7XG4gICAgICAgIGlmKG51bGwgIT0gdGhpcy5fZGF0YSlcbiAgICAgICAge1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBLUlFfU2luZ2xlQWQuX3JlcGVhdENoZWNrTGlzdC5sZW5ndGg7ICsraSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBsZXQgYXBwaWQgPSBLUlFfU2luZ2xlQWQuX3JlcGVhdENoZWNrTGlzdFtpXTtcbiAgICAgICAgICAgICAgICBpZihhcHBpZCA9PSB0aGlzLl9kYXRhLmFwcGlkKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgS1JRX1NpbmdsZUFkLl9yZXBlYXRDaGVja0xpc3Quc3BsaWNlKGksMSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByb3RlY3RlZCBvbkNsaWNrQWQoKVxuICAgIHtcbiAgICAgICAgdGhpcy5uYXZpZ2F0ZVRvTWluaVByb2dyYW0oKTtcbiAgICAgICAgdGhpcy5yZWZyZXNoKCk7XG4gICAgfVxuXG4gICAgb25EZXN0cm95KClcbiAgICB7XG4gICAgICAgIHRoaXMuY2xlYXJSZXBlYXQoKTtcbiAgICB9XG59IiwiaW1wb3J0IEtSUV9WaWV3Q29tQmFzZSBmcm9tIFwiLi9LUlFfVmlld0NvbUJhc2VcIjtcbmltcG9ydCBVdGlsaXQgZnJvbSBcIi4uLy4uL1V0aWxpdFwiO1xuaW1wb3J0IFZpZXdNZ3IsIHsgVmlld0RlZiB9IGZyb20gXCIuLi8uLi9NZ3IvVmlld01nclwiO1xuaW1wb3J0IE1pbmlHYW1lVmlld1RlbXBsYXRlIGZyb20gXCIuLi8uLi9WaWV3L1RlbXBsYXRlVmlld3MvTWluaUdhbWUvTWluaUdhbWVWaWV3VGVtcGxhdGVcIjtcbmltcG9ydCBLUlFfSGlzdG9yeSBmcm9tIFwiLi4vQ29tL0tSUV9IaXN0b3J5L0tSUV9IaXN0b3J5XCI7XG5pbXBvcnQgS1JRX0Jhbm5lciBmcm9tIFwiLi4vQ29tL0tSUV9CYW5uZXJcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgS1JRX0V4cG9ydCBleHRlbmRzIEtSUV9WaWV3Q29tQmFzZVxue1xuICAgIHB1YmxpYyBvbkNvbnRpbnVlQnRuQ2xpY2sgOiBGdW5jdGlvbiA9IG51bGw7XG5cbiAgICBwcm90ZWN0ZWQgX3RvcFpvbmUgOiBMYXlhLkNsaXAgPSBudWxsO1xuICAgIHB1YmxpYyBnZXQgQmFja0J0bigpXG4gICAge1xuICAgICAgICBpZihudWxsID09IHRoaXMuX2JhY2tCdG4pXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuX2JhY2tCdG4gPSB0aGlzLlNwcml0ZS5nZXRDaGlsZEJ5TmFtZShcIlRvcFpvbmVcIikuZ2V0Q2hpbGRCeU5hbWUoXCJCYWNrQnRuXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9iYWNrQnRuO1xuICAgIH1cbiAgICBwcm90ZWN0ZWQgX2JhY2tCdG4gOiBMYXlhLlNwcml0ZSA9IG51bGw7XG4gICAgXG4gICAgcHJvdGVjdGVkIF9jZW50ZXJab25lIDogTGF5YS5DbGlwID0gbnVsbDtcbiAgICBwdWJsaWMgZ2V0IENvbnRpbnVlQnRuKClcbiAgICB7XG4gICAgICAgIGlmKG51bGwgPT0gdGhpcy5fY29udGludWVCdG4pXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuX2NvbnRpbnVlQnRuID0gdGhpcy5TcHJpdGUuZ2V0Q2hpbGRCeU5hbWUoXCJDZW50ZXJab25lXCIpLmdldENoaWxkQnlOYW1lKFwiQ29udGludWVCdG5cIikgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbnRpbnVlQnRuO1xuICAgIH1cbiAgICBwcm90ZWN0ZWQgX2NvbnRpbnVlQnRuIDogTGF5YS5TcHJpdGUgPSBudWxsO1xuXG4gICAgcHJvdGVjdGVkIF9rcnFIaXN0b3J5IDogS1JRX0hpc3RvcnkgPSBudWxsO1xuICAgIHByb3RlY3RlZCBfa3JxQmFubmVyIDogS1JRX0Jhbm5lciA9IG51bGw7XG5cbiAgICBvbkF3YWtlKClcbiAgICB7XG4gICAgICAgIHRoaXMuX3RvcFpvbmUgPSB0aGlzLlNwcml0ZS5nZXRDaGlsZEJ5TmFtZShcIlRvcFpvbmVcIikgYXMgTGF5YS5DbGlwO1xuICAgICAgICBpZihVdGlsaXQuaXNJcGhvbmVYKCkpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuX3RvcFpvbmUudG9wID0gIHRoaXMuX3RvcFpvbmUudG9wICsgNzU7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fYmFja0J0biA9IHRoaXMuX3RvcFpvbmUuZ2V0Q2hpbGRCeU5hbWUoXCJCYWNrQnRuXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl9jZW50ZXJab25lID0gdGhpcy5TcHJpdGUuZ2V0Q2hpbGRCeU5hbWUoXCJDZW50ZXJab25lXCIpIGFzIExheWEuQ2xpcDtcbiAgICAgICAgaWYoVXRpbGl0LmlzSXBob25lWCgpKVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLl9jZW50ZXJab25lLnRvcCA9ICB0aGlzLl9jZW50ZXJab25lLnRvcCArIDc1O1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2NvbnRpbnVlQnRuID0gdGhpcy5fY2VudGVyWm9uZS5nZXRDaGlsZEJ5TmFtZShcIkNvbnRpbnVlQnRuXCIpIGFzIExheWEuU3ByaXRlO1xuXG4gICAgICAgIHRoaXMuX2tycUhpc3RvcnkgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiS1JRX0hpc3RvcnlcIikuZ2V0Q29tcG9uZW50KEtSUV9IaXN0b3J5KTtcbiAgICAgICAgdGhpcy5fa3JxQmFubmVyID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIktSUV9CYW5uZXJcIikuZ2V0Q29tcG9uZW50KEtSUV9CYW5uZXIpO1xuXG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcbiAgICAgICAgdGhpcy5fa3JxSGlzdG9yeS5PbkJhY2tCdG5DbGljayA9KCk9PlxuICAgICAgICB7XG4gICAgICAgICAgICBzZWxmLl9rcnFCYW5uZXIuc2hvdygpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgb25FbmFibGUoKVxuICAgIHtcbiAgICAgICAgdGhpcy5fYmFja0J0bi5vbihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5vbkJhY2tCdG4pO1xuICAgICAgICB0aGlzLl9jb250aW51ZUJ0bi5vbihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5vbkNvbnRpbnVlQnRuKTtcbiAgICB9XG5cbiAgICBvbkRpc2FibGUoKVxuICAgIHtcbiAgICAgICAgdGhpcy5fYmFja0J0bi5vZmYoTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25CYWNrQnRuKTtcbiAgICAgICAgdGhpcy5fY29udGludWVCdG4ub2ZmKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uQ29udGludWVCdG4pO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBvbkJhY2tCdG4oKVxuICAgIHtcbiAgICAgICAgdGhpcy5fa3JxSGlzdG9yeS5zaG93KCk7XG4gICAgICAgIHRoaXMuX2tycUJhbm5lci5oaWRlKCk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uQ29udGludWVCdG4oKVxuICAgIHtcbiAgICAgICAgaWYobnVsbCAhPSB0aGlzLm9uQ29udGludWVCdG5DbGljaylcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5vbkNvbnRpbnVlQnRuQ2xpY2soKTtcbiAgICAgICAgfVxuICAgIH1cbn0iLCJpbXBvcnQgS1JRX1ZpZXdDb21CYXNlIGZyb20gXCIuL0tSUV9WaWV3Q29tQmFzZVwiO1xuaW1wb3J0IEtSUV9Sb2NrU2luZ2xlQWQgZnJvbSBcIi4uL0NvbS9LUlFfUm9ja1NpbmdsZUFkXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEtSUV9GbG9hdGluZyBleHRlbmRzIEtSUV9WaWV3Q29tQmFzZVxue1xuICAgIHByb3RlY3RlZCBfY2VudGVyWm9uZSA6IExheWEuQ2xpcCA9IG51bGw7XG4gICAgcHJvdGVjdGVkIF9yb2NrU2luZ2xlQWRzIDogQXJyYXk8S1JRX1JvY2tTaW5nbGVBZD4gPSBuZXcgQXJyYXk8S1JRX1JvY2tTaW5nbGVBZD4oKTtcbiAgICBwcm90ZWN0ZWQgX2FuaVNwYWNlaW5nIDogbnVtYmVyID0gMzAwMDtcblxuICAgIG9uQXdha2UoKVxuICAgIHtcbiAgICAgICAgdGhpcy5fY2VudGVyWm9uZSA9IHRoaXMuU3ByaXRlLmdldENoaWxkQnlOYW1lKFwiQ2VudGVyWm9uZVwiKSBhcyBMYXlhLkNsaXA7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fY2VudGVyWm9uZS5udW1DaGlsZHJlbjsgKytpKSAgXG4gICAgICAgIHtcbiAgICAgICAgICAgIGxldCBjaGlsZCA9IHRoaXMuX2NlbnRlclpvbmUuZ2V0Q2hpbGRBdChpKSBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgICAgIGlmKGNoaWxkLnZpc2libGUpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbGV0IHJvY2tBZCA9IGNoaWxkLmdldENvbXBvbmVudChLUlFfUm9ja1NpbmdsZUFkKSBhcyBLUlFfUm9ja1NpbmdsZUFkO1xuICAgICAgICAgICAgICAgIHRoaXMuX3JvY2tTaW5nbGVBZHMucHVzaChyb2NrQWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgb25TdGFydCgpXG4gICAge1xuICAgICAgICBsZXQgc2VsZiA9IHRoaXM7XG4gICAgICAgIHNlbGYucGxheUFuaSgpO1xuICAgICAgICBMYXlhLnRpbWVyLmxvb3AodGhpcy5fcm9ja1NpbmdsZUFkcy5sZW5ndGggKiAodGhpcy5fYW5pU3BhY2VpbmcgKyA1MDApLHRoaXMsKCk9PlxuICAgICAgICB7XG4gICAgICAgICAgICBzZWxmLnBsYXlBbmkoKCk9PlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlbGYucmVmcmVzaEFkKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBwdWJsaWMgcmVmcmVzaEFkKClcbiAgICB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fcm9ja1NpbmdsZUFkcy5sZW5ndGg7ICsraSkgIFxuICAgICAgICB7XG4gICAgICAgICAgICBsZXQgYWQgPSB0aGlzLl9yb2NrU2luZ2xlQWRzW2ldO1xuICAgICAgICAgICAgaWYobnVsbCA9PSBhZC5EYXRhKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGFkLlNwcml0ZS52aXNpYmxlID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhZC5yZWZyZXNoKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgcGxheUFuaShvbkNvbXBsYXRlPyA6IEZ1bmN0aW9uKVxuICAgIHtcbiAgICAgICAgbGV0IGxlbiA9IHRoaXMuX3JvY2tTaW5nbGVBZHMubGVuZ3RoO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuX3JvY2tTaW5nbGVBZHMubGVuZ3RoOyArK2kpICBcbiAgICAgICAge1xuICAgICAgICAgICAgbGV0IGluZGV4ID0gaTtcbiAgICAgICAgICAgIGxldCBhZCA9IHRoaXMuX3JvY2tTaW5nbGVBZHNbaW5kZXhdO1xuICAgICAgICAgICAgTGF5YS50aW1lci5vbmNlKHRoaXMuX2FuaVNwYWNlaW5nICogaSxhZCwoKT0+XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaWYoaW5kZXggPT0gbGVuIC0gMSlcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGFkLnBsYXlBbmkob25Db21wbGF0ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGFkLnBsYXlBbmkoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfVxufSIsImltcG9ydCBLUlFfVmlld0NvbUJhc2UgZnJvbSBcIi4vS1JRX1ZpZXdDb21CYXNlXCI7XG5pbXBvcnQgS1JRX1JvbGxTaW5nbGVBZCBmcm9tIFwiLi4vQ29tL0tSUV9Sb2xsU2luZ2xlQWRcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgS1JRX0dhbWVPdmVyIGV4dGVuZHMgS1JRX1ZpZXdDb21CYXNlXG57XG4gICAgcHJvdGVjdGVkIF9jZW50ZXJab25lIDogTGF5YS5DbGlwID0gbnVsbDtcbiAgICBwcm90ZWN0ZWQgX3JvbGxTaW5nbGVBZHMgOiBBcnJheTxLUlFfUm9sbFNpbmdsZUFkPiA9IG5ldyBBcnJheTxLUlFfUm9sbFNpbmdsZUFkPigpO1xuICAgIFxuICAgIG9uQXdha2UoKVxuICAgIHtcbiAgICAgICAgdGhpcy5fY2VudGVyWm9uZSA9IHRoaXMuU3ByaXRlLmdldENoaWxkQnlOYW1lKFwiQ2VudGVyWm9uZVwiKSBhcyBMYXlhLkNsaXA7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fY2VudGVyWm9uZS5udW1DaGlsZHJlbjsgKytpKSAgXG4gICAgICAgIHtcbiAgICAgICAgICAgIGxldCBhZCA9IHRoaXMuX2NlbnRlclpvbmUuZ2V0Q2hpbGRBdChpKS5nZXRDb21wb25lbnQoS1JRX1JvbGxTaW5nbGVBZCkgYXMgS1JRX1JvbGxTaW5nbGVBZDtcbiAgICAgICAgICAgIHRoaXMuX3JvbGxTaW5nbGVBZHMucHVzaChhZCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBvblN0YXJ0KClcbiAgICB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fcm9sbFNpbmdsZUFkcy5sZW5ndGg7ICsraSkgIFxuICAgICAgICB7XG4gICAgICAgICAgICBsZXQgYWQgPSB0aGlzLl9yb2xsU2luZ2xlQWRzW2ldO1xuICAgICAgICAgICAgTGF5YS50aW1lci5vbmNlKCh0aGlzLl9yb2xsU2luZ2xlQWRzLmxlbmd0aCAtIGkpICogMTUwLHRoaXMsKCk9PlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGFkLnBsYXlBbmkoKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICB9XG59XG4iLCJpbXBvcnQgS1JRX0Jhbm5lciBmcm9tIFwiLi4vQ29tL0tSUV9CYW5uZXJcIjtcbmltcG9ydCBLUlFfVmlld0NvbUJhc2UgZnJvbSBcIi4vS1JRX1ZpZXdDb21CYXNlXCI7XG5pbXBvcnQgS1JRX0hpc3RvcnkgZnJvbSBcIi4uL0NvbS9LUlFfSGlzdG9yeS9LUlFfSGlzdG9yeVwiO1xuaW1wb3J0IEtSUV9ITG9vcEFkIGZyb20gXCIuLi9Db20vS1JRX0xvb3BBZC9LUlFfSExvb3BBZFwiO1xuaW1wb3J0IFV0aWxpdCBmcm9tIFwiLi4vLi4vVXRpbGl0XCI7XG5cbmV4cG9ydCBlbnVtIEtSUV9NYWluU3RhdGVcbntcbiAgICBOb3JtYWwgPSAwLFxuICAgIE5vTG9vcEFkID0gMSxcbiAgICBOb0Jhbm5lckFkID0gMixcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgS1JRX01haW4gZXh0ZW5kcyBLUlFfVmlld0NvbUJhc2VcbntcbiAgICBwcm90ZWN0ZWQgX3RvcFpvbmUgOiBMYXlhLkNsaXAgPSBudWxsO1xuICAgIHByb3RlY3RlZCBfaGlzdG9yeUJ0biA6IExheWEuU3ByaXRlID0gbnVsbDtcbiAgICBwcm90ZWN0ZWQgX2tycUxvb3BBZCA6IEtSUV9ITG9vcEFkID0gbnVsbDtcblxuICAgIHByb3RlY3RlZCBfYm90dG9tWm9uZSA6IExheWEuQ2xpcCA9IG51bGw7XG4gICAgcHJvdGVjdGVkIF9rcnFCYW5uZXIgOiBLUlFfQmFubmVyID0gbnVsbDtcblxuICAgIHByb3RlY3RlZCBfa3JxSGlzdG9yeSA6IEtSUV9IaXN0b3J5ID0gbnVsbDtcblxuICAgIG9uQXdha2UoKVxuICAgIHtcbiAgICAgICAgdGhpcy5fdG9wWm9uZSA9IHRoaXMuU3ByaXRlLmdldENoaWxkQnlOYW1lKFwiVG9wWm9uZVwiKSBhcyBMYXlhLkNsaXA7XG4gICAgICAgIHRoaXMuX2hpc3RvcnlCdG4gPSB0aGlzLl90b3Bab25lLmdldENoaWxkQnlOYW1lKFwiSGlzdG9yeUJ0blwiKSBhcyBMYXlhLlNwcml0ZTtcblxuICAgICAgICBpZihVdGlsaXQuaXNJcGhvbmVYKCkpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuX3RvcFpvbmUudG9wID0gIHRoaXMuX3RvcFpvbmUudG9wICsgNzU7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHRoaXMuX2tycUxvb3BBZCAgPSB0aGlzLlNwcml0ZS5nZXRDaGlsZEJ5TmFtZShcIktSUV9ITG9vcEFkXCIpLmdldENvbXBvbmVudChLUlFfSExvb3BBZCkgYXMgS1JRX0hMb29wQWQ7XG4gICAgICAgIHRoaXMuX2tycUJhbm5lciA9IHRoaXMuU3ByaXRlLmdldENoaWxkQnlOYW1lKFwiS1JRX0Jhbm5lclwiKS5nZXRDb21wb25lbnQoS1JRX0Jhbm5lcikgYXMgS1JRX0Jhbm5lcjtcbiAgICAgICAgdGhpcy5fa3JxSGlzdG9yeSA9IHRoaXMuU3ByaXRlLmdldENoaWxkQnlOYW1lKFwiS1JRX0hpc3RvcnlcIikuZ2V0Q29tcG9uZW50KEtSUV9IaXN0b3J5KSBhcyBLUlFfSGlzdG9yeTtcbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xuXG4gICAgICAgIGxldCBhc3BlY3RSYXRpbyA9IExheWEuc3RhZ2Uud2lkdGggLyBMYXlhLnN0YWdlLmhlaWdodDtcbiAgICAgICAgdGhpcy5fa3JxSGlzdG9yeS5PbkJhY2tCdG5DbGljayA9KCk9PlxuICAgICAgICB7XG4gICAgICAgICAgICBpZihhc3BlY3RSYXRpbyAgPCAwLjUpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VsZi5fa3JxQmFubmVyLnNob3coKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9rcnFMb29wQWQuU3ByaXRlLnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgaWYoYXNwZWN0UmF0aW8gIDwgMC41KSBcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5fa3JxTG9vcEFkLkNsaXAudG9wID0gMTAwO1xuICAgICAgICAgICAgaWYoVXRpbGl0LmlzSXBob25lWCgpKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRoaXMuX2tycUxvb3BBZC5DbGlwLnRvcCA9ICB0aGlzLl9rcnFMb29wQWQuQ2xpcC50b3AgKyA3NTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuX2tycUJhbm5lci5TcHJpdGUudmlzaWJsZSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLl9rcnFMb29wQWQuQ2xpcC50b3AgPSBMYXlhLnN0YWdlLmhlaWdodCAtIDI4MDtcbiAgICAgICAgICAgIHRoaXMuX2tycUJhbm5lci5TcHJpdGUudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIHN3aXRjaFN0YXRlKHN0YXRlIDogS1JRX01haW5TdGF0ZSlcbiAgICB7XG4gICAgICAgIGlmKHN0YXRlID09IEtSUV9NYWluU3RhdGUuTm9ybWFsKVxuICAgICAgICB7XG4gICAgICAgICAgICBsZXQgYXNwZWN0UmF0aW8gPSBMYXlhLnN0YWdlLndpZHRoIC8gTGF5YS5zdGFnZS5oZWlnaHQ7XG4gICAgICAgICAgICBpZihhc3BlY3RSYXRpbyAgPCAwLjUpIFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRoaXMuX2tycUxvb3BBZC5DbGlwLnRvcCA9IDEwMDtcbiAgICAgICAgICAgICAgICBpZihVdGlsaXQuaXNJcGhvbmVYKCkpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9rcnFMb29wQWQuQ2xpcC50b3AgPSAgdGhpcy5fa3JxTG9vcEFkLkNsaXAudG9wICsgNzU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuX2tycUJhbm5lci5TcHJpdGUudmlzaWJsZSA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGhpcy5fa3JxTG9vcEFkLkNsaXAudG9wID0gTGF5YS5zdGFnZS5oZWlnaHQgLSAyODA7XG4gICAgICAgICAgICAgICAgdGhpcy5fa3JxQmFubmVyLlNwcml0ZS52aXNpYmxlID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZihzdGF0ZSA9PSBLUlFfTWFpblN0YXRlLk5vTG9vcEFkKVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLl9rcnFMb29wQWQuaXNFbmFibGUgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuX2tycUxvb3BBZC5TcHJpdGUudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5fa3JxQmFubmVyLlNwcml0ZS52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmKHN0YXRlID09IEtSUV9NYWluU3RhdGUuTm9CYW5uZXJBZClcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5fa3JxTG9vcEFkLkNsaXAudG9wID0gTGF5YS5zdGFnZS5oZWlnaHQgLSAyODA7XG4gICAgICAgICAgICB0aGlzLl9rcnFCYW5uZXIuQWRQb3NJRD0gLTE7XG4gICAgICAgICAgICB0aGlzLl9rcnFCYW5uZXIuU3ByaXRlLnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIG9uRW5hYmxlKClcbiAgICB7XG4gICAgICAgIHRoaXMuX2hpc3RvcnlCdG4ub24oTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25IaXN0b3J5QnRuKTtcbiAgICB9XG5cbiAgICBvbkRpc2FibGUoKVxuICAgIHtcbiAgICAgICAgdGhpcy5faGlzdG9yeUJ0bi5vZmYoTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25IaXN0b3J5QnRuKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgb25IaXN0b3J5QnRuKClcbiAgICB7XG4gICAgICAgIHRoaXMuX2tycUhpc3Rvcnkuc2hvdygpO1xuICAgICAgICB0aGlzLl9rcnFCYW5uZXIuaGlkZSgpO1xuICAgIH1cbn0iLCJpbXBvcnQgS1JRX1ZpZXdDb21CYXNlIGZyb20gXCIuL0tSUV9WaWV3Q29tQmFzZVwiO1xuaW1wb3J0IEtSUV9WTG9vcEFkIGZyb20gXCIuLi9Db20vS1JRX0xvb3BBZC9LUlFfVkxvb3BBZFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBLUlFfU2lkZVB1bGwgZXh0ZW5kcyBLUlFfVmlld0NvbUJhc2VcbntcbiAgICBwcm90ZWN0ZWQgX2tycVZMb29wQWQgOiBLUlFfVkxvb3BBZCA9IG51bGw7XG4gICAgcHJvdGVjdGVkIF9wdWxsQnRuIDogTGF5YS5TcHJpdGUgPSBudWxsO1xuXG4gICAgb25Bd2FrZSgpXG4gICAge1xuICAgICAgICB0aGlzLl9rcnFWTG9vcEFkID0gdGhpcy5TcHJpdGUuZ2V0Q2hpbGRCeU5hbWUoXCJLUlFfVkxvb3BBZFwiKS5nZXRDb21wb25lbnQoS1JRX1ZMb29wQWQpO1xuICAgICAgICB0aGlzLl9wdWxsQnRuID0gdGhpcy5fa3JxVkxvb3BBZC5TcHJpdGUuZ2V0Q2hpbGRCeU5hbWUoXCJQdWxsQnRuXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl9rcnFWTG9vcEFkLlNwcml0ZS54ID0gLXRoaXMuX2tycVZMb29wQWQuU3ByaXRlLndpZHRoO1xuICAgIH0gICBcblxuICAgIG9uRW5hYmxlKClcbiAgICB7XG4gICAgICAgIHRoaXMuX3B1bGxCdG4ub24oTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25QdWxsQnRuKTtcbiAgICB9XG5cbiAgICBvbkRpc2FibGUoKVxuICAgIHtcbiAgICAgICAgdGhpcy5fcHVsbEJ0bi5vZmYoTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25QdWxsQnRuKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgb25QdWxsQnRuKClcbiAgICB7XG4gICAgICAgIGlmKHRoaXMuX2tycVZMb29wQWQuU3ByaXRlLnggPCAwKVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLnB1bGwoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMucHVzaCgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIHB1bGwoKVxuICAgIHtcbiAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLl9rcnFWTG9vcEFkLlNwcml0ZSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB4OiAwXG4gICAgICAgICAgICB9LCAyMDAsIExheWEuRWFzZS5saW5lYXJOb25lLCBudWxsLCAwLCB0cnVlKVxuICAgIH1cblxuICAgIHB1YmxpYyBwdXNoKClcbiAgICB7XG4gICAgICAgIExheWEuVHdlZW4udG8odGhpcy5fa3JxVkxvb3BBZC5TcHJpdGUsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgeDogLXRoaXMuX2tycVZMb29wQWQuU3ByaXRlLndpZHRoXG4gICAgICAgICAgICB9LCAyMDAsIExheWEuRWFzZS5saW5lYXJOb25lLCBudWxsLCAwLCB0cnVlKVxuICAgIH1cblxuICAgIHByb3RlY3RlZCBvblNoYXJlQWRGYWlsKClcbiAgICB7XG4gICAgICAgIHRoaXMucHVsbCgpO1xuICAgIH1cbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBLUlFfVmlld0NvbUJhc2UgZXh0ZW5kcyBMYXlhLlNjcmlwdCBcbntcbiAgICBwdWJsaWMgb25TaG93IDogRnVuY3Rpb24gPSBudWxsO1xuICAgIHB1YmxpYyBvbkhpZGUgOiBGdW5jdGlvbiA9IG51bGw7XG4gICAgXG4gICAgcHVibGljIGdldCBTcHJpdGUoKVxuICAgIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGU7XG4gICAgfVxuICAgIFxuICAgIHB1YmxpYyBzaG93KClcbiAgICB7XG4gICAgICAgIHRoaXMuU3ByaXRlLnZpc2libGUgPSB0cnVlO1xuICAgICAgICBpZihudWxsICE9IHRoaXMub25TaG93KVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLm9uU2hvdygpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIGhpZGUoKVxuICAgIHtcbiAgICAgICAgdGhpcy5TcHJpdGUudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICBpZihudWxsICE9IHRoaXMub25IaWRlKVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLm9uSGlkZSgpO1xuICAgICAgICB9XG4gICAgfVxufSIsImltcG9ydCBIdHRwVW5pdCwgeyByZXF1ZXN0RGF0YSB9IGZyb20gXCIuLi9OZXQvSHR0cFVuaXRcIjtcbmltcG9ydCBBcHBDb25maWcgZnJvbSBcIi4uL0FwcENvbmZpZ1wiO1xuaW1wb3J0IFdYQVBJIGZyb20gXCIuLi9XWEFQSVwiO1xuaW1wb3J0IFVzZXIgZnJvbSBcIi4uL1VzZXIvVXNlclwiO1xuaW1wb3J0IE9QUE9BUEkgZnJvbSBcIi4uL09QUE9BUElcIjtcblxuLyoqXG4gKiDnlKjkuo7kubDph4/kuIrmiqUs5Lul5Y+K5YGc55WZ5pe26Ze05LiK5oql55qE55qE57G777yM5pys6LSo5LiK5piv5a+5d3jlkozkubDph4/mjqXlj6PlgZrkuIDkuKrpm4bmiJDljJbnmoTlsIHoo4Xmlrnkvr/kvb/nlKhcbiAqIFxuICogQGV4cG9ydFxuICogQGNsYXNzIE1haUxpYW5nXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1haUxpYW5nIHtcbiAgICBwdWJsaWMgc3RhdGljIG1haW5Vcmw6IHN0cmluZyA9IFwiaHR0cHM6Ly9zd3RqLm1ya3p4LmNuXCI7XG4gICAgcHVibGljIHN0YXRpYyB1Y2xpY2s6IHN0cmluZyA9IFwiL3YxLjEvYXBpL0FjdGl2aXR5L3VjbGljay5odG1sXCI7XG4gICAgcHVibGljIHN0YXRpYyBzdGF5OiBzdHJpbmcgPSBcIi92MS4xL2FwaS9BY3Rpdml0eS9zdGF5Lmh0bWxcIjtcblxuICAgIHB1YmxpYyBzdGF0aWMga2V5OiBzdHJpbmcgPSBcIlwiOy8v5o6o5bm/6Lev5b6E5Lit5ZCM5ZCN5Y+C5pWw77yM6ZyA6KaB6LCD55So5pa55rOVV1hBUGkuZ2V0TGF1bmNoT3B0aW9uc1N5bmMoKe+8jOS7jui/lOWbnueahOWPguaVsOS4reiOt+W+l+OAglxuICAgIHB1YmxpYyBzdGF0aWMgTWFpTGlhbmdPcGVuSWQ6IHN0cmluZyA9IFwiXCI7Ly/kubDph4/ns7vnu5/llK/kuIDmoIfor4Ys5omn6KGMR2V0TWFpTGlhbmdPcGVuSWQoKeaWueazleaIkOWKn+WQjuiHquWKqOiOt+W+l+OAglxuICAgIHByaXZhdGUgc3RhdGljIHRpbWU6IG51bWJlciA9IDA7Ly/kubDph4/ns7vnu5/llK/kuIDmoIfor4blkI7vvIzorrDlvZXlvZPliY3ml7bpl7TvvIjnsr7noa7liLDnp5LvvInjgIJcblxuICAgIC8qKlxuICAgICAqIOWPkemAgeaVsOaNrueahOexu1xuICAgICAqIFxuICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgKiBAc3RhdGljXG4gICAgICogQHBhcmFtIHtyZXF1ZXN0RGF0YX0gcmVxIFxuICAgICAqIEBtZW1iZXJvZiBNYWlMaWFuZ1xuICAgICAqL1xuICAgIHByb3RlY3RlZCBzdGF0aWMgcmVxdWVzdChyZXE6IHJlcXVlc3REYXRhKSB7XG4gICAgICAgIGlmIChyZXEudXJsLmluZGV4T2YoXCJodHRwczovL1wiKSA+IC0xIHx8XG4gICAgICAgICAgICByZXEudXJsLmluZGV4T2YoXCJodHRwOi8vXCIpID4gLTEpIHtcbiAgICAgICAgICAgIHJlcS51cmwgPSByZXEudXJsO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVxLnVybCA9IE1haUxpYW5nLm1haW5VcmwgKyByZXEudXJsO1xuICAgICAgICB9XG4gICAgICAgIHZhciBjb21wbGV0ZUZ1bmMgPSAocmVzKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMsIFwiTWFpTGlhbmcgaHR0cCBTdWNjZXNzXCIpXG4gICAgICAgICAgICByZXMgPSBKU09OLnBhcnNlKHJlcyk7XG4gICAgICAgICAgICBpZiAocmVzLlN0YXR1cyA9PSBcIjIwMFwiKSB7XG4gICAgICAgICAgICAgICAgaWYgKHJlcy5SZXN1bHRbXCJPcGVuSWRcIl0gIT0gbnVsbCAmJiByZXMuUmVzdWx0W1wiT3BlbklkXCJdICE9IFwiXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgTWFpTGlhbmcuTWFpTGlhbmdPcGVuSWQgPSByZXMuUmVzdWx0W1wiT3BlbklkXCJdO1xuICAgICAgICAgICAgICAgICAgICBNYWlMaWFuZy50aW1lID0gcmVxLmRhdGEucG9zdHRpbWU7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi6I635b6X5Lmw6YeP57O757ufT3BlbklkIFwiICsgTWFpTGlhbmcuTWFpTGlhbmdPcGVuSWQpO1xuXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuS4iuaKpeS5sOmHj+ezu+e7n+WBnOeVmeaXtumXtOaIkOWKn1wiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHJlcS5vblN1Y2Nlc3MpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVxLm9uU3VjY2VzcyhyZXMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmIChyZXEub25GYWlsKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlcS5vbkZhaWwocmVzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJlcS5vblN1Y2Nlc3MgPSBudWxsO1xuICAgICAgICAgICAgcmVxID0gbnVsbDtcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIGVycm9yRnVuYyA9IChyZXMpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcywgXCJNYWlMaWFuZyBodHRwIGZhaWxcIilcbiAgICAgICAgICAgIGlmIChyZXEub25GYWlsKSB7XG4gICAgICAgICAgICAgICAgcmVxLm9uRmFpbChyZXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmVxLm9uRmFpbCA9IG51bGw7XG4gICAgICAgICAgICByZXEgPSBudWxsO1xuICAgICAgICB9O1xuXG4gICAgICAgIHZhciB4aHI6IExheWEuSHR0cFJlcXVlc3QgPSBuZXcgTGF5YS5IdHRwUmVxdWVzdCgpO1xuICAgICAgICB4aHIub25jZShMYXlhLkV2ZW50LkNPTVBMRVRFLCBNYWlMaWFuZywgY29tcGxldGVGdW5jKTtcbiAgICAgICAgeGhyLm9uY2UoTGF5YS5FdmVudC5FUlJPUiwgTWFpTGlhbmcsIGVycm9yRnVuYyk7XG5cbiAgICAgICAgaWYgKHJlcS5tZXRoID09IFwiZ2V0XCIpIHtcbiAgICAgICAgICAgIHZhciBwYXJhID0gXCJcIjtcbiAgICAgICAgICAgIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHJlcS5kYXRhKSkge1xuICAgICAgICAgICAgICAgIHZhciB2YWx1ZSA9IHJlcS5kYXRhW2tleV07XG4gICAgICAgICAgICAgICAgcGFyYSArPSBrZXkgKyBcIj1cIiArIHZhbHVlICsgXCImXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXEudXJsID0gcmVxLnVybCArIFwiP1wiICsgcGFyYTtcbiAgICAgICAgICAgIHhoci5zZW5kKHJlcS51cmwsIG51bGwsIHJlcS5tZXRoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHZhciBwYXJhID0gXCJcIjtcbiAgICAgICAgICAgIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHJlcS5kYXRhKSkge1xuICAgICAgICAgICAgICAgIHZhciB2YWx1ZSA9IHJlcS5kYXRhW2tleV07XG4gICAgICAgICAgICAgICAgcGFyYSArPSBrZXkgKyBcIj1cIiArIHZhbHVlICsgXCImXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB4aHIuc2VuZChyZXEudXJsLCBwYXJhLCByZXEubWV0aCwgbnVsbCwgW1wiQ29udGVudC1UeXBlXCIsIFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCJdKTtcbiAgICAgICAgfVxuXG4gICAgfVxuICAgIC8qKlxuICAgICAqIOiOt+W+l+S5sOmHj+ezu+e7n+WUr+S4gOagh+ivhklELOatpElE55qE5L2c55So5piv55So5p2l5LiK5oql5ri45oiP5pe26Ze0XG4gICAgICogXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gcmVzIFxuICAgICAqIEBtZW1iZXJvZiBNYWlMaWFuZ1xuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgR2V0TWFpTGlhbmdPcGVuSWQob25TdWNjZXNzOiBGdW5jdGlvbiwgb25GYWlsOiBGdW5jdGlvbikge1xuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpIHtcbiAgICAgICAgICAgIGxldCBvcHRpb24gPSBXWEFQSS5nZXRMYXVuY2hPcHRpb25zU3luYygpO1xuICAgICAgICAgICAgaWYgKG9wdGlvbiAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgbGV0IGtleSA9IG9wdGlvbi5xdWVyeVtcImtleVwiXTtcbiAgICAgICAgICAgICAgICBpZiAoa2V5ICE9IG51bGwgJiYga2V5ICE9IFwiXCIgJiYgVXNlci5vcGVuSWQgIT0gXCJcIikge1xuICAgICAgICAgICAgICAgICAgICBNYWlMaWFuZy5rZXkgPSBrZXk7XG4gICAgICAgICAgICAgICAgICAgIGxldCByZXEgPSBuZXcgcmVxdWVzdERhdGEoKTtcbiAgICAgICAgICAgICAgICAgICAgcmVxLnVybCA9IE1haUxpYW5nLnVjbGljaztcbiAgICAgICAgICAgICAgICAgICAgcmVxLm9uU3VjY2VzcyA9IG9uU3VjY2VzcztcbiAgICAgICAgICAgICAgICAgICAgcmVxLm9uRmFpbCA9IG9uRmFpbDtcbiAgICAgICAgICAgICAgICAgICAgcmVxLmRhdGEuYXBwaWQgPSBBcHBDb25maWcuQXBwSUQ7XG4gICAgICAgICAgICAgICAgICAgIHJlcS5kYXRhLm9wZW5pZCA9IFwiXCI7XG4gICAgICAgICAgICAgICAgICAgIGxldCB0aW1lID0gbmV3IERhdGUoKS5nZXRUaW1lKCkgLyAxMDAwO1xuICAgICAgICAgICAgICAgICAgICByZXEuZGF0YS5wb3N0dGltZSA9IHRpbWU7XG4gICAgICAgICAgICAgICAgICAgIHJlcS5kYXRhLmF1dGggPSAwO1xuICAgICAgICAgICAgICAgICAgICByZXEuZGF0YS5rZXkgPSBrZXk7XG4gICAgICAgICAgICAgICAgICAgIHJlcS5kYXRhLnd4b3BlbmlkID0gVXNlci5vcGVuSWQ7XG4gICAgICAgICAgICAgICAgICAgIHJlcS5tZXRoID0gXCJQT1NUXCI7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5Y+R6YCB5Lmw6YeP5pWw5o2u5o6l5Y+jXCIpXG4gICAgICAgICAgICAgICAgICAgIE1haUxpYW5nLnJlcXVlc3QocmVxKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuS4iuaKpeS5sOmHj+aVsOaNruWksei0pVwiKVxuICAgICAgICAgICAgICAgIG9uRmFpbChudWxsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmKExheWEuQnJvd3Nlci5vblFHTWluaUdhbWUpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGxldCBvcHRpb24gPSBPUFBPQVBJLmdldExhdW5jaE9wdGlvbnNTeW5jKCk7XG4gICAgICAgICAgICBIdHRwVW5pdC5yZXBvcnRJbXBvcnQob3B0aW9uLnJlZmVycmVySW5mby5wYWNrYWdlLG9wdGlvbi5yZWZlcnJlckluZm8uZXh0cmFEYXRhLmFwcGlkLChyZXN1bHQpPT5cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpZigxID09IHJlc3VsdC5jb2RlKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJPUFBPIOS4iuaKpeS5sOmHj+aVsOaNruaIkOWKn1wiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJPUFBPIOS4iuaKpeS5sOmHj+aVsOaNruWksei0pVwiLHJlc3VsdC5tc2cpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sKHJlc3VsdCk9PlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiT1BQTyDkuIrmiqXkubDph4/mlbDmja7lpLHotKVcIik7XG4gICAgICAgICAgICAgICAgZm9yKHZhciBrZXkgaW4gcmVzdWx0KVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coa2V5LCByZXN1bHRba2V5XSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIuS4jeWcqOW+ruS/oeaooeW8j+S4i+iwg+eUqO+8jOm7mOiupOS4iuaKpeS5sOmHj+aVsOaNruWksei0pVwiKVxuICAgICAgICAgICAgb25GYWlsKG51bGwpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIOS4iuaKpeS5sOmHj+aOpeWPo+WBnOeVmeaXtumXtFxuICAgICAqIFxuICAgICAgICBhcHBpZCDvvI3kuLvkvZPlsI/nqIvluo9hcHBpZFxuICAgICAgICBvcGVuaWQg77yN5Lmw6YeP57O757uf5ZSv5LiA5qCH6K+G77yI5LiN5Y+v56m677yJXG4gICAgICAgIHBvc3R0aW1lIO+8jSDor7fmsYLml7bpl7TliLvluqbvvIjnsr7noa7liLDnp5LvvIlcbiAgICAgICAgdGltZSDvvI0g5YGc55WZ5pe26ZW/77yI57K+56Gu5Yiw56eS77yJXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJvZiBNYWlMaWFuZ1xuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgUmVwb3J0U3RheVRpbWUob25TdWNjZXNzOiBGdW5jdGlvbiwgb25GYWlsOiBGdW5jdGlvbikge1xuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpIHtcbiAgICAgICAgICAgIGlmIChNYWlMaWFuZy5NYWlMaWFuZ09wZW5JZCAhPSBcIlwiKSB7XG4gICAgICAgICAgICAgICAgbGV0IHJlcSA9IG5ldyByZXF1ZXN0RGF0YSgpO1xuICAgICAgICAgICAgICAgIHJlcS51cmwgPSBNYWlMaWFuZy5zdGF5O1xuICAgICAgICAgICAgICAgIHJlcS5vblN1Y2Nlc3MgPSBvblN1Y2Nlc3M7XG4gICAgICAgICAgICAgICAgcmVxLm9uRmFpbCA9IG9uRmFpbDtcbiAgICAgICAgICAgICAgICByZXEuZGF0YS5hcHBpZCA9IEFwcENvbmZpZy5BcHBJRDtcbiAgICAgICAgICAgICAgICByZXEuZGF0YS5vcGVuaWQgPSBNYWlMaWFuZy5NYWlMaWFuZ09wZW5JZDtcbiAgICAgICAgICAgICAgICBsZXQgdGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpIC8gMTAwMDtcbiAgICAgICAgICAgICAgICByZXEuZGF0YS5wb3N0dGltZSA9IHRpbWU7XG4gICAgICAgICAgICAgICAgbGV0IHN0YXl0aW1lID0gTWFpTGlhbmcudGltZSAhPSAwID8gdGltZSAtIE1haUxpYW5nLnRpbWUgOiAwO1xuICAgICAgICAgICAgICAgIHJlcS5kYXRhLnRpbWUgPSBzdGF5dGltZTtcbiAgICAgICAgICAgICAgICByZXEubWV0aCA9IFwiUE9TVFwiO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5Y+R6YCB5YGc55WZ5pe26Ze06Iez5Lmw6YeP5o6l5Y+jXCIpXG4gICAgICAgICAgICAgICAgTWFpTGlhbmcucmVxdWVzdChyZXEpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCLkuI3lnKjlvq7kv6HmqKHlvI/kuIvosIPnlKjvvIzpu5jorqTlj5HpgIHlgZznlZnml7bpl7Toh7PkubDph4/mjqXlj6PlpLHotKVcIilcbiAgICAgICAgICAgIG9uRmFpbChudWxsKTtcbiAgICAgICAgfVxuICAgIH1cblxufSIsImltcG9ydCBHYW1lQ29uZmlnIGZyb20gXCIuL0dhbWVDb25maWdcIjtcbmltcG9ydCBVc2VyIGZyb20gXCIuL1VzZXIvVXNlclwiO1xuaW1wb3J0IHsgdWkgfSBmcm9tIFwiLi91aS9sYXlhTWF4VUlcIjtcbmltcG9ydCBMb2FkaW5nVmlldyBmcm9tIFwiLi9WaWV3L0xvYWRpbmdWaWV3L0xvYWRpbmdWaWV3XCI7XG5pbXBvcnQgQWVzVG9vbHMgZnJvbSBcIi4vTmV0L0Flc1Rvb2xzXCI7XG5pbXBvcnQgSHR0cFVuaXQgZnJvbSBcIi4vTmV0L0h0dHBVbml0XCI7XG5pbXBvcnQgTmV0Q29uZmlnIGZyb20gXCIuL05ldC9OZXRDb25maWdcIjtcbmltcG9ydCBXWEFQSSBmcm9tIFwiLi9XWEFQSVwiO1xuaW1wb3J0IEFwcENvbmZpZyBmcm9tIFwiLi9BcHBDb25maWdcIjtcbmltcG9ydCBFdmVudE1nciBmcm9tIFwiLi9FdmVudC9FdmVudE1nclwiO1xuaW1wb3J0IHsgRXZlbnREZWYgfSBmcm9tIFwiLi9FdmVudC9FdmVudERlZlwiO1xuaW1wb3J0IE9QUE9BUEkgZnJvbSBcIi4vT1BQT0FQSVwiO1xuaW1wb3J0IFFRTWluaUdhbWVBUEkgZnJvbSBcIi4vUVFNaW5pR2FtZUFQSVwiO1xuaW1wb3J0IFRUQVBJIGZyb20gXCIuL1RUQVBJXCI7XG5pbXBvcnQgQUxEIGZyb20gXCIuL0FMRFwiO1xuXG5jbGFzcyBNYWluIHtcblxuXHRwcm90ZWN0ZWQgX2xvYWRpbmdVSSA6IHVpLlZpZXcuTG9hZGluZ1VJID0gbnVsbDtcblx0cHJvdGVjdGVkIF9sb2FkaW5nVmlldyA6IExvYWRpbmdWaWV3ID0gbnVsbDtcblx0Ly/pooTliqDovb3liJfooahcblx0cHJpdmF0ZSByZWFkb25seSBfcHJlTG9hZFJlcyA6IEFycmF5PGFueT4gPSBuZXcgQXJyYXk8YW55PiAoKTtcblxuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHQvL+agueaNrklEReiuvue9ruWIneWni+WMluW8leaTjlx0XHRcblx0XHRpZiAod2luZG93W1wiTGF5YTNEXCJdKSBMYXlhM0QuaW5pdChHYW1lQ29uZmlnLndpZHRoLCBHYW1lQ29uZmlnLmhlaWdodCk7XG5cdFx0ZWxzZSBMYXlhLmluaXQoR2FtZUNvbmZpZy53aWR0aCwgR2FtZUNvbmZpZy5oZWlnaHQsIExheWFbXCJXZWJHTFwiXSk7XG5cdFx0TGF5YVtcIlBoeXNpY3NcIl0gJiYgTGF5YVtcIlBoeXNpY3NcIl0uZW5hYmxlKCk7XG5cdFx0TGF5YVtcIkRlYnVnUGFuZWxcIl0gJiYgTGF5YVtcIkRlYnVnUGFuZWxcIl0uZW5hYmxlKCk7XG5cdFx0TGF5YS5zdGFnZS5zY2FsZU1vZGUgPSBHYW1lQ29uZmlnLnNjYWxlTW9kZTtcblx0XHRMYXlhLnN0YWdlLnNjcmVlbk1vZGUgPSBHYW1lQ29uZmlnLnNjcmVlbk1vZGU7XG5cdFx0Ly/lhbzlrrnlvq7kv6HkuI3mlK/mjIHliqDovb1zY2VuZeWQjue8gOWcuuaZr1xuXHRcdExheWEuVVJMLmV4cG9ydFNjZW5lVG9Kc29uID0gR2FtZUNvbmZpZy5leHBvcnRTY2VuZVRvSnNvbjtcblxuXHRcdC8v5omT5byA6LCD6K+V6Z2i5p2/77yI6YCa6L+HSURF6K6+572u6LCD6K+V5qih5byP77yM5oiW6ICFdXJs5Zyw5Z2A5aKe5YqgZGVidWc9dHJ1ZeWPguaVsO+8jOWdh+WPr+aJk+W8gOiwg+ivlemdouadv++8iVxuXHRcdGlmIChHYW1lQ29uZmlnLmRlYnVnIHx8IExheWEuVXRpbHMuZ2V0UXVlcnlTdHJpbmcoXCJkZWJ1Z1wiKSA9PSBcInRydWVcIikgTGF5YS5lbmFibGVEZWJ1Z1BhbmVsKCk7XG5cdFx0aWYgKEdhbWVDb25maWcucGh5c2ljc0RlYnVnICYmIExheWFbXCJQaHlzaWNzRGVidWdEcmF3XCJdKSBMYXlhW1wiUGh5c2ljc0RlYnVnRHJhd1wiXS5lbmFibGUoKTtcblx0XHRpZiAoR2FtZUNvbmZpZy5zdGF0KSBMYXlhLlN0YXQuc2hvdygpO1xuXHRcdExheWEuYWxlcnRHbG9iYWxFcnJvciA9IHRydWU7XG5cblx0XHRpZih0cnVlID09IEFwcENvbmZpZy5vblRUTWluaUdhbWUpXG5cdFx0e1xuXHRcdFx0TGF5YS5Ccm93c2VyLm9uTWluaUdhbWUgPSBmYWxzZTtcblx0XHR9XG5cblx0XHRpZighTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUgXG5cdFx0XHQmJiAhTGF5YS5Ccm93c2VyLm9uUUdNaW5pR2FtZSBcblx0XHRcdCYmICFMYXlhLkJyb3dzZXIub25RUU1pbmlHYW1lXG5cdFx0XHQmJiAhQXBwQ29uZmlnLm9uVFRNaW5pR2FtZSkvL+WmguaenOS4jeaYr+Wwj+a4uOaIj++8jOi1hOa6kOacjeWKoeWZqOiuvue9ruS4uuacrOWcsOa1i+ivleWcsOWdgFxuXHRcdHtcblx0XHRcdC8vIEFwcENvbmZpZy5SZXNTZXJ2ZXIgPSBBcHBDb25maWcuTG9jYWxUZXN0UmVTZXJ2ZXI7XG5cdFx0fVxuXG5cdFx0Ly/mv4DmtLvotYTmupDniYjmnKzmjqfliLbvvIx2ZXJzaW9uLmpzb27nlLFJREXlj5HluIPlip/og73oh6rliqjnlJ/miJDvvIzlpoLmnpzmsqHmnInkuZ/kuI3lvbHlk43lkI7nu63mtYHnqItcblx0XHRMYXlhLlJlc291cmNlVmVyc2lvbi5lbmFibGUoXCJ2ZXJzaW9uLmpzb25cIiwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLm9uVmVyc2lvbkxvYWRlZCksIExheWEuUmVzb3VyY2VWZXJzaW9uLkZJTEVOQU1FX1ZFUlNJT04pO1xuXHR9XG5cblx0b25WZXJzaW9uTG9hZGVkKCk6IHZvaWQge1xuXHRcdC8v5r+A5rS75aSn5bCP5Zu+5pig5bCE77yM5Yqg6L295bCP5Zu+55qE5pe25YCZ77yM5aaC5p6c5Y+R546w5bCP5Zu+5Zyo5aSn5Zu+5ZCI6ZuG6YeM6Z2i77yM5YiZ5LyY5YWI5Yqg6L295aSn5Zu+5ZCI6ZuG77yM6ICM5LiN5piv5bCP5Zu+XG5cdFx0TGF5YS5BdGxhc0luZm9NYW5hZ2VyLmVuYWJsZShcImZpbGVjb25maWcuanNvblwiLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMub25Db25maWdMb2FkZWQpKTtcblx0fVxuXG5cdG9uQ29uZmlnTG9hZGVkKCk6IHZvaWQge1xuXHRcdExheWEubG9hZGVyLm1heExvYWRlciA9IDUwO1xuXHRcdHRoaXMuaW5pdExvYWRpbmdWaWV3KClcblx0XHQvL+WKoOi9vemHjeimgemFjee9ru+8jOi/meS6m+mFjee9ruW/hemhu+WcqOa4uOaIj+WQr+WKqOWJjeWKoOi9veWujOaIkFxuXHRcdHZhciBmaXJzdENvbmZpZ3MgPSBcblx0XHRbXG5cdFx0XHR7IHVybDogQXBwQ29uZmlnLlJlc1NlcnZlciArIFwiL2pzb24vYXBwc3dpdGNoLmpzb25cIiwgdHlwZTogTGF5YS5Mb2FkZXIuSlNPTiB9XG5cdFx0XVxuXHRcdHZhciBzZWxmID0gdGhpcztcblx0XHRMYXlhLmxvYWRlci5sb2FkKGZpcnN0Q29uZmlncyxMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsKCk9PlxuXHRcdHtcblx0XHRcdHNlbGYubG9hZFJlcygpOy8v5Yqg6L296LWE5rqQXG5cdFx0fSkpXG5cdFx0RXZlbnRNZ3IuaW5zdGFuY2UucmVnT25jZUV2ZW50KEV2ZW50RGVmLkFwcF9DbG9zZUZpcnN0TG9hZGluZ1ZpZXcsdGhpcyx0aGlzLmNsb3NlbG9hZGluZ1VJKTtcblx0fVxuXG5cdHByaXZhdGUgaW5pdExvYWRpbmdWaWV3KClcblx0e1xuXHRcdHRoaXMuX2xvYWRpbmdVSSA9IG5ldyB1aS5WaWV3LkxvYWRpbmdVSSgpO1xuXHRcdExheWEuc3RhZ2UuYWRkQ2hpbGQodGhpcy5fbG9hZGluZ1VJKTtcblx0XHR0aGlzLl9sb2FkaW5nVUkud2lkdGggPSBMYXlhLnN0YWdlLndpZHRoO1xuXHRcdHRoaXMuX2xvYWRpbmdVSS5oZWlnaHQgPSBMYXlhLnN0YWdlLmhlaWdodDtcblx0XHR0aGlzLl9sb2FkaW5nVmlldyA9IHRoaXMuX2xvYWRpbmdVSS5nZXRDb21wb25lbnQoTG9hZGluZ1ZpZXcpXG5cdFx0dGhpcy5fbG9hZGluZ1ZpZXcuc2V0UHJvY2VzcygwKTtcblx0fVxuXG5cblx0cHJpdmF0ZSBwb3N0UmVzVG9PcGVuRGF0YUNvbnRleHQob25Db21wbGF0ZSA6IEZ1bmN0aW9uKVxuXHR7XG5cdFx0aWYoTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpXG5cdFx0e1xuXHRcdFx0Y29uc29sZS5sb2coXCLlvIDlp4vpgI/kvKDotYTmupDmlbDmja7liLDlvIDmlL7ln59cIik7XG5cdFx0XHRMYXlhLmxvYWRlci5sb2FkKFxuXHRcdFx0XHRbXG5cdFx0XHRcdFx0XCJvcGVuUmVzL1JhbmsuYXRsYXNcIixcblx0XHRcdFx0XVxuXHRcdFx0XHQsTGF5YS5IYW5kbGVyLmNyZWF0ZShudWxsLGZ1bmN0aW9uKClcblx0XHRcdHtcblx0XHRcdFx0TGF5YS5NaW5pQWRwdGVyLnNlbmRBdGxhc1RvT3BlbkRhdGFDb250ZXh0KFwib3BlblJlcy9SYW5rLmF0bGFzXCIpOyAgICBcblx0XHRcdFx0Y29uc29sZS5sb2coXCLpgI/kvKDotYTmupDmlbDmja7liLDlvIDmlL7ln58gIOWujOavle+8ge+8ge+8gVwiKTtcblx0XHRcdFx0aWYob25Db21wbGF0ZSlcblx0XHRcdFx0e1xuXHRcdFx0XHRcdG9uQ29tcGxhdGUoKTtcblx0XHRcdFx0fVxuXHRcdFx0fSkpO1xuXHRcdH1cblx0XHRlbHNlXG5cdFx0e1xuXHRcdFx0aWYob25Db21wbGF0ZSlcblx0XHRcdHtcblx0XHRcdFx0b25Db21wbGF0ZSgpO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHByaXZhdGUgcHJlTG9hZCgpXG5cdHtcblx0XHQvL+i/memHjOa3u+WKoOS9oOmcgOimgemihOWKoOi9veeahOi1hOa6kFxuXHRcdHRoaXMuX3ByZUxvYWRSZXMucHVzaCh7IHVybDogQXBwQ29uZmlnLlJlc1NlcnZlciArIFwiL2pzb24vbGV2ZWxDb25maWcuanNvblwiLCB0eXBlOiBMYXlhLkxvYWRlci5KU09OIH0pO1xuXHRcdHRoaXMuX3ByZUxvYWRSZXMucHVzaCh7IHVybDogQXBwQ29uZmlnLlJlc1NlcnZlciArIFwiL2pzb24vc2tpbkNvbmZpZy5qc29uXCIsIHR5cGU6IExheWEuTG9hZGVyLkpTT04gfSk7XG5cdFx0dGhpcy5fcHJlTG9hZFJlcy5wdXNoKHsgdXJsOiBBcHBDb25maWcuUmVzU2VydmVyICsgXCIvanNvbi9nYW1lQ29uZmlnLmpzb25cIiwgdHlwZTogTGF5YS5Mb2FkZXIuSlNPTiB9KTtcblx0fVxuXG5cdGxvYWRSZXMoKTogdm9pZCB7XG5cdFx0dGhpcy5wcmVMb2FkKCk7XG5cdFx0dmFyIHJlc291cmNlOiBBcnJheTxhbnk+ID0gdGhpcy5fcHJlTG9hZFJlcztcblx0XHR2YXIgc2VsZiA9IHRoaXM7XG5cdFx0aWYgKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lKSB7XG5cdFx0XHQvL+W8gOWni+WKoOi9veWIhuWMhVxuXHRcdFx0dmFyIGxvYWRTdWJSZXNUYXNrOiBhbnkgPSBMYXlhLkJyb3dzZXIud2luZG93W1wid3hcIl0ubG9hZFN1YnBhY2thZ2Uoe1xuXHRcdFx0XHRuYW1lOiAnc3ViUmVzJyxcblx0XHRcdFx0c3VjY2VzczogKHJlcykgPT4ge1xuXG5cdFx0XHRcdFx0Ly8g5YiG5YyF5Yqg6L295oiQ5YqfLOW8gOWni+mihOWKoOi9vei1hOa6kFxuXHRcdFx0XHRcdGlmKHJlc291cmNlLmxlbmd0aCA+IDApXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0TGF5YS5sb2FkZXIubG9hZChyZXNvdXJjZSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAoKSA9PiB7XG5cdFx0XHRcdFx0XHRcdHNlbGYub25Mb2FkUmVzQ29tcGxhdGUoKTsvL+mihOWKoOi9veWujOaIkFxuXHRcdFx0XHRcdFx0fSksIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKHJlcykgPT4ge1xuXHRcdFx0XHRcdFx0XHQvL3RvZG866Lef5paw6L+b5bqm5p2hXG5cdFx0XHRcdFx0XHRcdHNlbGYuX2xvYWRpbmdWaWV3LnNldFByb2Nlc3MocmVzIC8gMiArIDAuNSk7XG5cdFx0XHRcdFx0XHR9KSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGVsc2Vcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRzZWxmLm9uTG9hZFJlc0NvbXBsYXRlKCk7Ly/pooTliqDovb3lrozmiJBcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0sXG5cdFx0XHRcdGZhaWw6IChyZXMpID0+IFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0dGhpcy5sb2FkUmVzKCk7Ly/liqDovb3lpLHotKXvvIzph43mlrDliqDovb1cblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cdFx0XHRsb2FkU3ViUmVzVGFzay5vblByb2dyZXNzVXBkYXRlKHJlcyA9PiBcblx0XHRcdHtcblx0XHRcdFx0c2VsZi5fbG9hZGluZ1ZpZXcuc2V0UHJvY2VzcyhyZXMgLyAyKTtcblx0XHRcdH0pO1xuXHRcdH0gXG5cdFx0ZWxzZSBpZihMYXlhLkJyb3dzZXIub25RR01pbmlHYW1lKSAvL29wcG/lsI/muLjmiI9cblx0XHR7XG5cdFx0XHQvL+W8gOWni+WKoOi9veWIhuWMhVxuXHRcdFx0dmFyIGxvYWRTdWJSZXNUYXNrOiBhbnkgPSBMYXlhLkJyb3dzZXIud2luZG93W1wicWdcIl0ubG9hZFN1YnBhY2thZ2Uoe1xuXHRcdFx0XHRuYW1lOiAnc3ViUmVzJyxcblx0XHRcdFx0c3VjY2VzczogKHJlcykgPT4ge1xuXG5cdFx0XHRcdFx0Ly8g5YiG5YyF5Yqg6L295oiQ5YqfLOW8gOWni+mihOWKoOi9vei1hOa6kFxuXHRcdFx0XHRcdGlmIChyZXNvdXJjZS5sZW5ndGggPiAwKSB7XG5cdFx0XHRcdFx0XHRMYXlhLmxvYWRlci5sb2FkKHJlc291cmNlLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsICgpID0+IHtcblx0XHRcdFx0XHRcdFx0c2VsZi5vbkxvYWRSZXNDb21wbGF0ZSgpOy8v6aKE5Yqg6L295a6M5oiQXG5cdFx0XHRcdFx0XHR9KSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAocmVzKSA9PiB7XG5cdFx0XHRcdFx0XHRcdC8vdG9kbzrot5/mlrDov5vluqbmnaFcblx0XHRcdFx0XHRcdFx0c2VsZi5fbG9hZGluZ1ZpZXcuc2V0UHJvY2VzcyhyZXMgLyAyICsgMC41KTtcblx0XHRcdFx0XHRcdH0pKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZWxzZSB7XG5cdFx0XHRcdFx0XHRzZWxmLm9uTG9hZFJlc0NvbXBsYXRlKCk7Ly/pooTliqDovb3lrozmiJBcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0sXG5cdFx0XHRcdGZhaWw6IChyZXMpID0+IHtcblx0XHRcdFx0XHR0aGlzLmxvYWRSZXMoKTsvL+WKoOi9veWksei0pe+8jOmHjeaWsOWKoOi9vVxuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0XHRcdGxvYWRTdWJSZXNUYXNrLm9uUHJvZ3Jlc3NVcGRhdGUocmVzID0+IHtcblx0XHRcdFx0Ly8g5Yqg6L296L+b5bqm55m+5YiG5q+UXG5cdFx0XHRcdHZhciBwcm9ncmVzcyA9IHJlc1tcInByb2dyZXNzXCJdO1xuXHRcdFx0XHQvLyDkuIvovb3mlbDmja5cblx0XHRcdFx0dmFyIHRvdGFsQnl0ZXNXcml0dGVuID0gcmVzW1widG90YWxCeXRlc1dyaXR0ZW5cIl07XG5cdFx0XHRcdC8vIOaAu+mVv+W6plxuXHRcdFx0XHR2YXIgdG90YWxCeXRlc0V4cGVjdGVkVG9Xcml0ZSA9IHJlc1tcInRvdGFsQnl0ZXNFeHBlY3RlZFRvV3JpdGVcIl07XG5cdFx0XHRcdHNlbGYuX2xvYWRpbmdWaWV3LnNldFByb2Nlc3MocHJvZ3Jlc3MgLyAyKTtcblx0XHRcdH0pO1xuXHRcdH1cblx0XHRlbHNlIGlmIChMYXlhLkJyb3dzZXIub25RUU1pbmlHYW1lKSB7XG5cdFx0XHQvL+W8gOWni+WKoOi9veWIhuWMhVxuXHRcdFx0dmFyIGxvYWRTdWJSZXNUYXNrOiBhbnkgPSBMYXlhLkJyb3dzZXIud2luZG93W1wicXFcIl0ubG9hZFN1YnBhY2thZ2Uoe1xuXHRcdFx0XHRuYW1lOiAnc3ViUmVzJyxcblx0XHRcdFx0c3VjY2VzczogKHJlcykgPT4ge1xuXG5cdFx0XHRcdFx0Ly8g5YiG5YyF5Yqg6L295oiQ5YqfLOW8gOWni+mihOWKoOi9vei1hOa6kFxuXHRcdFx0XHRcdGlmKHJlc291cmNlLmxlbmd0aCA+IDApXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0TGF5YS5sb2FkZXIubG9hZChyZXNvdXJjZSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAoKSA9PiB7XG5cdFx0XHRcdFx0XHRcdHNlbGYub25Mb2FkUmVzQ29tcGxhdGUoKTsvL+mihOWKoOi9veWujOaIkFxuXHRcdFx0XHRcdFx0fSksIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKHJlcykgPT4ge1xuXHRcdFx0XHRcdFx0XHQvL3RvZG866Lef5paw6L+b5bqm5p2hXG5cdFx0XHRcdFx0XHRcdHNlbGYuX2xvYWRpbmdWaWV3LnNldFByb2Nlc3MocmVzIC8gMiArIDAuNSk7XG5cdFx0XHRcdFx0XHR9KSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGVsc2Vcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRzZWxmLm9uTG9hZFJlc0NvbXBsYXRlKCk7Ly/pooTliqDovb3lrozmiJBcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0sXG5cdFx0XHRcdGZhaWw6IChyZXMpID0+IFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0dGhpcy5sb2FkUmVzKCk7Ly/liqDovb3lpLHotKXvvIzph43mlrDliqDovb1cblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cdFx0XHRsb2FkU3ViUmVzVGFzay5vblByb2dyZXNzVXBkYXRlKHJlcyA9PiBcblx0XHRcdHtcblx0XHRcdFx0c2VsZi5fbG9hZGluZ1ZpZXcuc2V0UHJvY2VzcyhyZXMgLyAyKTtcblx0XHRcdH0pO1xuXHRcdH0gXG5cdFx0ZWxzZSAgey8v5a2X6IqC6Lez5Yqo5rKh5pyJ5YiG5YyFXG5cdFx0XHRpZiAocmVzb3VyY2UubGVuZ3RoID4gMCkge1xuXHRcdFx0XHRMYXlhLmxvYWRlci5sb2FkKHJlc291cmNlLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsICgpID0+IHtcblx0XHRcdFx0XHRzZWxmLm9uTG9hZFJlc0NvbXBsYXRlKCk7XG5cdFx0XHRcdH0pLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIChyZXMpID0+IHtcblx0XHRcdFx0XHRzZWxmLl9sb2FkaW5nVmlldy5zZXRQcm9jZXNzKHJlcyk7XG5cdFx0XHRcdH0pKTtcblx0XHRcdH1cblx0XHRcdGVsc2Uge1xuXHRcdFx0XHRzZWxmLm9uTG9hZFJlc0NvbXBsYXRlKCk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0b25Mb2FkUmVzQ29tcGxhdGUoKSB7XG5cdFx0dmFyIHNlbGYgPSB0aGlzO1xuXHRcdHRoaXMuX2xvYWRpbmdWaWV3LnNldFByb2Nlc3MoMSk7XG5cdFx0aWYoTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpXG5cdFx0e1xuXHRcdFx0V1hBUEkud3hMb2dpbihmdW5jdGlvbiAoY29kZSkge1xuXHRcdFx0XHRVc2VyLmNvZGUgPSBjb2RlXG5cdFx0XHRcdEh0dHBVbml0LmxvZ2luKFxuXHRcdFx0XHQocmVzKT0+IFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0aWYocmVzLmNvZGUgPT0gMSlcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRjb25zb2xlLmxvZyhcIueZu+mZhuaIkOWKn++8ge+8ge+8gVwiKTtcblx0XHRcdFx0XHRcdFVzZXIudG9rZW4gPSByZXMuZGF0YS50b2tlbjtcblx0XHRcdFx0XHRcdFVzZXIub3BlbklkID0gcmVzLmRhdGEub3BlbmlkO1xuXHRcdFx0XHRcdFx0QUxELmFsZFNlbmRPcGVuSWQoVXNlci5vcGVuSWQpO1xuXHRcdFx0XHRcdFx0SHR0cFVuaXQuZ2V0R2FtZURhdGEoKHJlcyk9Pntcblx0XHRcdFx0XHRcdFx0Y29uc29sZS5sb2coXCLojrflj5bnlKjmiLfmlbDmja7miJDlip/vvIHvvIHvvIFcIik7XG5cdFx0XHRcdFx0XHRcdGlmKDEgPT0gcmVzLmNvZGUpXG5cdFx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0XHRVc2VyLmluaXRpVXNlcihyZXMuZGF0YSk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0ZWxzZVxuXHRcdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdFx0VXNlci5pbml0aVVzZXIobnVsbCk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0R2FtZUNvbmZpZy5zdGFydFNjZW5lICYmIExheWEuU2NlbmUub3BlbihHYW1lQ29uZmlnLnN0YXJ0U2NlbmUsIGZhbHNlLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHRcdFx0XHRcblx0XHRcdFx0XHRcdFx0fSkpO1xuXHRcdFx0XHRcdFx0fSwocmVzKT0+e1xuXHRcdFx0XHRcdFx0XHRjb25zb2xlLmxvZyhcIuiOt+WPlueUqOaIt+aVsOaNruWksei0pe+8ge+8ge+8gVwiKTtcblx0XHRcdFx0XHRcdFx0VXNlci50b2tlbiA9IFwiXCI7XG5cdFx0XHRcdFx0XHRcdFVzZXIub3BlbklkID0gXCJcIjtcblx0XHRcdFx0XHRcdFx0VXNlci5pbml0aVVzZXIobnVsbCk7XG5cdFx0XHRcdFx0XHRcdEdhbWVDb25maWcuc3RhcnRTY2VuZSAmJiBMYXlhLlNjZW5lLm9wZW4oR2FtZUNvbmZpZy5zdGFydFNjZW5lLCBmYWxzZSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0XHRcdFx0XG5cdFx0XHRcdFx0XHRcdH0pKTtcblx0XHRcdFx0XHRcdH0pXG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGVsc2Vcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRjb25zb2xlLmxvZyhcIueZu+mZhuWksei0pe+8ge+8ge+8gVwiICsgcmVzKTtcblx0XHRcdFx0XHRcdFVzZXIuaW5pdGlVc2VyKG51bGwpO1xuXHRcdFx0XHRcdFx0R2FtZUNvbmZpZy5zdGFydFNjZW5lICYmIExheWEuU2NlbmUub3BlbihHYW1lQ29uZmlnLnN0YXJ0U2NlbmUsIGZhbHNlLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHRcdFx0XG5cdFx0XHRcdFx0XHR9KSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9LFxuXHRcdFx0XHQocmVzKSA9PiBcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGNvbnNvbGUubG9nKFwi55m76ZmG5aSx6LSl77yB77yB77yBXCIgKyByZXMpO1xuXHRcdFx0XHRcdFVzZXIuaW5pdGlVc2VyKG51bGwpO1xuXHRcdFx0XHRcdEdhbWVDb25maWcuc3RhcnRTY2VuZSAmJiBMYXlhLlNjZW5lLm9wZW4oR2FtZUNvbmZpZy5zdGFydFNjZW5lLCBmYWxzZSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0XHRcblx0XHRcdFx0XHR9KSk7XG5cdFx0XHRcdH0pXG5cdFx0XHR9LCBudWxsKVxuXHRcdH1cblx0XHRlbHNlIGlmKExheWEuQnJvd3Nlci5vblFHTWluaUdhbWUpIC8vb3Bwb+Wwj+a4uOaIj1xuXHRcdHtcblx0XHRcdE9QUE9BUEkuaW5pdEFkU2VydmljZSgoKT0+e1xuXHRcblx0XHRcdH0sKCk9PlxuXHRcdFx0e1xuXG5cdFx0XHR9LCgpPT5cblx0XHRcdHtcblx0XHRcdFx0XG5cdFx0XHR9KTtcblxuXHRcdFx0T1BQT0FQSS5Mb2dpbihmdW5jdGlvbiAodG9rZW4pIHtcblx0XHRcdFx0VXNlci5jb2RlID0gdG9rZW47XG5cdFx0XHRcdEh0dHBVbml0LmxvZ2luKFxuXHRcdFx0XHRcdChyZXMpPT4gXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0aWYocmVzLmNvZGUgPT0gMSlcblx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0Y29uc29sZS5sb2coXCLnmbvpmYbmiJDlip/vvIHvvIHvvIFcIik7XG5cdFx0XHRcdFx0XHRcdFVzZXIudG9rZW4gPSByZXMuZGF0YS50b2tlbjtcblx0XHRcdFx0XHRcdFx0VXNlci5vcGVuSWQgPSByZXMuZGF0YS5vcGVuaWQ7XG5cdFx0XHRcdFx0XHRcdEh0dHBVbml0LmdldEdhbWVEYXRhKChyZXMpPT57XG5cdFx0XHRcdFx0XHRcdFx0Y29uc29sZS5sb2coXCLojrflj5bnlKjmiLfmlbDmja7miJDlip/vvIHvvIHvvIFcIik7XG5cdFx0XHRcdFx0XHRcdFx0aWYoMSA9PSByZXMuY29kZSlcblx0XHRcdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdFx0XHRVc2VyLmluaXRpVXNlcihyZXMuZGF0YSk7XG5cdFx0XHRcdFx0XHRcdFx0XHRjb25zb2xlLmxvZyhcIuiOt+WPlueUqOaIt+aVsOaNri0tLS0tLS0tLS0tLS0tLS0tLS0tU3RhcnRcIik7XG5cdFx0XHRcdFx0XHRcdFx0XHRmb3IodmFyIGtleSBpbiByZXMuZGF0YSlcblx0XHRcdFx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0Y29uc29sZS5sb2coa2V5LCByZXMuZGF0YVtrZXldKTtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRcdGNvbnNvbGUubG9nKFwi6I635Y+W55So5oi35pWw5o2uLS0tLS0tLS0tLS0tLS0tLS0tLS1FbmRcIik7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdGVsc2Vcblx0XHRcdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdFx0XHRVc2VyLmluaXRpVXNlcihudWxsKTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0R2FtZUNvbmZpZy5zdGFydFNjZW5lICYmIExheWEuU2NlbmUub3BlbihHYW1lQ29uZmlnLnN0YXJ0U2NlbmUsIGZhbHNlLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcblxuXHRcdFx0XHRcdFx0XHRcdH0pKTtcblx0XHRcdFx0XHRcdFx0fSwocmVzKT0+e1xuXHRcdFx0XHRcdFx0XHRcdGNvbnNvbGUubG9nKFwi6I635Y+W55So5oi35pWw5o2u5aSx6LSl77yB77yB77yBXCIpO1xuXHRcdFx0XHRcdFx0XHRcdFVzZXIudG9rZW4gPSBcIlwiO1xuXHRcdFx0XHRcdFx0XHRcdFVzZXIub3BlbklkID0gXCJcIjtcblx0XHRcdFx0XHRcdFx0XHRVc2VyLmluaXRpVXNlcihudWxsKTtcblx0XHRcdFx0XHRcdFx0XHRHYW1lQ29uZmlnLnN0YXJ0U2NlbmUgJiYgTGF5YS5TY2VuZS5vcGVuKEdhbWVDb25maWcuc3RhcnRTY2VuZSwgZmFsc2UsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xuXG5cdFx0XHRcdFx0XHRcdFx0fSkpO1xuXHRcdFx0XHRcdFx0XHR9KVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0ZWxzZVxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRjb25zb2xlLmxvZyhcIueZu+mZhuWksei0pe+8ge+8ge+8gVwiLHJlcyk7XG5cdFx0XHRcdFx0XHRcdFVzZXIuaW5pdGlVc2VyKG51bGwpO1xuXHRcdFx0XHRcdFx0XHRHYW1lQ29uZmlnLnN0YXJ0U2NlbmUgJiYgTGF5YS5TY2VuZS5vcGVuKEdhbWVDb25maWcuc3RhcnRTY2VuZSwgZmFsc2UsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xuXHRcblx0XHRcdFx0XHRcdFx0fSkpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0KHJlcykgPT4gXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0Y29uc29sZS5sb2coXCLnmbvpmYblpLHotKXvvIHvvIHvvIFcIixyZXMpO1xuXHRcdFx0XHRcdFx0VXNlci5pbml0aVVzZXIobnVsbCk7XG5cdFx0XHRcdFx0XHRHYW1lQ29uZmlnLnN0YXJ0U2NlbmUgJiYgTGF5YS5TY2VuZS5vcGVuKEdhbWVDb25maWcuc3RhcnRTY2VuZSwgZmFsc2UsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xuXG5cdFx0XHRcdFx0XHR9KSk7XG5cdFx0XHRcdFx0fSlcblx0XHRcdH0sIG51bGwpXG5cdFx0fVxuXHRcdGVsc2UgaWYoTGF5YS5Ccm93c2VyLm9uUVFNaW5pR2FtZSkgIC8vcXHlsI/muLjmiI9cblx0XHR7XG5cdFx0XHRRUU1pbmlHYW1lQVBJLkxvZ2luKGZ1bmN0aW9uIChjb2RlKSB7XG5cdFx0XHRcdFVzZXIuY29kZSA9IGNvZGVcblx0XHRcdFx0SHR0cFVuaXQubG9naW4oXG5cdFx0XHRcdChyZXMpPT4gXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRpZihyZXMuY29kZSA9PSAxKVxuXHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdGNvbnNvbGUubG9nKFwi55m76ZmG5oiQ5Yqf77yB77yB77yBXCIpO1xuXHRcdFx0XHRcdFx0VXNlci50b2tlbiA9IHJlcy5kYXRhLnRva2VuO1xuXHRcdFx0XHRcdFx0VXNlci5vcGVuSWQgPSByZXMuZGF0YS5vcGVuaWQ7XG5cdFx0XHRcdFx0XHRBTEQuYWxkU2VuZE9wZW5JZChVc2VyLm9wZW5JZCk7XG5cdFx0XHRcdFx0XHRIdHRwVW5pdC5nZXRHYW1lRGF0YSgocmVzKT0+e1xuXHRcdFx0XHRcdFx0XHRjb25zb2xlLmxvZyhcIuiOt+WPlueUqOaIt+aVsOaNruaIkOWKn++8ge+8ge+8gVwiKTtcblx0XHRcdFx0XHRcdFx0aWYoMSA9PSByZXMuY29kZSlcblx0XHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRcdFVzZXIuaW5pdGlVc2VyKHJlcy5kYXRhKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRlbHNlXG5cdFx0XHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdFx0XHRVc2VyLmluaXRpVXNlcihudWxsKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRHYW1lQ29uZmlnLnN0YXJ0U2NlbmUgJiYgTGF5YS5TY2VuZS5vcGVuKEdhbWVDb25maWcuc3RhcnRTY2VuZSwgZmFsc2UsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRcdFx0XHRcdFxuXHRcdFx0XHRcdFx0XHR9KSk7XG5cdFx0XHRcdFx0XHR9LChyZXMpPT57XG5cdFx0XHRcdFx0XHRcdGNvbnNvbGUubG9nKFwi6I635Y+W55So5oi35pWw5o2u5aSx6LSl77yB77yB77yBXCIpO1xuXHRcdFx0XHRcdFx0XHRVc2VyLnRva2VuID0gXCJcIjtcblx0XHRcdFx0XHRcdFx0VXNlci5vcGVuSWQgPSBcIlwiO1xuXHRcdFx0XHRcdFx0XHRVc2VyLmluaXRpVXNlcihudWxsKTtcblx0XHRcdFx0XHRcdFx0R2FtZUNvbmZpZy5zdGFydFNjZW5lICYmIExheWEuU2NlbmUub3BlbihHYW1lQ29uZmlnLnN0YXJ0U2NlbmUsIGZhbHNlLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHRcdFx0XHRcblx0XHRcdFx0XHRcdFx0fSkpO1xuXHRcdFx0XHRcdFx0fSlcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZWxzZVxuXHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdGNvbnNvbGUubG9nKFwi55m76ZmG5aSx6LSl77yB77yB77yBXCIgKyByZXMpO1xuXHRcdFx0XHRcdFx0VXNlci5pbml0aVVzZXIobnVsbCk7XG5cdFx0XHRcdFx0XHRHYW1lQ29uZmlnLnN0YXJ0U2NlbmUgJiYgTGF5YS5TY2VuZS5vcGVuKEdhbWVDb25maWcuc3RhcnRTY2VuZSwgZmFsc2UsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRcdFx0XHRcblx0XHRcdFx0XHRcdH0pKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0sXG5cdFx0XHRcdChyZXMpID0+IFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0Y29uc29sZS5sb2coXCLnmbvpmYblpLHotKXvvIHvvIHvvIFcIiArIHJlcyk7XG5cdFx0XHRcdFx0VXNlci5pbml0aVVzZXIobnVsbCk7XG5cdFx0XHRcdFx0R2FtZUNvbmZpZy5zdGFydFNjZW5lICYmIExheWEuU2NlbmUub3BlbihHYW1lQ29uZmlnLnN0YXJ0U2NlbmUsIGZhbHNlLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHRcdFxuXHRcdFx0XHRcdH0pKTtcblx0XHRcdFx0fSlcblx0XHRcdH0sIG51bGwpXG5cdFx0fVxuXHRcdGVsc2UgaWYoQXBwQ29uZmlnLm9uVFRNaW5pR2FtZSkvL+WktOadoe+8jOWtl+iKgui3s+WKqFxuXHRcdHtcblx0XHRcdFRUQVBJLnR0TG9naW4oZnVuY3Rpb24gKGNvZGUpIHtcblx0XHRcdFx0VXNlci5jb2RlID0gY29kZVxuXHRcdFx0XHRIdHRwVW5pdC5sb2dpbihcblx0XHRcdFx0KHJlcyk9PiBcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGlmKHJlcy5jb2RlID09IDEpXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0Y29uc29sZS5sb2coXCLnmbvpmYbmiJDlip/vvIHvvIHvvIFcIik7XG5cdFx0XHRcdFx0XHRVc2VyLnRva2VuID0gcmVzLmRhdGEudG9rZW47XG5cdFx0XHRcdFx0XHRVc2VyLm9wZW5JZCA9IHJlcy5kYXRhLm9wZW5pZDtcblx0XHRcdFx0XHRcdEh0dHBVbml0LmdldEdhbWVEYXRhKChyZXMpPT57XG5cdFx0XHRcdFx0XHRcdGNvbnNvbGUubG9nKFwi6I635Y+W55So5oi35pWw5o2u5oiQ5Yqf77yB77yB77yBXCIpO1xuXHRcdFx0XHRcdFx0XHRpZigxID09IHJlcy5jb2RlKVxuXHRcdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdFx0VXNlci5pbml0aVVzZXIocmVzLmRhdGEpO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdGVsc2Vcblx0XHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHRcdFVzZXIuaW5pdGlVc2VyKG51bGwpO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdEdhbWVDb25maWcuc3RhcnRTY2VuZSAmJiBMYXlhLlNjZW5lLm9wZW4oR2FtZUNvbmZpZy5zdGFydFNjZW5lLCBmYWxzZSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0XHRcdFx0XG5cdFx0XHRcdFx0XHRcdH0pKTtcblx0XHRcdFx0XHRcdH0sKHJlcyk9Pntcblx0XHRcdFx0XHRcdFx0Y29uc29sZS5sb2coXCLojrflj5bnlKjmiLfmlbDmja7lpLHotKXvvIHvvIHvvIFcIik7XG5cdFx0XHRcdFx0XHRcdFVzZXIudG9rZW4gPSBcIlwiO1xuXHRcdFx0XHRcdFx0XHRVc2VyLm9wZW5JZCA9IFwiXCI7XG5cdFx0XHRcdFx0XHRcdFVzZXIuaW5pdGlVc2VyKG51bGwpO1xuXHRcdFx0XHRcdFx0XHRHYW1lQ29uZmlnLnN0YXJ0U2NlbmUgJiYgTGF5YS5TY2VuZS5vcGVuKEdhbWVDb25maWcuc3RhcnRTY2VuZSwgZmFsc2UsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRcdFx0XHRcdFxuXHRcdFx0XHRcdFx0XHR9KSk7XG5cdFx0XHRcdFx0XHR9KVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRlbHNlXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0Y29uc29sZS5sb2coXCLnmbvpmYblpLHotKXvvIHvvIHvvIFcIiArIHJlcyk7XG5cdFx0XHRcdFx0XHRVc2VyLmluaXRpVXNlcihudWxsKTtcblx0XHRcdFx0XHRcdEdhbWVDb25maWcuc3RhcnRTY2VuZSAmJiBMYXlhLlNjZW5lLm9wZW4oR2FtZUNvbmZpZy5zdGFydFNjZW5lLCBmYWxzZSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0XHRcdFxuXHRcdFx0XHRcdFx0fSkpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSxcblx0XHRcdFx0KHJlcykgPT4gXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRjb25zb2xlLmxvZyhcIueZu+mZhuWksei0pe+8ge+8ge+8gVwiICsgcmVzKTtcblx0XHRcdFx0XHRVc2VyLmluaXRpVXNlcihudWxsKTtcblx0XHRcdFx0XHRHYW1lQ29uZmlnLnN0YXJ0U2NlbmUgJiYgTGF5YS5TY2VuZS5vcGVuKEdhbWVDb25maWcuc3RhcnRTY2VuZSwgZmFsc2UsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRcdFx0XG5cdFx0XHRcdFx0fSkpO1xuXHRcdFx0XHR9KVxuXHRcdFx0fSwgKCkgPT4ge1xuXHRcdFx0XHRVc2VyLmluaXRpVXNlcihudWxsKTtcblx0XHRcdFx0R2FtZUNvbmZpZy5zdGFydFNjZW5lICYmIExheWEuU2NlbmUub3BlbihHYW1lQ29uZmlnLnN0YXJ0U2NlbmUsIGZhbHNlLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHRcblx0XHRcdFx0fSkpO1xuXHRcdFx0fSlcblx0XHR9XG5cdFx0ZWxzZVxuXHRcdHtcblx0XHRcdFVzZXIudGVzdEluaXRVc2VyKCk7Ly/mtYvor5Vcblx0XHRcdEdhbWVDb25maWcuc3RhcnRTY2VuZSAmJiBMYXlhLlNjZW5lLm9wZW4oR2FtZUNvbmZpZy5zdGFydFNjZW5lLCBmYWxzZSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFxuXHRcdFx0fSkpO1xuXHRcdH1cblx0fVxuXG5cdHByb3RlY3RlZCBjbG9zZWxvYWRpbmdVSSgpXG5cdHtcblx0XHRpZih0aGlzLl9sb2FkaW5nVUkgJiYgIXRoaXMuX2xvYWRpbmdVSS5kZXN0cm95ZWQpXG5cdFx0e1xuXHRcdFx0dGhpcy5fbG9hZGluZ1VJLmRlc3Ryb3koKTtcblx0XHR9XG5cdH1cbn1cbi8v5r+A5rS75ZCv5Yqo57G7XG5uZXcgTWFpbigpO1xuIiwiaW1wb3J0IFV0aWxpdCBmcm9tIFwiLi4vVXRpbGl0XCI7XG5pbXBvcnQgVmlld01nciwgeyBWaWV3RGVmIH0gZnJvbSBcIi4vVmlld01nclwiO1xuaW1wb3J0IFVzZXIgZnJvbSBcIi4uL1VzZXIvVXNlclwiO1xuaW1wb3J0IEh0dHBVbml0IGZyb20gXCIuLi9OZXQvSHR0cFVuaXRcIjtcbmltcG9ydCBNYWlMaWFuZyBmcm9tIFwiLi4vTWFpTGlhbmdBUEkvTWFpTGlhbmdcIjtcbmltcG9ydCBFdmVudE1nciBmcm9tIFwiLi4vRXZlbnQvRXZlbnRNZ3JcIjtcbmltcG9ydCB7IEV2ZW50RGVmIH0gZnJvbSBcIi4uL0V2ZW50L0V2ZW50RGVmXCI7XG5pbXBvcnQgV1hBUEkgZnJvbSBcIi4uL1dYQVBJXCI7XG5pbXBvcnQgQXBwU3dpdGNoQ29uZmlnIGZyb20gXCIuLi9Db25maWcvQXBwU3dpdGNoQ29uZmlnXCI7XG5pbXBvcnQgV3VkaWFuTWdyIGZyb20gXCIuL1d1ZGlhbk1nclwiO1xuaW1wb3J0IENhY2hlZFdYQmFubmVyQWQgZnJvbSBcIi4uL0NhY2hlZFdYQmFubmVyQWRcIjtcbmltcG9ydCBBTEQgZnJvbSBcIi4uL0FMRFwiO1xuaW1wb3J0IFFRTWluaUdhbWVBUEkgZnJvbSBcIi4uL1FRTWluaUdhbWVBUElcIjtcbmltcG9ydCBXWEFETWdyIGZyb20gXCIuL1dYQURNZ3JcIjtcbmltcG9ydCBDYWNoZWRRUUJhbm5lckFkIGZyb20gXCIuLi9DYWNoZWRRUUJhbm5lckFkXCI7XG5pbXBvcnQgU291bmRNZ3IgZnJvbSBcIi4vU291bmRNZ3JcIjtcbmltcG9ydCB7IEZyZWVSZXdhcmRUeXBlIH0gZnJvbSBcIi4uL1ZpZXcvRnJlZVJld2FyZC9GcmVlUmV3YXJkVmlld1wiO1xuXG4vL+a4uOaIj+euoeeQhuWZqO+8jOa4uOaIj+S7o+eggeeahOWFpeWPo1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZU1nciBleHRlbmRzIExheWEuU2NyaXB0IHtcblxuICAgIHByaXZhdGUgc3RhdGljIF9pbnN0YW5jZTogR2FtZU1nciA9IG51bGw7XG4gICAgcHVibGljIHN0YXRpYyBnZXRJbnN0YW5jZSgpOiBHYW1lTWdyIHsgcmV0dXJuIEdhbWVNZ3IuX2luc3RhbmNlOyB9XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgR2FtZU1nci5faW5zdGFuY2UgPSB0aGlzO1xuICAgIH1cblxuICAgIG9uQXdha2UoKSB7XG4gICAgICAgIE1haUxpYW5nLkdldE1haUxpYW5nT3BlbklkKGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiR2FtZVVJIOS5sOmHj+aVsOaNruS4iuaKpeaIkOWKn1wiKTtcbiAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJ3eFwiXS5vblNob3coZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIE1haUxpYW5nLkdldE1haUxpYW5nT3BlbklkKG51bGwsIG51bGwpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJ3eFwiXS5vbkhpZGUoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIE1haUxpYW5nLlJlcG9ydFN0YXlUaW1lKG51bGwsIG51bGwpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgfSxcbiAgICAgICAgICAgIGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkdhbWVVSSDkubDph4/mlbDmja7kuIrmiqXlpLHotKVcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG5cbiAgICAgICAgV1hBUEkuU2V0U2hhcmVNZW51KFwi5oGQ6b6Z5a6d5a6d6KKr5Lq657uR5p625LqG77yM5b+r5p2l5pWR5pWR5a6D5ZCn77yBXCIsIFwic3ViUmVzL2ltYWdlL+WIhuS6q+Wbvi5wbmdcIixcbiAgICAgICAgICAgICgpID0+IHtcblxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICgpID0+IHtcblxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICgpID0+IHtcblxuICAgICAgICAgICAgfSlcblxuXG4gICAgICAgIFd1ZGlhbk1nci5VcGRhdGVJcEJsb2NrU3RhdGUoKTtcbiAgICAgICAgdGhpcy5yZXBvcnRMYXVuY2hPcHRpb25zKCk7XG5cbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lKSAge1xuICAgICAgICAgICAgQ2FjaGVkV1hCYW5uZXJBZC5wcmVsb2FkQmFubmVyKCk7XG4gICAgICAgICAgICBXWEFETWdyLmluaXQoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChMYXlhLkJyb3dzZXIub25RUU1pbmlHYW1lKSAge1xuICAgICAgICAgICAgQ2FjaGVkUVFCYW5uZXJBZC5wcmVsb2FkQmFubmVyKCk7XG4gICAgICAgICAgICBRUU1pbmlHYW1lQVBJLkxvYWRBcHBCb3hBZCgoKSA9PiB7IH0sICgpID0+IHsgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoTGF5YS5Ccm93c2VyLm9uUUdNaW5pR2FtZSkgIHtcbiAgICAgICAgICAgIGlmIChudWxsICE9IExheWEuQnJvd3Nlci53aW5kb3dbXCJxZ1wiXS5yZXBvcnRNb25pdG9yICYmIHR5cGVvZiAoTGF5YS5Ccm93c2VyLndpbmRvd1tcInFnXCJdLnJlcG9ydE1vbml0b3IpID09ICdmdW5jdGlvbicpICB7XG4gICAgICAgICAgICAgICAgTGF5YS5Ccm93c2VyLndpbmRvd1tcInFnXCJdLnJlcG9ydE1vbml0b3IoJ2dhbWVfc2NlbmUnLCAwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIG9uU3RhcnQoKSB7XG4gICAgICAgIHRoaXMucHJlQ3JlYXRlR2FtZSgpO1xuICAgIH1cblxuICAgIHByaXZhdGUgcHJlQ3JlYXRlR2FtZSgpOiB2b2lkIHtcbiAgICAgICAgLy90b2Rv77ya6L+Z6YeM5re75Yqg5Yid5aeL5YyW5Li75Zy65pmv55qE5Luj56CB44CCRXZlbnRNZ3IuaW5zdGFuY2UuZGlzcGF0Y2goRXZlbnREZWYuQXBwX0Nsb3NlRmlyc3RMb2FkaW5nVmlldyk7IOa3u+WKoOWIsOS9oOeahOWFs+WNoeWKoOi9veWujOaIkOeahOWbnuiwg+S4re+8jOWFs+mXreWKoOi9veeVjOmdolxuICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5yZWdFdmVtdChFdmVudERlZi5HYW1lX29uR2FtZUNvbXBsYXRlLCB0aGlzLCB0aGlzLm9uR2FtZUNvbXBsYXRlKTtcbiAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UucmVnRXZlbXQoRXZlbnREZWYuR2FtZV9TdGFydEdhbWUsIHRoaXMsIHRoaXMuTG9hZEdhbWUpO1xuICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5yZWdFdmVtdChFdmVudERlZi5HYW1lX1BsYXlCZ20sIHRoaXMsIHRoaXMucGxheUJnbSk7XG4gICAgICAgIEV2ZW50TWdyLmluc3RhbmNlLnJlZ0V2ZW10KEV2ZW50RGVmLkdhbWVfU3RvcEJnbSwgdGhpcywgdGhpcy5zdG9wQmdtKTtcbiAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UucmVnRXZlbXQoRXZlbnREZWYuQURfT25TaGFyZUFkRmFpbF9Vc2VDYW5jZWwsIHRoaXMsIHRoaXMuc3dpdGNoQmFubmVyKTtcbiAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UucmVnRXZlbXQoRXZlbnREZWYuR2FtZV9PblVzZXJDcnlzdGFsQ2hhbmdlLCB0aGlzLCB0aGlzLnNhdmVHYW1lRGF0YSk7XG4gICAgICAgIEV2ZW50TWdyLmluc3RhbmNlLnJlZ0V2ZW10KEV2ZW50RGVmLkdhbWVfT25Vc2VyRW5lcmd5Q2hhbmdlLCB0aGlzLCB0aGlzLnNhdmVHYW1lRGF0YSk7XG4gICAgICAgIGNvbnNvbGUubG9nKFVzZXIuZ2V0U2F2ZURhdGEoKSk7XG4gICAgICAgIGlmIChVc2VyLmdldExldmVOdW0oKSA8PSAxKSB7XG4gICAgICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5kaXNwYXRjaChFdmVudERlZi5BcHBfQ2xvc2VGaXJzdExvYWRpbmdWaWV3KTtcbiAgICAgICAgICAgIGxldCBkYXRhID0geyBsZXZlbE51bTogMSwgY29zdEVuZXJneTogMCwgY3J5c3RhbFJld2FyZDogNSB9O1xuICAgICAgICAgICAgdGhpcy5Mb2FkR2FtZShkYXRhKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vdG9kb++8mui/memHjOa3u+WKoOWIneWni+WMluS4u+WcuuaZr+eahOS7o+eggeOAgkV2ZW50TWdyLmluc3RhbmNlLmRpc3BhdGNoKEV2ZW50RGVmLkFwcF9DbG9zZUZpcnN0TG9hZGluZ1ZpZXcpOyDmt7vliqDliLDkvaDnmoTlhbPljaHliqDovb3lrozmiJDnmoTlm57osIPkuK3vvIzlhbPpl63liqDovb3nlYzpnaJcbiAgICAgICAgICAgIFZpZXdNZ3IuaW5zdGFuY2Uub3BlblZpZXcoVmlld0RlZi5HYW1lTWFpblZpZXcsIG51bGwsICgpID0+IHtcbiAgICAgICAgICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5kaXNwYXRjaChFdmVudERlZi5BcHBfQ2xvc2VGaXJzdExvYWRpbmdWaWV3KTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvL+a4uOaIj+WtmOahoyzku4XlvZPkvZznpLrkvovvvIzlrp7pmYXlrZjmoaPmoLnmja7lrp7pmYXpobnnm67lkIToh6rlrp7njrBcbiAgICBwdWJsaWMgc2F2ZUdhbWVEYXRhKCkge1xuICAgICAgICBIdHRwVW5pdC5zYXZlR2FtZURhdGEoVXNlci5nZXRTYXZlRGF0YSgpLFxuICAgICAgICAgICAgKHJlcykgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5a2Y5qGj5oiQ5YqfXCIpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuWtmOaho+Wksei0pVwiKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAocmVzKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLlrZjmoaPlpLHotKVcIilcbiAgICAgICAgICAgIH0pXG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIHJlcG9ydExhdW5jaE9wdGlvbnMoKSAge1xuICAgICAgICBIdHRwVW5pdC5HZXR1c2VyaXAoKHJlcykgPT4gIHtcbiAgICAgICAgICAgIGlmICgxID09IHJlcy5jb2RlKSAge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi6I635Y+W546p5a62aXAs5Zyw5Yy65oiQ5YqfIO+8mlwiLCByZXMuZGF0YS5kcWlwLCByZXMuZGF0YS5pcHhxKTtcbiAgICAgICAgICAgICAgICBsZXQgb3B0OiBhbnkgPSBudWxsO1xuICAgICAgICAgICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSkgIHtcbiAgICAgICAgICAgICAgICAgICAgb3B0ID0gV1hBUEkuZ2V0TGF1bmNoT3B0aW9uc1N5bmMoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoTGF5YS5Ccm93c2VyLm9uUVFNaW5pR2FtZSkgIHtcbiAgICAgICAgICAgICAgICAgICAgb3B0ID0gUVFNaW5pR2FtZUFQSS5nZXRMYXVuY2hPcHRpb25zU3luYygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAobnVsbCAhPSBvcHQpICB7XG4gICAgICAgICAgICAgICAgICAgIEFMRC5hbGRTZW5kUmVwb3J0TGF1bmNoT3B0aW9ucyhvcHQuc2NlbmUsIHJlcy5kYXRhLmRxaXAsIHJlcy5kYXRhLmlweHEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgKHJlcykgPT4gIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuiOt+WPlueOqeWutmlwLOWcsOWMuuWksei0pVwiKTtcbiAgICAgICAgICAgICAgICBsZXQgb3B0OiBhbnkgPSBudWxsO1xuICAgICAgICAgICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSkgIHtcbiAgICAgICAgICAgICAgICAgICAgb3B0ID0gV1hBUEkuZ2V0TGF1bmNoT3B0aW9uc1N5bmMoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoTGF5YS5Ccm93c2VyLm9uUVFNaW5pR2FtZSkgIHtcbiAgICAgICAgICAgICAgICAgICAgb3B0ID0gUVFNaW5pR2FtZUFQSS5nZXRMYXVuY2hPcHRpb25zU3luYygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAobnVsbCAhPSBvcHQpICB7XG4gICAgICAgICAgICAgICAgICAgIEFMRC5hbGRTZW5kUmVwb3J0TGF1bmNoT3B0aW9ucyhvcHQuc2NlbmUsIFwiXCIsIFwiXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgfVxuXG4gICAgLy8jcmVnaW9uIFxuICAgIHByb3RlY3RlZCBvbkdhbWVDb21wbGF0ZShwYXJhKSB7XG4gICAgICAgIHZhciBpc1dpbjogYm9vbGVhbiA9IHBhcmEuaXNXaW47XG4gICAgICAgIHZhciBsZXZlbE51bTogbnVtYmVyID0gcGFyYS5sZXZlbE51bTtcbiAgICAgICAgdmFyIGNyeXN0YWxSZXdhcmQ6IG51bWJlciA9IHBhcmEuY3J5c3RhbFJld2FyZDtcbiAgICAgICAgLy8gbGV0IGZ1bmM6IEZ1bmN0aW9uID0gKCkgPT4ge1xuICAgICAgICBpZiAoaXNXaW4pIHtcbiAgICAgICAgICAgIFVzZXIudW5Mb2NrTWF4TGV2ZWxOdW0obGV2ZWxOdW0gKyAxKTsvL+ino+mUgeS4i+S4gOS4quWFs+WNoVxuICAgICAgICAgICAgVmlld01nci5pbnN0YW5jZS5vcGVuVmlldyhWaWV3RGVmLkdhbWVSZXdhcmRWaWV3LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgaXNXaW46IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGxldmVsTnVtOiBsZXZlbE51bSxcbiAgICAgICAgICAgICAgICAgICAgcmV3YXJkTnVtOiBjcnlzdGFsUmV3YXJkXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBWaWV3TWdyLmluc3RhbmNlLm9wZW5WaWV3KFZpZXdEZWYuR2FtZU92ZXJWaWV3LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgaXNXaW46IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBsZXZlbE51bTogbGV2ZWxOdW0sXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gfVxuXG4gICAgICAgIC8qIOa4uOaIj+e7k+adn+WQjuebtOaOpeaJk+W8gOabtOWkmuWlveeOqSAqL1xuICAgICAgICAvLyBWaWV3TWdyLmluc3RhbmNlLm9wZW5WaWV3KFZpZXdEZWYuTW9yZUdhbWVWaWV3LCB7IENvbnRpbnVlR2FtZTogdHJ1ZSwgY2xvc2VGdW5jdGlvbjogZnVuYyB9KTtcblxuICAgIH1cblxuICAgIExvYWRHYW1lKGRhdGU6IGFueSkge1xuICAgICAgICB0aGlzLnNhdmVHYW1lRGF0YSgpO1xuICAgICAgICBpZiAoV3VkaWFuTWdyLkt1YW5nRGlhbkJhbm5lckZsYWcgJiYgZGF0ZS5sZXZlbE51bSAhPSAxKSB7XG4gICAgICAgICAgICBsZXQgY3VyclRpbWUgPSBMYXlhLnRpbWVyLmN1cnJUaW1lcjtcbiAgICAgICAgICAgIGxldCBkYXRhOiBhbnkgPSB7fTtcbiAgICAgICAgICAgIGRhdGEuUHJpemVDb3VudCA9IFwi5oGt5Zac6I635b6X55qu6IKkXCI7XG4gICAgICAgICAgICBkYXRhLkNsaWNrVHlwZSA9IDE7XG4gICAgICAgICAgICBkYXRhLkNvbXBsZXRlSGFuZGVyID0gTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAoZCkgPT4ge1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLmuLjmiI/lvIDlp4vni4LngrnlgZznlZnml7bpl7RcIiwgKExheWEudGltZXIuY3VyclRpbWVyIC0gY3VyclRpbWUpIC8gMTAwMCk7XG4gICAgICAgICAgICAgICAgICAgIC8vIEFMRC5hbGRTZW5kT25seVNpbmdsZVJlcG9ydChBTERFdmVudERlZi5TdGF5U3RhcnRDbGlja0dldFByaXplVGltZSwge1xuICAgICAgICAgICAgICAgICAgICAvLyAgICAgXCLml7bpl7RcIjogKExheWEudGltZXIuY3VyclRpbWVyIC0gY3VyclRpbWUpIC8gMTAwMFxuICAgICAgICAgICAgICAgICAgICAvLyB9KTtcbiAgICAgICAgICAgICAgICAgICAgVmlld01nci5pbnN0YW5jZS5vcGVuVmlldyhWaWV3RGVmLkdhbWVWaWV3LCBkKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCBbZGF0ZV0pO1xuICAgICAgICAgICAgVmlld01nci5pbnN0YW5jZS5vcGVuVmlldyhWaWV3RGVmLkNsaWNrR2V0UHJpemVfMiwgZGF0YSwgKCkgPT4ge1xuICAgICAgICAgICAgICAgIC8vIEFMRC5hbGRTZW5kT25seVNpbmdsZVJlcG9ydChBTERFdmVudERlZi5FbnRlclN0YXJ0Q2xpY2tHZXRQcml6ZSk7XG4gICAgICAgICAgICAgICAgLy8gQUxELmFsZFNlbmRPbmx5U2luZ2xlUmVwb3J0KEFMREV2ZW50RGVmLkVudGVyU3RhcnRDbGlja0dldFByaXplU2NlbmUsXG4gICAgICAgICAgICAgICAgLy8gICAgIHtcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgIFwi5Zy65pmv5YC8XCI6IFdYQVBJLmdldExhdW5jaE9wdGlvbnNTeW5jKCkuc2NlbmVcbiAgICAgICAgICAgICAgICAvLyAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGlmIChVc2VyLmdldEVuZXJneSA8IGRhdGUuY29zdEVuZXJneSkge1xuICAgICAgICAgICAgICAgIFZpZXdNZ3IuaW5zdGFuY2Uub3BlblZpZXcoVmlld0RlZi5GcmVlUmV3YXJkVmlldyxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV3YXJkVHlwZTogRnJlZVJld2FyZFR5cGUuRW5lcmd5XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLog73ph4/lhYXotrMs5byA5aeL5ri45oiPXCIpO1xuICAgICAgICAgICAgICAgIFZpZXdNZ3IuaW5zdGFuY2Uub3BlblZpZXcoVmlld0RlZi5HYW1lVmlldywgZGF0ZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfVxuICAgICAgICBTb3VuZE1nci5pbnN0YW5jZS5zdG9wQkdNKCk7XG4gICAgICAgIC8vIFZpZXdNZ3IuaW5zdGFuY2Uub3BlblZpZXcoVmlld0RlZi5HYW1lVmlldywgZGF0ZSk7XG4gICAgfVxuICAgIHBsYXlCZ20oKSB7XG4gICAgICAgIFNvdW5kTWdyLmluc3RhbmNlLnBsYXlCR00oXCJiZ21cIik7XG4gICAgfVxuICAgIHN0b3BCZ20oKSB7XG4gICAgICAgIFNvdW5kTWdyLmluc3RhbmNlLnN0b3BCR00oKTtcbiAgICB9XG4gICAgc3dpdGNoQmFubmVyKCkge1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhcIuinpuWPkeWPlua2iOaJk+W8gOabtOWkmuWlveeOqVwiKTtcbiAgICAgICAgLy8gbGV0IG1vcmVHYW1lID0gVmlld01nci5pbnN0YW5jZS5nZXRWaWV3KFZpZXdEZWYuTW9yZUdhbWVWaWV3KTtcbiAgICAgICAgLy8gbGV0IGdhbWVQbGF5aW5nID0gVmlld01nci5pbnN0YW5jZS5nZXRWaWV3KFZpZXdEZWYuR2FtZVZpZXcpO1xuICAgICAgICAvLyBpZiAobW9yZUdhbWUgPT0gbnVsbCAmJiBnYW1lUGxheWluZyA9PSBudWxsKSB7XG4gICAgICAgIC8vICAgICBjb25zb2xlLmxvZyhcIuayoeacieabtOWkmuWlveeOqeeVjOmdouaIluiAhea4uOaIj+i/m+ihjOS4reeVjOmdou+8jOaJk+W8gFwiKTtcbiAgICAgICAgLy8gICAgIFZpZXdNZ3IuaW5zdGFuY2Uub3BlblZpZXcoVmlld0RlZi5Nb3JlR2FtZVZpZXcsIHsgQ29udGludWVHYW1lOiB0cnVlLCBjbG9zZUZ1bmN0aW9uOiBudWxsIH0pO1xuICAgICAgICAvLyB9XG4gICAgfVxuICAgIC8vI2VuZHJlZ2lvblxufSIsIlxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU291bmRNZ3Ige1xuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgc291bmRSZXNQYXRoID0gXCJzdWJSZXMvc291bmQvXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IGluc3RhbmNlOiBTb3VuZE1nciA9IG5ldyBTb3VuZE1ncigpO1xuICAgIFxuICAgIHByaXZhdGUgYmdtOmFueTtcblxuICAgIHByaXZhdGUgY29uc3RydWN0b3IoKSB7XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBFbmFibGVkKClcbiAgICB7XG4gICAgICAgIHJldHVybiB0aGlzLl9lbmFibGVkO1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXQgRW5hYmxlZChlIDogYm9vbGVhbilcbiAgICB7XG4gICAgICAgIGlmKCFlKVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLnN0b3BCR00oKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9lbmFibGVkID0gZTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2VuYWJsZWQgOiBib29sZWFuID0gdHJ1ZTtcblxuICAgIHB1YmxpYyBnZXRTb3VuZFVybChuYW1lOiBzdHJpbmcpIDogc3RyaW5nXG4gICAge1xuICAgICAgICBsZXQgdXJsID0gU291bmRNZ3Iuc291bmRSZXNQYXRoICsgbmFtZSArIFwiLm1wM1wiO1xuICAgICAgICByZXR1cm4gdXJsO1xuICAgIH1cblxuICAgIHB1YmxpYyBwbGF5U291bmQobmFtZTogc3RyaW5nKTogdm9pZCB7XG4gICAgICAgIGlmKCF0aGlzLl9lbmFibGVkKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB2YXIgdXJsID0gdGhpcy5nZXRTb3VuZFVybChuYW1lKTtcbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lKSB7XG4gICAgICAgICAgICB2YXIgc291bmQgPSBsYXlhLnV0aWxzLlBvb2wuZ2V0SXRlbShuYW1lKTtcbiAgICAgICAgICAgIGlmIChzb3VuZCA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgc291bmQgPSB3eC5jcmVhdGVJbm5lckF1ZGlvQ29udGV4dCgpO1xuICAgICAgICAgICAgICAgIHNvdW5kLnNyYyA9IFNvdW5kTWdyLnNvdW5kUmVzUGF0aCArIG5hbWUgKyBcIi5tcDNcIjtcbiAgICAgICAgICAgICAgICBzb3VuZC5vbkVuZGVkKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgbGF5YS51dGlscy5Qb29sLnJlY292ZXIobmFtZSwgc291bmQpO1xuICAgICAgICAgICAgICAgICAgICBzb3VuZC5vZmZFbmRlZCgpO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzb3VuZC5wbGF5KCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBMYXlhLlNvdW5kTWFuYWdlci5wbGF5U291bmQodXJsLCAxKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBwbGF5QkdNKG5hbWUpe1xuICAgICAgICBpZighdGhpcy5fZW5hYmxlZClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgbGV0IHVybCA9IHRoaXMuZ2V0U291bmRVcmwobmFtZSk7XG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSkge1xuICAgICAgICAgICAgaWYoIXRoaXMuYmdtKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRoaXMuYmdtID0gd3guY3JlYXRlSW5uZXJBdWRpb0NvbnRleHQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuYmdtLnBhdXNlKCk7XG4gICAgICAgICAgICB0aGlzLmJnbS5zcmMgPSB1cmw7XG4gICAgICAgICAgICB0aGlzLmJnbS5sb29wID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMuYmdtLnBsYXkoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIExheWEuU291bmRNYW5hZ2VyLnBsYXlNdXNpYyh1cmwsIDApO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIHN0b3BCR00oKXtcbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lKSB7XG4gICAgICAgICAgICBpZih0aGlzLmJnbSl7XG4gICAgICAgICAgICAgICAgdGhpcy5iZ20ucGF1c2UoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICBMYXlhLlNvdW5kTWFuYWdlci5zdG9wTXVzaWMoKTtcbiAgICAgICAgfVxuICAgIH1cblxufSIsIlxuaW1wb3J0IFZpZXdCYXNlIGZyb20gXCIuLi9WaWV3L1ZpZXdCYXNlXCI7XG5cbmV4cG9ydCBlbnVtIFZpZXdEZWZcbntcbiAgICBOb25lID0gXCJcIixcbiAgICBUaXBzVmlldyA9IFwiVmlldy9UaXBzVmlldy5qc29uXCIsXG4gICAgQ2xpY2tHZXRQcml6ZSA9IFwiVmlldy9DbGlja0dldFByaXplLmpzb25cIixcbiAgICBNYWluVmlldyA9IFwiVmlldy9UZW1wbGF0ZS9NYWluVmlld1RlbXBsYXRlLmpzb25cIixcbiAgICBNaW5pR2FtZVZpZXcgPSBcIlZpZXcvVGVtcGxhdGUvTWluaUdhbWVWaWV3VGVtcGxhdGUuanNvblwiLFxuICAgIFJld2FyZFZpZXcgPSBcIlZpZXcvVGVtcGxhdGUvUmV3YXJkVmlld1RlbXBsYXRlLmpzb25cIixcbiAgICBJbkdhbWVWaWV3ID0gXCJWaWV3L1RlbXBsYXRlL0luR2FtZVZpZXdUZW1wbGF0ZS5qc29uXCIsXG4gICAgR2FtZVdpblZpZXcgPSBcIlZpZXcvVGVtcGxhdGUvR2FtZVdpblZpZXdUZW1wbGF0ZS5qc29uXCIsXG4gICAgR2FtZUZhaWxWaWV3ID0gXCJWaWV3L1RlbXBsYXRlL0dhbWVGYWlsVmlld1RlbXBsYXRlLmpzb25cIixcbiAgICBFeHBvcnRWaWV3ID0gXCJWaWV3L1RlbXBsYXRlL0V4cG9ydFZpZXdUZW1wbGF0ZS5qc29uXCIsXG4gICAgRXhwb3J0MlZpZXcgPSBcIlZpZXcvVGVtcGxhdGUvRXhwb3J0MlZpZXdUZW1wbGF0ZS5qc29uXCIsXG4gICAgT1BQT05hdGl2ZVZpZXcgPSBcIlZpZXcvVGVtcGxhdGUvT1BQT05hdGl2ZVZpZXdUZW1wbGF0ZS5qc29uXCIsXG4gICAgXG4gICAgUVFDcmF6eUNsaWNrVmlldyA9IFwiVmlldy9UZW1wbGF0ZS9RUS9RUUNyYXp5Q2xpY2suanNvblwiLFxuICAgIFFRQ3JhenlDbGlja1ZpZXcyID0gXCJWaWV3L1RlbXBsYXRlL1FRL1FRQ3JhenlDbGljazIuanNvblwiXG4gICAgXG4gICAgXG4gICAgLy90b2RvOua3u+WKoOS9oOeahOeVjOmdolxuICAgICxHYW1lTWFpblZpZXcgPSBcIlZpZXcvTWFpblZpZXcuanNvblwiLFxuICAgIExldmVsU3RhdGVWaWV3ID0gXCJWaWV3L0xldmVsU3RhdGVWaWV3Lmpzb25cIixcbiAgICBNb3JlR2FtZVZpZXcgPSBcIlZpZXcvTW9yZUdhbWUuanNvblwiLFxuICAgIEdhbWVSZXdhcmRWaWV3ID0gXCJWaWV3L0dhbWVSZXdhcmQuanNvblwiLFxuICAgIEdhbWVPdmVyVmlldyA9IFwiVmlldy9HYW1lT3Zlci5qc29uXCIsXG4gICAgU2lnbkluUmV3YXJkVmlldyA9IFwiVmlldy9TaWduSW5SZXdhcmQuanNvblwiLFxuICAgIEFjdG9yU2tpblZpZXcgPSBcIlZpZXcvQWN0b3JTa2luVmlldy5qc29uXCIsXG4gICAgRnJlZVJld2FyZFZpZXcgPSBcIlZpZXcvRnJlZVJld2FyZC5qc29uXCIsXG4gICAgR2FtZVZpZXcgPSAgXCJWaWV3L0dhbWVWaWV3Lmpzb25cIixcbiAgICBDbGlja0dldFByaXplXzIgPSBcIlZpZXcvQ2xpY2tHZXRQcml6ZV8yLmpzb25cIlxufVxuXG4vL+eVjOmdoueuoeeQhuWZqFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVmlld01nciBcbntcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IGluc3RhbmNlOiBWaWV3TWdyID0gbmV3IFZpZXdNZ3IoKTtcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgX3ZpZXdzIDogYW55ID0ge307XG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IF9sb2FkaW5nTGlzdCA6IEFycmF5PFZpZXdEZWY+ID0gbmV3IEFycmF5PFZpZXdEZWY+KCk7XG5cbiAgICBwdWJsaWMgb3BlblZpZXcodmlld1R5cGUgOlZpZXdEZWYsZGF0YT8gOiBhbnksb25jb21wbGF0ZT8gOiBGdW5jdGlvbik6IHZvaWQgXG4gICAge1xuICAgICAgICBpZih0aGlzLl92aWV3c1t2aWV3VHlwZV0pXG4gICAgICAgIHsgIFxuICAgICAgICAgICAgdmFyIHZpZXcgPSB0aGlzLl92aWV3c1t2aWV3VHlwZV07XG4gICAgICAgICAgICBsZXQgY29tcyA9IHZpZXcuX2NvbXBvbmVudHM7XG4gICAgICAgICAgICBsZXQgdmlld0Jhc2UgOiBWaWV3QmFzZSA9IG51bGw7XG4gICAgICAgICAgICBpZihjb21zKXtcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgY29tcy5sZW5ndGg7IGluZGV4KyspIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZWxlbWVudCA9IGNvbXNbaW5kZXhdO1xuICAgICAgICAgICAgICAgICAgICBpZihlbGVtZW50Ll92aWV3QmFzZSl7XG4gICAgICAgICAgICAgICAgICAgICAgICB2aWV3QmFzZSA9IGVsZW1lbnQgYXMgVmlld0Jhc2VcbiAgICAgICAgICAgICAgICAgICAgICAgIHZpZXdCYXNlLm9wZW5WaWV3KGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZihvbmNvbXBsYXRlKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9uY29tcGxhdGUodmlld0Jhc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fbG9hZGluZ0xpc3QubGVuZ3RoOyArK2kpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGxldCBkZWYgPSB0aGlzLl9sb2FkaW5nTGlzdFtpXTtcbiAgICAgICAgICAgIGlmKGRlZiA9PSB2aWV3VHlwZSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIueVjOmdoiA6IFwiICsgU3RyaW5nKGRlZikgKyBcIiDmraPlnKjliqDovb3kuK3vvIzor7fkuI3opoHph43lpI3liqDovb1cIik7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHZhciB2aWV3VXJsID0gU3RyaW5nKHZpZXdUeXBlKVxuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgIHRoaXMuX2xvYWRpbmdMaXN0LnB1c2godmlld1R5cGUpO1xuICAgICAgICBMYXlhLlNjZW5lLmxvYWQodmlld1VybCxMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uIChvd25lcjogYW55KSB7XG4gICAgICAgICAgICBMYXlhLnN0YWdlLmFkZENoaWxkKG93bmVyKTtcbiAgICAgICAgICAgIHZhciB2aWV3ID0gb3duZXIgYXMgTGF5YS5WaWV3O1xuICAgICAgICAgICAgc2VsZi5fdmlld3Nbdmlld1R5cGVdID0gdmlldztcbiAgICAgICAgICAgIGxldCBjb21zID0gb3duZXIuX2NvbXBvbmVudHM7XG4gICAgICAgICAgICBsZXQgdmlld0Jhc2UgOiBWaWV3QmFzZSA9IG51bGw7XG4gICAgICAgICAgICBpZihjb21zKXtcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgY29tcy5sZW5ndGg7IGluZGV4KyspIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZWxlbWVudCA9IGNvbXNbaW5kZXhdO1xuICAgICAgICAgICAgICAgICAgICBpZihlbGVtZW50Ll92aWV3QmFzZSl7XG4gICAgICAgICAgICAgICAgICAgICAgICB2aWV3QmFzZSA9IGVsZW1lbnQgYXMgVmlld0Jhc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50Ll92aWV3RGVmID0gdmlld1R5cGU7XG4gICAgICAgICAgICAgICAgICAgICAgICB2aWV3QmFzZS5vcGVuVmlldyhkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNlbGYuX2xvYWRpbmdMaXN0Lmxlbmd0aDsgKytpKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGxldCBkZWYgPSBzZWxmLl9sb2FkaW5nTGlzdFtpXTtcbiAgICAgICAgICAgICAgICBpZihkZWYgPT0gdmlld1R5cGUpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxmLl9sb2FkaW5nTGlzdC5zcGxpY2UoaSwxKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZihvbmNvbXBsYXRlKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9uY29tcGxhdGUodmlld0Jhc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KSk7XG4gICAgfVxuXG4gICAgcHVibGljIGNsb3NlVmlldyh2aWV3VHlwZSA6Vmlld0RlZikgXG4gICAge1xuICAgICAgICB2YXIgdmlldyA6IExheWEuVmlldyA9IHRoaXMuX3ZpZXdzW3ZpZXdUeXBlXTtcbiAgICAgICAgaWYodmlldylcbiAgICAgICAge1xuICAgICAgICAgICAgdmFyIG93bmVyID0gdmlldyBhcyBhbnk7XG4gICAgICAgICAgICBsZXQgY29tcyA9IG93bmVyLl9jb21wb25lbnRzO1xuICAgICAgICAgICAgaWYoY29tcyl7XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGNvbXMubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBjb21zW2luZGV4XTtcbiAgICAgICAgICAgICAgICAgICAgaWYoZWxlbWVudC5fdmlld0Jhc2Upe1xuICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudC5vbkNsb3NlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZpZXcucmVtb3ZlU2VsZigpO1xuICAgICAgICAgICAgdmlldy5kZXN0cm95KCk7XG4gICAgICAgICAgICB0aGlzLl92aWV3c1t2aWV3VHlwZV0gPSBudWxsO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIFNob3dWaWV3KHZpZXdUeXBlIDpWaWV3RGVmKSBcbiAgICB7XG4gICAgICAgIHZhciB2aWV3ICA9IHRoaXMuX3ZpZXdzW3ZpZXdUeXBlXTtcbiAgICAgICAgaWYodmlldylcbiAgICAgICAge1xuICAgICAgICAgICAgbGV0IGNvbXMgPSB2aWV3Ll9jb21wb25lbnRzO1xuICAgICAgICAgICAgaWYoY29tcyl7XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGNvbXMubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBjb21zW2luZGV4XTtcbiAgICAgICAgICAgICAgICAgICAgaWYoZWxlbWVudC5fdmlld0Jhc2Upe1xuICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudC5zaG93KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBoaWRlVmlldyh2aWV3VHlwZSA6Vmlld0RlZikgXG4gICAge1xuICAgICAgICB2YXIgdmlldyA9IHRoaXMuX3ZpZXdzW3ZpZXdUeXBlXTtcbiAgICAgICAgaWYodmlldylcbiAgICAgICAge1xuICAgICAgICAgICAgbGV0IGNvbXMgPSB2aWV3Ll9jb21wb25lbnRzO1xuICAgICAgICAgICAgaWYoY29tcyl7XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGNvbXMubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBjb21zW2luZGV4XTtcbiAgICAgICAgICAgICAgICAgICAgaWYoZWxlbWVudC5fdmlld0Jhc2Upe1xuICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudC5oaWRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBnZXRWaWV3KHZpZXdUeXBlIDpWaWV3RGVmKSA6IExheWEuVmlld1xuICAgIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3ZpZXdzW3ZpZXdUeXBlXTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2hvd1RpcHMobXNnIDogc3RyaW5nKVxuICAgIHtcbiAgICAgICAgdGhpcy5vcGVuVmlldyhWaWV3RGVmLlRpcHNWaWV3LG1zZyk7XG4gICAgfVxufSIsImltcG9ydCBBcHBTd2l0Y2hDb25maWcgZnJvbSBcIi4uL0NvbmZpZy9BcHBTd2l0Y2hDb25maWdcIjtcbmltcG9ydCBXWEFQSSBmcm9tIFwiLi4vV1hBUElcIjtcblxuZXhwb3J0IGNsYXNzIFdYQmFubmRlckFkXG57XG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBNQVhfUkVUUllfQ09VTlQgOiBudW1iZXIgPSAzO1xuXG4gICAgY29uc3RydWN0b3IoYmFubmVyaWQgOiBzdHJpbmcpXG4gICAge1xuICAgICAgICB0aGlzLl9pZCA9IGJhbm5lcmlkO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgSWQoKVxuICAgIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lkO1xuICAgIH1cbiAgICBwcm90ZWN0ZWQgX2lkIDogc3RyaW5nID0gbnVsbDtcbiAgICBwcm90ZWN0ZWQgX2Jhbm5lciA6IGFueSA9IG51bGw7XG4gICAgcHVibGljIGdldCBDcmVhdGVUaW1lKClcbiAgICB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jcmVhdGVUaW1lO1xuICAgIH1cbiAgICBwcm90ZWN0ZWQgX2NyZWF0ZVRpbWUgOiBudW1iZXIgPSAwO1xuXG4gICAgcHVibGljIGdldCBEZXN0cm95ZWQoKVxuICAgIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2Rlc3Ryb3llZDtcbiAgICB9XG4gICAgcHJvdGVjdGVkIF9kZXN0cm95ZWQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAgIHB1YmxpYyBnZXQgaXNSZWFkeSgpXG4gICAge1xuICAgICAgICByZXR1cm4gbnVsbCAhPSB0aGlzLl9iYW5uZXI7XG4gICAgfVxuICAgIHB1YmxpYyBnZXQgaXNFcnJvcigpXG4gICAge1xuICAgICAgICByZXR1cm4gbnVsbCAhPSB0aGlzLl9lcnJvcjtcbiAgICB9XG4gICAgcHVibGljIGdldCBFcnJvcigpXG4gICAge1xuICAgICAgICByZXR1cm4gdGhpcy5fZXJyb3I7XG4gICAgfVxuICAgIHByb3RlY3RlZCBfZXJyb3IgOiBhbnkgPSBudWxsO1xuXG4gICAgcHVibGljIGdldCBMb2FkaW5nKClcbiAgICB7XG4gICAgICAgIHJldHVybiB0aGlzLl9sb2FkaW5nO1xuICAgIH1cbiAgICBwcm90ZWN0ZWQgX2xvYWRpbmcgOiBib29sZWFuID0gZmFsc2U7XG5cbiAgICBwdWJsaWMgZ2V0IFJldHJ5Q291bnQoKVxuICAgIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3JldHJ5Q291bnQ7XG4gICAgfVxuICAgIHByb3RlY3RlZCBfcmV0cnlDb3VudCA6IG51bWJlciA9IDA7XG5cbiAgICBwdWJsaWMgZ2V0IEJhbm5lclRvdGFsU2hvd1RpbWUoKVxuICAgIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2Jhbm5lclRvdGFsU2hvd1RpbWU7XG4gICAgfVxuICAgIHByb3RlY3RlZCBfYmFubmVyVG90YWxTaG93VGltZSA6IG51bWJlciA9IDA7XG4gICAgcHJvdGVjdGVkIF9sYXN0U2hvd1RpbWUgOiBudW1iZXIgPSAwO1xuXG4gICAgcHVibGljIHNob3coKSBcbiAgICB7XG4gICAgICAgIGlmKHRoaXMuaXNSZWFkeSlcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5fYmFubmVyLmhpZGUoKTtcbiAgICAgICAgICAgIGxldCBzZWxmID0gdGhpcztcbiAgICAgICAgICAgIGxldCBzeXNJbmZvID0gTGF5YS5Ccm93c2VyLndpbmRvd1tcInd4XCJdLmdldFN5c3RlbUluZm9TeW5jKCk7XG4gICAgICAgICAgICBsZXQgc3cgPSBzeXNJbmZvLnNjcmVlbldpZHRoO1xuICAgICAgICAgICAgbGV0IHNoID0gc3lzSW5mby5zY3JlZW5IZWlnaHQ7XG4gICAgICAgICAgICBsZXQgcG9zID0gbmV3IExheWEuUG9pbnQoMCwgMCk7XG4gICAgICAgICAgICBsZXQgd2lkdGggPSAzMDA7XG4gICAgICAgICAgICBsZXQgbGVmdCA9IHN3IC8gMiAtIHdpZHRoIC8gMjtcbiAgICAgICAgICAgIGxldCB0b3AgPSBzaCAtIDEzMDtcbiAgICAgICAgICAgIHRoaXMuX2Jhbm5lci5zdHlsZS5sZWZ0ID0gbGVmdDtcbiAgICAgICAgICAgIHRoaXMuX2Jhbm5lci5zdHlsZS50b3AgPSB0b3A7XG4gICAgICAgICAgICB0aGlzLl9sYXN0U2hvd1RpbWUgPSBMYXlhLnRpbWVyLmN1cnJUaW1lcjtcbiAgICAgICAgICAgIHRoaXMuX2Jhbm5lci5zaG93KCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcHVibGljIGhpZGUoKSBcbiAgICB7XG4gICAgICAgIGlmKHRoaXMuaXNSZWFkeSlcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5fYmFubmVyLmhpZGUoKTtcbiAgICAgICAgICAgIHRoaXMuX2Jhbm5lclRvdGFsU2hvd1RpbWUgKz0gKExheWEudGltZXIuY3VyclRpbWVyIC0gdGhpcy5fbGFzdFNob3dUaW1lKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBwdWJsaWMgZGVzdHJveSgpXG4gICAge1xuICAgICAgICBpZih0aGlzLl9kZXN0cm95ZWQpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQmFubmVyQWQg5bey57uP6KKr6ZSA5q+BXCIpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmKHRoaXMuX2xvYWRpbmcpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQmFubmVyQWQg5q2j5Zyo5Yqg6L295Lit77yM5peg5rOV6L+b6KGM6ZSA5q+BXCIpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmKG51bGwgIT0gdGhpcy5fYmFubmVyKVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLl9iYW5uZXIuZGVzdHJveSgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2Jhbm5lciA9IG51bGw7XG4gICAgICAgIHRoaXMuX2Rlc3Ryb3llZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcHVibGljIHJldHJ5KGNhbGxCYWNrPyA6IEZ1bmN0aW9uKVxuICAgIHtcbiAgICAgICAgaWYodGhpcy5fZGVzdHJveWVkKVxuICAgICAgICB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkJhbm5lckFkIOW3suiiq+mUgOavge+8jOaXoOazlemHjeivlVwiKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZih0aGlzLmlzUmVhZHkpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQmFubmVyQWQg5bey5Yib5bu65oiQ5Yqf77yM5peg6ZyA6YeN6K+VXCIpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmKHRoaXMuX2xvYWRpbmcpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQmFubmVyQWQg5q2j5Zyo5Yib5bu65LitXCIpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmKHRoaXMuX3JldHJ5Q291bnQgPj0gV1hCYW5uZGVyQWQuTUFYX1JFVFJZX0NPVU5UKVxuICAgICAgICB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIuatpCBCYW5uZXJBZCDph43or5XmrKHmlbDlt7Lovr7mnIDlpKdcIik7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xuICAgICAgICB0aGlzLl9jcmVhdGUoKGlzT2sgOmJvb2xlYW4pPT5cbiAgICAgICAge1xuICAgICAgICAgICAgaWYobnVsbCAhPSBjYWxsQmFjaylcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjYWxsQmFjayhpc09rKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICsrc2VsZi5fcmV0cnlDb3VudDtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9jcmVhdGUoY2FsbEJhY2s/IDogRnVuY3Rpb24pXG4gICAge1xuICAgICAgICBpZighTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlmKG51bGwgIT0gY2FsbEJhY2spXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgY2FsbEJhY2soZmFsc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGxldCBiYW5uZXIgPSBudWxsO1xuICAgICAgICBpZihMYXlhLkJyb3dzZXIub25NaW5pR2FtZSlcbiAgICAgICAge1xuICAgICAgICAgICAgYmFubmVyID0gTGF5YS5Ccm93c2VyLndpbmRvd1tcInd4XCJdLmNyZWF0ZUJhbm5lckFkKFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgYWRVbml0SWQgOiB0aGlzLl9pZCxcbiAgICAgICAgICAgICAgICAgICAgYWRJbnRlcnZhbHMgOiAzMCxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGUgOiBcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGVmdCA6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICB0b3AgOiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGggOiAzMDAsXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYoTGF5YS5Ccm93c2VyLm9uUVFNaW5pR2FtZSlcbiAgICAgICAge1xuICAgICAgICAgICAgYmFubmVyID0gTGF5YS5Ccm93c2VyLndpbmRvd1tcInFxXCJdLmNyZWF0ZUJhbm5lckFkKFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgYWRVbml0SWQgOiB0aGlzLl9pZCxcbiAgICAgICAgICAgICAgICAgICAgYWRJbnRlcnZhbHMgOiAzMCxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGUgOiBcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGVmdCA6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICB0b3AgOiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGggOiAzMDAsXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgICAgIGlmKG51bGwgIT0gYmFubmVyKVxuICAgICAgICB7XG4gICAgICAgICAgICBsZXQgc2VsZiA9IHRoaXM7XG4gICAgICAgICAgICB0aGlzLl9sb2FkaW5nID0gdHJ1ZTtcbiAgICAgICAgICAgIGJhbm5lci5vbkxvYWQoKHJlcykgPT4gIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkJhbm5kZXJBZCDliqDovb3lrozmiJBcIixzZWxmLl9pZCxyZXMpO1xuICAgICAgICAgICAgICAgIHNlbGYuX2Jhbm5lciA9IGJhbm5lcjtcbiAgICAgICAgICAgICAgICBzZWxmLl9jcmVhdGVUaW1lID0gTGF5YS50aW1lci5jdXJyVGltZXI7XG4gICAgICAgICAgICAgICAgc2VsZi5fbG9hZGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGlmKG51bGwgIT0gY2FsbEJhY2spXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjYWxsQmFjayh0cnVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgYmFubmVyLm9uRXJyb3IoKGVycikgPT4gIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkJhbm5kZXJBZCDliqDovb3lpLHotKVcIixzZWxmLl9pZCxlcnIpO1xuICAgICAgICAgICAgICAgIHNlbGYuX2Vycm9yID0gZXJyO1xuICAgICAgICAgICAgICAgIHNlbGYuX2xvYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBiYW5uZXIuZGVzdHJveSgpO1xuICAgICAgICAgICAgICAgIGlmKG51bGwgIT0gY2FsbEJhY2spXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjYWxsQmFjayhmYWxzZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIFdYR3JpZEFkXG57XG4gICAgY29uc3RydWN0b3IoYmFubmVyaWQgOiBzdHJpbmcpXG4gICAge1xuICAgICAgICB0aGlzLl9pZCA9IGJhbm5lcmlkO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfaWQgOiBzdHJpbmcgPSBudWxsO1xuICAgIHByb3RlY3RlZCBfZ3JpZEFkIDogYW55ID0gbnVsbDtcbiAgICBwdWJsaWMgZ2V0IENyZWF0ZVRpbWUoKVxuICAgIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NyZWF0ZVRpbWU7XG4gICAgfVxuICAgIHByb3RlY3RlZCBfY3JlYXRlVGltZSA6IG51bWJlciA9IDA7XG5cbiAgICBwdWJsaWMgZ2V0IERlc3Ryb3llZCgpXG4gICAge1xuICAgICAgICByZXR1cm4gdGhpcy5fZGVzdHJveWVkO1xuICAgIH1cbiAgICBwcm90ZWN0ZWQgX2Rlc3Ryb3llZDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgcHVibGljIGdldCBpc1JlYWR5KClcbiAgICB7XG4gICAgICAgIHJldHVybiBudWxsICE9IHRoaXMuX2dyaWRBZDtcbiAgICB9XG4gICAgcHVibGljIGdldCBpc0Vycm9yKClcbiAgICB7XG4gICAgICAgIHJldHVybiBudWxsICE9IHRoaXMuX2Vycm9yO1xuICAgIH1cbiAgICBwdWJsaWMgZ2V0IEVycm9yKClcbiAgICB7XG4gICAgICAgIHJldHVybiB0aGlzLl9lcnJvcjtcbiAgICB9XG4gICAgcHJvdGVjdGVkIF9lcnJvciA6IGFueSA9IG51bGw7XG5cbiAgICBwdWJsaWMgZ2V0IExvYWRpbmcoKVxuICAgIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2xvYWRpbmc7XG4gICAgfVxuICAgIHByb3RlY3RlZCBfbG9hZGluZyA6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAgIHB1YmxpYyBzaG93KCkgXG4gICAge1xuICAgICAgICBpZih0aGlzLmlzUmVhZHkpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuX2dyaWRBZC5zaG93KCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcHVibGljIGhpZGUoKSBcbiAgICB7XG4gICAgICAgIGlmKHRoaXMuaXNSZWFkeSlcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5fZ3JpZEFkLmhpZGUoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBwdWJsaWMgZGVzdHJveSgpXG4gICAge1xuICAgICAgICBpZih0aGlzLl9kZXN0cm95ZWQpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiR3JpZEFEIOW3sue7j+iiq+mUgOavgVwiKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZih0aGlzLl9sb2FkaW5nKVxuICAgICAgICB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkdyaWRBRCDmraPlnKjliqDovb3kuK3vvIzml6Dms5Xov5vooYzplIDmr4FcIik7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYobnVsbCAhPSB0aGlzLl9ncmlkQWQpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuX2dyaWRBZC5kZXN0cm95KCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fZ3JpZEFkID0gbnVsbDtcbiAgICAgICAgdGhpcy5fZGVzdHJveWVkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgcmV0cnkoY2FsbEJhY2s/IDogRnVuY3Rpb24pXG4gICAge1xuICAgICAgICBpZih0aGlzLl9kZXN0cm95ZWQpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiR3JpZEFEIOW3suiiq+mUgOavge+8jOaXoOazlemHjeivlVwiKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZih0aGlzLmlzUmVhZHkpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiR3JpZEFEIOW3suWIm+W7uuaIkOWKn++8jOaXoOmcgOmHjeivlVwiKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZih0aGlzLl9sb2FkaW5nKVxuICAgICAgICB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkdyaWRBRCDmraPlnKjliJvlu7rkuK1cIik7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xuICAgICAgICB0aGlzLl9jcmVhdGUoKGlzT2sgOmJvb2xlYW4pPT5cbiAgICAgICAge1xuICAgICAgICAgICAgaWYobnVsbCAhPSBjYWxsQmFjaylcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjYWxsQmFjayhpc09rKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9jcmVhdGUoY2FsbEJhY2s/IDogRnVuY3Rpb24pXG4gICAge1xuICAgICAgICBpZighTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlmKG51bGwgIT0gY2FsbEJhY2spXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgY2FsbEJhY2soZmFsc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGxldCBncmlkQWQgPSBMYXlhLkJyb3dzZXIud2luZG93W1wid3hcIl0uY3JlYXRlR3JpZEFkKFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGFkVW5pdElkIDogdGhpcy5faWQsXG4gICAgICAgICAgICAgICAgYWRJbnRlcnZhbHMgOiAzMCxcbiAgICAgICAgICAgICAgICBzdHlsZSA6IFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbGVmdCA6IDAsXG4gICAgICAgICAgICAgICAgICAgIHRvcCA6IDAsXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoIDogMzAwLFxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQgOiAxNTAsXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgaWYobnVsbCAhPSBncmlkQWQpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGxldCBzZWxmID0gdGhpcztcbiAgICAgICAgICAgIHRoaXMuX2xvYWRpbmcgPSB0cnVlO1xuICAgICAgICAgICAgZ3JpZEFkLm9uTG9hZCgocmVzKSA9PiAge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiR3JpZEFEIOWKoOi9veWujOaIkFwiLHNlbGYuX2lkLHJlcyk7XG4gICAgICAgICAgICAgICAgc2VsZi5fZ3JpZEFkID0gZ3JpZEFkO1xuICAgICAgICAgICAgICAgIHNlbGYuX2NyZWF0ZVRpbWUgPSBMYXlhLnRpbWVyLmN1cnJUaW1lcjtcbiAgICAgICAgICAgICAgICBzZWxmLl9sb2FkaW5nID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgaWYobnVsbCAhPSBjYWxsQmFjaylcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGNhbGxCYWNrKHRydWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBncmlkQWQub25FcnJvcigoZXJyKSA9PiAge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiR3JpZEFEIOWKoOi9veWksei0pVwiLHNlbGYuX2lkLGVycik7XG4gICAgICAgICAgICAgICAgc2VsZi5fZXJyb3IgPSBlcnI7XG4gICAgICAgICAgICAgICAgc2VsZi5fbG9hZGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGdyaWRBZC5kZXN0cm95KCk7XG4gICAgICAgICAgICAgICAgaWYobnVsbCAhPSBjYWxsQmFjaylcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGNhbGxCYWNrKGZhbHNlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBXWEFETWdyIFxue1xuICAgIHByb3RlY3RlZCBzdGF0aWMgX2luaXRlZCA6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBwcm90ZWN0ZWQgc3RhdGljIHJlYWRvbmx5IF9iYW5uZXJJZHMgOiBBcnJheTxzdHJpbmc+ID0gbmV3IEFycmF5PHN0cmluZz4oKTtcbiAgICBwcm90ZWN0ZWQgc3RhdGljIHJlYWRvbmx5IF9iYW5uZXJzIDogQXJyYXk8V1hCYW5uZGVyQWQ+ID0gbmV3IEFycmF5PGFueT4oKTtcbiAgICBwcm90ZWN0ZWQgc3RhdGljIF9jdXJCYW5uZXJDcmVhdGVJbmRleCA6IG51bWJlciA9IDA7XG4gICAgcHJvdGVjdGVkIHN0YXRpYyBfY3VyQmFubmVyR2V0SW5kZXggOiBudW1iZXIgPSAwO1xuXG4gICAgcHJvdGVjdGVkIHN0YXRpYyBfd3hHcmlkQWQgOiBXWEdyaWRBZCA9IG51bGw7XG4gICAgXG4gICAgcHVibGljIHN0YXRpYyBpbml0KClcbiAgICB7XG4gICAgICAgIGlmKFdYQURNZ3IuX2luaXRlZClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgbGV0IGJhbm5lcnMgPSBBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkud3hXdURpYW5CYW5uZXJzO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGJhbm5lcnMubGVuZ3RoOyArK2kpXG4gICAgICAgIHtcbiAgICAgICAgICAgIFdYQURNZ3IuX2Jhbm5lcklkcy5wdXNoKGJhbm5lcnNbaV0pO1xuICAgICAgICB9XG4gICAgICAgIGZvcihsZXQgaT0wO2kgPCBXWEFETWdyLl9iYW5uZXJJZHMubGVuZ3RoOysraSlcbiAgICAgICAge1xuICAgICAgICAgICAgbGV0IGN1ciA9IFdYQURNZ3IuX2Jhbm5lcklkc1tpXTtcbiAgICAgICAgICAgIFdYQURNZ3IuX2Jhbm5lcklkc1tpXSA9IGJhbm5lcnNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogYmFubmVycy5sZW5ndGgpXTtcbiAgICAgICAgfVxuXG4gICAgICAgIFdYQURNZ3IuX2NyZWF0ZUJhbm5lckFkKCk7XG4gICAgICAgIGxldCBiYW5uZXJSZWNyZWF0ZVRpbWUgPSBBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkuYmFubmVyQ3JlYXRlRmFpbE51bSAqIDEwMDA7XG4gICAgICAgIExheWEudGltZXIubG9vcChiYW5uZXJSZWNyZWF0ZVRpbWUsV1hBRE1nciwoKT0+XG4gICAgICAgIHtcbiAgICAgICAgICAgIFdYQURNZ3IuX2NoZWNrQmFubmVyQWQoKTtcbiAgICAgICAgICAgIFdYQURNZ3IuX2NyZWF0ZUJhbm5lckFkKCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vV1hBRE1nci5fY3JlYXRlR2lyZEFkKCk7XG5cbiAgICAgICAgV1hBRE1nci5faW5pdGVkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIGdldEJhbm5lcihjYWxsQmFjayA6IEZ1bmN0aW9uKVxuICAgIHtcbiAgICAgICAgbGV0IHJlYWR5QmFubmVyQWQgOkFycmF5PFdYQmFubmRlckFkPiA9IFtdO1xuICAgICAgICBsZXQgVW5yZWFkeUJhbm5lckFkIDpBcnJheTxXWEJhbm5kZXJBZD4gPSBbXTtcbiAgICAgICAgZm9yKGxldCBpPTA7IGkgPCBXWEFETWdyLl9iYW5uZXJzLmxlbmd0aDsrK2kpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGxldCBiYW5uZXJBZCA9IFdYQURNZ3IuX2Jhbm5lcnNbaV07XG4gICAgICAgICAgICBpZighYmFubmVyQWQuRGVzdHJveWVkKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGlmKGJhbm5lckFkLmlzUmVhZHkpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICByZWFkeUJhbm5lckFkLnB1c2goYmFubmVyQWQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBVbnJlYWR5QmFubmVyQWQucHVzaChiYW5uZXJBZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBpZihXWEFETWdyLl9jdXJCYW5uZXJHZXRJbmRleCA+PSByZWFkeUJhbm5lckFkLmxlbmd0aClcbiAgICAgICAge1xuICAgICAgICAgICAgV1hBRE1nci5fY3VyQmFubmVyR2V0SW5kZXggPSAwO1xuICAgICAgICB9XG4gICAgICAgIGxldCBiYW5uZXJBZCA9IHJlYWR5QmFubmVyQWRbV1hBRE1nci5fY3VyQmFubmVyR2V0SW5kZXhdO1xuICAgICAgICArK1dYQURNZ3IuX2N1ckJhbm5lckdldEluZGV4O1xuXG4gICAgICAgIGlmKG51bGwgIT0gYmFubmVyQWQpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGNhbGxCYWNrKGJhbm5lckFkKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlXG4gICAgICAgIHtcbiAgICAgICAgICAgIGJhbm5lckFkID0gV1hBRE1nci5fY3JlYXRlQmFubmVyQWQoKTtcbiAgICAgICAgICAgIGlmKG51bGwgPT0gYmFubmVyQWQpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgYmFubmVyQWQgPSBXWEFETWdyLl9iYW5uZXJzW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIFdYQURNZ3IuX2Jhbm5lcnMubGVuZ3RoKV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZihudWxsID09IGJhbm5lckFkKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGNhbGxCYWNrKG51bGwpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGJhbm5lckFkLnJldHJ5KChvayA6IGJvb2xlYW4pPT5cbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGlmKG9rKVxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYWxsQmFjayhiYW5uZXJBZCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYWxsQmFjayhudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSAgIFxuXG4gICAgcHJvdGVjdGVkIHN0YXRpYyBfY3JlYXRlQmFubmVyQWQoKSA6IFdYQmFubmRlckFkXG4gICAge1xuICAgICAgICBpZihXWEFETWdyLl9jdXJCYW5uZXJDcmVhdGVJbmRleCA+PSBXWEFETWdyLl9iYW5uZXJJZHMubGVuZ3RoKVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIGxldCBiYW5uZXJBZCA9IG5ldyBXWEJhbm5kZXJBZChXWEFETWdyLl9iYW5uZXJJZHNbV1hBRE1nci5fY3VyQmFubmVyQ3JlYXRlSW5kZXhdKTtcbiAgICAgICAgV1hBRE1nci5fYmFubmVycy5wdXNoKGJhbm5lckFkKTtcbiAgICAgICAgYmFubmVyQWQucmV0cnkoKTtcbiAgICAgICAgKytXWEFETWdyLl9jdXJCYW5uZXJDcmVhdGVJbmRleDtcbiAgICAgICAgcmV0dXJuIGJhbm5lckFkO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBzdGF0aWMgX2NoZWNrQmFubmVyQWQoKVxuICAgIHtcbiAgICAgICAgbGV0IHJlYWR5QmFubmVyQWQgOkFycmF5PFdYQmFubmRlckFkPiA9IFtdO1xuICAgICAgICBsZXQgVW5yZWFkeUJhbm5lckFkIDpBcnJheTxXWEJhbm5kZXJBZD4gPSBbXTtcbiAgICAgICAgZm9yKGxldCBpPTA7IGkgPCBXWEFETWdyLl9iYW5uZXJzLmxlbmd0aDsrK2kpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGxldCBiYW5uZXJBZCA9IFdYQURNZ3IuX2Jhbm5lcnNbaV07XG4gICAgICAgICAgICBpZighYmFubmVyQWQuRGVzdHJveWVkKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGlmKGJhbm5lckFkLmlzUmVhZHkpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICByZWFkeUJhbm5lckFkLnB1c2goYmFubmVyQWQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBVbnJlYWR5QmFubmVyQWQucHVzaChiYW5uZXJBZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZm9yKGxldCBpPTA7aSA8IFdYQURNZ3IuX2Jhbm5lcnMubGVuZ3RoOysraSlcbiAgICAgICAge1xuICAgICAgICAgICAgbGV0IGJhbm5lckFkOiBXWEJhbm5kZXJBZCA9IFdYQURNZ3IuX2Jhbm5lcnNbaV07XG4gICAgICAgICAgICBsZXQgYmFubmVyU2hvd1RpbWUgPSBBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkuYmFubmVyU2hvd1RpbWU7XG4gICAgICAgICAgICBpZighYmFubmVyQWQuaXNSZWFkeSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpZihiYW5uZXJBZC5SZXRyeUNvdW50ID49IFdYQmFubmRlckFkLk1BWF9SRVRSWV9DT1VOVClcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQmFubmVyQWQg6LaF6L+H6YeN6K+V5qyh5pWw77yM6ZSA5q+BIDogXCIsYmFubmVyQWQuSWQpO1xuICAgICAgICAgICAgICAgICAgICBiYW5uZXJBZC5kZXN0cm95KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGJhbm5lckFkLnJldHJ5KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZihyZWFkeUJhbm5lckFkLmxlbmd0aCA+PSAyICYmIGJhbm5lckFkLkJhbm5lclRvdGFsU2hvd1RpbWUgPj0gYmFubmVyU2hvd1RpbWUgKiAxMDAwKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQmFubmVyQWQg5bGV56S65pe26Ze06LaF6L+H6ZmQ5Yi277yM6ZSA5q+BIDogXCIsYmFubmVyQWQuSWQpO1xuICAgICAgICAgICAgICAgIGJhbm5lckFkLmRlc3Ryb3koKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0Qm94QWQoY2FsbEJhY2sgOiBGdW5jdGlvbilcbiAgICB7XG4gICAgICAgIGlmKHRoaXMuX3d4R3JpZEFkLmlzUmVhZHkpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGNhbGxCYWNrKHRoaXMuX3d4R3JpZEFkKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlXG4gICAgICAgIHtcbiAgICAgICAgICAgIGxldCBncmlkQWQgPSB0aGlzLl93eEdyaWRBZDtcbiAgICAgICAgICAgIGdyaWRBZC5yZXRyeSgoaXNPazpib29sZWFuKT0+XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaWYoaXNPaylcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGNhbGxCYWNrKGdyaWRBZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGNhbGxCYWNrKG51bGwpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgc3RhdGljIF9jcmVhdGVHaXJkQWQoKVxuICAgIHtcbiAgICAgICAgaWYobnVsbCAhPSB0aGlzLl93eEdyaWRBZClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgbGV0IGdyaWRBZCA9IG5ldyBXWEdyaWRBZChcIlwiKTtcbiAgICAgICAgZ3JpZEFkLnJldHJ5KCk7XG4gICAgICAgIHRoaXMuX3d4R3JpZEFkID0gZ3JpZEFkO1xuICAgIH1cbn0iLCJpbXBvcnQgSHR0cFVuaXQgZnJvbSBcIi4uL05ldC9IdHRwVW5pdFwiO1xuaW1wb3J0IEFwcFN3aXRjaENvbmZpZyBmcm9tIFwiLi4vQ29uZmlnL0FwcFN3aXRjaENvbmZpZ1wiO1xuaW1wb3J0IFdYQVBJIGZyb20gXCIuLi9XWEFQSVwiO1xuaW1wb3J0IFFRTWluaUdhbWVBUEkgZnJvbSBcIi4uL1FRTWluaUdhbWVBUElcIjtcbmltcG9ydCBBcHBDb25maWcgZnJvbSBcIi4uL0FwcENvbmZpZ1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBXdWRpYW5NZ3Ige1xuICAgIHByaXZhdGUgc3RhdGljIF9pcEJsb2NrRmxhZzogbnVtYmVyID0gLTE7XG4gICAgcHVibGljIHN0YXRpYyBJcEJsb2NrRmxhZygpOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gdGhpcy5faXBCbG9ja0ZsYWc7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIOatpOaWueazleiwg+eUqOW+iOaFou+8jOaJgOS7peimgeWcqOa4uOaIj+WIneWni+WMlueahOaXtuWAmeiwg+eUqOS4gOasoeatpOaWueazlVxuICAgICAqIFxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyb2YgV3VkaWFuTWdyXG4gICAgICovXG4gICAgcHVibGljIHN0YXRpYyBVcGRhdGVJcEJsb2NrU3RhdGUoKSB7XG4gICAgICAgIEh0dHBVbml0LkdldElwQmxvY2soXG4gICAgICAgICAgICBmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLosIPnlKhJcEJsb2Nr5o6l5Y+j5oiQ5YqfLOe7k+aenOS4ujpcIiwgcmVzKTtcbiAgICAgICAgICAgICAgICBXdWRpYW5NZ3IuX2lwQmxvY2tGbGFnID0gcmVzLmNvZGU7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbnVsbFxuICAgICAgICApXG4gICAgfVxuICAgIC8qKlxuICAgICAqIElQ5piv5ZCm6KKr5bGP6JS9XG4gICAgICogXG4gICAgICogQHN0YXRpY1xuICAgICAqIEByZXR1cm5zIHtib29sZWFufSBcbiAgICAgKiBAbWVtYmVyb2YgV3VkaWFuTWdyXG4gICAgICovXG4gICAgcHVibGljIHN0YXRpYyBHZXRJcEJsb2NrZWQoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pcEJsb2NrRmxhZyA9PSAwO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiDlvpfliLDnlKjmiLfov5vlhaXnmoTlnLrmma/lgLxcbiAgICAgKiBcbiAgICAgKiBAc3RhdGljXG4gICAgICogQHJldHVybnMge251bWJlcn0gXG4gICAgICogQG1lbWJlcm9mIFd1ZGlhbk1nclxuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgR2V0RW50cnlTY2VuZSgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIFdYQVBJLmdldExhdW5jaE9wdGlvbnNTeW5jKCkuc2NlbmUgPT0gMTAwNjtcbiAgICB9XG4gICAgLyoqXG4gICAgICog6K+v54K55byA5YWz5piv5ZCm5omT5byA77yM5YyF5ous5LqG5oC75byA5YWz5ZKM5YiG5pe25byA5YWzXG4gICAgICogXG4gICAgICogQHN0YXRpY1xuICAgICAqIEByZXR1cm5zIHtib29sZWFufSBcbiAgICAgKiBAbWVtYmVyb2YgV3VkaWFuTWdyXG4gICAgICovXG4gICAgcHVibGljIHN0YXRpYyBJc1N3aXRjaE9wZW4oKTogYm9vbGVhbiB7XG4gICAgICAgIGxldCBtYWluU3dpdGNoID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLnd1ZGlhbiA9PSAxO1xuICAgICAgICBsZXQgaXNPcGVuVGltZSA9IEFwcFN3aXRjaENvbmZpZy5nZXRJbnN0YW5jZSgpLmdldEFwcFN3aXRjaERhdGEoKS53dWRpYW5UaW1lQXZhbGlhYmxlO1xuICAgICAgICBjb25zb2xlLmxvZyhcIuivr+eCuUZsYWfnirbmgIE6IFwiLCBcIuaAu+W8gOWFszpcIiwgbWFpblN3aXRjaCwgXCLmiZPlvIDml7bpl7RcIiwgaXNPcGVuVGltZSk7XG4gICAgICAgIHJldHVybiBtYWluU3dpdGNoICYmIGlzT3BlblRpbWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIOWujOWFqOWwgeijheWlveeahOivr+eCuUZsYWdcbiAgICAgKiBcbiAgICAgKiBAcmVhZG9ubHlcbiAgICAgKiBAc3RhdGljXG4gICAgICogQHR5cGUge2Jvb2xlYW59XG4gICAgICogQG1lbWJlcm9mIFd1ZGlhbk1nclxuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgZ2V0IFd1ZGlhbkZsYWcoKTogYm9vbGVhbiB7XG4gICAgICAgIGxldCBtYWluU3dpdGNoID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLnd1ZGlhbiA9PSAxO1xuXG4gICAgICAgIGxldCBsYXVuY2hTY2VuZSA9IG51bGw7XG4gICAgICAgIGlmKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lKVxuICAgICAgICB7XG4gICAgICAgICAgICBsYXVuY2hTY2VuZSA9IFdYQVBJLmdldExhdW5jaE9wdGlvbnNTeW5jKCkuc2NlbmU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZihMYXlhLkJyb3dzZXIub25RUU1pbmlHYW1lKVxuICAgICAgICB7XG4gICAgICAgICAgICBsYXVuY2hTY2VuZSA9IFFRTWluaUdhbWVBUEkuZ2V0TGF1bmNoT3B0aW9uc1N5bmMoKS5zY2VuZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBub0VudGVyQnlTZWFyY2g6IGJvb2xlYW4gPSB0cnVlO1xuICAgICAgICB2YXIgd3VkaWFuU2NlbmVMaXN0ID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLnd1ZGlhblNjZW5lTGlzdDtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB3dWRpYW5TY2VuZUxpc3QubGVuZ3RoOyArK2kpICBcbiAgICAgICAge1xuICAgICAgICAgICAgdmFyIHd1ZGlhblNjZW5lVmFsdWUgPSB3dWRpYW5TY2VuZUxpc3RbaV07XG4gICAgICAgICAgICBpZihsYXVuY2hTY2VuZSA9PSB3dWRpYW5TY2VuZVZhbHVlKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5vRW50ZXJCeVNlYXJjaCA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGxldCBpcG5vdEJsb2NrID0gdGhpcy5faXBCbG9ja0ZsYWcgPT0gMDtcblxuICAgICAgICBsZXQgdmVyID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLnZlcnNpb24gPT0gQXBwQ29uZmlnLlZlcnNpb25zO1xuICAgICAgICAvKiDmtYvor5Xlip/og73vvIznrYnliKAgKi9cbiAgICAgICAgLy8gaXBub3RCbG9jayA9IHRydWU7XG4gICAgICAgIGxldCBtYWluID0gbWFpblN3aXRjaCAmJiBub0VudGVyQnlTZWFyY2ggJiYgaXBub3RCbG9jayAmJiB2ZXI7XG4gICAgICAgIGNvbnNvbGUubG9nKFwi6K+v54K5RmxhZ+eKtuaAgTogXCIsIFwi5oC75byA5YWzOlwiLCBtYWluU3dpdGNoLCBcIuWcuuaZr+i/m+WFpVwiLCBub0VudGVyQnlTZWFyY2gsIFwiSVDmnKrooqvlsY/olL1cIiwgaXBub3RCbG9jayxcIueJiOacrOWPt1wiLHZlcik7XG4gICAgICAgIHJldHVybiBtYWluO1xuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0IEt1YW5nRGlhbkJhbm5lckZsYWcoKTpib29sZWFue1xuICAgICAgICBsZXQgd3VkaWFuTWFpbiA9IHRoaXMuV3VkaWFuRmxhZztcbiAgICAgICAgbGV0IGJhbm5lciA9IEFwcFN3aXRjaENvbmZpZy5nZXRJbnN0YW5jZSgpLmdldEFwcFN3aXRjaERhdGEoKS5xcWNmZy5rdWFuZ2RpYW5CYW5uZXIgPT0gMTtcbiAgICAgICAgbGV0IHRvb3RhbCA9IHd1ZGlhbk1haW4gJiYgYmFubmVyO1xuICAgICAgICBjb25zb2xlLmxvZyhcIkt1YW5nRGlhbkJhbm5lckZsYWfnirbmgIE6IFwiLCBcIuaAu+W8gOWFszpcIiwgd3VkaWFuTWFpbiwgXCLliIblvIDlhbNcIixiYW5uZXIpO1xuICAgICAgICByZXR1cm4gdG9vdGFsO1xuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0IEt1YW5nRGlhQm94RmxhZygpOmJvb2xlYW57XG4gICAgICAgIGxldCB3dWRpYW5NYWluID0gdGhpcy5XdWRpYW5GbGFnO1xuICAgICAgICBsZXQgYm94ID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLnFxY2ZnLmt1YW5nZGlhbkJveCA9PSAxO1xuICAgICAgICBsZXQgdG9vdGFsID0gd3VkaWFuTWFpbiAmJiBib3g7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiS3VhbmdEaWFCb3hGbGFn54q25oCBOiBcIiwgXCLmgLvlvIDlhbM6XCIsIHd1ZGlhbk1haW4sIFwi5YiG5byA5YWzXCIsYm94KTtcbiAgICAgICAgcmV0dXJuIHRvb3RhbDtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIGdldCBXZWlZaUZsYWcoKTpib29sZWFue1xuICAgICAgICBsZXQgd3VkaWFuTWFpbiA9IHRoaXMuV3VkaWFuRmxhZztcbiAgICAgICAgbGV0IHdlaXlpID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLnFxY2ZnLndlaXlpID09IDE7XG4gICAgICAgIGxldCB0b290YWwgPSB3dWRpYW5NYWluICYmIHdlaXlpO1xuICAgICAgICBjb25zb2xlLmxvZyhcIldlaXlpRmxhZ+eKtuaAgTogXCIsIFwi5oC75byA5YWzOlwiLCB3dWRpYW5NYWluLCBcIuWIhuW8gOWFs1wiLHdlaXlpKTtcbiAgICAgICAgcmV0dXJuIHRvb3RhbDtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIGdldCBBdXRvQm94RmxhZygpOmJvb2xlYW57XG4gICAgICAgIGxldCB3dWRpYW5NYWluID0gdGhpcy5XdWRpYW5GbGFnO1xuICAgICAgICBsZXQgYXV0b0JveCA9IEFwcFN3aXRjaENvbmZpZy5nZXRJbnN0YW5jZSgpLmdldEFwcFN3aXRjaERhdGEoKS5xcWNmZy5ib3ggPT0gMTtcbiAgICAgICAgbGV0IHRvb3RhbCA9IHd1ZGlhbk1haW4gJiYgYXV0b0JveDtcbiAgICAgICAgY29uc29sZS5sb2coXCJBdXRvQm94RmxhZ+eKtuaAgTogXCIsIFwi5oC75byA5YWzOlwiLCB3dWRpYW5NYWluLCBcIuWIhuW8gOWFs1wiLGF1dG9Cb3gpO1xuICAgICAgICByZXR1cm4gdG9vdGFsO1xuICAgIH1cbn0iLCJpbXBvcnQgKiBhcyBDcnlwdG9KUyBmcm9tIFwiLi9hZXMuanNcIlxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBZXNUb29sc1xue1xuICAgIHByaXZhdGUgc3RhdGljIHJlYWRvbmx5IEtFWSA9ICdiIzYzZkZKNkF2a0szWVQqJztcbiAgICBwcml2YXRlIHN0YXRpYyByZWFkb25seSBJViA9ICdKJGY0RFUlc05MNzNNJkdvJztcblxuICAgIC8v5Yqg5a+GXG4gICAgcHVibGljIHN0YXRpYyBlbmNyeXB0KHN0cjogc3RyaW5nKSB7XG4gICAgICAgIHZhciBrZXkgPSBDcnlwdG9KUy5lbmMuVXRmOC5wYXJzZShBZXNUb29scy5LRVkpOy8vIOenmOmSpVxuICAgICAgICB2YXIgaXYgPSBDcnlwdG9KUy5lbmMuVXRmOC5wYXJzZShBZXNUb29scy5JVik7Ly/lkJHph49pdlxuICAgICAgICB2YXIgZW5jcnlwdGVkID0gQ3J5cHRvSlMuQUVTLmVuY3J5cHQoc3RyLCBrZXksIHsgaXY6IGl2LCBtb2RlOiBDcnlwdG9KUy5tb2RlLkNCQywgcGFkZGluZzogQ3J5cHRvSlMucGFkLlBrY3M3IH0pO1xuICAgICAgICByZXR1cm4gZW5jcnlwdGVkLnRvU3RyaW5nKCk7XG4gICAgfVxuXG4gICAgLy/op6Plr4ZcbiAgICBwdWJsaWMgc3RhdGljIGRlY3J5cHQoc3RyOiBzdHJpbmcpIHtcbiAgICAgICAgdmFyIGtleSA9IENyeXB0b0pTLmVuYy5VdGY4LnBhcnNlKEFlc1Rvb2xzLktFWSk7Ly8g56eY6ZKlXG4gICAgICAgIHZhciBpdiA9IENyeXB0b0pTLmVuYy5VdGY4LnBhcnNlKEFlc1Rvb2xzLklWKTsvL+WQkemHj2l2XG4gICAgICAgIHZhciBkZWNyeXB0ZWQgPSBDcnlwdG9KUy5BRVMuZGVjcnlwdChzdHIsIGtleSwgeyBpdjogaXYsIHBhZGRpbmc6IENyeXB0b0pTLnBhZC5Qa2NzNyB9KTtcbiAgICAgICAgcmV0dXJuIGRlY3J5cHRlZC50b1N0cmluZyhDcnlwdG9KUy5lbmMuVXRmOCk7XG4gICAgfVxuICAgIFxuICAgIFxufSIsImltcG9ydCBOZXRDb25maWcgZnJvbSBcIi4vTmV0Q29uZmlnXCI7XG5pbXBvcnQgVXNlciBmcm9tIFwiLi4vVXNlci9Vc2VyXCI7XG5pbXBvcnQgQWVzVG9vbHMgZnJvbSBcIi4vQWVzVG9vbHNcIjtcbmltcG9ydCBBcHBDb25maWcgZnJvbSBcIi4uL0FwcENvbmZpZ1wiO1xuXG5leHBvcnQgY2xhc3MgcmVxdWVzdERhdGFcbntcbiAgICBwdWJsaWMgbWV0aCA6IHN0cmluZyA9IFwicG9zdFwiO1xuICAgIHB1YmxpYyByZWFkb25seSBkYXRhIDogYW55O1xuICAgIHB1YmxpYyB1cmwgOiBzdHJpbmcgPSBcIlwiO1xuICAgIHB1YmxpYyBvblN1Y2Nlc3MgOiBGdW5jdGlvbiA9IG51bGw7XG4gICAgcHVibGljIG9uRmFpbCA6IEZ1bmN0aW9uID0gbnVsbDtcblxuICAgIGNvbnN0cnVjdG9yKClcbiAgICB7XG4gICAgICAgIHRoaXMuZGF0YSA9IHt9O1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSHR0cFVuaXQgXG57XG4gICAgcHVibGljIHN0YXRpYyByZXF1ZXN0KHJlcSA6IHJlcXVlc3REYXRhKSB7XG4gICAgICAgIGlmIChyZXEudXJsLmluZGV4T2YoXCJodHRwczovL1wiKSA+IC0xIHx8XG4gICAgICAgICAgICByZXEudXJsLmluZGV4T2YoXCJodHRwOi8vXCIpID4gLTEpIHtcbiAgICAgICAgICAgIHJlcS51cmwgPSByZXEudXJsO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVxLnVybCA9IE5ldENvbmZpZy5zZXJ2ZXJVcmwgKyByZXEudXJsO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGNvbXBsZXRlRnVuYyA9IChyZXMpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyxcImh0dHAgU3VjY2Vzc1wiKVxuICAgICAgICAgICAgaWYgKHJlcS5vblN1Y2Nlc3MpIHtcbiAgICAgICAgICAgICAgICByZXEub25TdWNjZXNzKHJlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXEub25TdWNjZXNzID0gbnVsbDtcbiAgICAgICAgICAgIHJlcSA9IG51bGw7XG4gICAgICAgIH07XG5cbiAgICAgICAgdmFyIGVycm9yRnVuYyA9IChyZXMpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyxcImh0dHAgZmFpbFwiKVxuICAgICAgICAgICAgaWYgKHJlcS5vbkZhaWwpICB7XG4gICAgICAgICAgICAgICAgcmVxLm9uRmFpbChyZXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmVxLm9uRmFpbCA9IG51bGw7XG4gICAgICAgICAgICByZXEgPSBudWxsO1xuICAgICAgICB9O1xuXG4gICAgICAgIHZhciB4aHI6IExheWEuSHR0cFJlcXVlc3QgPSBuZXcgTGF5YS5IdHRwUmVxdWVzdCgpO1xuICAgICAgICB4aHIub25jZShMYXlhLkV2ZW50LkNPTVBMRVRFLCBIdHRwVW5pdCwgY29tcGxldGVGdW5jKTtcbiAgICAgICAgeGhyLm9uY2UoTGF5YS5FdmVudC5FUlJPUiwgSHR0cFVuaXQsIGVycm9yRnVuYyk7XG4gICAgICAgIGxldCBkYXRhU3RyOnN0cmluZyA9IEpTT04uc3RyaW5naWZ5KHJlcS5kYXRhKTtcblxuICAgICAgICBpZihMYXlhLkJyb3dzZXIub25NaW5pR2FtZSB8fCBBcHBDb25maWcub25UVE1pbmlHYW1lKVxuICAgICAgICB7XG4gICAgICAgICAgICByZXEuZGF0YS5jb2RlID0gVXNlci5jb2RlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYoTGF5YS5Ccm93c2VyLm9uUUdNaW5pR2FtZSkgLy9PUFBP5bCP5ri45oiPXG4gICAgICAgIHtcbiAgICAgICAgICAgIHJlcS5kYXRhLm9wcG90b2tlbiA9IFVzZXIuY29kZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmKExheWEuQnJvd3Nlci5vblFRTWluaUdhbWUpIC8vcXHlsI/muLjmiI9cbiAgICAgICAge1xuICAgICAgICAgICAgcmVxLmRhdGEuY29kZSA9IFVzZXIuY29kZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlXG4gICAgICAgIHtcbiAgICAgICAgICAgIHJlcS5kYXRhLmNvZGUgPSBVc2VyLmNvZGU7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgdGltZSA9IFwidGltZT1cIiArIFN0cmluZyhEYXRlLm5vdygpKTtcbiAgICAgICAgdmFyIGhlYWRlciA9IFxuICAgICAgICBbXG4gICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiLCBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgICAgIFwic3RhdGVcIiAsIE5ldENvbmZpZy5zdGF0ZSxcbiAgICAgICAgICAgIFwiZ2FtZWlkXCIgLE5ldENvbmZpZy5nYW1laWQsXG4gICAgICAgICAgICBcInNpZ25cIiAsQWVzVG9vbHMuZW5jcnlwdCh0aW1lKSxcbiAgICAgICAgXVxuICAgICAgICBpZihVc2VyLnRva2VuKVxuICAgICAgICB7XG4gICAgICAgICAgICBoZWFkZXIucHVzaChcInRva2VuXCIpO1xuICAgICAgICAgICAgaGVhZGVyLnB1c2goVXNlci50b2tlbik7XG4gICAgICAgIH1cblxuICAgICAgICB4aHIuc2VuZChyZXEudXJsLCBKU09OLnN0cmluZ2lmeShyZXEuZGF0YSksIHJlcS5tZXRoLCBcImpzb25cIixoZWFkZXIpO1xuICAgIH1cblxuICAgIC8vdG9kbzrov5nph4zmt7vliqDkvaDku6zlkozmnI3liqHlmajnm7jkupLnmoTmjqXlj6NcblxuICAgIHB1YmxpYyBzdGF0aWMgbG9naW4ob25TdWNjZXNzIDogRnVuY3Rpb24sb25GYWlsIDogRnVuY3Rpb24pXG4gICAge1xuICAgICAgICB2YXIgcmVxID0gbmV3IHJlcXVlc3REYXRhKCk7XG4gICAgICAgIHJlcS51cmwgPSBOZXRDb25maWcuTG9naW47XG4gICAgICAgIHJlcS5vblN1Y2Nlc3MgPSBvblN1Y2Nlc3M7XG4gICAgICAgIHJlcS5vbkZhaWwgPSBvbkZhaWw7XG4gICAgICAgIEh0dHBVbml0LnJlcXVlc3QocmVxKTtcbiAgICB9XG4gICAgXG4gICAgcHVibGljIHN0YXRpYyBzYXZlR2FtZURhdGEoZ2FtZURhdGEgOiBhbnksb25TdWNjZXNzIDogRnVuY3Rpb24sb25GYWlsIDogRnVuY3Rpb24pXG4gICAge1xuICAgICAgICB2YXIgcmVxID0gbmV3IHJlcXVlc3REYXRhKCk7XG4gICAgICAgIHJlcS51cmwgPSBOZXRDb25maWcuU2F2ZUdhbWVEYXRhO1xuICAgICAgICByZXEuZGF0YS5nYW1lRGF0YSA9IGdhbWVEYXRhO1xuICAgICAgICByZXEub25TdWNjZXNzID0gb25TdWNjZXNzO1xuICAgICAgICByZXEub25GYWlsID0gb25GYWlsO1xuICAgICAgICBIdHRwVW5pdC5yZXF1ZXN0KHJlcSk7XG4gICAgfVxuICAgIFxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0R2FtZURhdGEob25TdWNjZXNzIDogRnVuY3Rpb24sb25GYWlsIDogRnVuY3Rpb24pXG4gICAge1xuICAgICAgICB2YXIgcmVxID0gbmV3IHJlcXVlc3REYXRhKCk7XG4gICAgICAgIHJlcS51cmwgPSBOZXRDb25maWcuR2V0VXNlcjtcbiAgICAgICAgcmVxLm9uU3VjY2VzcyA9IG9uU3VjY2VzcztcbiAgICAgICAgcmVxLm9uRmFpbCA9IG9uRmFpbDtcbiAgICAgICAgSHR0cFVuaXQucmVxdWVzdChyZXEpO1xuICAgIH1cbiAgICBcbiAgICAvKipcbiAgICAgKiBJUOWxj+iUveaWueazle+8jOmcgOimgeWcqE5ldENvbmZpZ+exu+S4reiuvue9rklwQmxvY2vnmoTmjqXlj6PlnLDlnYBcbiAgICAgKiBvblN1Y2Nlc3Pmlrnms5Xov5Tlm57lj4LmlbDnmoTojIPkvovkuLogT2JqZWN0IHtjb2RlOiAwLCBtc2c6IFwi5YeG5LiA57q/XCIsIHRpbWU6IFwiMTU3MTAzNDQ0N1wiLCBkYXRhOiBudWxsfVxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyb2YgSHR0cFVuaXRcbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIEdldElwQmxvY2sob25TdWNjZXNzIDogRnVuY3Rpb24sb25GYWlsIDogRnVuY3Rpb24pe1xuICAgICAgICBpZigtMSAhPSBOZXRDb25maWcuZ2FtZWlkKVxuICAgICAgICB7XG4gICAgICAgICAgICB2YXIgcmVxID0gbmV3IHJlcXVlc3REYXRhKCk7XG4gICAgICAgICAgICByZXEudXJsID0gTmV0Q29uZmlnLklwQmxvY2s7XG4gICAgICAgICAgICByZXEub25TdWNjZXNzID0gb25TdWNjZXNzO1xuICAgICAgICAgICAgcmVxLm9uRmFpbCA9IG9uRmFpbDtcbiAgICAgICAgICAgIEh0dHBVbml0LnJlcXVlc3QocmVxKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgcmVwb3J0RXhwb3J0KGFwcGlkIDogc3RyaW5nLGdhbWVfbmFtZSA6IHN0cmluZyxvblN1Y2Nlc3MgOiBGdW5jdGlvbixvbkZhaWwgOiBGdW5jdGlvbilcbiAgICB7XG4gICAgICAgIHZhciByZXEgPSBuZXcgcmVxdWVzdERhdGEoKTtcbiAgICAgICAgcmVxLnVybCA9IE5ldENvbmZpZy5yZXBvcnRFeHBvcnQ7XG4gICAgICAgIHJlcS5kYXRhLndiYXBwaWQgPSBhcHBpZDtcbiAgICAgICAgcmVxLmRhdGEuZ2FtZV9uYW1lID0gZ2FtZV9uYW1lO1xuICAgICAgICByZXEub25TdWNjZXNzID0gb25TdWNjZXNzO1xuICAgICAgICByZXEub25GYWlsID0gb25GYWlsO1xuICAgICAgICBIdHRwVW5pdC5yZXF1ZXN0KHJlcSk7XG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyByZXBvcnRJbXBvcnQoYXBwaWQgOiBzdHJpbmcsY2hhbm5lbCA6IHN0cmluZyxvblN1Y2Nlc3MgOiBGdW5jdGlvbixvbkZhaWwgOiBGdW5jdGlvbilcbiAgICB7XG4gICAgICAgIHZhciByZXEgPSBuZXcgcmVxdWVzdERhdGEoKTtcbiAgICAgICAgcmVxLnVybCA9IE5ldENvbmZpZy5yZXBvcnRJbXBvcnQ7XG4gICAgICAgIHJlcS5kYXRhLndiYXBwaWQgPSBhcHBpZDtcbiAgICAgICAgcmVxLmRhdGEuY2hhbm5lbCA9IGNoYW5uZWw7XG4gICAgICAgIHJlcS5vblN1Y2Nlc3MgPSBvblN1Y2Nlc3M7XG4gICAgICAgIHJlcS5vbkZhaWwgPSBvbkZhaWw7XG4gICAgICAgIEh0dHBVbml0LnJlcXVlc3QocmVxKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIEdldHVzZXJpcChvblN1Y2Nlc3MgOiBGdW5jdGlvbixvbkZhaWwgOiBGdW5jdGlvbilcbiAgICB7XG4gICAgICAgIHZhciByZXEgPSBuZXcgcmVxdWVzdERhdGEoKTtcbiAgICAgICAgcmVxLnVybCA9IE5ldENvbmZpZy5nZXR1c2VyaXA7XG4gICAgICAgIHJlcS5vblN1Y2Nlc3MgPSBvblN1Y2Nlc3M7XG4gICAgICAgIHJlcS5vbkZhaWwgPSBvbkZhaWw7XG4gICAgICAgIEh0dHBVbml0LnJlcXVlc3QocmVxKTtcbiAgICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBOZXRDb25maWdcbntcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IHN0YXRlID0gNDtcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IGdhbWVpZCA6IG51bWJlciA9IDE0MDtcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IHNlcnZlclVybCA6IHN0cmluZyA9IFwiaHR0cHM6Ly9zeXN4dWUuNWlhcGUuY29tXCI7XG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBMb2dpbiA6IHN0cmluZyA9IFwiaHR0cHM6Ly9zeXN4dWUuNWlhcGUuY29tL2FwaS9sb2dpbi9sb2dpbi9xcWNsb2dpblwiO1xuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgU2F2ZUdhbWVEYXRhIDogc3RyaW5nID0gXCJodHRwczovL3N5c3h1ZS41aWFwZS5jb20vYXBpL3FxamprbGJiL2luZGV4L3NhdmVjZFwiO1xuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgR2V0VXNlciA9IFwiaHR0cHM6Ly9zeXN4dWUuNWlhcGUuY29tL2FwaS9xcWpqa2xiYi9pbmRleC9nZXR1c2VyXCI7XG4gICAgLyog55So5p2l5a+5SVDlnLDlnYDov5vooYzlsY/olL3nmoTmjqXlj6PlnLDlnYDvvIzlj6/ku6Xkvb/nlKjmjqXlj6PnmoTov5Tlm57lgLzorqnmn5Dkupvlub/lkYrpgLvovpHlnKjlvq7kv6HnmoTlrqHmoLjlnLDljLoo5bm/5beeKeWPkeeUn+WPmOWMliAqL1xuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgSXBCbG9jayA9IFwiaHR0cHM6Ly9zeXN4dWUuNWlhcGUuY29tL2FwaS9zaGFyZS9pcF9zZWxlY3RcIjtcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IHJlcG9ydEV4cG9ydCA9IFwiL2FwaS9zaGFyZS9nZXR3YWlidWFkXCI7XG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSByZXBvcnRJbXBvcnQgPSBcIi9hcGkvc2hhcmUvZ2V0emphZG1sXCI7XG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBnZXR1c2VyaXAgPSBcIi9hcGkvc2hhcmUvZ2V0dXNlcmlwXCI7XG59IiwidmFyIENyeXB0b0pTID0gQ3J5cHRvSlMgfHwgZnVuY3Rpb24gKHUsIHApIHtcbiAgdmFyIGQgPSB7fSwgbCA9IGQubGliID0ge30sIHMgPSBmdW5jdGlvbiAoKSB7IH0sIHQgPSBsLkJhc2UgPSB7IGV4dGVuZDogZnVuY3Rpb24gKGEpIHsgcy5wcm90b3R5cGUgPSB0aGlzOyB2YXIgYyA9IG5ldyBzOyBhICYmIGMubWl4SW4oYSk7IGMuaGFzT3duUHJvcGVydHkoXCJpbml0XCIpIHx8IChjLmluaXQgPSBmdW5jdGlvbiAoKSB7IGMuJHN1cGVyLmluaXQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB9KTsgYy5pbml0LnByb3RvdHlwZSA9IGM7IGMuJHN1cGVyID0gdGhpczsgcmV0dXJuIGMgfSwgY3JlYXRlOiBmdW5jdGlvbiAoKSB7IHZhciBhID0gdGhpcy5leHRlbmQoKTsgYS5pbml0LmFwcGx5KGEsIGFyZ3VtZW50cyk7IHJldHVybiBhIH0sIGluaXQ6IGZ1bmN0aW9uICgpIHsgfSwgbWl4SW46IGZ1bmN0aW9uIChhKSB7IGZvciAodmFyIGMgaW4gYSkgYS5oYXNPd25Qcm9wZXJ0eShjKSAmJiAodGhpc1tjXSA9IGFbY10pOyBhLmhhc093blByb3BlcnR5KFwidG9TdHJpbmdcIikgJiYgKHRoaXMudG9TdHJpbmcgPSBhLnRvU3RyaW5nKSB9LCBjbG9uZTogZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpcy5pbml0LnByb3RvdHlwZS5leHRlbmQodGhpcykgfSB9LFxuICByID0gbC5Xb3JkQXJyYXkgPSB0LmV4dGVuZCh7XG4gICAgaW5pdDogZnVuY3Rpb24gKGEsIGMpIHsgYSA9IHRoaXMud29yZHMgPSBhIHx8IFtdOyB0aGlzLnNpZ0J5dGVzID0gYyAhPSBwID8gYyA6IDQgKiBhLmxlbmd0aCB9LCB0b1N0cmluZzogZnVuY3Rpb24gKGEpIHsgcmV0dXJuIChhIHx8IHYpLnN0cmluZ2lmeSh0aGlzKSB9LCBjb25jYXQ6IGZ1bmN0aW9uIChhKSB7IHZhciBjID0gdGhpcy53b3JkcywgZSA9IGEud29yZHMsIGogPSB0aGlzLnNpZ0J5dGVzOyBhID0gYS5zaWdCeXRlczsgdGhpcy5jbGFtcCgpOyBpZiAoaiAlIDQpIGZvciAodmFyIGsgPSAwOyBrIDwgYTsgaysrKWNbaiArIGsgPj4+IDJdIHw9IChlW2sgPj4+IDJdID4+PiAyNCAtIDggKiAoayAlIDQpICYgMjU1KSA8PCAyNCAtIDggKiAoKGogKyBrKSAlIDQpOyBlbHNlIGlmICg2NTUzNSA8IGUubGVuZ3RoKSBmb3IgKGsgPSAwOyBrIDwgYTsgayArPSA0KWNbaiArIGsgPj4+IDJdID0gZVtrID4+PiAyXTsgZWxzZSBjLnB1c2guYXBwbHkoYywgZSk7IHRoaXMuc2lnQnl0ZXMgKz0gYTsgcmV0dXJuIHRoaXMgfSwgY2xhbXA6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBhID0gdGhpcy53b3JkcywgYyA9IHRoaXMuc2lnQnl0ZXM7IGFbYyA+Pj4gMl0gJj0gNDI5NDk2NzI5NSA8PFxuICAgICAgICAzMiAtIDggKiAoYyAlIDQpOyBhLmxlbmd0aCA9IHUuY2VpbChjIC8gNClcbiAgICB9LCBjbG9uZTogZnVuY3Rpb24gKCkgeyB2YXIgYSA9IHQuY2xvbmUuY2FsbCh0aGlzKTsgYS53b3JkcyA9IHRoaXMud29yZHMuc2xpY2UoMCk7IHJldHVybiBhIH0sIHJhbmRvbTogZnVuY3Rpb24gKGEpIHsgZm9yICh2YXIgYyA9IFtdLCBlID0gMDsgZSA8IGE7IGUgKz0gNCljLnB1c2goNDI5NDk2NzI5NiAqIHUucmFuZG9tKCkgfCAwKTsgcmV0dXJuIG5ldyByLmluaXQoYywgYSkgfVxuICB9KSwgdyA9IGQuZW5jID0ge30sIHYgPSB3LkhleCA9IHtcbiAgICBzdHJpbmdpZnk6IGZ1bmN0aW9uIChhKSB7IHZhciBjID0gYS53b3JkczsgYSA9IGEuc2lnQnl0ZXM7IGZvciAodmFyIGUgPSBbXSwgaiA9IDA7IGogPCBhOyBqKyspIHsgdmFyIGsgPSBjW2ogPj4+IDJdID4+PiAyNCAtIDggKiAoaiAlIDQpICYgMjU1OyBlLnB1c2goKGsgPj4+IDQpLnRvU3RyaW5nKDE2KSk7IGUucHVzaCgoayAmIDE1KS50b1N0cmluZygxNikpIH0gcmV0dXJuIGUuam9pbihcIlwiKSB9LCBwYXJzZTogZnVuY3Rpb24gKGEpIHtcbiAgICAgIGZvciAodmFyIGMgPSBhLmxlbmd0aCwgZSA9IFtdLCBqID0gMDsgaiA8IGM7IGogKz0gMillW2ogPj4+IDNdIHw9IHBhcnNlSW50KGEuc3Vic3RyKGosXG4gICAgICAgIDIpLCAxNikgPDwgMjQgLSA0ICogKGogJSA4KTsgcmV0dXJuIG5ldyByLmluaXQoZSwgYyAvIDIpXG4gICAgfVxuICB9LCBiID0gdy5MYXRpbjEgPSB7IHN0cmluZ2lmeTogZnVuY3Rpb24gKGEpIHsgdmFyIGMgPSBhLndvcmRzOyBhID0gYS5zaWdCeXRlczsgZm9yICh2YXIgZSA9IFtdLCBqID0gMDsgaiA8IGE7IGorKyllLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZShjW2ogPj4+IDJdID4+PiAyNCAtIDggKiAoaiAlIDQpICYgMjU1KSk7IHJldHVybiBlLmpvaW4oXCJcIikgfSwgcGFyc2U6IGZ1bmN0aW9uIChhKSB7IGZvciAodmFyIGMgPSBhLmxlbmd0aCwgZSA9IFtdLCBqID0gMDsgaiA8IGM7IGorKyllW2ogPj4+IDJdIHw9IChhLmNoYXJDb2RlQXQoaikgJiAyNTUpIDw8IDI0IC0gOCAqIChqICUgNCk7IHJldHVybiBuZXcgci5pbml0KGUsIGMpIH0gfSwgeCA9IHcuVXRmOCA9IHsgc3RyaW5naWZ5OiBmdW5jdGlvbiAoYSkgeyB0cnkgeyByZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KGVzY2FwZShiLnN0cmluZ2lmeShhKSkpIH0gY2F0Y2ggKGMpIHsgdGhyb3cgRXJyb3IoXCJNYWxmb3JtZWQgVVRGLTggZGF0YVwiKTsgfSB9LCBwYXJzZTogZnVuY3Rpb24gKGEpIHsgcmV0dXJuIGIucGFyc2UodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KGEpKSkgfSB9LFxuICBxID0gbC5CdWZmZXJlZEJsb2NrQWxnb3JpdGhtID0gdC5leHRlbmQoe1xuICAgIHJlc2V0OiBmdW5jdGlvbiAoKSB7IHRoaXMuX2RhdGEgPSBuZXcgci5pbml0OyB0aGlzLl9uRGF0YUJ5dGVzID0gMCB9LCBfYXBwZW5kOiBmdW5jdGlvbiAoYSkgeyBcInN0cmluZ1wiID09IHR5cGVvZiBhICYmIChhID0geC5wYXJzZShhKSk7IHRoaXMuX2RhdGEuY29uY2F0KGEpOyB0aGlzLl9uRGF0YUJ5dGVzICs9IGEuc2lnQnl0ZXMgfSwgX3Byb2Nlc3M6IGZ1bmN0aW9uIChhKSB7IHZhciBjID0gdGhpcy5fZGF0YSwgZSA9IGMud29yZHMsIGogPSBjLnNpZ0J5dGVzLCBrID0gdGhpcy5ibG9ja1NpemUsIGIgPSBqIC8gKDQgKiBrKSwgYiA9IGEgPyB1LmNlaWwoYikgOiB1Lm1heCgoYiB8IDApIC0gdGhpcy5fbWluQnVmZmVyU2l6ZSwgMCk7IGEgPSBiICogazsgaiA9IHUubWluKDQgKiBhLCBqKTsgaWYgKGEpIHsgZm9yICh2YXIgcSA9IDA7IHEgPCBhOyBxICs9IGspdGhpcy5fZG9Qcm9jZXNzQmxvY2soZSwgcSk7IHEgPSBlLnNwbGljZSgwLCBhKTsgYy5zaWdCeXRlcyAtPSBqIH0gcmV0dXJuIG5ldyByLmluaXQocSwgaikgfSwgY2xvbmU6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBhID0gdC5jbG9uZS5jYWxsKHRoaXMpO1xuICAgICAgYS5fZGF0YSA9IHRoaXMuX2RhdGEuY2xvbmUoKTsgcmV0dXJuIGFcbiAgICB9LCBfbWluQnVmZmVyU2l6ZTogMFxuICB9KTsgbC5IYXNoZXIgPSBxLmV4dGVuZCh7XG4gICAgY2ZnOiB0LmV4dGVuZCgpLCBpbml0OiBmdW5jdGlvbiAoYSkgeyB0aGlzLmNmZyA9IHRoaXMuY2ZnLmV4dGVuZChhKTsgdGhpcy5yZXNldCgpIH0sIHJlc2V0OiBmdW5jdGlvbiAoKSB7IHEucmVzZXQuY2FsbCh0aGlzKTsgdGhpcy5fZG9SZXNldCgpIH0sIHVwZGF0ZTogZnVuY3Rpb24gKGEpIHsgdGhpcy5fYXBwZW5kKGEpOyB0aGlzLl9wcm9jZXNzKCk7IHJldHVybiB0aGlzIH0sIGZpbmFsaXplOiBmdW5jdGlvbiAoYSkgeyBhICYmIHRoaXMuX2FwcGVuZChhKTsgcmV0dXJuIHRoaXMuX2RvRmluYWxpemUoKSB9LCBibG9ja1NpemU6IDE2LCBfY3JlYXRlSGVscGVyOiBmdW5jdGlvbiAoYSkgeyByZXR1cm4gZnVuY3Rpb24gKGIsIGUpIHsgcmV0dXJuIChuZXcgYS5pbml0KGUpKS5maW5hbGl6ZShiKSB9IH0sIF9jcmVhdGVIbWFjSGVscGVyOiBmdW5jdGlvbiAoYSkge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIChiLCBlKSB7XG4gICAgICAgIHJldHVybiAobmV3IG4uSE1BQy5pbml0KGEsXG4gICAgICAgICAgZSkpLmZpbmFsaXplKGIpXG4gICAgICB9XG4gICAgfVxuICB9KTsgdmFyIG4gPSBkLmFsZ28gPSB7fTsgcmV0dXJuIGRcbn0oTWF0aCk7XG4oZnVuY3Rpb24gKCkge1xuICB2YXIgdSA9IENyeXB0b0pTLCBwID0gdS5saWIuV29yZEFycmF5OyB1LmVuYy5CYXNlNjQgPSB7XG4gICAgc3RyaW5naWZ5OiBmdW5jdGlvbiAoZCkgeyB2YXIgbCA9IGQud29yZHMsIHAgPSBkLnNpZ0J5dGVzLCB0ID0gdGhpcy5fbWFwOyBkLmNsYW1wKCk7IGQgPSBbXTsgZm9yICh2YXIgciA9IDA7IHIgPCBwOyByICs9IDMpZm9yICh2YXIgdyA9IChsW3IgPj4+IDJdID4+PiAyNCAtIDggKiAociAlIDQpICYgMjU1KSA8PCAxNiB8IChsW3IgKyAxID4+PiAyXSA+Pj4gMjQgLSA4ICogKChyICsgMSkgJSA0KSAmIDI1NSkgPDwgOCB8IGxbciArIDIgPj4+IDJdID4+PiAyNCAtIDggKiAoKHIgKyAyKSAlIDQpICYgMjU1LCB2ID0gMDsgNCA+IHYgJiYgciArIDAuNzUgKiB2IDwgcDsgdisrKWQucHVzaCh0LmNoYXJBdCh3ID4+PiA2ICogKDMgLSB2KSAmIDYzKSk7IGlmIChsID0gdC5jaGFyQXQoNjQpKSBmb3IgKDsgZC5sZW5ndGggJSA0OylkLnB1c2gobCk7IHJldHVybiBkLmpvaW4oXCJcIikgfSwgcGFyc2U6IGZ1bmN0aW9uIChkKSB7XG4gICAgICB2YXIgbCA9IGQubGVuZ3RoLCBzID0gdGhpcy5fbWFwLCB0ID0gcy5jaGFyQXQoNjQpOyB0ICYmICh0ID0gZC5pbmRleE9mKHQpLCAtMSAhPSB0ICYmIChsID0gdCkpOyBmb3IgKHZhciB0ID0gW10sIHIgPSAwLCB3ID0gMDsgdyA8XG4gICAgICAgIGw7IHcrKylpZiAodyAlIDQpIHsgdmFyIHYgPSBzLmluZGV4T2YoZC5jaGFyQXQodyAtIDEpKSA8PCAyICogKHcgJSA0KSwgYiA9IHMuaW5kZXhPZihkLmNoYXJBdCh3KSkgPj4+IDYgLSAyICogKHcgJSA0KTsgdFtyID4+PiAyXSB8PSAodiB8IGIpIDw8IDI0IC0gOCAqIChyICUgNCk7IHIrKyB9IHJldHVybiBwLmNyZWF0ZSh0LCByKVxuICAgIH0sIF9tYXA6IFwiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLz1cIlxuICB9XG59KSgpO1xuKGZ1bmN0aW9uICh1KSB7XG4gIGZ1bmN0aW9uIHAoYiwgbiwgYSwgYywgZSwgaiwgaykgeyBiID0gYiArIChuICYgYSB8IH5uICYgYykgKyBlICsgazsgcmV0dXJuIChiIDw8IGogfCBiID4+PiAzMiAtIGopICsgbiB9IGZ1bmN0aW9uIGQoYiwgbiwgYSwgYywgZSwgaiwgaykgeyBiID0gYiArIChuICYgYyB8IGEgJiB+YykgKyBlICsgazsgcmV0dXJuIChiIDw8IGogfCBiID4+PiAzMiAtIGopICsgbiB9IGZ1bmN0aW9uIGwoYiwgbiwgYSwgYywgZSwgaiwgaykgeyBiID0gYiArIChuIF4gYSBeIGMpICsgZSArIGs7IHJldHVybiAoYiA8PCBqIHwgYiA+Pj4gMzIgLSBqKSArIG4gfSBmdW5jdGlvbiBzKGIsIG4sIGEsIGMsIGUsIGosIGspIHsgYiA9IGIgKyAoYSBeIChuIHwgfmMpKSArIGUgKyBrOyByZXR1cm4gKGIgPDwgaiB8IGIgPj4+IDMyIC0gaikgKyBuIH0gZm9yICh2YXIgdCA9IENyeXB0b0pTLCByID0gdC5saWIsIHcgPSByLldvcmRBcnJheSwgdiA9IHIuSGFzaGVyLCByID0gdC5hbGdvLCBiID0gW10sIHggPSAwOyA2NCA+IHg7IHgrKyliW3hdID0gNDI5NDk2NzI5NiAqIHUuYWJzKHUuc2luKHggKyAxKSkgfCAwOyByID0gci5NRDUgPSB2LmV4dGVuZCh7XG4gICAgX2RvUmVzZXQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5faGFzaCA9IG5ldyB3LmluaXQoWzE3MzI1ODQxOTMsIDQwMjMyMzM0MTcsIDI1NjIzODMxMDIsIDI3MTczMzg3OF0pIH0sXG4gICAgX2RvUHJvY2Vzc0Jsb2NrOiBmdW5jdGlvbiAocSwgbikge1xuICAgICAgZm9yICh2YXIgYSA9IDA7IDE2ID4gYTsgYSsrKSB7IHZhciBjID0gbiArIGEsIGUgPSBxW2NdOyBxW2NdID0gKGUgPDwgOCB8IGUgPj4+IDI0KSAmIDE2NzExOTM1IHwgKGUgPDwgMjQgfCBlID4+PiA4KSAmIDQyNzgyNTUzNjAgfSB2YXIgYSA9IHRoaXMuX2hhc2gud29yZHMsIGMgPSBxW24gKyAwXSwgZSA9IHFbbiArIDFdLCBqID0gcVtuICsgMl0sIGsgPSBxW24gKyAzXSwgeiA9IHFbbiArIDRdLCByID0gcVtuICsgNV0sIHQgPSBxW24gKyA2XSwgdyA9IHFbbiArIDddLCB2ID0gcVtuICsgOF0sIEEgPSBxW24gKyA5XSwgQiA9IHFbbiArIDEwXSwgQyA9IHFbbiArIDExXSwgdSA9IHFbbiArIDEyXSwgRCA9IHFbbiArIDEzXSwgRSA9IHFbbiArIDE0XSwgeCA9IHFbbiArIDE1XSwgZiA9IGFbMF0sIG0gPSBhWzFdLCBnID0gYVsyXSwgaCA9IGFbM10sIGYgPSBwKGYsIG0sIGcsIGgsIGMsIDcsIGJbMF0pLCBoID0gcChoLCBmLCBtLCBnLCBlLCAxMiwgYlsxXSksIGcgPSBwKGcsIGgsIGYsIG0sIGosIDE3LCBiWzJdKSwgbSA9IHAobSwgZywgaCwgZiwgaywgMjIsIGJbM10pLCBmID0gcChmLCBtLCBnLCBoLCB6LCA3LCBiWzRdKSwgaCA9IHAoaCwgZiwgbSwgZywgciwgMTIsIGJbNV0pLCBnID0gcChnLCBoLCBmLCBtLCB0LCAxNywgYls2XSksIG0gPSBwKG0sIGcsIGgsIGYsIHcsIDIyLCBiWzddKSxcbiAgICAgICAgZiA9IHAoZiwgbSwgZywgaCwgdiwgNywgYls4XSksIGggPSBwKGgsIGYsIG0sIGcsIEEsIDEyLCBiWzldKSwgZyA9IHAoZywgaCwgZiwgbSwgQiwgMTcsIGJbMTBdKSwgbSA9IHAobSwgZywgaCwgZiwgQywgMjIsIGJbMTFdKSwgZiA9IHAoZiwgbSwgZywgaCwgdSwgNywgYlsxMl0pLCBoID0gcChoLCBmLCBtLCBnLCBELCAxMiwgYlsxM10pLCBnID0gcChnLCBoLCBmLCBtLCBFLCAxNywgYlsxNF0pLCBtID0gcChtLCBnLCBoLCBmLCB4LCAyMiwgYlsxNV0pLCBmID0gZChmLCBtLCBnLCBoLCBlLCA1LCBiWzE2XSksIGggPSBkKGgsIGYsIG0sIGcsIHQsIDksIGJbMTddKSwgZyA9IGQoZywgaCwgZiwgbSwgQywgMTQsIGJbMThdKSwgbSA9IGQobSwgZywgaCwgZiwgYywgMjAsIGJbMTldKSwgZiA9IGQoZiwgbSwgZywgaCwgciwgNSwgYlsyMF0pLCBoID0gZChoLCBmLCBtLCBnLCBCLCA5LCBiWzIxXSksIGcgPSBkKGcsIGgsIGYsIG0sIHgsIDE0LCBiWzIyXSksIG0gPSBkKG0sIGcsIGgsIGYsIHosIDIwLCBiWzIzXSksIGYgPSBkKGYsIG0sIGcsIGgsIEEsIDUsIGJbMjRdKSwgaCA9IGQoaCwgZiwgbSwgZywgRSwgOSwgYlsyNV0pLCBnID0gZChnLCBoLCBmLCBtLCBrLCAxNCwgYlsyNl0pLCBtID0gZChtLCBnLCBoLCBmLCB2LCAyMCwgYlsyN10pLCBmID0gZChmLCBtLCBnLCBoLCBELCA1LCBiWzI4XSksIGggPSBkKGgsIGYsXG4gICAgICAgICAgbSwgZywgaiwgOSwgYlsyOV0pLCBnID0gZChnLCBoLCBmLCBtLCB3LCAxNCwgYlszMF0pLCBtID0gZChtLCBnLCBoLCBmLCB1LCAyMCwgYlszMV0pLCBmID0gbChmLCBtLCBnLCBoLCByLCA0LCBiWzMyXSksIGggPSBsKGgsIGYsIG0sIGcsIHYsIDExLCBiWzMzXSksIGcgPSBsKGcsIGgsIGYsIG0sIEMsIDE2LCBiWzM0XSksIG0gPSBsKG0sIGcsIGgsIGYsIEUsIDIzLCBiWzM1XSksIGYgPSBsKGYsIG0sIGcsIGgsIGUsIDQsIGJbMzZdKSwgaCA9IGwoaCwgZiwgbSwgZywgeiwgMTEsIGJbMzddKSwgZyA9IGwoZywgaCwgZiwgbSwgdywgMTYsIGJbMzhdKSwgbSA9IGwobSwgZywgaCwgZiwgQiwgMjMsIGJbMzldKSwgZiA9IGwoZiwgbSwgZywgaCwgRCwgNCwgYls0MF0pLCBoID0gbChoLCBmLCBtLCBnLCBjLCAxMSwgYls0MV0pLCBnID0gbChnLCBoLCBmLCBtLCBrLCAxNiwgYls0Ml0pLCBtID0gbChtLCBnLCBoLCBmLCB0LCAyMywgYls0M10pLCBmID0gbChmLCBtLCBnLCBoLCBBLCA0LCBiWzQ0XSksIGggPSBsKGgsIGYsIG0sIGcsIHUsIDExLCBiWzQ1XSksIGcgPSBsKGcsIGgsIGYsIG0sIHgsIDE2LCBiWzQ2XSksIG0gPSBsKG0sIGcsIGgsIGYsIGosIDIzLCBiWzQ3XSksIGYgPSBzKGYsIG0sIGcsIGgsIGMsIDYsIGJbNDhdKSwgaCA9IHMoaCwgZiwgbSwgZywgdywgMTAsIGJbNDldKSwgZyA9IHMoZywgaCwgZiwgbSxcbiAgICAgICAgICAgIEUsIDE1LCBiWzUwXSksIG0gPSBzKG0sIGcsIGgsIGYsIHIsIDIxLCBiWzUxXSksIGYgPSBzKGYsIG0sIGcsIGgsIHUsIDYsIGJbNTJdKSwgaCA9IHMoaCwgZiwgbSwgZywgaywgMTAsIGJbNTNdKSwgZyA9IHMoZywgaCwgZiwgbSwgQiwgMTUsIGJbNTRdKSwgbSA9IHMobSwgZywgaCwgZiwgZSwgMjEsIGJbNTVdKSwgZiA9IHMoZiwgbSwgZywgaCwgdiwgNiwgYls1Nl0pLCBoID0gcyhoLCBmLCBtLCBnLCB4LCAxMCwgYls1N10pLCBnID0gcyhnLCBoLCBmLCBtLCB0LCAxNSwgYls1OF0pLCBtID0gcyhtLCBnLCBoLCBmLCBELCAyMSwgYls1OV0pLCBmID0gcyhmLCBtLCBnLCBoLCB6LCA2LCBiWzYwXSksIGggPSBzKGgsIGYsIG0sIGcsIEMsIDEwLCBiWzYxXSksIGcgPSBzKGcsIGgsIGYsIG0sIGosIDE1LCBiWzYyXSksIG0gPSBzKG0sIGcsIGgsIGYsIEEsIDIxLCBiWzYzXSk7IGFbMF0gPSBhWzBdICsgZiB8IDA7IGFbMV0gPSBhWzFdICsgbSB8IDA7IGFbMl0gPSBhWzJdICsgZyB8IDA7IGFbM10gPSBhWzNdICsgaCB8IDBcbiAgICB9LCBfZG9GaW5hbGl6ZTogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGIgPSB0aGlzLl9kYXRhLCBuID0gYi53b3JkcywgYSA9IDggKiB0aGlzLl9uRGF0YUJ5dGVzLCBjID0gOCAqIGIuc2lnQnl0ZXM7IG5bYyA+Pj4gNV0gfD0gMTI4IDw8IDI0IC0gYyAlIDMyOyB2YXIgZSA9IHUuZmxvb3IoYSAvXG4gICAgICAgIDQyOTQ5NjcyOTYpOyBuWyhjICsgNjQgPj4+IDkgPDwgNCkgKyAxNV0gPSAoZSA8PCA4IHwgZSA+Pj4gMjQpICYgMTY3MTE5MzUgfCAoZSA8PCAyNCB8IGUgPj4+IDgpICYgNDI3ODI1NTM2MDsgblsoYyArIDY0ID4+PiA5IDw8IDQpICsgMTRdID0gKGEgPDwgOCB8IGEgPj4+IDI0KSAmIDE2NzExOTM1IHwgKGEgPDwgMjQgfCBhID4+PiA4KSAmIDQyNzgyNTUzNjA7IGIuc2lnQnl0ZXMgPSA0ICogKG4ubGVuZ3RoICsgMSk7IHRoaXMuX3Byb2Nlc3MoKTsgYiA9IHRoaXMuX2hhc2g7IG4gPSBiLndvcmRzOyBmb3IgKGEgPSAwOyA0ID4gYTsgYSsrKWMgPSBuW2FdLCBuW2FdID0gKGMgPDwgOCB8IGMgPj4+IDI0KSAmIDE2NzExOTM1IHwgKGMgPDwgMjQgfCBjID4+PiA4KSAmIDQyNzgyNTUzNjA7IHJldHVybiBiXG4gICAgfSwgY2xvbmU6IGZ1bmN0aW9uICgpIHsgdmFyIGIgPSB2LmNsb25lLmNhbGwodGhpcyk7IGIuX2hhc2ggPSB0aGlzLl9oYXNoLmNsb25lKCk7IHJldHVybiBiIH1cbiAgfSk7IHQuTUQ1ID0gdi5fY3JlYXRlSGVscGVyKHIpOyB0LkhtYWNNRDUgPSB2Ll9jcmVhdGVIbWFjSGVscGVyKHIpXG59KShNYXRoKTtcbihmdW5jdGlvbiAoKSB7XG4gIHZhciB1ID0gQ3J5cHRvSlMsIHAgPSB1LmxpYiwgZCA9IHAuQmFzZSwgbCA9IHAuV29yZEFycmF5LCBwID0gdS5hbGdvLCBzID0gcC5FdnBLREYgPSBkLmV4dGVuZCh7IGNmZzogZC5leHRlbmQoeyBrZXlTaXplOiA0LCBoYXNoZXI6IHAuTUQ1LCBpdGVyYXRpb25zOiAxIH0pLCBpbml0OiBmdW5jdGlvbiAoZCkgeyB0aGlzLmNmZyA9IHRoaXMuY2ZnLmV4dGVuZChkKSB9LCBjb21wdXRlOiBmdW5jdGlvbiAoZCwgcikgeyBmb3IgKHZhciBwID0gdGhpcy5jZmcsIHMgPSBwLmhhc2hlci5jcmVhdGUoKSwgYiA9IGwuY3JlYXRlKCksIHUgPSBiLndvcmRzLCBxID0gcC5rZXlTaXplLCBwID0gcC5pdGVyYXRpb25zOyB1Lmxlbmd0aCA8IHE7KSB7IG4gJiYgcy51cGRhdGUobik7IHZhciBuID0gcy51cGRhdGUoZCkuZmluYWxpemUocik7IHMucmVzZXQoKTsgZm9yICh2YXIgYSA9IDE7IGEgPCBwOyBhKyspbiA9IHMuZmluYWxpemUobiksIHMucmVzZXQoKTsgYi5jb25jYXQobikgfSBiLnNpZ0J5dGVzID0gNCAqIHE7IHJldHVybiBiIH0gfSk7IHUuRXZwS0RGID0gZnVuY3Rpb24gKGQsIGwsIHApIHtcbiAgICByZXR1cm4gcy5jcmVhdGUocCkuY29tcHV0ZShkLFxuICAgICAgbClcbiAgfVxufSkoKTtcbkNyeXB0b0pTLmxpYi5DaXBoZXIgfHwgZnVuY3Rpb24gKHUpIHtcbiAgdmFyIHAgPSBDcnlwdG9KUywgZCA9IHAubGliLCBsID0gZC5CYXNlLCBzID0gZC5Xb3JkQXJyYXksIHQgPSBkLkJ1ZmZlcmVkQmxvY2tBbGdvcml0aG0sIHIgPSBwLmVuYy5CYXNlNjQsIHcgPSBwLmFsZ28uRXZwS0RGLCB2ID0gZC5DaXBoZXIgPSB0LmV4dGVuZCh7XG4gICAgY2ZnOiBsLmV4dGVuZCgpLCBjcmVhdGVFbmNyeXB0b3I6IGZ1bmN0aW9uIChlLCBhKSB7IHJldHVybiB0aGlzLmNyZWF0ZSh0aGlzLl9FTkNfWEZPUk1fTU9ERSwgZSwgYSkgfSwgY3JlYXRlRGVjcnlwdG9yOiBmdW5jdGlvbiAoZSwgYSkgeyByZXR1cm4gdGhpcy5jcmVhdGUodGhpcy5fREVDX1hGT1JNX01PREUsIGUsIGEpIH0sIGluaXQ6IGZ1bmN0aW9uIChlLCBhLCBiKSB7IHRoaXMuY2ZnID0gdGhpcy5jZmcuZXh0ZW5kKGIpOyB0aGlzLl94Zm9ybU1vZGUgPSBlOyB0aGlzLl9rZXkgPSBhOyB0aGlzLnJlc2V0KCkgfSwgcmVzZXQ6IGZ1bmN0aW9uICgpIHsgdC5yZXNldC5jYWxsKHRoaXMpOyB0aGlzLl9kb1Jlc2V0KCkgfSwgcHJvY2VzczogZnVuY3Rpb24gKGUpIHsgdGhpcy5fYXBwZW5kKGUpOyByZXR1cm4gdGhpcy5fcHJvY2VzcygpIH0sXG4gICAgZmluYWxpemU6IGZ1bmN0aW9uIChlKSB7IGUgJiYgdGhpcy5fYXBwZW5kKGUpOyByZXR1cm4gdGhpcy5fZG9GaW5hbGl6ZSgpIH0sIGtleVNpemU6IDQsIGl2U2l6ZTogNCwgX0VOQ19YRk9STV9NT0RFOiAxLCBfREVDX1hGT1JNX01PREU6IDIsIF9jcmVhdGVIZWxwZXI6IGZ1bmN0aW9uIChlKSB7IHJldHVybiB7IGVuY3J5cHQ6IGZ1bmN0aW9uIChiLCBrLCBkKSB7IHJldHVybiAoXCJzdHJpbmdcIiA9PSB0eXBlb2YgayA/IGMgOiBhKS5lbmNyeXB0KGUsIGIsIGssIGQpIH0sIGRlY3J5cHQ6IGZ1bmN0aW9uIChiLCBrLCBkKSB7IHJldHVybiAoXCJzdHJpbmdcIiA9PSB0eXBlb2YgayA/IGMgOiBhKS5kZWNyeXB0KGUsIGIsIGssIGQpIH0gfSB9XG4gIH0pOyBkLlN0cmVhbUNpcGhlciA9IHYuZXh0ZW5kKHsgX2RvRmluYWxpemU6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMuX3Byb2Nlc3MoITApIH0sIGJsb2NrU2l6ZTogMSB9KTsgdmFyIGIgPSBwLm1vZGUgPSB7fSwgeCA9IGZ1bmN0aW9uIChlLCBhLCBiKSB7XG4gICAgdmFyIGMgPSB0aGlzLl9pdjsgYyA/IHRoaXMuX2l2ID0gdSA6IGMgPSB0aGlzLl9wcmV2QmxvY2s7IGZvciAodmFyIGQgPSAwOyBkIDwgYjsgZCsrKWVbYSArIGRdIF49XG4gICAgICBjW2RdXG4gIH0sIHEgPSAoZC5CbG9ja0NpcGhlck1vZGUgPSBsLmV4dGVuZCh7IGNyZWF0ZUVuY3J5cHRvcjogZnVuY3Rpb24gKGUsIGEpIHsgcmV0dXJuIHRoaXMuRW5jcnlwdG9yLmNyZWF0ZShlLCBhKSB9LCBjcmVhdGVEZWNyeXB0b3I6IGZ1bmN0aW9uIChlLCBhKSB7IHJldHVybiB0aGlzLkRlY3J5cHRvci5jcmVhdGUoZSwgYSkgfSwgaW5pdDogZnVuY3Rpb24gKGUsIGEpIHsgdGhpcy5fY2lwaGVyID0gZTsgdGhpcy5faXYgPSBhIH0gfSkpLmV4dGVuZCgpOyBxLkVuY3J5cHRvciA9IHEuZXh0ZW5kKHsgcHJvY2Vzc0Jsb2NrOiBmdW5jdGlvbiAoZSwgYSkgeyB2YXIgYiA9IHRoaXMuX2NpcGhlciwgYyA9IGIuYmxvY2tTaXplOyB4LmNhbGwodGhpcywgZSwgYSwgYyk7IGIuZW5jcnlwdEJsb2NrKGUsIGEpOyB0aGlzLl9wcmV2QmxvY2sgPSBlLnNsaWNlKGEsIGEgKyBjKSB9IH0pOyBxLkRlY3J5cHRvciA9IHEuZXh0ZW5kKHtcbiAgICBwcm9jZXNzQmxvY2s6IGZ1bmN0aW9uIChlLCBhKSB7XG4gICAgICB2YXIgYiA9IHRoaXMuX2NpcGhlciwgYyA9IGIuYmxvY2tTaXplLCBkID0gZS5zbGljZShhLCBhICsgYyk7IGIuZGVjcnlwdEJsb2NrKGUsIGEpOyB4LmNhbGwodGhpcyxcbiAgICAgICAgZSwgYSwgYyk7IHRoaXMuX3ByZXZCbG9jayA9IGRcbiAgICB9XG4gIH0pOyBiID0gYi5DQkMgPSBxOyBxID0gKHAucGFkID0ge30pLlBrY3M3ID0geyBwYWQ6IGZ1bmN0aW9uIChhLCBiKSB7IGZvciAodmFyIGMgPSA0ICogYiwgYyA9IGMgLSBhLnNpZ0J5dGVzICUgYywgZCA9IGMgPDwgMjQgfCBjIDw8IDE2IHwgYyA8PCA4IHwgYywgbCA9IFtdLCBuID0gMDsgbiA8IGM7IG4gKz0gNClsLnB1c2goZCk7IGMgPSBzLmNyZWF0ZShsLCBjKTsgYS5jb25jYXQoYykgfSwgdW5wYWQ6IGZ1bmN0aW9uIChhKSB7IGEuc2lnQnl0ZXMgLT0gYS53b3Jkc1thLnNpZ0J5dGVzIC0gMSA+Pj4gMl0gJiAyNTUgfSB9OyBkLkJsb2NrQ2lwaGVyID0gdi5leHRlbmQoe1xuICAgIGNmZzogdi5jZmcuZXh0ZW5kKHsgbW9kZTogYiwgcGFkZGluZzogcSB9KSwgcmVzZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHYucmVzZXQuY2FsbCh0aGlzKTsgdmFyIGEgPSB0aGlzLmNmZywgYiA9IGEuaXYsIGEgPSBhLm1vZGU7IGlmICh0aGlzLl94Zm9ybU1vZGUgPT0gdGhpcy5fRU5DX1hGT1JNX01PREUpIHZhciBjID0gYS5jcmVhdGVFbmNyeXB0b3I7IGVsc2UgYyA9IGEuY3JlYXRlRGVjcnlwdG9yLCB0aGlzLl9taW5CdWZmZXJTaXplID0gMTsgdGhpcy5fbW9kZSA9IGMuY2FsbChhLFxuICAgICAgICB0aGlzLCBiICYmIGIud29yZHMpXG4gICAgfSwgX2RvUHJvY2Vzc0Jsb2NrOiBmdW5jdGlvbiAoYSwgYikgeyB0aGlzLl9tb2RlLnByb2Nlc3NCbG9jayhhLCBiKSB9LCBfZG9GaW5hbGl6ZTogZnVuY3Rpb24gKCkgeyB2YXIgYSA9IHRoaXMuY2ZnLnBhZGRpbmc7IGlmICh0aGlzLl94Zm9ybU1vZGUgPT0gdGhpcy5fRU5DX1hGT1JNX01PREUpIHsgYS5wYWQodGhpcy5fZGF0YSwgdGhpcy5ibG9ja1NpemUpOyB2YXIgYiA9IHRoaXMuX3Byb2Nlc3MoITApIH0gZWxzZSBiID0gdGhpcy5fcHJvY2VzcyghMCksIGEudW5wYWQoYik7IHJldHVybiBiIH0sIGJsb2NrU2l6ZTogNFxuICB9KTsgdmFyIG4gPSBkLkNpcGhlclBhcmFtcyA9IGwuZXh0ZW5kKHsgaW5pdDogZnVuY3Rpb24gKGEpIHsgdGhpcy5taXhJbihhKSB9LCB0b1N0cmluZzogZnVuY3Rpb24gKGEpIHsgcmV0dXJuIChhIHx8IHRoaXMuZm9ybWF0dGVyKS5zdHJpbmdpZnkodGhpcykgfSB9KSwgYiA9IChwLmZvcm1hdCA9IHt9KS5PcGVuU1NMID0ge1xuICAgIHN0cmluZ2lmeTogZnVuY3Rpb24gKGEpIHtcbiAgICAgIHZhciBiID0gYS5jaXBoZXJ0ZXh0OyBhID0gYS5zYWx0OyByZXR1cm4gKGEgPyBzLmNyZWF0ZShbMTM5ODg5MzY4NCxcbiAgICAgICAgMTcwMTA3NjgzMV0pLmNvbmNhdChhKS5jb25jYXQoYikgOiBiKS50b1N0cmluZyhyKVxuICAgIH0sIHBhcnNlOiBmdW5jdGlvbiAoYSkgeyBhID0gci5wYXJzZShhKTsgdmFyIGIgPSBhLndvcmRzOyBpZiAoMTM5ODg5MzY4NCA9PSBiWzBdICYmIDE3MDEwNzY4MzEgPT0gYlsxXSkgeyB2YXIgYyA9IHMuY3JlYXRlKGIuc2xpY2UoMiwgNCkpOyBiLnNwbGljZSgwLCA0KTsgYS5zaWdCeXRlcyAtPSAxNiB9IHJldHVybiBuLmNyZWF0ZSh7IGNpcGhlcnRleHQ6IGEsIHNhbHQ6IGMgfSkgfVxuICB9LCBhID0gZC5TZXJpYWxpemFibGVDaXBoZXIgPSBsLmV4dGVuZCh7XG4gICAgY2ZnOiBsLmV4dGVuZCh7IGZvcm1hdDogYiB9KSwgZW5jcnlwdDogZnVuY3Rpb24gKGEsIGIsIGMsIGQpIHsgZCA9IHRoaXMuY2ZnLmV4dGVuZChkKTsgdmFyIGwgPSBhLmNyZWF0ZUVuY3J5cHRvcihjLCBkKTsgYiA9IGwuZmluYWxpemUoYik7IGwgPSBsLmNmZzsgcmV0dXJuIG4uY3JlYXRlKHsgY2lwaGVydGV4dDogYiwga2V5OiBjLCBpdjogbC5pdiwgYWxnb3JpdGhtOiBhLCBtb2RlOiBsLm1vZGUsIHBhZGRpbmc6IGwucGFkZGluZywgYmxvY2tTaXplOiBhLmJsb2NrU2l6ZSwgZm9ybWF0dGVyOiBkLmZvcm1hdCB9KSB9LFxuICAgIGRlY3J5cHQ6IGZ1bmN0aW9uIChhLCBiLCBjLCBkKSB7IGQgPSB0aGlzLmNmZy5leHRlbmQoZCk7IGIgPSB0aGlzLl9wYXJzZShiLCBkLmZvcm1hdCk7IHJldHVybiBhLmNyZWF0ZURlY3J5cHRvcihjLCBkKS5maW5hbGl6ZShiLmNpcGhlcnRleHQpIH0sIF9wYXJzZTogZnVuY3Rpb24gKGEsIGIpIHsgcmV0dXJuIFwic3RyaW5nXCIgPT0gdHlwZW9mIGEgPyBiLnBhcnNlKGEsIHRoaXMpIDogYSB9XG4gIH0pLCBwID0gKHAua2RmID0ge30pLk9wZW5TU0wgPSB7IGV4ZWN1dGU6IGZ1bmN0aW9uIChhLCBiLCBjLCBkKSB7IGQgfHwgKGQgPSBzLnJhbmRvbSg4KSk7IGEgPSB3LmNyZWF0ZSh7IGtleVNpemU6IGIgKyBjIH0pLmNvbXB1dGUoYSwgZCk7IGMgPSBzLmNyZWF0ZShhLndvcmRzLnNsaWNlKGIpLCA0ICogYyk7IGEuc2lnQnl0ZXMgPSA0ICogYjsgcmV0dXJuIG4uY3JlYXRlKHsga2V5OiBhLCBpdjogYywgc2FsdDogZCB9KSB9IH0sIGMgPSBkLlBhc3N3b3JkQmFzZWRDaXBoZXIgPSBhLmV4dGVuZCh7XG4gICAgY2ZnOiBhLmNmZy5leHRlbmQoeyBrZGY6IHAgfSksIGVuY3J5cHQ6IGZ1bmN0aW9uIChiLCBjLCBkLCBsKSB7XG4gICAgICBsID0gdGhpcy5jZmcuZXh0ZW5kKGwpOyBkID0gbC5rZGYuZXhlY3V0ZShkLFxuICAgICAgICBiLmtleVNpemUsIGIuaXZTaXplKTsgbC5pdiA9IGQuaXY7IGIgPSBhLmVuY3J5cHQuY2FsbCh0aGlzLCBiLCBjLCBkLmtleSwgbCk7IGIubWl4SW4oZCk7IHJldHVybiBiXG4gICAgfSwgZGVjcnlwdDogZnVuY3Rpb24gKGIsIGMsIGQsIGwpIHsgbCA9IHRoaXMuY2ZnLmV4dGVuZChsKTsgYyA9IHRoaXMuX3BhcnNlKGMsIGwuZm9ybWF0KTsgZCA9IGwua2RmLmV4ZWN1dGUoZCwgYi5rZXlTaXplLCBiLml2U2l6ZSwgYy5zYWx0KTsgbC5pdiA9IGQuaXY7IHJldHVybiBhLmRlY3J5cHQuY2FsbCh0aGlzLCBiLCBjLCBkLmtleSwgbCkgfVxuICB9KVxufSgpO1xuKGZ1bmN0aW9uICgpIHtcbiAgZm9yICh2YXIgdSA9IENyeXB0b0pTLCBwID0gdS5saWIuQmxvY2tDaXBoZXIsIGQgPSB1LmFsZ28sIGwgPSBbXSwgcyA9IFtdLCB0ID0gW10sIHIgPSBbXSwgdyA9IFtdLCB2ID0gW10sIGIgPSBbXSwgeCA9IFtdLCBxID0gW10sIG4gPSBbXSwgYSA9IFtdLCBjID0gMDsgMjU2ID4gYzsgYysrKWFbY10gPSAxMjggPiBjID8gYyA8PCAxIDogYyA8PCAxIF4gMjgzOyBmb3IgKHZhciBlID0gMCwgaiA9IDAsIGMgPSAwOyAyNTYgPiBjOyBjKyspIHsgdmFyIGsgPSBqIF4gaiA8PCAxIF4gaiA8PCAyIF4gaiA8PCAzIF4gaiA8PCA0LCBrID0gayA+Pj4gOCBeIGsgJiAyNTUgXiA5OTsgbFtlXSA9IGs7IHNba10gPSBlOyB2YXIgeiA9IGFbZV0sIEYgPSBhW3pdLCBHID0gYVtGXSwgeSA9IDI1NyAqIGFba10gXiAxNjg0MzAwOCAqIGs7IHRbZV0gPSB5IDw8IDI0IHwgeSA+Pj4gODsgcltlXSA9IHkgPDwgMTYgfCB5ID4+PiAxNjsgd1tlXSA9IHkgPDwgOCB8IHkgPj4+IDI0OyB2W2VdID0geTsgeSA9IDE2ODQzMDA5ICogRyBeIDY1NTM3ICogRiBeIDI1NyAqIHogXiAxNjg0MzAwOCAqIGU7IGJba10gPSB5IDw8IDI0IHwgeSA+Pj4gODsgeFtrXSA9IHkgPDwgMTYgfCB5ID4+PiAxNjsgcVtrXSA9IHkgPDwgOCB8IHkgPj4+IDI0OyBuW2tdID0geTsgZSA/IChlID0geiBeIGFbYVthW0cgXiB6XV1dLCBqIF49IGFbYVtqXV0pIDogZSA9IGogPSAxIH0gdmFyIEggPSBbMCwgMSwgMiwgNCwgOCxcbiAgICAxNiwgMzIsIDY0LCAxMjgsIDI3LCA1NF0sIGQgPSBkLkFFUyA9IHAuZXh0ZW5kKHtcbiAgICAgIF9kb1Jlc2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZvciAodmFyIGEgPSB0aGlzLl9rZXksIGMgPSBhLndvcmRzLCBkID0gYS5zaWdCeXRlcyAvIDQsIGEgPSA0ICogKCh0aGlzLl9uUm91bmRzID0gZCArIDYpICsgMSksIGUgPSB0aGlzLl9rZXlTY2hlZHVsZSA9IFtdLCBqID0gMDsgaiA8IGE7IGorKylpZiAoaiA8IGQpIGVbal0gPSBjW2pdOyBlbHNlIHsgdmFyIGsgPSBlW2ogLSAxXTsgaiAlIGQgPyA2IDwgZCAmJiA0ID09IGogJSBkICYmIChrID0gbFtrID4+PiAyNF0gPDwgMjQgfCBsW2sgPj4+IDE2ICYgMjU1XSA8PCAxNiB8IGxbayA+Pj4gOCAmIDI1NV0gPDwgOCB8IGxbayAmIDI1NV0pIDogKGsgPSBrIDw8IDggfCBrID4+PiAyNCwgayA9IGxbayA+Pj4gMjRdIDw8IDI0IHwgbFtrID4+PiAxNiAmIDI1NV0gPDwgMTYgfCBsW2sgPj4+IDggJiAyNTVdIDw8IDggfCBsW2sgJiAyNTVdLCBrIF49IEhbaiAvIGQgfCAwXSA8PCAyNCk7IGVbal0gPSBlW2ogLSBkXSBeIGsgfSBjID0gdGhpcy5faW52S2V5U2NoZWR1bGUgPSBbXTsgZm9yIChkID0gMDsgZCA8IGE7IGQrKylqID0gYSAtIGQsIGsgPSBkICUgNCA/IGVbal0gOiBlW2ogLSA0XSwgY1tkXSA9IDQgPiBkIHx8IDQgPj0gaiA/IGsgOiBiW2xbayA+Pj4gMjRdXSBeIHhbbFtrID4+PiAxNiAmIDI1NV1dIF4gcVtsW2sgPj4+XG4gICAgICAgICAgOCAmIDI1NV1dIF4gbltsW2sgJiAyNTVdXVxuICAgICAgfSwgZW5jcnlwdEJsb2NrOiBmdW5jdGlvbiAoYSwgYikgeyB0aGlzLl9kb0NyeXB0QmxvY2soYSwgYiwgdGhpcy5fa2V5U2NoZWR1bGUsIHQsIHIsIHcsIHYsIGwpIH0sIGRlY3J5cHRCbG9jazogZnVuY3Rpb24gKGEsIGMpIHsgdmFyIGQgPSBhW2MgKyAxXTsgYVtjICsgMV0gPSBhW2MgKyAzXTsgYVtjICsgM10gPSBkOyB0aGlzLl9kb0NyeXB0QmxvY2soYSwgYywgdGhpcy5faW52S2V5U2NoZWR1bGUsIGIsIHgsIHEsIG4sIHMpOyBkID0gYVtjICsgMV07IGFbYyArIDFdID0gYVtjICsgM107IGFbYyArIDNdID0gZCB9LCBfZG9DcnlwdEJsb2NrOiBmdW5jdGlvbiAoYSwgYiwgYywgZCwgZSwgaiwgbCwgZikge1xuICAgICAgICBmb3IgKHZhciBtID0gdGhpcy5fblJvdW5kcywgZyA9IGFbYl0gXiBjWzBdLCBoID0gYVtiICsgMV0gXiBjWzFdLCBrID0gYVtiICsgMl0gXiBjWzJdLCBuID0gYVtiICsgM10gXiBjWzNdLCBwID0gNCwgciA9IDE7IHIgPCBtOyByKyspdmFyIHEgPSBkW2cgPj4+IDI0XSBeIGVbaCA+Pj4gMTYgJiAyNTVdIF4galtrID4+PiA4ICYgMjU1XSBeIGxbbiAmIDI1NV0gXiBjW3ArK10sIHMgPSBkW2ggPj4+IDI0XSBeIGVbayA+Pj4gMTYgJiAyNTVdIF4galtuID4+PiA4ICYgMjU1XSBeIGxbZyAmIDI1NV0gXiBjW3ArK10sIHQgPVxuICAgICAgICAgIGRbayA+Pj4gMjRdIF4gZVtuID4+PiAxNiAmIDI1NV0gXiBqW2cgPj4+IDggJiAyNTVdIF4gbFtoICYgMjU1XSBeIGNbcCsrXSwgbiA9IGRbbiA+Pj4gMjRdIF4gZVtnID4+PiAxNiAmIDI1NV0gXiBqW2ggPj4+IDggJiAyNTVdIF4gbFtrICYgMjU1XSBeIGNbcCsrXSwgZyA9IHEsIGggPSBzLCBrID0gdDsgcSA9IChmW2cgPj4+IDI0XSA8PCAyNCB8IGZbaCA+Pj4gMTYgJiAyNTVdIDw8IDE2IHwgZltrID4+PiA4ICYgMjU1XSA8PCA4IHwgZltuICYgMjU1XSkgXiBjW3ArK107IHMgPSAoZltoID4+PiAyNF0gPDwgMjQgfCBmW2sgPj4+IDE2ICYgMjU1XSA8PCAxNiB8IGZbbiA+Pj4gOCAmIDI1NV0gPDwgOCB8IGZbZyAmIDI1NV0pIF4gY1twKytdOyB0ID0gKGZbayA+Pj4gMjRdIDw8IDI0IHwgZltuID4+PiAxNiAmIDI1NV0gPDwgMTYgfCBmW2cgPj4+IDggJiAyNTVdIDw8IDggfCBmW2ggJiAyNTVdKSBeIGNbcCsrXTsgbiA9IChmW24gPj4+IDI0XSA8PCAyNCB8IGZbZyA+Pj4gMTYgJiAyNTVdIDw8IDE2IHwgZltoID4+PiA4ICYgMjU1XSA8PCA4IHwgZltrICYgMjU1XSkgXiBjW3ArK107IGFbYl0gPSBxOyBhW2IgKyAxXSA9IHM7IGFbYiArIDJdID0gdDsgYVtiICsgM10gPSBuXG4gICAgICB9LCBrZXlTaXplOiA4XG4gICAgfSk7IHUuQUVTID0gcC5fY3JlYXRlSGVscGVyKGQpXG59KSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IENyeXB0b0pTOyIsImltcG9ydCBBcHBDb25maWcgZnJvbSBcIi4vQXBwQ29uZmlnXCI7XG5pbXBvcnQgSHR0cFVuaXQgZnJvbSBcIi4vTmV0L0h0dHBVbml0XCI7XG5pbXBvcnQgQXBwU3dpdGNoQ29uZmlnIGZyb20gXCIuL0NvbmZpZy9BcHBTd2l0Y2hDb25maWdcIjtcbmltcG9ydCBWaWV3TWdyLCB7IFZpZXdEZWYgfSBmcm9tIFwiLi9NZ3IvVmlld01nclwiO1xuaW1wb3J0IE9QUE9OYXRpdmVBZFZpZXdUZW1wbGF0ZSBmcm9tIFwiLi9WaWV3L1RlbXBsYXRlVmlld3MvT1BQT05hdGl2ZUFkL09QUE9OYXRpdmVBZFZpZXdUZW1wbGF0ZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBPUFBPQVBJIFxue1xuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgYWRVbml0SWQgPSBcIlwiO1xuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgYmFubmVyQWRVbml0SWQgPSBcIlwiO1xuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgSW5zQWRVbml0SWQgPSBcIlwiO1xuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgT3BlblNjcmVlbkFkVW5pdElkID0gXCJcIjtcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IE5hdGl2ZUFkSWQgPSBcIlwiXG5cbiAgICBwdWJsaWMgc3RhdGljIGdldCBCYW5uZXJJbnN0YW5jZSgpXG4gICAge1xuICAgICAgICByZXR1cm4gT1BQT0FQSS5fYmFubmVyO1xuICAgIH1cbiAgICBwcm90ZWN0ZWQgc3RhdGljIF9iYW5uZXIgOiBhbnkgPSBudWxsO1xuXG4gICAgcHVibGljIHN0YXRpYyBMb2dpbihvblN1Y2Nlc3M6IEZ1bmN0aW9uLCBvbkZhaWw6IEZ1bmN0aW9uKSB7XG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25RR01pbmlHYW1lKSB7XG4gICAgICAgICAgICBMYXlhLkJyb3dzZXIud2luZG93W1wicWdcIl0ubG9naW4oXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiAocmVzKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgdG9rZW4gPSByZXMuZGF0YS50b2tlbjtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uU3VjY2Vzcyh0b2tlbik7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIk9QUE8g55m76ZmG5oiQ5YqfLOiOt+WPluWIsCB0b2tlbiA6IFwiICsgdG9rZW4pO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIHJlcykgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhrZXksIHJlc1trZXldKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZmFpbDogKHJlcykgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJPUFBPIOeZu+mZhuWksei0pVwiLCByZXMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yKHZhciBrZXkgaW4gcmVzKVxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGtleSwgcmVzW2tleV0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgaW5pdEFkU2VydmljZShvblN1Y2Nlc3MgOiBGdW5jdGlvbixvbkZhaWwgOiBGdW5jdGlvbixvbkNvbXBsZXRlIDogRnVuY3Rpb24pXG4gICAge1xuICAgICAgICBMYXlhLkJyb3dzZXIud2luZG93W1wicWdcIl0uaW5pdEFkU2VydmljZShcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBhcHBJZDogQXBwQ29uZmlnLkFwcElELFxuICAgICAgICAgICAgICAgIGlzRGVidWc6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJvcHBvIGluaXRBZFNlcnZpY2Ugc3VjY2Vzc1wiKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9uU3VjY2Vzcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgb25TdWNjZXNzKHJlcylcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZmFpbDogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIm9wcG8gaW5pdEFkU2VydmljZSBmYWlsOiBcIiwgcmVzLmNvZGUsIHJlcy5tc2cpO1xuICAgICAgICAgICAgICAgICAgICBpZiAob25GYWlsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkZhaWwocmVzKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjb21wbGV0ZTogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIm9wcG8gaW5pdEFkU2VydmljZSBjb21wbGV0ZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9uQ29tcGxldGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ29tcGxldGUocmVzKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICB9XG4gICBcbiAgICBwdWJsaWMgc3RhdGljIHNob3dSZXdhcmRlZFZpZGVvQWQob25BZENsb3NlOiBGdW5jdGlvbiwgb25GYWlsZWQ6IEZ1bmN0aW9uKSB7XG4gICAgICAgIGlmKExheWEuQnJvd3Nlci5vblFHTWluaUdhbWUpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHZhciB2aWRlb0FkID0gTGF5YS5Ccm93c2VyLndpbmRvd1tcInFnXCJdLmNyZWF0ZVJld2FyZGVkVmlkZW9BZCh7XG4gICAgICAgICAgICAgICAgcG9zSWQ6IE9QUE9BUEkuYWRVbml0SWQsXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgdmlkZW9BZC5vbkxvYWQoKCk9PlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwib3BwbyDop4bpopHlub/lkYrliqDovb3lrozmiJBcIik7XG4gICAgICAgICAgICAgICAgdmlkZW9BZC5zaG93KCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgdmlkZW9BZC5vblZpZGVvU3RhcnQoKCk9PlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwib3BwbyDop4bpopHlub/lkYrlvIDlp4vmkq3mlL5cIik7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgdmlkZW9BZC5vbkNsb3NlKChyZXMpID0+e1xuICAgICAgICAgICAgICAgIGlmKHJlcy5pc0VuZGVkKXtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJvcHBvIOinhumikeW5v+WRiuingueciyDlrozmiJBcIik7XG4gICAgICAgICAgICAgICAgICAgIG9uQWRDbG9zZSh0cnVlKTtcbiAgICAgICAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJvcHBvIOinhumikeW5v+WRiuingueciyDmnKrlrozmiJBcIik7XG4gICAgICAgICAgICAgICAgICAgIG9uQWRDbG9zZShmYWxzZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZpZGVvQWQuZGVzdHJveSgpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIHZpZGVvQWQub25FcnJvcigoZXJyKT0+XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJvcHBvIOinhumikeW5v+WRiuiOt+WPluWksei0pVwiLGVycik7XG4gICAgICAgICAgICAgICAgdmlkZW9BZC5kZXN0cm95KCk7XG4gICAgICAgICAgICAgICAgb25GYWlsZWQoKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB2aWRlb0FkLmxvYWQoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlXG4gICAgICAgIHtcbiAgICAgICAgICAgIG9uQWRDbG9zZSh0cnVlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgbmF2aWdhdGVUb01pbmlQcm9ncmFtKHBrZ05hbWU6IHN0cmluZyxnYW1lTmFtZSA6IHN0cmluZywgcGF0aDogc3RyaW5nLCBvblN1Y2Nlc3M6IEZ1bmN0aW9uLCBvbkZhaWw6IEZ1bmN0aW9uLCBvbkNvbXBsYXRlOiBGdW5jdGlvbikge1xuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uUUdNaW5pR2FtZSkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJPUFBPIOi3s+i9rOa4uOaIj++8miBcIiArIHBrZ05hbWUpO1xuICAgICAgICAgICAgSHR0cFVuaXQucmVwb3J0RXhwb3J0KHBrZ05hbWUsZ2FtZU5hbWUsKHJlc3VsdCk9PlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGlmKDEgPT0gcmVzdWx0LmNvZGUpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIk9QUE8g5a+85Ye65LiK5oql5oiQ5YqfXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIk9QUE8g5a+85Ye65LiK5oql5aSx6LSlXCIscmVzdWx0Lm1zZyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwocmVzdWx0KT0+XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJPUFBPIOWvvOWHuuS4iuaKpeWksei0pVwiKTtcbiAgICAgICAgICAgICAgICBmb3IodmFyIGtleSBpbiByZXN1bHQpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhrZXksIHJlc3VsdFtrZXldKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGxldCB0aW1lID0gRGF0ZS5ub3coKTtcbiAgICAgICAgICAgIHdoaWxlKERhdGUubm93KCkgLSB0aW1lIDw9IDUwMClcbiAgICAgICAgICAgIHtcblxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgTGF5YS5Ccm93c2VyLndpbmRvd1tcInFnXCJdLm5hdmlnYXRlVG9NaW5pR2FtZShcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHBrZ05hbWU6IHBrZ05hbWUsXG4gICAgICAgICAgICAgICAgICAgIHBhdGg6IHBhdGgsXG4gICAgICAgICAgICAgICAgICAgIGV4dHJhRGF0YToge1xuICAgICAgICAgICAgICAgICAgICAgICAgZnJvbSA6IEFwcENvbmZpZy5BcHBJRFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBlbnZWZXJzaW9uOiAncmVsZWFzZScsXG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3MocmVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAob25TdWNjZXNzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25TdWNjZXNzKHJlcylcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZmFpbChyZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvbkZhaWwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkZhaWwocmVzKVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAvLyBjb21wbGV0ZShyZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgIGlmIChvbkNvbXBsYXRlKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgb25Db21wbGF0ZShyZXMpXG4gICAgICAgICAgICAgICAgICAgIC8vICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgICAgICB9KVxuXG5cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgc2hvd0ludGVyc3RpdGlhbEFkKG9uQWRDbG9zZTogRnVuY3Rpb24sIG9uRmFpbGVkOiBGdW5jdGlvbikgIHtcbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vblFHTWluaUdhbWUpIFxuICAgICAgICB7XG4gICAgICAgICAgICB2YXIgaW5zZXJ0QWQgPSBxZy5jcmVhdGVJbnNlcnRBZCh7IFxuICAgICAgICAgICAgICAgIHBvc0lkOiBPUFBPQVBJLkluc0FkVW5pdElkXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgaW5zZXJ0QWQubG9hZCgpO1xuICAgICAgICAgICAgaW5zZXJ0QWQub25Mb2FkKCgpPT5cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuaPkuWxj+W5v+WRiuWKoOi9veWujOaIkFwiKTtcbiAgICAgICAgICAgICAgICBpbnNlcnRBZC5zaG93KCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgaW5zZXJ0QWQub25TaG93KCgpPT5cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuaPkuWxj+W5v+WRiuaYvuekuuaIkOWKn1wiKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBpbnNlcnRBZC5vbkVycm9yKChlcnIpPT4ge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5o+S5bGP5bm/5ZGK5ouJ5Y+W5aSx6LSlXCIsZXJyKTtcbiAgICAgICAgICAgICAgICBpbnNlcnRBZC5kZXN0cm95KCk7XG4gICAgICAgICAgICAgICAgaWYob25GYWlsZWQpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBvbkZhaWxlZCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgICAgZWxzZVxuICAgICAgICB7XG4gICAgICAgICAgICBvbkFkQ2xvc2UoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgc2hvd0Jhbm5hZXIoKSA6IGFueVxuICAgIHtcbiAgICAgICAgaWYoT1BQT0FQSS5fYmFubmVyKVxuICAgICAgICB7XG4gICAgICAgICAgICBPUFBPQVBJLl9iYW5uZXIuc2hvdygpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciBiYW5uZXJBZCA9IHFnLmNyZWF0ZUJhbm5lckFkKHtcbiAgICAgICAgICAgIHBvc0lkOiBPUFBPQVBJLmJhbm5lckFkVW5pdElkXG4gICAgICAgIH0pXG4gICAgICAgIGJhbm5lckFkLnNob3coKTtcbiAgICAgICAgT1BQT0FQSS5fYmFubmVyID0gYmFubmVyQWQ7XG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyBoaWRlQmFubmVyKClcbiAgICB7XG4gICAgICAgIGlmKE9QUE9BUEkuX2Jhbm5lcilcbiAgICAgICAge1xuICAgICAgICAgICAgT1BQT0FQSS5fYmFubmVyLmhpZGUoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgZGVzdHJveUJhbm5lcigpXG4gICAge1xuICAgICAgICBpZihPUFBPQVBJLl9iYW5uZXIpXG4gICAgICAgIHtcbiAgICAgICAgICAgIE9QUE9BUEkuX2Jhbm5lci5kZXN0cm95KCk7XG4gICAgICAgIH1cbiAgICAgICAgT1BQT0FQSS5fYmFubmVyID0gbnVsbDtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIGdldExhdW5jaE9wdGlvbnNTeW5jKCkge1xuICAgICAgICBsZXQgb2JqIDogYW55ID0geyBxdWVyeTogXCJcIiwgcmVmZXJyZXJJbmZvOiB7IHBhY2thZ2U6IFwiXCIsIGV4dHJhRGF0YTogeyBhcHBpZCA6IFwiXCJ9IH0gfVxuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uUUdNaW5pR2FtZSkge1xuICAgICAgICAgICAgdmFyIG9wdGlvbnMgPSBMYXlhLkJyb3dzZXIud2luZG93W1wicWdcIl0uZ2V0TGF1bmNoT3B0aW9uc1N5bmMoKTtcbiAgICAgICAgICAgIGlmKG51bGwgIT0gb3B0aW9ucyAmJiBvcHRpb25zICE9IFwiXCIpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb2JqID0gb3B0aW9ucztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuayoeacieWQr+WKqOiuvue9ru+8ge+8ge+8gVwiKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG9iajtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gb2JqO1xuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgc2hhcmUoY29tcGxhdGU6IEZ1bmN0aW9uLCB0aXRlbDogc3RyaW5nLCBpbWFnZVVybDogc3RyaW5nKSB7XG4gICAgICAgIGNvbXBsYXRlKGZhbHNlKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIGNyZWF0ZURlc2t0b3BJY29uKG9uU3VjY2VzcyA6IEZ1bmN0aW9uLG9uRmFpbCA6IEZ1bmN0aW9uKVxuICAgIHtcbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vblFHTWluaUdhbWUpIFxuICAgICAgICB7XG4gICAgICAgICAgICBMYXlhLkJyb3dzZXIud2luZG93W1wicWdcIl0uaGFzU2hvcnRjdXRJbnN0YWxsZWQoe1xuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXMpIFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlcyA9PSBmYWxzZSkgXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJxZ1wiXS5pbnN0YWxsU2hvcnRjdXQoXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAob25TdWNjZXNzKSAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25TdWNjZXNzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9uRmFpbCkgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uRmFpbCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5Yib5bu65qGM6Z2i5Zu+5qCH5aSx6LSl77yB77yB77yB77yBXCIsZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yKHZhciBrZXkgaW4gZXJyKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhrZXksZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tcGxldGU6IGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSAgXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5qGM6Z2i5Zu+5qCH5bey5a2Y5Zyo77yB77yB77yB77yBXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9uRmFpbCkgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkZhaWwoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZmFpbDogZnVuY3Rpb24oZXJyKSBcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChvbkZhaWwpICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkZhaWwoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuWIpOaWreahjOmdouWbvuagh+aYr+WQpuWtmOWcqOWksei0pe+8ge+8ge+8gVwiLGVycik7XG4gICAgICAgICAgICAgICAgICAgIGZvcih2YXIga2V5IGluIGVycilcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coa2V5LGVycik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNvbXBsZXRlOiBmdW5jdGlvbigpIFxuICAgICAgICAgICAgICAgIHtcblxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgICAgZWxzZVxuICAgICAgICB7XG4gICAgICAgICAgICBpZihvbkZhaWwpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb25GYWlsKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvL+agueaNrumFjee9rueahOamgueOh+iHquWKqOW8ueWHuuWIm+W7uuWbvuagh+ehruiupOahhlxuICAgIHB1YmxpYyBzdGF0aWMgYXV0b1BvcENyZWF0ZURlc3RvcEljb24ob25TdWNjZXNzIDogRnVuY3Rpb24sb25GYWlsIDogRnVuY3Rpb24pXG4gICAge1xuICAgICAgICBpZighTGF5YS5Ccm93c2VyLm9uUUdNaW5pR2FtZSlcbiAgICAgICAge1xuICAgICAgICAgICAgaWYobnVsbCAhPSBvbkZhaWwpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb25GYWlsKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHJhdGUgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMDApO1xuICAgICAgICBpZihyYXRlIDw9IEFwcFN3aXRjaENvbmZpZy5nZXRJbnN0YW5jZSgpLmdldEFwcFN3aXRjaERhdGEoKS5vcHBvY2ZnLmFkZFRvRGVza3RvcClcbiAgICAgICAge1xuICAgICAgICAgICAgT1BQT0FQSS5jcmVhdGVEZXNrdG9wSWNvbihvblN1Y2Nlc3Msb25GYWlsKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlmKG51bGwgIT0gb25GYWlsKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9uRmFpbCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy/mmL7npLpPUFBP5Y6f55Sf55WM6Z2iXG4gICAgcHVibGljIHN0YXRpYyBzaG93TmF0aXZlQWQob25TdWNjZXNzIDogRnVuY3Rpb24sb25GYWlsIDogRnVuY3Rpb24pXG4gICAge1xuICAgICAgICBpZighTGF5YS5Ccm93c2VyLm9uUUdNaW5pR2FtZSlcbiAgICAgICAge1xuICAgICAgICAgICAgaWYobnVsbCAhPSBvbkZhaWwpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb25GYWlsKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYoMSA9PSBBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkub3Bwb2NmZy55dWFuc2hlbmdTd2l0Y2gpXG4gICAgICAgIHtcbiAgICAgICAgICAgIFZpZXdNZ3IuaW5zdGFuY2Uub3BlblZpZXcoVmlld0RlZi5PUFBPTmF0aXZlVmlldyxudWxsLCh2IDogT1BQT05hdGl2ZUFkVmlld1RlbXBsYXRlKT0+XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaWYobnVsbCAhPSBvblN1Y2Nlc3MpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBvblN1Y2Nlc3Modik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZVxuICAgICAgICB7XG4gICAgICAgICAgICBpZihudWxsICE9IG9uRmFpbClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvbkZhaWwoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBRUU1pbmlHYW1lQVBJIHtcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IGFkVW5pdElkID0gXCI0YmI2MzYzOWU2MThiZTk0YjM5MTNiNDA1NmQzNjc3ZFwiICAgICAgICAgLy/mv4DlirHop4bpopFJZFxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgYmFubmVyQWRVbml0SWQgPSBcIjU4ODk4MTU0ODI4MjExNTAwM2E5OWIzM2YzNzNiYzY5XCIgICAvL2Jhbm5lcuW5v+WRiklkXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBJbnNBZFVuaXRJZCA9IFwiXCIgICAgICAvL+aPkuWxj+W5v+WRiklkXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBcHBCb3hJZCA9IFwiNGVlNDkzZTY1ZmExZmNlYTRlNzA5YTQ1ZmQ0YzQwZTZcIiAgICAgICAgLy/nm5LlrZDlub/lkYpJZFxuXG4gICAgcHVibGljIHN0YXRpYyBMb2dpbihvblN1Y2Nlc3M6IEZ1bmN0aW9uLCBvbkZhaWw6IEZ1bmN0aW9uKSB7XG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25RUU1pbmlHYW1lKSB7ICAgIFxuICAgICAgICAgICAgTGF5YS5Ccm93c2VyLndpbmRvd1tcInFxXCJdLmxvZ2luKFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogKHJlcykgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlcy5jb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGNvZGUgPSByZXMuY29kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvblN1Y2Nlc3MoY29kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLnmbvpmYbmiJDlip8s6I635Y+W5YiwY29kZSA6IFwiICsgY29kZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICB9XG5cblxuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLea/gOWKseinhumikS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIHByb3RlY3RlZCBzdGF0aWMgX2lzUmVnUmV3YXJkZWRWaWRlb0FkRXZlbnQgPSBmYWxzZTtcbiAgICBwcm90ZWN0ZWQgc3RhdGljIF9vblJld2FyZGVkVmlkZW9BZEZhaWxlZDogRnVuY3Rpb24gPSBudWxsO1xuICAgIHByb3RlY3RlZCBzdGF0aWMgX29uUmV3YXJkZWRWaWRlb0FkQ2xvc2U6IEZ1bmN0aW9uID0gbnVsbDtcbiAgICBwcm90ZWN0ZWQgc3RhdGljIG9uUmV3YXJkZWRWaWRlb0FkTG9hZCgpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ+a/gOWKseinhumikSDlub/lkYrliqDovb3lrozmiJAnKVxuICAgIH1cbiAgICBwcm90ZWN0ZWQgc3RhdGljIG9uUmV3YXJkZWRWaWRlb0FkRXJyb3IoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCfmv4DlirHop4bpopEg5bm/5ZGK5Yqg6L295aSx6LSlJyArIGVycilcbiAgICAgICAgaWYgKFFRTWluaUdhbWVBUEkuX29uUmV3YXJkZWRWaWRlb0FkRmFpbGVkKSB7XG4gICAgICAgICAgICBRUU1pbmlHYW1lQVBJLl9vblJld2FyZGVkVmlkZW9BZEZhaWxlZCgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHByb3RlY3RlZCBzdGF0aWMgb25SZXdhcmRlZFZpZGVvQWRDbG9zZShyZXMpIHtcbiAgICAgICAgaWYgKChyZXMgJiYgcmVzLmlzRW5kZWQpIHx8IHJlcyA9PSBudWxsKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygn5r+A5Yqx6KeG6aKRIOW3suWujOaVtOingueciycpXG4gICAgICAgICAgICBpZiAoUVFNaW5pR2FtZUFQSS5fb25SZXdhcmRlZFZpZGVvQWRDbG9zZSkge1xuICAgICAgICAgICAgICAgIFFRTWluaUdhbWVBUEkuX29uUmV3YXJkZWRWaWRlb0FkQ2xvc2UodHJ1ZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCfmv4DlirHop4bpopEg5pyq5a6M5pW06KeC55yLJylcbiAgICAgICAgICAgIGlmIChRUU1pbmlHYW1lQVBJLl9vblJld2FyZGVkVmlkZW9BZENsb3NlKSB7XG4gICAgICAgICAgICAgICAgUVFNaW5pR2FtZUFQSS5fb25SZXdhcmRlZFZpZGVvQWRDbG9zZShmYWxzZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBwcm90ZWN0ZWQgc3RhdGljIHJlZ1Jld2FyZGVkVmlkZW9BZEV2ZW50KHJld2FyZGVkVmlkZW9BZCkge1xuXG4gICAgICAgIHJld2FyZGVkVmlkZW9BZC5vbkxvYWQoUVFNaW5pR2FtZUFQSS5vblJld2FyZGVkVmlkZW9BZExvYWQpXG4gICAgICAgIHJld2FyZGVkVmlkZW9BZC5vbkVycm9yKFFRTWluaUdhbWVBUEkub25SZXdhcmRlZFZpZGVvQWRFcnJvcilcbiAgICAgICAgcmV3YXJkZWRWaWRlb0FkLm9uQ2xvc2UoUVFNaW5pR2FtZUFQSS5vblJld2FyZGVkVmlkZW9BZENsb3NlKVxuXG4gICAgICAgIFFRTWluaUdhbWVBUEkuX2lzUmVnUmV3YXJkZWRWaWRlb0FkRXZlbnQgPSB0cnVlO1xuICAgIH1cbiAgICBwdWJsaWMgc3RhdGljIHNob3dSZXdhcmRlZFZpZGVvQWQob25BZENsb3NlOiBGdW5jdGlvbiwgb25GYWlsZWQ6IEZ1bmN0aW9uKSB7XG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25RUU1pbmlHYW1lKSB7XG4gICAgICAgICAgICBRUU1pbmlHYW1lQVBJLl9vblJld2FyZGVkVmlkZW9BZENsb3NlID0gb25BZENsb3NlO1xuICAgICAgICAgICAgUVFNaW5pR2FtZUFQSS5fb25SZXdhcmRlZFZpZGVvQWRGYWlsZWQgPSBvbkZhaWxlZDtcblxuICAgICAgICAgICAgdmFyIHJld2FyZGVkVmlkZW9BZCA9IExheWEuQnJvd3Nlci53aW5kb3dbXCJxcVwiXS5jcmVhdGVSZXdhcmRlZFZpZGVvQWQoXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBhZFVuaXRJZDogUVFNaW5pR2FtZUFQSS5hZFVuaXRJZCxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApO1xuXG4gICAgICAgICAgICBpZiAoIVFRTWluaUdhbWVBUEkuX2lzUmVnUmV3YXJkZWRWaWRlb0FkRXZlbnQpIHtcbiAgICAgICAgICAgICAgICBRUU1pbmlHYW1lQVBJLnJlZ1Jld2FyZGVkVmlkZW9BZEV2ZW50KHJld2FyZGVkVmlkZW9BZCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJld2FyZGVkVmlkZW9BZC5sb2FkKCkudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgdmFyIHByb21pc2UgPSByZXdhcmRlZFZpZGVvQWQuc2hvdygpO1xuICAgICAgICAgICAgICAgIHByb21pc2UudGhlbigoKSA9PiBjb25zb2xlLmxvZygn5r+A5Yqx6KeG6aKRIOW5v+WRiuaYvuekuuaIkOWKnycpKTtcbiAgICAgICAgICAgICAgICBwcm9taXNlLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV3YXJkZWRWaWRlb0FkLmxvYWQoKVxuICAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4gcmV3YXJkZWRWaWRlb0FkLnNob3coKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIC5jYXRjaChlcnIgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfmv4DlirHop4bpopEg5bm/5ZGK5pi+56S65aSx6LSlJylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAob25GYWlsZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25GYWlsZWQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSkuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn5r+A5Yqx6KeG6aKRIOW5v+WRiuWKoOi9veWksei0pScpXG4gICAgICAgICAgICAgICAgaWYgKG9uRmFpbGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIG9uRmFpbGVkKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIG9uQWRDbG9zZSh0cnVlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t5bCP5ri45oiP6Lez6L2sLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgcHVibGljIHN0YXRpYyBuYXZpZ2F0ZVRvTWluaVByb2dyYW0oYXBwSWQ6IHN0cmluZywgcGF0aDogc3RyaW5nLCBvblN1Y2Nlc3M6IEZ1bmN0aW9uLCBvbkZhaWw6IEZ1bmN0aW9uLCBvbkNvbXBsYXRlOiBGdW5jdGlvbikge1xuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uUVFNaW5pR2FtZSkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCLot7PovazmuLjmiI/vvJogXCIgKyBhcHBJZCk7XG4gICAgICAgICAgICBMYXlhLkJyb3dzZXIud2luZG93W1wicXFcIl0ubmF2aWdhdGVUb01pbmlQcm9ncmFtKFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgYXBwSWQ6IGFwcElkLFxuICAgICAgICAgICAgICAgICAgICBwYXRoOiBwYXRoLFxuICAgICAgICAgICAgICAgICAgICBleHRyYURhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbzogJ2JhcidcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZW52VmVyc2lvbjogJ3JlbGVhc2UnLFxuICAgICAgICAgICAgICAgICAgICBzdWNjZXNzKHJlcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9uU3VjY2Vzcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uU3VjY2VzcyhyZXMpXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGZhaWwocmVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAob25GYWlsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25GYWlsKHJlcylcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgY29tcGxldGUocmVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAob25Db21wbGF0ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ29tcGxhdGUocmVzKVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcblxuICAgICAgICB9XG4gICAgfVxuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS3liIbkuqstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgcHJvdGVjdGVkIHN0YXRpYyBfb25TaG93OiBGdW5jdGlvbiA9IG51bGw7XG4gICAgcHJvdGVjdGVkIHN0YXRpYyBfbGFzdFNoYXJlVGltZTogbnVtYmVyID0gMDtcbiAgICBwdWJsaWMgc3RhdGljIHNoYXJlKGNvbXBsYXRlOiBGdW5jdGlvbiwgdGl0ZWw6IHN0cmluZywgaW1hZ2VVcmw6IHN0cmluZykge1xuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uUVFNaW5pR2FtZSkge1xuICAgICAgICAgICAgUVFNaW5pR2FtZUFQSS5fb25TaG93ID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJxcVwiXS5vZmZTaG93KFFRTWluaUdhbWVBUEkuX29uU2hvdylcbiAgICAgICAgICAgICAgICBRUU1pbmlHYW1lQVBJLl9vblNob3cgPSBudWxsO1xuICAgICAgICAgICAgICAgIHZhciBjID0gRGF0ZS5ub3coKSAtIHRoaXMuX2xhc3RTaGFyZVRpbWU7XG4gICAgICAgICAgICAgICAgaWYgKGNvbXBsYXRlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChEYXRlLm5vdygpIC0gdGhpcy5fbGFzdFNoYXJlVGltZSA+IDIwMDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBsYXRlKHRydWUpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb21wbGF0ZShmYWxzZSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJxcVwiXS5vblNob3coUVFNaW5pR2FtZUFQSS5fb25TaG93KVxuICAgICAgICAgICAgUVFNaW5pR2FtZUFQSS5fbGFzdFNoYXJlVGltZSA9IERhdGUubm93KCk7XG4gICAgICAgICAgICBMYXlhLkJyb3dzZXIud2luZG93W1wicXFcIl0uc2hhcmVBcHBNZXNzYWdlKFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IHRpdGVsLFxuICAgICAgICAgICAgICAgICAgICBpbWFnZVVybDogaW1hZ2VVcmxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0t5o+S5bGP5bmV5bm/5ZGKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgcHVibGljIHN0YXRpYyBzaG93SW50ZXJzdGl0aWFsQWQob25BZENsb3NlOiBGdW5jdGlvbiwgb25GYWlsZWQ6IEZ1bmN0aW9uKSAge1xuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uUVFNaW5pR2FtZSkge1xuICAgICAgICAgICAgdmFyIGludGVyc3RpdGlhbEFkID0gTGF5YS5Ccm93c2VyLndpbmRvd1tcInFxXCJdLmNyZWF0ZUludGVyc3RpdGlhbEFkKHtcbiAgICAgICAgICAgICAgICBhZFVuaXRJZDogUVFNaW5pR2FtZUFQSS5JbnNBZFVuaXRJZCxcbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgIGxldCBfb25Mb2FkID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfmj5LlsY/lub/lkYog5Yqg6L295a6M5oiQJyk7XG4gICAgICAgICAgICAgICAgaW50ZXJzdGl0aWFsQWQuc2hvdygpLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+aPkuWxj+W5v+WRiiDmmL7npLrlpLHotKUg77yaJyArIGVycilcbiAgICAgICAgICAgICAgICAgICAgaW50ZXJzdGl0aWFsQWQub2ZmTG9hZChfb25Mb2FkKTtcbiAgICAgICAgICAgICAgICAgICAgaW50ZXJzdGl0aWFsQWQub2ZmRXJyb3IoX29uRXJyb3IpO1xuICAgICAgICAgICAgICAgICAgICBpbnRlcnN0aXRpYWxBZC5vZmZDbG9zZShfb25DbG9zZSk7XG4gICAgICAgICAgICAgICAgICAgIGludGVyc3RpdGlhbEFkLmRlc3Ryb3koKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9uRmFpbGVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkZhaWxlZCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGludGVyc3RpdGlhbEFkLm9uTG9hZChfb25Mb2FkKVxuXG4gICAgICAgICAgICBsZXQgX29uRXJyb3IgPSAoZXJyKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+aPkuWxj+W5v+WRiiDliqDovb3lpLHotKUnICsgZXJyKTtcbiAgICAgICAgICAgICAgICBpbnRlcnN0aXRpYWxBZC5vZmZMb2FkKF9vbkxvYWQpO1xuICAgICAgICAgICAgICAgIGludGVyc3RpdGlhbEFkLm9mZkVycm9yKF9vbkVycm9yKTtcbiAgICAgICAgICAgICAgICBpbnRlcnN0aXRpYWxBZC5vZmZDbG9zZShfb25DbG9zZSk7XG4gICAgICAgICAgICAgICAgaW50ZXJzdGl0aWFsQWQuZGVzdHJveSgpO1xuICAgICAgICAgICAgICAgIGlmIChvbkZhaWxlZCkge1xuICAgICAgICAgICAgICAgICAgICBvbkZhaWxlZCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGludGVyc3RpdGlhbEFkLm9uRXJyb3IoX29uRXJyb3IpXG5cbiAgICAgICAgICAgIGxldCBfb25DbG9zZSA9ICgpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn5o+S5bGP5bm/5ZGKIOWFs+mXrScpO1xuICAgICAgICAgICAgICAgIGludGVyc3RpdGlhbEFkLm9mZkxvYWQoX29uTG9hZCk7XG4gICAgICAgICAgICAgICAgaW50ZXJzdGl0aWFsQWQub2ZmRXJyb3IoX29uRXJyb3IpO1xuICAgICAgICAgICAgICAgIGludGVyc3RpdGlhbEFkLm9mZkNsb3NlKF9vbkNsb3NlKTtcbiAgICAgICAgICAgICAgICBpbnRlcnN0aXRpYWxBZC5kZXN0cm95KCk7XG4gICAgICAgICAgICAgICAgaWYgKG9uQWRDbG9zZSkge1xuICAgICAgICAgICAgICAgICAgICBvbkFkQ2xvc2UoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpbnRlcnN0aXRpYWxBZC5vbkNsb3NlKF9vbkNsb3NlKVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgb25BZENsb3NlKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAgICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLeebkuWtkOW5v+WRii0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAgICBwdWJsaWMgc3RhdGljIG1BcHBib3hBZCA9IG51bGw7XG4gICAgICAgIHByb3RlY3RlZCBzdGF0aWMgb25Cb3hBZENsb3NlIDogRnVuY3Rpb24gPSBudWxsO1xuICAgICAgICBcbiAgICAgICAgcHVibGljIHN0YXRpYyBMb2FkQXBwQm94QWQob25BZENsb3NlOiBGdW5jdGlvbiwgb25GYWlsZWQ6IEZ1bmN0aW9uKSB7XG4gICAgICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uUVFNaW5pR2FtZSkge1xuICAgICAgICAgICAgICAgIHRoaXMubUFwcGJveEFkID0gTGF5YS5Ccm93c2VyLndpbmRvd1tcInFxXCJdLmNyZWF0ZUFwcEJveCh7XG4gICAgICAgICAgICAgICAgICAgIGFkVW5pdElkOiBRUU1pbmlHYW1lQVBJLkFwcEJveElkLFxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgdGhpcy5tQXBwYm94QWQubG9hZCgpLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn55uS5a2Q5bm/5ZGKIOWKoOi9veWujOaIkCcpO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgXG4gICAgICAgICAgICAgICAgdGhpcy5tQXBwYm94QWQub25FcnJvcigoZXJyKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfnm5LlrZDlub/lkYog5Yqg6L295aSx6LSlJyArIGVycik7XG4gICAgICAgICAgICAgICAgICAgIGlmIChvbkZhaWxlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgb25GYWlsZWQoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgdGhpcy5vbkJveEFkQ2xvc2UgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfnm5LlrZDlub/lkYog5YWz6ZetJyk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChvbkFkQ2xvc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQWRDbG9zZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMubUFwcGJveEFkLm9uQ2xvc2UodGhpcy5vbkJveEFkQ2xvc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgb25BZENsb3NlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgcHVibGljIHN0YXRpYyBzaG93QXBwQm94QWQob25GYWlsZWQ6IEZ1bmN0aW9uLG9uQWRDbG9zZT8gOiBGdW5jdGlvbikge1xuICAgICAgICAgICAgaWYodGhpcy5tQXBwYm94QWQpe1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5pi+56S655uS5a2Q5bm/5ZGKXCIpO1xuICAgICAgICAgICAgICAgIHRoaXMubUFwcGJveEFkLm9mZkNsb3NlKHRoaXMub25Cb3hBZENsb3NlKTtcbiAgICAgICAgICAgICAgICB0aGlzLm9uQm94QWRDbG9zZSA9ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+ebkuWtkOW5v+WRiiDlhbPpl60nKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9uQWRDbG9zZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgb25BZENsb3NlKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5tQXBwYm94QWQub25DbG9zZSh0aGlzLm9uQm94QWRDbG9zZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5tQXBwYm94QWQuc2hvdygpLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+ebkuWtkOW5v+WRiiDmmL7npLrlpLHotKUg77yaJyArIGVycik7XG4gICAgICAgICAgICAgICAgICAgIGlmIChvbkZhaWxlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgb25GYWlsZWQoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgICAgICBRUU1pbmlHYW1lQVBJLkxvYWRBcHBCb3hBZChvbkFkQ2xvc2Usb25GYWlsZWQpO1xuICAgICAgICAgICAgfSBcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAvKipcbiAgICAgKiDlvpfliLDlsI/nqIvluo/lkK/liqjlj4LmlbDnmoTlkIzmraXmlrnms5XvvIzlj6/lvpfliLDkuIDkuKpPYmplY3Tov5Tlm57lgLzvvIzov5Tlm57lgLzlhbfkvZPnmoTmlbDmja7nu5PmnoTlnKjkuIvpnaLnmoTliJfooajkuK1cbiAgICAgKiBzY2VuZVx0bnVtYmVyXHTlkK/liqjlsI/muLjmiI/nmoTlnLrmma/lgLxcbiAgICAgKiBxdWVyeVx0T2JqZWN0XHTlkK/liqjlsI/muLjmiI/nmoQgcXVlcnkg5Y+C5pWwXG4gICAgICogc2hhcmVUaWNrZXRcdHN0cmluZ1x0c2hhcmVUaWNrZXTvvIzor6bop4Hojrflj5bmm7TlpJrovazlj5Hkv6Hmga9cbiAgICAgKiByZWZlcnJlckluZm9cdG9iamVjdFx05p2l5rqQ5L+h5oGv44CC5LuO5Y+m5LiA5Liq5bCP56iL5bqP44CB5YWs5LyX5Y+35oiWIEFwcCDov5vlhaXlsI/nqIvluo/ml7bov5Tlm57jgILlkKbliJnov5Tlm54ge31cbiAgICAgKiBodHRwczovL2RldmVsb3BlcnMud2VpeGluLnFxLmNvbS9taW5pZ2FtZS9kZXYvYXBpL2Jhc2UvYXBwL2xpZmUtY3ljbGUvcXEuZ2V0TGF1bmNoT3B0aW9uc1N5bmMuaHRtbFxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAcmV0dXJucyB7TGF1bmNoT3B0aW9uc30gXG4gICAgICogQG1lbWJlcm9mIFFRTWluaUdhbWVBUElcbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIGdldExhdW5jaE9wdGlvbnNTeW5jKCkge1xuICAgICAgICAvLyBsZXQgcmVzdWx0ID0geyBzY2VuZTogMCwgcXVlcnk6IG51bGwsIHNoYXJlVGlja2V0OiBcIlwiLCByZWZlcnJlckluZm86IG51bGwgfTtcbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vblFRTWluaUdhbWUpIHtcbiAgICAgICAgICAgIGxldCBvYmogPSBMYXlhLkJyb3dzZXIud2luZG93W1wicXFcIl0uZ2V0TGF1bmNoT3B0aW9uc1N5bmMoKVxuICAgICAgICAgICAgY29uc29sZS5sb2coXCLlnLrmma/lgLwgXCIgKyBvYmouc2NlbmUpO1xuICAgICAgICAgICAgbGV0IHN0ciA9IEpTT04uc3RyaW5naWZ5KG9iai5xdWVyeSk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIlF1ZXJ55Y+C5pWwIFwiICsgc3RyKTtcbiAgICAgICAgICAgIGxldCBrZXkgPSBvYmoucXVlcnlbXCJrZXlcIl07XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIlF1ZXJ55Y+C5pWw77yaa2V5IFwiICsga2V5KTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiU2hhcmVUaWNrZXQgXCIgKyBvYmouc2hhcmVUaWNrZXQpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJSZWZlcnJlckluZm8uYXBwSWQgXCIgKyBvYmoucmVmZXJyZXJJbmZvLmFwcElkKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiUmVmZXJyZXJJbmZvLmV4dHJhRGF0YSBcIiArIG9iai5yZWZlcnJlckluZm8uZXh0cmFEYXRhKTtcbiAgICAgICAgICAgIHJldHVybiBvYmo7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IG9iaiA9IHsgc2NlbmU6IDEwMDEsIHF1ZXJ5OiBcIlwiLCBzaGFyZVRpY2tldDogXCJcIiwgYXBwSWQ6IFwiXCIsIGV4dHJhRGF0YTogXCJcIiB9XG4gICAgICAgIHJldHVybiBvYmo7XG4gICAgfVxuXG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgLyoqXG4gICAgICog5omT5byA5b6u5L+h5bem5LiK6KeS5YiG5Lqr6L2s5Y+R54K55Ye75LqL5Lu2LOWcqOa4uOaIj+mAu+i+keS4reiwg+eUqOS4gOasoeWNs+WPr1xuICAgICAqIOazqOaEj+atpOaWueazleWPquS8muWcqOecn+acuuS4iuaJp+ihjO+8jOWcqOW+ruS/oeaooeaLn+WZqOeOr+Wig+S4i+eCueWHu+i9rOWPkeaMiemSruS7gOS5iOmDveS4jeS8muWPkeeUn1xuICAgICAqIFxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdGl0ZWwg5YiG5Lqr5qCH6aKYXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGltYWdlVXJsIOWIhuS6q+WbvueJh+WcsOWdgFxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtzdWNjZXNzXSDmiJDlip/lm57osIPlh73mlbAo5Y+v5LiN5aGrKVxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtmYWlsXSDlpLHotKXlm57osIPlh73mlbAo5Y+v5LiN5aGrKVxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjb21wbGF0ZV0g5a6M5oiQ5Zue6LCD5Ye95pWw77yM5oiQ5Yqf5aSx6LSl6YO95Lya5omn6KGMKOWPr+S4jeWhqylcbiAgICAgKiBAbWVtYmVyb2YgUVFNaW5pR2FtZUFQSVxuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgU2V0U2hhcmVNZW51KHRpdGVsOiBzdHJpbmcsIGltYWdlVXJsOiBzdHJpbmcsIHN1Y2Nlc3M/OiBGdW5jdGlvbiwgZmFpbD86IEZ1bmN0aW9uLCBjb21wbGF0ZT86IEZ1bmN0aW9uKSB7XG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25RUU1pbmlHYW1lKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIuWwj+a4uOaIj+iuvue9rui9rOWPkeaMiemSrlwiKTtcbiAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJxcVwiXS5zaG93U2hhcmVNZW51KHtcbiAgICAgICAgICAgICAgICB3aXRoU2hhcmVUaWNrZXQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IHN1Y2Nlc3MsXG4gICAgICAgICAgICAgICAgZmFpbDogZmFpbCxcbiAgICAgICAgICAgICAgICBjb21wbGV0ZTogY29tcGxhdGVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgTGF5YS5Ccm93c2VyLndpbmRvd1tcInFxXCJdLm9uU2hhcmVBcHBNZXNzYWdlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICB0aXRsZTogdGl0ZWwsXG4gICAgICAgICAgICAgICAgICAgIGltYWdlVXJsOiBpbWFnZVVybFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxufSIsImltcG9ydCB7IHJlcXVlc3REYXRhIH0gZnJvbSBcIi4uL05ldC9IdHRwVW5pdFwiO1xuaW1wb3J0IEFwcENvbmZpZyBmcm9tIFwiLi4vQXBwQ29uZmlnXCI7XG5pbXBvcnQgVXNlciBmcm9tIFwiLi4vVXNlci9Vc2VyXCI7XG5pbXBvcnQgVXRpbGl0IGZyb20gXCIuLi9VdGlsaXRcIjtcbmltcG9ydCBBTEQgZnJvbSBcIi4uL0FMRFwiO1xuaW1wb3J0IFdYQVBJIGZyb20gXCIuLi9XWEFQSVwiO1xuaW1wb3J0IEV2ZW50TWdyIGZyb20gXCIuLi9FdmVudC9FdmVudE1nclwiO1xuaW1wb3J0IHsgRXZlbnREZWYgfSBmcm9tIFwiLi4vRXZlbnQvRXZlbnREZWZcIjtcbmltcG9ydCBBcHBTd2l0Y2hDb25maWcgZnJvbSBcIi4uL0NvbmZpZy9BcHBTd2l0Y2hDb25maWdcIjtcbmltcG9ydCBRUU1pbmlHYW1lQVBJIGZyb20gXCIuLi9RUU1pbmlHYW1lQVBJXCI7XG5cblxuXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNoYXJlQWQgXG57XG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBtYWluVXJsID0gXCJodHRwczovL3N3d3d3Lm1ya3p4LmNuXCI7XG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBnZXRBZFBvc3Rpb24gPSBcIi92MS4xL2FwaS9nZXRBZFBvc2l0aW9uLmh0bWxcIjsvL+iOt+WPluW5v+WRiuS9jeWIl+ihqFxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgZ2V0QWR2ID0gXCIvdjEuMS9hcGkvZ2V0QWR2Lmh0bWxcIjsvL+iOt+WPluesrOS4ieaWueW5v+WRiuWIl+ihqFxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgdXNlckNsaWNrID0gXCIvdjEuMS9hcGkvdXNlcmNsaWNrLmh0bWxcIjsvL+eUqOaIt+eCueWHu+S4iuaKpVxuXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBMb29wQWRMb2NhdGlvbklEID0gLTE7XG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBCYW5uZXJBZExvY2F0aW9uSUQgPSAtMTtcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEluc2VydEFkTG9jYXRpb25JRCA9IC0xO1xuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQW5pQWRMb2NhdGlvbklEID0gLTE7XG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBIaXN0b3J5TG9jYXRpb25JRCA9IC0xO1xuICAgIFxuICAgIHB1YmxpYyBzdGF0aWMgVXNlUmFuZG9tQWRQb3MgOiBib29sZWFuID0gdHJ1ZTtcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFkTG9jYXRpb25pZHMgOiBBcnJheTxudW1iZXI+ID1cbiAgICBbXG4gICAgICAgIFxuICAgIF1cblxuICAgIHByb3RlY3RlZCBzdGF0aWMgX2FkUG9zaXRpb24gOiBhbnkgPSB7fVxuICAgIHByb3RlY3RlZCBzdGF0aWMgX2FkdiA6IGFueSA9IHt9XG5cbiAgICBwdWJsaWMgc3RhdGljIF9pcGhvbmVJZ25vcmVBcHBJZHMgPSBcbiAgICBbXG4gICAgICAgIFwid3gyZDJhY2NlM2M0NWY0ZGRmXCIsXG4gICAgICAgIFwid3hlYjkzYzEyOThlYzdjNjJiXCJcbiAgICBdXG5cbiAgICBwdWJsaWMgc3RhdGljIHJlZnJlc2hBZChjb21wbGF0ZSA6IEZ1bmN0aW9uKVxuICAgIHtcbiAgICAgICAgU2hhcmVBZC5nZXRBZFBvc0RhdGEoKHJlcyk9PntcbiAgICAgICAgICAgIGlmKDEgPT0gcmVzLmNvZGUpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLojrflj5bliIbkuqvlub/lkYrmlbDmja7miJDlip9cIik7XG4gICAgICAgICAgICAgICAgU2hhcmVBZC5fYWRQb3NpdGlvbiA9IHJlcy5yZXN1bHQ7XG4gICAgICAgICAgICAgICAgaWYoY29tcGxhdGUpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjb21wbGF0ZSh0cnVlKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuiOt+WPluWIhuS6q+W5v+WRiuaVsOaNruWksei0pSDvvJogXCIgKyByZXMubXNnKTtcbiAgICAgICAgICAgICAgICBpZihjb21wbGF0ZSlcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGNvbXBsYXRlKGZhbHNlKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwocmVzKT0+e1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCLojrflj5bliIbkuqvlub/lkYrmlbDmja7lpLHotKVcIik7XG4gICAgICAgICAgICBpZihjb21wbGF0ZSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjb21wbGF0ZShmYWxzZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIGdldEFEVnMobG9jYXRpb25pZCxjb21wbGF0ZSA6IEZ1bmN0aW9uLHVzZVJhbmRvbT8gOiBib29sZWFuLHVzZUxvY2FsUmFuZG9tPyA6IGJvb2xlYW4pXG4gICAge1xuICAgICAgICBpZighU2hhcmVBZC5pc05lZWRTaG93QWQoKSlcbiAgICAgICAge1xuICAgICAgICAgICAgY29tcGxhdGUobnVsbCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdXNlUmFuZG9tID0gbnVsbCA9PSB1c2VSYW5kb20gPyB0aGlzLlVzZVJhbmRvbUFkUG9zIDogdXNlUmFuZG9tO1xuICAgICAgICB1c2VMb2NhbFJhbmRvbSA9ICBudWxsID09IHVzZUxvY2FsUmFuZG9tID8gdHJ1ZSA6IHVzZUxvY2FsUmFuZG9tO1xuICAgICAgICBpZih1c2VSYW5kb20pXG4gICAgICAgIHtcbiAgICAgICAgICAgIGxvY2F0aW9uaWQgPSB0aGlzLmdldFJhbmRvbUFEUG9zSUQoKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgZGF0YXMgPSBTaGFyZUFkLl9hZHZbbG9jYXRpb25pZF07XG4gICAgICAgIGlmKGRhdGFzKVxuICAgICAgICB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gZGF0YXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpICBcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB2YXIgcmFuZG9tSW5kZXggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBkYXRhcy5sZW5ndGgpO1xuICAgICAgICAgICAgICAgIHZhciBjdXJWYWx1ZSA9IGRhdGFzW2ldO1xuICAgICAgICAgICAgICAgIHZhciByYW5kb21WYWx1ZSA9IGRhdGFzW3JhbmRvbUluZGV4XTtcbiAgICAgICAgICAgICAgICBkYXRhc1tyYW5kb21JbmRleF0gPSBjdXJWYWx1ZTtcbiAgICAgICAgICAgICAgICBkYXRhc1tpXSA9IHJhbmRvbVZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29tcGxhdGUoZGF0YXMpXG4gICAgICAgIH1cbiAgICAgICAgZWxzZVxuICAgICAgICB7XG4gICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgICAgICBTaGFyZUFkLmdldEFEVkRhdGEobG9jYXRpb25pZCwocmVzKT0+XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaWYoMSA9PSByZXMuY29kZSlcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIFNoYXJlQWQuX2Fkdltsb2NhdGlvbmlkXSA9IHJlcy5yZXN1bHQ7XG4gICAgICAgICAgICAgICAgICAgIGRhdGFzID0gU2hhcmVBZC5fYWR2W2xvY2F0aW9uaWRdO1xuICAgICAgICAgICAgICAgICAgICBpZihkYXRhcyAmJiBVdGlsaXQuaXNJcGhvbmUoKSlcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yKHZhciBpPTA7aTwgZGF0YXMubGVuZ3RoOysraSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGF0YSA9IGRhdGFzW2ldO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcih2YXIgaj0wO2ogPCBTaGFyZUFkLl9pcGhvbmVJZ25vcmVBcHBJZHMubGVuZ3RoOysrailcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKGRhdGEuYXBwaWQgPT0gU2hhcmVBZC5faXBob25lSWdub3JlQXBwSWRzW2pdKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhcy5zcGxpY2UoaSwxKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0taTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmKGRhdGFzICYmIHVzZUxvY2FsUmFuZG9tKVxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhcyA9IHNlbGYuc29ydERhdGFzKGRhdGFzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZihjb21wbGF0ZSlcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29tcGxhdGUoZGF0YXMpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGlmKGNvbXBsYXRlKVxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb21wbGF0ZShudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sKHJlcyk9PlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGlmKGNvbXBsYXRlKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY29tcGxhdGUobnVsbCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgcmVwb3J0VXNlckNsaWNrKGFkdmlkKVxuICAgIHtcbiAgICAgICAgU2hhcmVBZC5yZXFVc2VyQ2xpY2soYWR2aWQsKHJlcyk9PlxuICAgICAgICB7XG4gICAgICAgICAgICBpZigxID09IHJlcy5jb2RlKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi54K55Ye75bm/5ZGK5LiK5oql5oiQ5YqfXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi54K55Ye75bm/5ZGK5LiK5oql5aSx6LSlXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LChyZXMpPT5cbiAgICAgICAge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCLngrnlh7vlub/lkYrkuIrmiqXlpLHotKVcIik7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0UmFuZG9tQURQb3NJRCgpIDogbnVtYmVyXG4gICAge1xuICAgICAgICByZXR1cm4gdGhpcy5BZExvY2F0aW9uaWRzW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHRoaXMuQWRMb2NhdGlvbmlkcy5sZW5ndGgpXVxuICAgIH1cblxuICAgIHByb3RlY3RlZCBzdGF0aWMgcmVxdWVzdChyZXEgOiByZXF1ZXN0RGF0YSkge1xuICAgICAgICBpZiAocmVxLnVybC5pbmRleE9mKFwiaHR0cHM6Ly9cIikgPiAtMSB8fFxuICAgICAgICAgICAgcmVxLnVybC5pbmRleE9mKFwiaHR0cDovL1wiKSA+IC0xKSB7XG4gICAgICAgICAgICByZXEudXJsID0gcmVxLnVybDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlcS51cmwgPSBTaGFyZUFkLm1haW5VcmwgKyByZXEudXJsO1xuICAgICAgICB9XG4gICAgICAgIHZhciBjb21wbGV0ZUZ1bmMgPSAocmVzKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMsXCJodHRwIFN1Y2Nlc3NcIilcbiAgICAgICAgICAgIHJlcyA9IEpTT04ucGFyc2UocmVzKTtcbiAgICAgICAgICAgIGlmIChyZXEub25TdWNjZXNzKSB7XG4gICAgICAgICAgICAgICAgcmVxLm9uU3VjY2VzcyhyZXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmVxLm9uU3VjY2VzcyA9IG51bGw7XG4gICAgICAgICAgICByZXEgPSBudWxsO1xuICAgICAgICB9O1xuICAgICAgICB2YXIgZXJyb3JGdW5jID0gKHJlcykgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2cocmVzLFwiaHR0cCBmYWlsXCIpXG4gICAgICAgICAgICBpZiAocmVxLm9uRmFpbCkgIHtcbiAgICAgICAgICAgICAgICByZXEub25GYWlsKHJlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXEub25GYWlsID0gbnVsbDtcbiAgICAgICAgICAgIHJlcSA9IG51bGw7XG4gICAgICAgIH07XG5cbiAgICAgICAgdmFyIHhocjogTGF5YS5IdHRwUmVxdWVzdCA9IG5ldyBMYXlhLkh0dHBSZXF1ZXN0KCk7XG4gICAgICAgIHhoci5vbmNlKExheWEuRXZlbnQuQ09NUExFVEUsIHRoaXMsIGNvbXBsZXRlRnVuYyk7XG4gICAgICAgIHhoci5vbmNlKExheWEuRXZlbnQuRVJST1IsIHRoaXMsIGVycm9yRnVuYyk7XG5cblxuICAgICAgICBpZihyZXEubWV0aCA9PSBcImdldFwiKVxuICAgICAgICB7XG4gICAgICAgICAgICB2YXIgcGFyYSA9IFwiXCI7XG4gICAgICAgICAgICBmb3IoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHJlcS5kYXRhKSkgXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdmFyIHZhbHVlID0gcmVxLmRhdGFba2V5XTtcbiAgICAgICAgICAgICAgICBwYXJhICs9ICBrZXkgKyBcIj1cIiArIHZhbHVlICsgXCImXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXEudXJsID0gcmVxLnVybCArIFwiP1wiICsgcGFyYTtcbiAgICAgICAgICAgIHZhciBoZWFkZXIgPVxuICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgXCJ2ZXJzaW9uc1wiLCBBcHBDb25maWcuVmVyc2lvbnMsXG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgeGhyLnNlbmQocmVxLnVybCxudWxsLHJlcS5tZXRoLG51bGwsaGVhZGVyKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlXG4gICAgICAgIHtcbiAgICAgICAgICAgIHZhciBwYXJhID0gXCJcIjtcbiAgICAgICAgICAgIGZvcihjb25zdCBrZXkgb2YgT2JqZWN0LmtleXMocmVxLmRhdGEpKSBcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB2YXIgdmFsdWUgPSByZXEuZGF0YVtrZXldO1xuICAgICAgICAgICAgICAgIHBhcmEgKz0gIGtleSArIFwiPVwiICsgdmFsdWUgKyBcIiZcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHBhcmEgKz0gXCJ0cz1cIiArIFN0cmluZyhEYXRlLm5vdygpKSArIFwiJlwiO1xuICAgICAgICAgICAgdmFyIGhlYWRlciA9XG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiLCBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiLFxuICAgICAgICAgICAgICAgICAgICBcInZlcnNpb25zXCIsIEFwcENvbmZpZy5WZXJzaW9ucyxcbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB4aHIuc2VuZChyZXEudXJsLHBhcmEscmVxLm1ldGgsbnVsbCxoZWFkZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIHN0YXRpYyBnZXRBZFBvc0RhdGEob25TdWNjZXNzIDogRnVuY3Rpb24sb25GYWlsIDogRnVuY3Rpb24pXG4gICAge1xuICAgICAgICB2YXIgcmVxID0gbmV3IHJlcXVlc3REYXRhKCk7XG4gICAgICAgIHJlcS51cmwgPSBTaGFyZUFkLmdldEFkUG9zdGlvbjtcbiAgICAgICAgcmVxLm9uU3VjY2VzcyA9IG9uU3VjY2VzcztcbiAgICAgICAgcmVxLm9uRmFpbCA9IG9uRmFpbDtcbiAgICAgICAgcmVxLmRhdGEuc29mdGlkID0gQXBwQ29uZmlnLkFwcElEO1xuICAgICAgICByZXEubWV0aCA9IFwiZ2V0XCI7XG4gICAgICAgIFNoYXJlQWQucmVxdWVzdChyZXEpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBzdGF0aWMgcmVxVXNlckNsaWNrKGFkdmlkLG9uU3VjY2VzcyA6IEZ1bmN0aW9uLG9uRmFpbCA6IEZ1bmN0aW9uKVxuICAgIHtcbiAgICAgICAgdmFyIHJlcSA9IG5ldyByZXF1ZXN0RGF0YSgpO1xuICAgICAgICByZXEudXJsID0gU2hhcmVBZC51c2VyQ2xpY2s7XG4gICAgICAgIHJlcS5vblN1Y2Nlc3MgPSBvblN1Y2Nlc3M7XG4gICAgICAgIHJlcS5vbkZhaWwgPSBvbkZhaWw7XG5cbiAgICAgICAgcmVxLmRhdGEuc29mdGlkID0gQXBwQ29uZmlnLkFwcElEO1xuICAgICAgICByZXEuZGF0YS51aWQgID0gVXNlci5vcGVuSWQ7XG4gICAgICAgIHJlcS5kYXRhLmFkdmlkICA9IGFkdmlkIDtcblxuICAgICAgICBTaGFyZUFkLnJlcXVlc3QocmVxKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgc3RhdGljIGdldEFEVkRhdGEobG9jYXRpb25pZCxvblN1Y2Nlc3MgOiBGdW5jdGlvbixvbkZhaWwgOiBGdW5jdGlvbilcbiAgICB7XG4gICAgICAgIHZhciByZXEgPSBuZXcgcmVxdWVzdERhdGEoKTtcbiAgICAgICAgcmVxLnVybCA9IFNoYXJlQWQuZ2V0QWR2O1xuICAgICAgICByZXEub25TdWNjZXNzID0gb25TdWNjZXNzO1xuICAgICAgICByZXEub25GYWlsID0gb25GYWlsO1xuICAgICAgICByZXEuZGF0YS5zb2Z0aWQgPSBBcHBDb25maWcuQXBwSUQ7XG4gICAgICAgIHJlcS5kYXRhLmxvY2F0aW9uaWQgPSBsb2NhdGlvbmlkO1xuICAgICAgICByZXEuZGF0YS5wcmV2aWV3ID0gMDtcbiAgICAgICAgU2hhcmVBZC5yZXF1ZXN0KHJlcSk7XG4gICAgfVxuXG5cbi8qKlxuICAgICAqIOmaj+acuui3s+i9rOeahOaWueazle+8jOS8muS7juW5v+WRiuWIl+ihqOS4remaj+acuuW+l+WIsOS4gOS4qkFwcElk5bm25LiU6Lez6L2sLOi+k+WFpeeahOWPguaVsOS4uuamgueOh++8jOWkp+Wwj+WcqDAtMeS5i+mXtFxuICAgICAqIOWmguaenOamgueOh+Wkp+S6jjHvvIzliJnoh6rliqjlsIblhbbpmaTku6UxMDDvvIzmiYDku6XljYPkuIfms6jmhI/vvIFcbiAgICAgKiBcbiAgICAgKiBAc3RhdGljXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFtyYXRlPTFdIFxuICAgICAqIEBtZW1iZXJvZiBTaGFyZUFkXG4gICAgICovXG4gICAgcHVibGljIHN0YXRpYyBSYW5kb21KdW1wKHJhdGU6IG51bWJlciA9IDEpIFxuICAgIHtcbiAgICAgICAgY29uc29sZS5sb2coXCLpmo/mnLrot7PovawscmF0Ze+8mlwiICsgcmF0ZSk7XG4gICAgICAgIGlmIChyYXRlID4gMSkge1xuICAgICAgICAgICAgcmF0ZSA9IHJhdGUgLyAxMDA7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHJkID0gTWF0aC5yYW5kb20oKTtcbiAgICAgICAgaWYgKHJkIDw9IHJhdGUpIHtcbiAgICAgICAgICAgIHZhciBhZExvY2F0aW9uSUQgPSBTaGFyZUFkLkxvb3BBZExvY2F0aW9uSUQ7XG4gICAgICAgICAgICB2YXIgTG9jYXRpb25zID0gXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgU2hhcmVBZC5Mb29wQWRMb2NhdGlvbklELCBcbiAgICAgICAgICAgICAgICBTaGFyZUFkLkluc2VydEFkTG9jYXRpb25JRCwgXG4gICAgICAgICAgICAgICAgU2hhcmVBZC5CYW5uZXJBZExvY2F0aW9uSUQsXG4gICAgICAgICAgICAgICAgU2hhcmVBZC5BbmlBZExvY2F0aW9uSUQsXG4gICAgICAgICAgICBdXG4gICAgICAgICAgICBpZihTaGFyZUFkLlVzZVJhbmRvbUFkUG9zKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGZvcih2YXIgaT0wO2kgPCBTaGFyZUFkLkFkTG9jYXRpb25pZHMubGVuZ3RoOysraSlcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIExvY2F0aW9ucy5wdXNoKFNoYXJlQWQuQWRMb2NhdGlvbmlkc1tpXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYWRMb2NhdGlvbklEID0gTG9jYXRpb25zW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIExvY2F0aW9ucy5sZW5ndGgpXVxuICAgICAgICAgICAgdmFyIGRhdGFzID0gU2hhcmVBZC5nZXRBRFZzKGFkTG9jYXRpb25JRCwgZnVuY3Rpb24gKGRhdGFzOiBBcnJheTxhbnk+KSB7XG4gICAgICAgICAgICAgICAgaWYgKGRhdGFzKSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCByZCA9IE1hdGguZmxvb3IoZGF0YXMubGVuZ3RoICogTWF0aC5yYW5kb20oKSk7XG4gICAgICAgICAgICAgICAgICAgIGxldCBkYXRhID0gZGF0YXNbcmRdO1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIui3s+i9rOa4uOaIj++8miBcIiArIGRhdGEudGl0bGUpO1xuICAgICAgICAgICAgICAgICAgICBXWEFQSS5uYXZpZ2F0ZVRvTWluaVByb2dyYW0oZGF0YS5hcHBpZCwgZGF0YS51cmwsIChyZXMpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi6Lez6L2s5oiQ5YqfXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICBTaGFyZUFkLnJlcG9ydFVzZXJDbGljayhkYXRhLmFwcGlkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIEFMRC5hbGRTZW5kUmVwb3J0QWRDbGlja1N1Y2Nlc3MoZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgIH0sIChyZXMpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi6Lez6L2s5aSx6LSlXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5kaXNwYXRjaChFdmVudERlZi5BRF9PblNoYXJlQWRGYWlsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXMuZXJyTXNnID09IFwibmF2aWdhdGVUb01pbmlQcm9ncmFtOmZhaWwgY2FuY2VsXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIueUqOaIt+WPlua2iOi3s+i9rFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBBTEQuYWxkU2VuZFJlcG9ydEFkQ2xpY2tGYWlsKGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LCAocmVzKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIui3s+i9rOWujOaIkFwiKVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCB0cnVlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgaXNOZWVkU2hvd0FkKCkgOiBib29sZWFuXG4gICAge1xuICAgICAgICBpZigwID09IEFwcFN3aXRjaENvbmZpZy5nZXRJbnN0YW5jZSgpLmdldEFwcFN3aXRjaERhdGEoKS5hZFN3aXRjaClcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgaWYoTGF5YS5Ccm93c2VyLm9uUUdNaW5pR2FtZSlcbiAgICAgICAge1xuICAgICAgICAgICAgaWYoQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLm9wcG9jZmcub3Bwb3ZlcnNpb25zICE9IEFwcENvbmZpZy5WZXJzaW9ucylcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdmFyIG1haWxpYW5nID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLm1haWxpYW5nO1xuICAgICAgICB2YXIgbWFpbGlhbmdsaXN0ID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLm1haWxpYW5nbGlzdDtcbiAgICAgICAgdmFyIG1haWxpYW5nc2NlbmVsaXN0ID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLm1haWxpYW5nU2NlbmVMaXN0O1xuICAgICAgICBpZigxID09IG1haWxpYW5nKVxuICAgICAgICB7XG4gICAgICAgICAgICB2YXIgZmxhZyA6IG51bWJlciA9IG51bGw7XG4gICAgICAgICAgICB2YXIgc2NlbmUgOiBudW1iZXIgPSBudWxsO1xuICAgICAgICAgICAgaWYoTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgZmxhZyA9IFdYQVBJLmdldExhdW5jaE9wdGlvbnNTeW5jKCkucXVlcnlbJ2NoaWQnXTtcbiAgICAgICAgICAgICAgICBzY2VuZSAgPSBXWEFQSS5nZXRMYXVuY2hPcHRpb25zU3luYygpLnNjZW5lOyAgICAgICAgICAgICBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYoTGF5YS5Ccm93c2VyLm9uUVFNaW5pR2FtZSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBmbGFnICA9IFFRTWluaUdhbWVBUEkuZ2V0TGF1bmNoT3B0aW9uc1N5bmMoKS5xdWVyeVsnY2hpZCddO1xuICAgICAgICAgICAgICAgIHNjZW5lICA9IFFRTWluaUdhbWVBUEkuZ2V0TGF1bmNoT3B0aW9uc1N5bmMoKS5zY2VuZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmKG51bGwgIT0gZmxhZyAmJiBudWxsICE9IG1haWxpYW5nbGlzdCAmJiBtYWlsaWFuZ2xpc3QubGVuZ3RoID4gMClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBmb3IodmFyIGk9MDtpIDwgbWFpbGlhbmdsaXN0Lmxlbmd0aDsrK2kpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBpZihmbGFnID09IG1haWxpYW5nbGlzdFtpXSlcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYobnVsbCAhPSBzY2VuZSAmJiBudWxsICE9IG1haWxpYW5nc2NlbmVsaXN0ICYmIG1haWxpYW5nc2NlbmVsaXN0Lmxlbmd0aCA+IDApXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgZm9yKHZhciBpPTA7aSA8IG1haWxpYW5nc2NlbmVsaXN0Lmxlbmd0aDsrK2kpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBpZihzY2VuZSA9PSBtYWlsaWFuZ3NjZW5lbGlzdFtpXSlcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSAgIFxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgc29ydERhdGFzKGRhdGFzOiBhbnkpOiBhbnkgXG4gICAge1xuICAgICAgICBpZihudWxsID09IGRhdGFzIHx8IDAgPT0gZGF0YXMubGVuZ3RoKVxuICAgICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICB2YXIgZGF0YURpYzogeyBbYXBwaWQ6IHN0cmluZ106IGFueVtdIH0gPSB7fTtcbiAgICAgICAgdmFyIGRhdGFBcnJheTogYW55W10gPSBuZXcgQXJyYXkoKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkYXRhcy5sZW5ndGg7ICsraSkgIHtcbiAgICAgICAgICAgIHZhciBkYXRhID0gZGF0YXNbaV07XG4gICAgICAgICAgICBpZiAoZGF0YURpY1tkYXRhLmFwcGlkXSA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgZGF0YURpY1tkYXRhLmFwcGlkXSA9IG5ldyBBcnJheSgpO1xuICAgICAgICAgICAgICAgIGRhdGFEaWNbZGF0YS5hcHBpZF0ucHVzaChkYXRhKTtcbiAgICAgICAgICAgICAgICBkYXRhQXJyYXkucHVzaChkYXRhRGljW2RhdGEuYXBwaWRdKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZGF0YURpY1tkYXRhLmFwcGlkXS5wdXNoKGRhdGEpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8v5LuO5aSn5Yiw5bCP5o6S5bqPXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YUFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBmb3IgKGxldCBqID0gaSArIDE7IGogPCBkYXRhQXJyYXkubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICBpZiAoZGF0YUFycmF5W2ldLmxlbmd0aCA8IGRhdGFBcnJheVtqXS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGQgPSBkYXRhQXJyYXlbal07XG4gICAgICAgICAgICAgICAgICAgIGRhdGFBcnJheVtqXSA9IGRhdGFBcnJheVtpXTtcbiAgICAgICAgICAgICAgICAgICAgZGF0YUFycmF5W2ldID0gZDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy/ph43mlrDliIbnu4RcbiAgICAgICAgdmFyIGdyb3VwQXJyYXk6IGFueVtdID0gbmV3IEFycmF5KCk7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YUFycmF5WzBdLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBncm91cEFycmF5W2ldID0gbmV3IEFycmF5KCk7XG4gICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IGRhdGFBcnJheS5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgICAgIGlmIChkYXRhQXJyYXlbal0ubGVuZ3RoID4gaSkge1xuICAgICAgICAgICAgICAgICAgICBncm91cEFycmF5W2ldLnB1c2goZGF0YUFycmF5W2pdW2ldKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyAvL+e7hOWGheaJk+S5sSAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gZ3JvdXBBcnJheVtpXS5zb3J0KCgpID0+IHsgcmV0dXJuIDAuNSAtIE1hdGgucmFuZG9tKCkgfSlcbiAgICAgICAgfVxuICAgICAgICAvL+aJk+S5seWIhue7hFxuICAgICAgICAvLyBncm91cEFycmF5LnNvcnQoKCkgPT4geyByZXR1cm4gMC41IC0gTWF0aC5yYW5kb20oKSB9KTtcbiAgICAgICAgdmFyIHJlczogYW55W10gPSBuZXcgQXJyYXkoKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBncm91cEFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IGdyb3VwQXJyYXlbaV0ubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICByZXMucHVzaChncm91cEFycmF5W2ldW2pdKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXM7XG4gICAgfVxufSIsImltcG9ydCBTaGFyZUFkIGZyb20gXCIuLi9TaGFyZUFkXCI7XG5pbXBvcnQgV1hBUEkgZnJvbSBcIi4uLy4uL1dYQVBJXCI7XG5pbXBvcnQgQUxEIGZyb20gXCIuLi8uLi9BTERcIjtcbmltcG9ydCBFdmVudE1nciBmcm9tIFwiLi4vLi4vRXZlbnQvRXZlbnRNZ3JcIjtcbmltcG9ydCB7IEV2ZW50RGVmIH0gZnJvbSBcIi4uLy4uL0V2ZW50L0V2ZW50RGVmXCI7XG5pbXBvcnQgQXBwU3dpdGNoQ29uZmlnIGZyb20gXCIuLi8uLi9Db25maWcvQXBwU3dpdGNoQ29uZmlnXCI7XG5pbXBvcnQgT1BQT0FQSSBmcm9tIFwiLi4vLi4vT1BQT0FQSVwiO1xuaW1wb3J0IFFRTWluaUdhbWVBUEkgZnJvbSBcIi4uLy4uL1FRTWluaUdhbWVBUElcIjtcbmltcG9ydCBJVmlld1N0YXRlTGlzdGVuZXIgZnJvbSBcIi4uLy4uL1ZpZXcvSVZpZXdTdGF0ZUxpc3RlbmVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJhbm5lckFkVmlldyBleHRlbmRzIExheWEuU2NyaXB0IGltcGxlbWVudHMgSVZpZXdTdGF0ZUxpc3RlbmVyXG57XG4gICAgcHVibGljIEFkUG9zSUQgOiBudW1iZXIgPSBTaGFyZUFkLkJhbm5lckFkTG9jYXRpb25JRDtcbiAgICBwcm90ZWN0ZWQgX2Rpc3BsYXlTcCA6IExheWEuU3ByaXRlO1xuICAgIHByb3RlY3RlZCBfZGF0YSA6IGFueSA9IG51bGw7XG5cbiAgICBwdWJsaWMgV1hCYW5uZXJXaWR0aCA6IG51bWJlcjtcbiAgICBwcm90ZWN0ZWQgX3d4QmFubmVyIDogYW55ID0gbnVsbDtcblxuICAgIHByb3RlY3RlZCBfb25Mb2FkIDogRnVuY3Rpb24gPSBudWxsO1xuICAgIHByb3RlY3RlZCBfb25FcnJvciA6IEZ1bmN0aW9uID0gbnVsbDtcbiAgICBwcm90ZWN0ZWQgX29uUmVzaXplIDogRnVuY3Rpb24gPSBudWxsO1xuXG4gICAgb25Bd2FrZSgpXG4gICAge1xuICAgICAgICB0aGlzLl9kaXNwbGF5U3AgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiRGlzcGxheVwiKSBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgaWYobnVsbCA9PSB0aGlzLl9kaXNwbGF5U3ApXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuX2Rpc3BsYXlTcCA9IHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgb25FbmFibGUoKTogdm9pZCBcbiAgICB7XG4gICAgICAgIHRoaXMuX2Rpc3BsYXlTcC5vbihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5vblNwQ2xpY2spO1xuICAgICAgICB2YXIgYmFubmVyID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLmJhbm5lcjtcbiAgICAgICAgaWYoMCA9PSBiYW5uZXIpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMucmVmcmVzaEJhbm5lckRpcygpO1xuICAgICAgICAgICAgbGV0IGJhbm5lclJlY3JlYXRlVGltZSA9IEFwcFN3aXRjaENvbmZpZy5nZXRJbnN0YW5jZSgpLmdldEFwcFN3aXRjaERhdGEoKS5iYW5uZXJSZWNyZWF0ZVRpbWU7XG4gICAgICAgICAgICBMYXlhLnRpbWVyLmxvb3AoYmFubmVyUmVjcmVhdGVUaW1lICogMTAwMCx0aGlzLHRoaXMucmVmcmVzaEJhbm5lckRpcyk7XG4gICAgICAgICAgICBcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICgxID09IGJhbm5lcilcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5yZWZyZXNoV1hCYW5uZXIoKTtcbiAgICAgICAgICAgIGxldCBiYW5uZXJSZWNyZWF0ZVRpbWUgPSBBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkuYmFubmVyUmVjcmVhdGVUaW1lO1xuICAgICAgICAgICAgTGF5YS50aW1lci5sb29wKGJhbm5lclJlY3JlYXRlVGltZSAqIDEwMDAsdGhpcyx0aGlzLnJlZnJlc2hXWEJhbm5lcik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBvbkRpc2FibGUoKTogdm9pZCBcbiAgICB7XG4gICAgICAgIHRoaXMuX2Rpc3BsYXlTcC5vZmYoTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25TcENsaWNrKTtcbiAgICAgICAgdGhpcy5jbGVhcldYQmFuZXIoKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgcmVmcmVzaEJhbm5lckRpcygpXG4gICAge1xuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgIFNoYXJlQWQuZ2V0QURWcyh0aGlzLkFkUG9zSUQsKGRhdGFzKT0+XG4gICAgICAgIHtcbiAgICAgICAgICAgIGlmKGRhdGFzICYmIGRhdGFzLmxlbmd0aCA+IDApXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdmFyIGRhdGEgPSBkYXRhc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBkYXRhcy5sZW5ndGgpXTtcblxuICAgICAgICAgICAgICAgIHNlbGYuX2Rpc3BsYXlTcC5sb2FkSW1hZ2UoZGF0YS5sb2dvLExheWEuSGFuZGxlci5jcmVhdGUoc2VsZixmdW5jdGlvbigpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBpZighc2VsZi5fZGlzcGxheVNwLmRlc3Ryb3llZClcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5fZGlzcGxheVNwLndpZHRoID0gNzUwO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5fZGlzcGxheVNwLmhlaWdodCA9IDI1NjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICBzZWxmLl9kYXRhID0gZGF0YTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxmYWxzZSlcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgb25TcENsaWNrKClcbiAgICB7XG4gICAgICAgIHZhciBkYXRhID0gdGhpcy5fZGF0YTtcbiAgICAgICAgaWYoZGF0YSlcbiAgICAgICAge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCLot7PovazmuLjmiI/vvJogXCIgKyBkYXRhLnRpdGxlKTtcbiAgICAgICAgICAgIGlmKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIFdYQVBJLm5hdmlnYXRlVG9NaW5pUHJvZ3JhbShkYXRhLmFwcGlkLGRhdGEudXJsLChyZXMpPT5cbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi6Lez6L2s5oiQ5YqfXCIpXG4gICAgICAgICAgICAgICAgICAgIFNoYXJlQWQucmVwb3J0VXNlckNsaWNrKGRhdGEuYXBwaWQpO1xuICAgICAgICAgICAgICAgICAgICBBTEQuYWxkU2VuZFJlcG9ydEFkQ2xpY2tTdWNjZXNzKGRhdGEpO1xuICAgICAgICAgICAgICAgIH0sKHJlcyk9PlxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLot7PovazlpLHotKVcIilcbiAgICAgICAgICAgICAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UuZGlzcGF0Y2goRXZlbnREZWYuQURfT25TaGFyZUFkRmFpbCk7XG4gICAgICAgICAgICAgICAgICAgIGlmKHJlcy5lcnJNc2cgPT0gXCJuYXZpZ2F0ZVRvTWluaVByb2dyYW06ZmFpbCBjYW5jZWxcIilcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLnlKjmiLflj5bmtojot7PovaxcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICBBTEQuYWxkU2VuZFJlcG9ydEFkQ2xpY2tGYWlsKGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSwocmVzKT0+XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIui3s+i9rOWujOaIkFwiKVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoTGF5YS5Ccm93c2VyLm9uUUdNaW5pR2FtZSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBPUFBPQVBJLm5hdmlnYXRlVG9NaW5pUHJvZ3JhbShkYXRhLmFwcGlkLGRhdGEudGl0bGUsZGF0YS51cmwsKHJlcyk9PlxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLot7PovazmiJDlip9cIilcbiAgICAgICAgICAgICAgICAgICAgU2hhcmVBZC5yZXBvcnRVc2VyQ2xpY2soZGF0YS5hcHBpZCk7XG4gICAgICAgICAgICAgICAgfSwocmVzKT0+XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIui3s+i9rOWksei0pVwiKVxuICAgICAgICAgICAgICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5kaXNwYXRjaChFdmVudERlZi5BRF9PblNoYXJlQWRGYWlsKTtcbiAgICAgICAgICAgICAgICB9LChyZXMpPT5cbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi6Lez6L2s5a6M5oiQXCIpXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChMYXlhLkJyb3dzZXIub25RUU1pbmlHYW1lKSAgLy9xceWwj+a4uOaIj1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIFFRTWluaUdhbWVBUEkubmF2aWdhdGVUb01pbmlQcm9ncmFtKGRhdGEuYXBwaWQsZGF0YS51cmwsKHJlcyk9PlxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLot7PovazmiJDlip9cIilcbiAgICAgICAgICAgICAgICAgICAgU2hhcmVBZC5yZXBvcnRVc2VyQ2xpY2soZGF0YS5hcHBpZCk7XG4gICAgICAgICAgICAgICAgfSwocmVzKT0+XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIui3s+i9rOWksei0pVwiKVxuICAgICAgICAgICAgICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5kaXNwYXRjaChFdmVudERlZi5BRF9PblNoYXJlQWRGYWlsKTtcbiAgICAgICAgICAgICAgICB9LChyZXMpPT5cbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi6Lez6L2s5a6M5oiQXCIpXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgcmVmcmVzaFdYQmFubmVyKClcbiAgICB7XG4gICAgICAgIGlmKCghTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUgJiYgIUxheWEuQnJvd3Nlci5vblFRTWluaUdhbWUpXG4gICAgICAgICAgICB8fCAhKHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGUpLnZpc2libGUpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRoaXMuY2xlYXJXWEJhbmVyKCk7XG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgICAgbGV0IHN5c0luZm8gPSBudWxsO1xuICAgICAgICBpZihMYXlhLkJyb3dzZXIub25NaW5pR2FtZSlcbiAgICAgICAge1xuICAgICAgICAgICAgc3lzSW5mbyA9IExheWEuQnJvd3Nlci53aW5kb3dbXCJ3eFwiXS5nZXRTeXN0ZW1JbmZvU3luYygpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKExheWEuQnJvd3Nlci5vblFRTWluaUdhbWUpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHN5c0luZm8gPSBMYXlhLkJyb3dzZXIud2luZG93W1wicXFcIl0uZ2V0U3lzdGVtSW5mb1N5bmMoKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgc3cgPSBzeXNJbmZvLnNjcmVlbldpZHRoO1xuICAgICAgICB2YXIgc2ggPSBzeXNJbmZvLnNjcmVlbkhlaWdodDtcbiAgICAgICAgdmFyIHBvcyA9IHRoaXMuX2Rpc3BsYXlTcC5sb2NhbFRvR2xvYmFsKG5ldyBMYXlhLlBvaW50KDAsMCkpXG5cbiAgICAgICAgdmFyIGxlZnQgPSBwb3MueCAvIExheWEuc3RhZ2Uud2lkdGggKiBzdztcbiAgICAgICAgdmFyIHRvcCA9IHBvcy55IC8gTGF5YS5zdGFnZS5oZWlnaHQgKiBzaDtcbiAgICAgICAgdmFyIHdpZHRoID0gdGhpcy5XWEJhbm5lcldpZHRoID8gdGhpcy5XWEJhbm5lcldpZHRoIC8gTGF5YS5zdGFnZS53aWR0aCAqIHN3IDogc3c7XG5cbiAgICAgICAgaWYoTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGxldCByZWNyZWF0ZUJhbm5lcklETGlzdCA9IEFwcFN3aXRjaENvbmZpZy5nZXRJbnN0YW5jZSgpLmdldEFwcFN3aXRjaERhdGEoKS5yZWNyZWF0ZUJhbm5lcklETGlzdFxuICAgICAgICAgICAgbGV0IGJhbm5lckFkVW5pdElkID0gcmVjcmVhdGVCYW5uZXJJRExpc3RcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiByZWNyZWF0ZUJhbm5lcklETGlzdC5sZW5ndGgpXG4gICAgICAgICAgICBdXG4gICAgICAgICAgICBpZihudWxsID09IGJhbm5lckFkVW5pdElkKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGJhbm5lckFkVW5pdElkID0gV1hBUEkuYmFubmVyQWRVbml0SWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZWxmLl93eEJhbm5lciA9IExheWEuQnJvd3Nlci53aW5kb3dbXCJ3eFwiXS5jcmVhdGVCYW5uZXJBZChcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGFkVW5pdElkIDogYmFubmVyQWRVbml0SWQsXG4gICAgICAgICAgICAgICAgICAgIGFkSW50ZXJ2YWxzIDogMzAsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlIDogXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6bGVmdCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvcDp0b3AsXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogd2lkdGgsXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIHNlbGYuX3d4QmFubmVyLm9uTG9hZCgocmVzKSA9PiAge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiV1hCYW5uZXLlub/lkYog5Yqg6L295a6M5oiQXCIpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgc2VsZi5fd3hCYW5uZXIub25FcnJvcigoZXJyKSA9PiAge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiV1hCYW5uZXLlub/lkYog5Yqg6L295aSx6LSlXCIpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICAgICAgICAgc2VsZi5yZWZyZXNoQmFubmVyRGlzKCk7XG4gICAgICAgICAgICAgICAgc2VsZi5jbGVhcldYQmFuZXIoKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBzZWxmLl93eEJhbm5lci5vblJlc2l6ZShyZXMgPT4ge1xuXG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBzZWxmLl93eEJhbm5lci5zaG93KCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZihMYXlhLkJyb3dzZXIub25RUU1pbmlHYW1lKVxuICAgICAgICB7XG4gICAgICAgICAgICBsZXQgcmVjcmVhdGVCYW5uZXJJRExpc3QgPSBBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkucmVjcmVhdGVCYW5uZXJJRExpc3RcbiAgICAgICAgICAgIGxldCBiYW5uZXJBZFVuaXRJZCA9IHJlY3JlYXRlQmFubmVySURMaXN0XG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcmVjcmVhdGVCYW5uZXJJRExpc3QubGVuZ3RoKVxuICAgICAgICAgICAgXVxuICAgICAgICAgICAgaWYobnVsbCA9PSBiYW5uZXJBZFVuaXRJZClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBiYW5uZXJBZFVuaXRJZCA9IFFRTWluaUdhbWVBUEkuYmFubmVyQWRVbml0SWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZWxmLl93eEJhbm5lciA9IExheWEuQnJvd3Nlci53aW5kb3dbXCJxcVwiXS5jcmVhdGVCYW5uZXJBZChcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGFkVW5pdElkOiBiYW5uZXJBZFVuaXRJZCxcbiAgICAgICAgICAgICAgICAgICAgYWRJbnRlcnZhbHM6IDMwLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTpcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiBsZWZ0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogdG9wLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiB3aWR0aCxcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgaWYgKG51bGwgIT0gc2VsZi5fd3hCYW5uZXIpICB7XG4gICAgICAgICAgICAgICAgc2VsZi5fb25Mb2FkID0gKHJlcykgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIlFRQmFubmVy5bm/5ZGKIOWKoOi9veWujOaIkCA6IFwiLCBiYW5uZXJBZFVuaXRJZCk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuX3d4QmFubmVyLnNob3coKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc2VsZi5fd3hCYW5uZXIub25Mb2FkKHNlbGYuX29uTG9hZCk7XG4gICAgICAgICAgICAgICAgc2VsZi5fb25FcnJvciA9IChlcnIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJRUUJhbm5lcuW5v+WRiiDliqDovb3lpLHotKUgOiBcIiwgYmFubmVyQWRVbml0SWQpO1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICAgICAgICAgICAgICBzZWxmLnJlZnJlc2hCYW5uZXJEaXMoKTtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jbGVhcldYQmFuZXIoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc2VsZi5fd3hCYW5uZXIub25FcnJvcihzZWxmLl9vbkVycm9yKTtcbiAgICAgICAgICAgICAgICBzZWxmLl9vblJlc2l6ZSA9IChyZXMpID0+IHtcblxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBzZWxmLl93eEJhbm5lci5vblJlc2l6ZShzZWxmLl9vblJlc2l6ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlICB7XG4gICAgICAgICAgICAgICAgc2VsZi5yZWZyZXNoQmFubmVyRGlzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgcHVibGljIGNsZWFyV1hCYW5lcigpXG4gICAge1xuICAgICAgICBpZih0aGlzLl93eEJhbm5lcilcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5fd3hCYW5uZXIub2ZmTG9hZCh0aGlzLl9vbkxvYWQpO1xuICAgICAgICAgICAgdGhpcy5fd3hCYW5uZXIub2ZmRXJyb3IodGhpcy5fb25FcnJvcik7XG4gICAgICAgICAgICB0aGlzLl93eEJhbm5lci5vZmZSZXNpemUodGhpcy5fb25SZXNpemUpO1xuICAgICAgICAgICAgdGhpcy5fd3hCYW5uZXIuZGVzdHJveSgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3d4QmFubmVyID0gbnVsbDtcbiAgICB9XG5cbiAgICBwdWJsaWMgb25WaWV3U2hvdygpXG4gICAge1xuICAgICAgICB2YXIgYmFubmVyID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLmJhbm5lcjtcbiAgICAgICAgaWYgKDEgPT0gYmFubmVyICYmIG51bGwgPT0gdGhpcy5fd3hCYW5uZXIpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMucmVmcmVzaFdYQmFubmVyKCk7XG4gICAgICAgICAgICBsZXQgYmFubmVyUmVjcmVhdGVUaW1lID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLmJhbm5lclJlY3JlYXRlVGltZTtcbiAgICAgICAgICAgIExheWEudGltZXIubG9vcChiYW5uZXJSZWNyZWF0ZVRpbWUgKiAxMDAwLHRoaXMsdGhpcy5yZWZyZXNoV1hCYW5uZXIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2VcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5yZWZyZXNoQmFubmVyRGlzKCk7XG4gICAgICAgICAgICBsZXQgYmFubmVyUmVjcmVhdGVUaW1lID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLmJhbm5lclJlY3JlYXRlVGltZTtcbiAgICAgICAgICAgIExheWEudGltZXIubG9vcChiYW5uZXJSZWNyZWF0ZVRpbWUgKiAxMDAwLHRoaXMsdGhpcy5yZWZyZXNoQmFubmVyRGlzKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBvblZpZXdIaWRlKClcbiAgICB7XG4gICAgICAgIHRoaXMuY2xlYXJXWEJhbmVyKCk7XG4gICAgICAgIExheWEudGltZXIuY2xlYXJBbGwodGhpcyk7XG4gICAgfVxuXG4gICAgb25EZXN0cm95KClcbiAgICB7XG4gICAgICAgIHRoaXMuY2xlYXJXWEJhbmVyKCk7XG4gICAgICAgIExheWEudGltZXIuY2xlYXJBbGwodGhpcyk7XG4gICAgfVxufSIsImltcG9ydCBTaGFyZUFkIGZyb20gXCIuLi9TaGFyZUFkXCI7XG5pbXBvcnQgTG9vcEFkQm94IGZyb20gXCIuL0xvb3BBZEJveFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBIb3Jpem9udGFsTG9vcEFkVmlldyBleHRlbmRzIExheWEuU2NyaXB0IHtcbiAgICBwdWJsaWMgQWRQb3NJRDogbnVtYmVyID0gU2hhcmVBZC5Mb29wQWRMb2NhdGlvbklEO1xuICAgIHByb3RlY3RlZCBfbGlzdDogTGF5YS5MaXN0O1xuICAgIHByb3RlY3RlZCBfc2Nyb2xsRm9yd2FyZCA9IHRydWU7XG5cbiAgICBvbkF3YWtlKCkgIHtcbiAgICAgICAgdGhpcy5fbGlzdCA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJMaXN0XCIpIGFzIExheWEuTGlzdDtcbiAgICAgICAgdGhpcy5fbGlzdC5yZW5kZXJIYW5kbGVyID0gTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLm9uTGlzdFJlbmRlciwgbnVsbCwgZmFsc2UpXG4gICAgICAgIHRoaXMuX2xpc3QuaFNjcm9sbEJhclNraW4gPSBcIlwiO1xuICAgIH1cblxuICAgIG9uRW5hYmxlKCk6IHZvaWQge1xuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgIFNoYXJlQWQuZ2V0QURWcyh0aGlzLkFkUG9zSUQsIChkYXRhcykgPT4gIHtcbiAgICAgICAgICAgIGlmIChzZWxmLm93bmVyICYmICFzZWxmLm93bmVyLmRlc3Ryb3llZCkgIHtcbiAgICAgICAgICAgICAgICBpZiAoZGF0YXMgJiYgZGF0YXMubGVuZ3RoID4gMCAmJiBkYXRhcy5sZW5ndGggPCA1MCkgIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRlbXAgPSBbXVxuICAgICAgICAgICAgICAgICAgICB2YXIgY291bnRlciA9IDA7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgNTA7ICsraSkgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjb3VudGVyID49IGRhdGFzLmxlbmd0aCkgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3VudGVyID0gMDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXAucHVzaChkYXRhc1tjb3VudGVyXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICArK2NvdW50ZXI7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICB2YXIgZ3JvdXBMZW4gPSBkYXRhcy5sZW5ndGg7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGVtcC5sZW5ndGg7ICsraSkgXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBncm91cCA9IE1hdGguZmxvb3IoaSAvIGdyb3VwTGVuKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzdGFydEluZGV4ID0gZ3JvdXAgKiBncm91cExlbjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciByYW5kb21JbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGdyb3VwTGVuKSArIHN0YXJ0SW5kZXg7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgY3VyVmFsdWUgPSB0ZW1wW2ldO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJhbmRvbVZhbHVlID0gdGVtcFtyYW5kb21JbmRleF07XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZW1wW3JhbmRvbUluZGV4XSA9IGN1clZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGVtcFtpXSA9IHJhbmRvbVZhbHVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9saXN0LmFycmF5ID0gdGVtcDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZihkYXRhcyAmJmRhdGFzLmxlbmd0aCA+IDUwKXtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fbGlzdC5hcnJheSA9IGRhdGFzO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fbGlzdC5hcnJheSA9IGRhdGFzO1xuICAgICAgICAgICAgICAgICAgICAodGhpcy5vd25lciBhcyBMYXlhLlNwcml0ZSkudmlzaWJsZT1mYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIG9uRGlzYWJsZSgpOiB2b2lkIHtcblxuICAgIH1cblxuICAgIG9uVXBkYXRlKCkgIHtcbiAgICAgICAgaWYgKHRoaXMuX3Njcm9sbEZvcndhcmQpICB7XG4gICAgICAgICAgICB0aGlzLl9saXN0LnNjcm9sbEJhci52YWx1ZSArPSAxMDAgKiBMYXlhLnRpbWVyLmRlbHRhIC8gMTAwMDtcbiAgICAgICAgICAgIGlmICh0aGlzLl9saXN0LnNjcm9sbEJhci52YWx1ZSA+PSB0aGlzLl9saXN0LnNjcm9sbEJhci5tYXgpICB7XG4gICAgICAgICAgICAgICAgdGhpcy5fc2Nyb2xsRm9yd2FyZCA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgIHtcbiAgICAgICAgICAgIHRoaXMuX2xpc3Quc2Nyb2xsQmFyLnZhbHVlIC09IDEwMCAqIExheWEudGltZXIuZGVsdGEgLyAxMDAwO1xuICAgICAgICAgICAgaWYgKHRoaXMuX2xpc3Quc2Nyb2xsQmFyLnZhbHVlIDw9IDApICB7XG4gICAgICAgICAgICAgICAgdGhpcy5fc2Nyb2xsRm9yd2FyZCA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgb25MaXN0UmVuZGVyKGNlbGw6IExheWEuQm94LCBpbmRleDogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIHZhciBkYXRhID0gdGhpcy5fbGlzdC5hcnJheVtpbmRleF07XG4gICAgICAgIHZhciBsb29wQWRCb3g6IExvb3BBZEJveCA9IGNlbGwuZ2V0Q29tcG9uZW50KExvb3BBZEJveCk7XG4gICAgICAgIGxvb3BBZEJveC5zZXREYXRhKGRhdGEpO1xuICAgIH1cbn0iLCJpbXBvcnQgV1hBUEkgZnJvbSBcIi4uLy4uL1dYQVBJXCI7XG5pbXBvcnQgU2hhcmVBZCBmcm9tIFwiLi4vU2hhcmVBZFwiO1xuaW1wb3J0IEFMRCBmcm9tIFwiLi4vLi4vQUxEXCI7XG5pbXBvcnQgRXZlbnRNZ3IgZnJvbSBcIi4uLy4uL0V2ZW50L0V2ZW50TWdyXCI7XG5pbXBvcnQgeyBFdmVudERlZiB9IGZyb20gXCIuLi8uLi9FdmVudC9FdmVudERlZlwiO1xuaW1wb3J0IE9QUE9BUEkgZnJvbSBcIi4uLy4uL09QUE9BUElcIjtcbmltcG9ydCBRUU1pbmlHYW1lQVBJIGZyb20gXCIuLi8uLi9RUU1pbmlHYW1lQVBJXCI7XG5pbXBvcnQgVmlld01nciwgeyBWaWV3RGVmIH0gZnJvbSBcIi4uLy4uL01nci9WaWV3TWdyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExvb3BBZEJveCBleHRlbmRzIExheWEuU2NyaXB0IFxue1xuICAgIHByb3RlY3RlZCBfZGlzcGxheVNwIDogTGF5YS5TcHJpdGU7XG4gICAgcHJvdGVjdGVkIF9kaXNUZXh0IDogTGF5YS5UZXh0O1xuICAgIHByb3RlY3RlZCBfZGF0YSA6IGFueSA9IG51bGw7XG4gICAgcHJvdGVjdGVkIF9vcmlnaW5XIDogbnVtYmVyID0gMTUwO1xuICAgIHByb3RlY3RlZCBfb3JpZ2luSCA6IG51bWJlciA9IDE1MDtcbiAgICBwcm90ZWN0ZWQgX2ZvbnRTaXplID0gMjU7XG4gICAgXG5cbiAgICBvbkF3YWtlKClcbiAgICB7XG4gICAgICAgIHRoaXMuX2Rpc3BsYXlTcCA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJEaXNwbGF5XCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl9vcmlnaW5XID0gdGhpcy5fZGlzcGxheVNwLndpZHRoO1xuICAgICAgICB0aGlzLl9vcmlnaW5IID0gdGhpcy5fZGlzcGxheVNwLmhlaWdodDtcbiAgICAgICAgdGhpcy5fZGlzVGV4dCA9ICB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiVGl0ZWxUZXh0XCIpIGFzIExheWEuVGV4dDtcbiAgICAgICAgdGhpcy5fZGlzVGV4dC50ZXh0ID0gXCJcIjtcbiAgICAgICAgdGhpcy5fZm9udFNpemUgPSB0aGlzLl9kaXNUZXh0LmZvbnRTaXplO1xuICAgIH1cbiAgICBcbiAgICBvbkVuYWJsZSgpOiB2b2lkIFxuICAgIHtcbiAgICAgICAgdGhpcy5fZGlzcGxheVNwLm9uKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uU3BDbGljayk7XG4gICAgfVxuXG4gICAgb25EaXNhYmxlKCk6IHZvaWQgXG4gICAge1xuICAgICAgICB0aGlzLl9kaXNwbGF5U3Aub2ZmKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uU3BDbGljayk7XG4gICAgfVxuXG4gICAgcHVibGljIHNldERhdGEoZGF0YSlcbiAgICB7XG4gICAgICAgIGlmKGRhdGEpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgICAgICAgIHRoaXMuX2Rpc3BsYXlTcC5sb2FkSW1hZ2UoZGF0YS5sb2dvLExheWEuSGFuZGxlci5jcmVhdGUodGhpcyxmdW5jdGlvbigpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaWYoIXNlbGYuX2Rpc3BsYXlTcC5kZXN0cm95ZWQpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxmLl9kaXNwbGF5U3Aud2lkdGggPSBzZWxmLl9vcmlnaW5XO1xuICAgICAgICAgICAgICAgICAgICBzZWxmLl9kaXNwbGF5U3AuaGVpZ2h0ID0gc2VsZi5fb3JpZ2luSDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICB2YXIgc3RyID0gU3RyaW5nKGRhdGEudGl0bGUpO1xuICAgICAgICAgICAgdmFyIG51bSA9IHN0ci5sZW5ndGg7XG4gICAgICAgICAgICBudW0gPSBNYXRoLm1heCg1LG51bSk7XG4gICAgICAgICAgICB2YXIgZm9udFNpemUgPSBNYXRoLmZsb29yKCg1IC8gbnVtKSAqIHRoaXMuX2ZvbnRTaXplKTtcbiAgICAgICAgICAgIC8vIHRoaXMuX2Rpc1RleHQuZm9udFNpemUgPSBmb250U2l6ZTtcbiAgICAgICAgICAgIHRoaXMuX2Rpc1RleHQudGV4dCA9IHN0cjtcbiAgICAgICAgICAgIHRoaXMuX2RhdGEgPSBkYXRhO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uU3BDbGljaygpXG4gICAge1xuICAgICAgICB2YXIgZGF0YSA9IHRoaXMuX2RhdGE7XG4gICAgICAgIGlmKGRhdGEpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi6Lez6L2s5ri45oiP77yaIFwiICsgZGF0YS50aXRsZSk7XG4gICAgICAgICAgICBpZihMYXlhLkJyb3dzZXIub25NaW5pR2FtZSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBXWEFQSS5uYXZpZ2F0ZVRvTWluaVByb2dyYW0oZGF0YS5hcHBpZCxkYXRhLnVybCwocmVzKT0+XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIui3s+i9rOaIkOWKn1wiKVxuICAgICAgICAgICAgICAgICAgICBTaGFyZUFkLnJlcG9ydFVzZXJDbGljayhkYXRhLmFwcGlkKTtcbiAgICAgICAgICAgICAgICAgICAgQUxELmFsZFNlbmRSZXBvcnRBZENsaWNrU3VjY2VzcyhkYXRhKTtcbiAgICAgICAgICAgICAgICB9LChyZXMpPT5cbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi6Lez6L2s5aSx6LSlXCIpXG4gICAgICAgICAgICAgICAgICAgIEV2ZW50TWdyLmluc3RhbmNlLmRpc3BhdGNoKEV2ZW50RGVmLkFEX09uU2hhcmVBZEZhaWwpO1xuICAgICAgICAgICAgICAgICAgICBpZihyZXMuZXJyTXNnID09IFwibmF2aWdhdGVUb01pbmlQcm9ncmFtOmZhaWwgY2FuY2VsXCIpXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi55So5oi35Y+W5raI6Lez6L2sXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UuZGlzcGF0Y2goRXZlbnREZWYuQURfT25TaGFyZUFkRmFpbF9Vc2VDYW5jZWwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgQUxELmFsZFNlbmRSZXBvcnRBZENsaWNrRmFpbChkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sKHJlcyk9PlxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLot7PovazlrozmiJBcIilcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKExheWEuQnJvd3Nlci5vblFHTWluaUdhbWUpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgT1BQT0FQSS5uYXZpZ2F0ZVRvTWluaVByb2dyYW0oZGF0YS5hcHBpZCxkYXRhLnRpdGxlLGRhdGEudXJsLChyZXMpPT5cbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi6Lez6L2s5oiQ5YqfXCIpXG4gICAgICAgICAgICAgICAgICAgIFNoYXJlQWQucmVwb3J0VXNlckNsaWNrKGRhdGEuYXBwaWQpO1xuICAgICAgICAgICAgICAgIH0sKHJlcyk9PlxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLot7PovazlpLHotKVcIilcbiAgICAgICAgICAgICAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UuZGlzcGF0Y2goRXZlbnREZWYuQURfT25TaGFyZUFkRmFpbCk7XG4gICAgICAgICAgICAgICAgfSwocmVzKT0+XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIui3s+i9rOWujOaIkFwiKVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoTGF5YS5Ccm93c2VyLm9uUVFNaW5pR2FtZSkgLy9xceWwj+a4uOaIj1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIFFRTWluaUdhbWVBUEkubmF2aWdhdGVUb01pbmlQcm9ncmFtKGRhdGEuYXBwaWQsZGF0YS51cmwsKHJlcyk9PlxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLot7PovazmiJDlip9cIilcbiAgICAgICAgICAgICAgICAgICAgU2hhcmVBZC5yZXBvcnRVc2VyQ2xpY2soZGF0YS5hcHBpZCk7XG4gICAgICAgICAgICAgICAgfSwocmVzKT0+XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIui3s+i9rOWksei0pVwiKVxuICAgICAgICAgICAgICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5kaXNwYXRjaChFdmVudERlZi5BRF9PblNoYXJlQWRGYWlsKTtcbiAgICAgICAgICAgICAgICB9LChyZXMpPT5cbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi6Lez6L2s5a6M5oiQXCIpXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59IiwiaW1wb3J0IFNoYXJlQWQgZnJvbSBcIi4uL1NoYXJlQWRcIjtcbmltcG9ydCBMb29wQWRCb3ggZnJvbSBcIi4vTG9vcEFkQm94XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExvb3BBZFZpZXcgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XG4gICAgcHVibGljIEFkUG9zSUQ6IG51bWJlciA9IFNoYXJlQWQuTG9vcEFkTG9jYXRpb25JRDtcbiAgICBwcm90ZWN0ZWQgX2xpc3Q6IExheWEuTGlzdDtcbiAgICBwcm90ZWN0ZWQgX3Njcm9sbEZvcndhcmQgPSB0cnVlO1xuXG4gICAgb25Bd2FrZSgpICB7XG4gICAgICAgIHRoaXMuX2xpc3QgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiTGlzdFwiKSBhcyBMYXlhLkxpc3Q7XG4gICAgICAgIHRoaXMuX2xpc3QucmVuZGVySGFuZGxlciA9IExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5vbkxpc3RSZW5kZXIsIG51bGwsIGZhbHNlKVxuICAgICAgICB0aGlzLl9saXN0LnZTY3JvbGxCYXJTa2luID0gXCJcIjtcbiAgICB9XG5cbiAgICBvbkVuYWJsZSgpOiB2b2lkIHtcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICBTaGFyZUFkLmdldEFEVnModGhpcy5BZFBvc0lELCAoZGF0YXMpID0+IHtcbiAgICAgICAgICAgIGlmIChzZWxmLm93bmVyICYmICF0aGlzLm93bmVyLmRlc3Ryb3llZCkge1xuICAgICAgICAgICAgICAgIGlmIChkYXRhcyAmJiBkYXRhcy5sZW5ndGggPiAwICYmIGRhdGFzLmxlbmd0aCA8IDUwKSB7XG4gICAgICAgICAgICAgICAgICAgICh0aGlzLm93bmVyIGFzIExheWEuU3ByaXRlKS52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRlbXAgPSBbXVxuICAgICAgICAgICAgICAgICAgICB2YXIgY291bnRlciA9IDA7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgNTA7ICsraSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvdW50ZXIgPj0gZGF0YXMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY291bnRlciA9IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZW1wLnB1c2goZGF0YXNbY291bnRlcl0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgKytjb3VudGVyO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgdmFyIGdyb3VwTGVuID0gZGF0YXMubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRlbXAubGVuZ3RoOyArK2kpIFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZ3JvdXAgPSBNYXRoLmZsb29yKGkgLyBncm91cExlbik7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgc3RhcnRJbmRleCA9IGdyb3VwICogZ3JvdXBMZW47XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcmFuZG9tSW5kZXggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBncm91cExlbikgKyBzdGFydEluZGV4O1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGN1clZhbHVlID0gdGVtcFtpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciByYW5kb21WYWx1ZSA9IHRlbXBbcmFuZG9tSW5kZXhdO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGVtcFtyYW5kb21JbmRleF0gPSBjdXJWYWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBbaV0gPSByYW5kb21WYWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2xpc3QuYXJyYXkgPSB0ZW1wO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmKGRhdGFzICYmZGF0YXMubGVuZ3RoID4gNTApe1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9saXN0LmFycmF5ID0gZGF0YXM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9saXN0LmFycmF5ID0gZGF0YXM7XG4gICAgICAgICAgICAgICAgICAgICh0aGlzLm93bmVyIGFzIExheWEuU3ByaXRlKS52aXNpYmxlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBvbkRpc2FibGUoKTogdm9pZCB7XG5cbiAgICB9XG5cbiAgICBvblVwZGF0ZSgpICB7XG4gICAgICAgIGlmICh0aGlzLl9zY3JvbGxGb3J3YXJkKSAge1xuICAgICAgICAgICAgdGhpcy5fbGlzdC5zY3JvbGxCYXIudmFsdWUgKz0gMTAwICogTGF5YS50aW1lci5kZWx0YSAvIDE1MDA7XG4gICAgICAgICAgICBpZiAodGhpcy5fbGlzdC5zY3JvbGxCYXIudmFsdWUgPj0gdGhpcy5fbGlzdC5zY3JvbGxCYXIubWF4KSAge1xuICAgICAgICAgICAgICAgIHRoaXMuX3Njcm9sbEZvcndhcmQgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlICB7XG4gICAgICAgICAgICB0aGlzLl9saXN0LnNjcm9sbEJhci52YWx1ZSAtPSAxMDAgKiBMYXlhLnRpbWVyLmRlbHRhIC8gMTUwMDtcbiAgICAgICAgICAgIGlmICh0aGlzLl9saXN0LnNjcm9sbEJhci52YWx1ZSA8PSAwKSAge1xuICAgICAgICAgICAgICAgIHRoaXMuX3Njcm9sbEZvcndhcmQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uTGlzdFJlbmRlcihjZWxsOiBMYXlhLkJveCwgaW5kZXg6IG51bWJlcik6IHZvaWQge1xuICAgICAgICB2YXIgZGF0YSA9IHRoaXMuX2xpc3QuYXJyYXlbaW5kZXhdO1xuICAgICAgICB2YXIgbG9vcEFkQm94OiBMb29wQWRCb3ggPSBjZWxsLmdldENvbXBvbmVudChMb29wQWRCb3gpO1xuICAgICAgICBsb29wQWRCb3guc2V0RGF0YShkYXRhKTtcbiAgICB9XG59IiwiaW1wb3J0IEFwcF93aG5wX0NvbmZpZyBmcm9tIFwiLi9BcHBDb25maWdcIjtcbmltcG9ydCBBcHBDb25maWcgZnJvbSBcIi4vQXBwQ29uZmlnXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRUQVBJXG57XG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBhZFVuaXRJZCA9IFwiXCIgICBcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IGJhbm5lckFkVW5pdElkID0gXCJcIiAgIFxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgSW5zQWRVbml0SWQgPSBcIlwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBfdGVtcGxhdGVJZCA9IFwiXCIgICAgICAgLy/liIbkuqvntKDmnZBpZFxuICAgIFxuICAgIHByaXZhdGUgc3RhdGljIHJlY29yZFJlczpzdHJpbmcgPSBcIlwiXG4gICAgcHJpdmF0ZSBzdGF0aWMgcmVjb3JkOmFueTtcblxuICAgIHByb3RlY3RlZCBzdGF0aWMgX2Jhbm5lciA6IGFueSA9IG51bGw7ICAgIFxuXG4gICAgcHVibGljIHN0YXRpYyB0dExvZ2luKG9uU3VjY2VzczogRnVuY3Rpb24sIG9uRmFpbDogRnVuY3Rpb24pIHtcbiAgICAgICAgaWYgKEFwcF93aG5wX0NvbmZpZy5vblRUTWluaUdhbWUpIHtcbiAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJ0dFwiXS5sb2dpbihcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGZvcmNlIDogZmFsc2UsICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogKHJlcykgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLnmbvpmYbmiJDlip8xXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGNvZGUgPSByZXMuY29kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKGNvZGUpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uU3VjY2Vzcyhjb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi55So5oi35rKh5pyJ55m76ZmG77yM6YeH55So5Li05pe2Y29kZVwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uRmFpbCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBmYWlsOigpPT57XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIueZu+mZhuWksei0pTFcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkZhaWwoKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgVFRBUEkuaW5pdFJlY29yZCgpOyAgICAgICBcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLea/gOWKseinhumikS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIHByb3RlY3RlZCBzdGF0aWMgX2lzUmVnUmV3YXJkZWRWaWRlb0FkRXZlbnQgPSBmYWxzZTtcbiAgICBwcm90ZWN0ZWQgc3RhdGljIF9vblJld2FyZGVkVmlkZW9BZEZhaWxlZDogRnVuY3Rpb24gPSBudWxsO1xuICAgIHByb3RlY3RlZCBzdGF0aWMgX29uUmV3YXJkZWRWaWRlb0FkQ2xvc2U6IEZ1bmN0aW9uID0gbnVsbDtcbiAgICBwcm90ZWN0ZWQgc3RhdGljIG9uUmV3YXJkZWRWaWRlb0FkTG9hZCgpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ+a/gOWKseinhumikSDlub/lkYrliqDovb3lrozmiJAnKVxuICAgIH1cbiAgICBwcm90ZWN0ZWQgc3RhdGljIG9uUmV3YXJkZWRWaWRlb0FkRXJyb3IoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCfmv4DlirHop4bpopEg5bm/5ZGK5Yqg6L295aSx6LSlJyArIGVycilcbiAgICAgICAgaWYgKFRUQVBJLl9vblJld2FyZGVkVmlkZW9BZEZhaWxlZCkge1xuICAgICAgICAgICAgVFRBUEkuX29uUmV3YXJkZWRWaWRlb0FkRmFpbGVkKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcHJvdGVjdGVkIHN0YXRpYyBvblJld2FyZGVkVmlkZW9BZENsb3NlKHJlcykge1xuICAgICAgICBpZiAoKHJlcyAmJiByZXMuaXNFbmRlZCkgfHwgcmVzID09IG51bGwpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCfmv4DlirHop4bpopEg5bey5a6M5pW06KeC55yLJylcbiAgICAgICAgICAgIGlmIChUVEFQSS5fb25SZXdhcmRlZFZpZGVvQWRDbG9zZSkge1xuICAgICAgICAgICAgICAgIFRUQVBJLl9vblJld2FyZGVkVmlkZW9BZENsb3NlKHRydWUpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygn5r+A5Yqx6KeG6aKRIOacquWujOaVtOingueciycpXG4gICAgICAgICAgICBpZiAoVFRBUEkuX29uUmV3YXJkZWRWaWRlb0FkQ2xvc2UpIHtcbiAgICAgICAgICAgICAgICBUVEFQSS5fb25SZXdhcmRlZFZpZGVvQWRDbG9zZShmYWxzZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBwcm90ZWN0ZWQgc3RhdGljIHJlZ1Jld2FyZGVkVmlkZW9BZEV2ZW50KHJld2FyZGVkVmlkZW9BZCkge1xuXG4gICAgICAgIHJld2FyZGVkVmlkZW9BZC5vbkxvYWQoVFRBUEkub25SZXdhcmRlZFZpZGVvQWRMb2FkKVxuICAgICAgICByZXdhcmRlZFZpZGVvQWQub25FcnJvcihUVEFQSS5vblJld2FyZGVkVmlkZW9BZEVycm9yKVxuICAgICAgICByZXdhcmRlZFZpZGVvQWQub25DbG9zZShUVEFQSS5vblJld2FyZGVkVmlkZW9BZENsb3NlKVxuICAgICAgICBUVEFQSS5faXNSZWdSZXdhcmRlZFZpZGVvQWRFdmVudCA9IHRydWU7XG4gICAgfVxuICAgIHB1YmxpYyBzdGF0aWMgc2hvd1Jld2FyZGVkVmlkZW9BZChvbkFkQ2xvc2U6IEZ1bmN0aW9uLCBvbkZhaWxlZDogRnVuY3Rpb24pIHtcbiAgICAgICAgaWYgKEFwcF93aG5wX0NvbmZpZy5vblRUTWluaUdhbWUpIHtcbiAgICAgICAgICAgIFRUQVBJLl9vblJld2FyZGVkVmlkZW9BZENsb3NlID0gb25BZENsb3NlO1xuICAgICAgICAgICAgVFRBUEkuX29uUmV3YXJkZWRWaWRlb0FkRmFpbGVkID0gb25GYWlsZWQ7XG5cbiAgICAgICAgICAgIHZhciByZXdhcmRlZFZpZGVvQWQgPSBMYXlhLkJyb3dzZXIud2luZG93W1widHRcIl0uY3JlYXRlUmV3YXJkZWRWaWRlb0FkKFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgYWRVbml0SWQ6IFRUQVBJLmFkVW5pdElkLFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIGlmICghVFRBUEkuX2lzUmVnUmV3YXJkZWRWaWRlb0FkRXZlbnQpIHtcbiAgICAgICAgICAgICAgICBUVEFQSS5yZWdSZXdhcmRlZFZpZGVvQWRFdmVudChyZXdhcmRlZFZpZGVvQWQpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXdhcmRlZFZpZGVvQWQubG9hZCgpLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgIHZhciBwcm9taXNlID0gcmV3YXJkZWRWaWRlb0FkLnNob3coKTtcbiAgICAgICAgICAgICAgICBwcm9taXNlLnRoZW4oKCkgPT4gY29uc29sZS5sb2coJ+a/gOWKseinhumikSDlub/lkYrmmL7npLrmiJDlip8nKSk7XG4gICAgICAgICAgICAgICAgcHJvbWlzZS5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJld2FyZGVkVmlkZW9BZC5sb2FkKClcbiAgICAgICAgICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHJld2FyZGVkVmlkZW9BZC5zaG93KCkpXG4gICAgICAgICAgICAgICAgICAgICAgICAuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn5r+A5Yqx6KeG6aKRIOW5v+WRiuaYvuekuuWksei0pScpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9uRmFpbGVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uRmFpbGVkKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+a/gOWKseinhumikSDlub/lkYrliqDovb3lpLHotKUnKVxuICAgICAgICAgICAgICAgIGlmIChvbkZhaWxlZCkge1xuICAgICAgICAgICAgICAgICAgICBvbkZhaWxlZCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBvbkFkQ2xvc2UodHJ1ZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLeWwj+a4uOaIj+i3s+i9rC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVRPRE9cbiAgICAvLyBwdWJsaWMgc3RhdGljIG5hdmlnYXRlVG9NaW5pUHJvZ3JhbShhcHBJZDogc3RyaW5nLCBwYXRoOiBzdHJpbmcsIG9uU3VjY2VzczogRnVuY3Rpb24sIG9uRmFpbDogRnVuY3Rpb24sIG9uQ29tcGxhdGU6IEZ1bmN0aW9uKSB7XG4gICAgLy8gICAgIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSkge1xuICAgIC8vICAgICAgICAgY29uc29sZS5sb2coXCLot7PovazmuLjmiI/vvJogXCIgKyBhcHBJZCk7XG4gICAgLy8gICAgICAgICBMYXlhLkJyb3dzZXIud2luZG93W1widHRcIl0ubmF2aWdhdGVUb01pbmlQcm9ncmFtKFxuICAgIC8vICAgICAgICAgICAgIHtcbiAgICAvLyAgICAgICAgICAgICAgICAgYXBwSWQ6IGFwcElkLFxuICAgIC8vICAgICAgICAgICAgICAgICBwYXRoOiBwYXRoLFxuICAgIC8vICAgICAgICAgICAgICAgICBleHRyYURhdGE6IHtcbiAgICAvLyAgICAgICAgICAgICAgICAgICAgIGZvbzogJ2JhcidcbiAgICAvLyAgICAgICAgICAgICAgICAgfSxcbiAgICAvLyAgICAgICAgICAgICAgICAgZW52VmVyc2lvbjogJ3JlbGVhc2UnLFxuICAgIC8vICAgICAgICAgICAgICAgICBzdWNjZXNzKHJlcykge1xuICAgIC8vICAgICAgICAgICAgICAgICAgICAgaWYgKG9uU3VjY2Vzcykge1xuICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgIG9uU3VjY2VzcyhyZXMpXG4gICAgLy8gICAgICAgICAgICAgICAgICAgICB9XG4gICAgLy8gICAgICAgICAgICAgICAgIH0sXG4gICAgLy8gICAgICAgICAgICAgICAgIGZhaWwocmVzKSB7XG4gICAgLy8gICAgICAgICAgICAgICAgICAgICBpZiAob25GYWlsKSB7XG4gICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgb25GYWlsKHJlcylcbiAgICAvLyAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAvLyAgICAgICAgICAgICAgICAgfSxcbiAgICAvLyAgICAgICAgICAgICAgICAgY29tcGxldGUocmVzKSB7XG4gICAgLy8gICAgICAgICAgICAgICAgICAgICBpZiAob25Db21wbGF0ZSkge1xuICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ29tcGxhdGUocmVzKVxuICAgIC8vICAgICAgICAgICAgICAgICAgICAgfVxuICAgIC8vICAgICAgICAgICAgICAgICB9XG4gICAgLy8gICAgICAgICAgICAgfSlcblxuICAgIC8vICAgICB9XG4gICAgLy8gfVxuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0t5b2V5bGPLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8qKlxuICAgICAqIOmFjee9ruW9leWxj1xuICAgICAqL1xuICAgIFxuICAgIHByaXZhdGUgc3RhdGljIGluaXRSZWNvcmQoKXtcbiAgICAgICAgVFRBUEkucmVjb3JkID0gTGF5YS5Ccm93c2VyLndpbmRvd1tcInR0XCJdLmdldEdhbWVSZWNvcmRlck1hbmFnZXIoKTsgIFxuICAgICAgICBpZihUVEFQSS5yZWNvcmQhPW51bGwpe1xuICAgICAgICAgICAgVFRBUEkucmVjb3JkLm9uU3RhcnQocmVzID0+e1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5b2V5bGP5byA5aeLXCIpO1xuICAgICAgICAgICAgICAgIFRUQVBJLnJlY29yZFJlcz1cIlwiOyAgICAgICAgXG4gICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICBUVEFQSS5yZWNvcmQub25TdG9wKHJlcyA9PntcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuW9leWxj+e7k+adn1wiKTtcbiAgICAgICAgICAgICAgICBUVEFQSS5yZWNvcmRSZXMgPSByZXMudmlkZW9QYXRoO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOW8gOWni+W9leWxj1xuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgc3RhcnRSZWNvcmQoZHVyYXRpb24gPSAzMDApe1xuICAgICAgICBpZighQXBwX3dobnBfQ29uZmlnLm9uVFRNaW5pR2FtZSlyZXR1cm47XG4gICAgICAgIFRUQVBJLnJlY29yZC5zdGFydCh7XG4gICAgICAgICAgICBkdXJhdGlvblxuICAgICAgICB9KVxuICAgIH1cblxuICAgICAvKipcbiAgICAgKiDlgZzmraLlvZXlsY9cbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIHN0b3BSZWNvcmQoKSB7XG4gICAgICAgIGlmKCFBcHBfd2hucF9Db25maWcub25UVE1pbmlHYW1lKXJldHVybjsgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgVFRBUEkucmVjb3JkLnN0b3AoKTtcbiAgICB9XG5cbiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0t5YiG5Lqr5b2V5bGPLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIHB1YmxpYyBzdGF0aWMgc2hhcmVSZWNvcmQoY2FsbGJhY2s6RnVuY3Rpb249bnVsbCl7XG4gICAgICAgIGlmKCFBcHBfd2hucF9Db25maWcub25UVE1pbmlHYW1lKXJldHVybjsgICBcbiAgICAgICAgaWYoVFRBUEkucmVjb3JkUmVzIT1cIlwiKXtcbiAgICAgICAgICAgIHdpbmRvd1tcInR0XCJdLnNoYXJlQXBwTWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgY2hhbm5lbDpcInZpZGVvXCIsXG4gICAgICAgICAgICAgICAgZXh0cmE6IHtcbiAgICAgICAgICAgICAgICAgICAgdmlkZW9QYXRoOiBUVEFQSS5yZWNvcmRSZXMsIC8vIOWPr+abv+aNouaIkOW9leWxj+W+l+WIsOeahOinhumikeWcsOWdgFxuICAgICAgICAgICAgICAgICAgICB2aWRlb1RvcGljczogW1wi5b+r5p2l5ZKM5oiR5LiA6LW3546p5ZCn77yBXCJdXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBzdWNjZXNzKCkge1xuICAgICAgICAgICAgICAgICAgICBpZihjYWxsYmFjayE9bnVsbCl7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5YiG5Lqr6KeG6aKR5oiQ5YqfXCIpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZmFpbChlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5YiG5Lqr6KeG6aKR5aSx6LSlXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCLliIbkuqvop4bpopHkuLrnqbpcIik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS3liIbkuqvlpb3lj4stLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgcHVibGljIHN0YXRpYyBzaGFyZShjb21wbGF0ZTpGdW5jdGlvbj1udWxsKXtcbiAgICAgICAgaWYoIUFwcF93aG5wX0NvbmZpZy5vblRUTWluaUdhbWUpcmV0dXJuOyAgIFxuICAgICAgICB3aW5kb3dbXCJ0dFwiXS5zaGFyZUFwcE1lc3NhZ2Uoe1xuICAgICAgICAgICAgdGVtcGxhdGVJZDp0aGlzLl90ZW1wbGF0ZUlkLFxuICAgICAgICAgICAgc3VjY2VzcygpIHtcbiAgICAgICAgICAgICAgICBpZihjb21wbGF0ZSE9bnVsbCl7XG4gICAgICAgICAgICAgICAgICAgIGNvbXBsYXRlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZhaWwoKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLliIbkuqvlpLHotKVcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgIH1cblxuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1iYW5uZXItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgICBwdWJsaWMgc3RhdGljIHNob3dCYW5uZXIoKTphbnlcbiAgICB7XG4gICAgICAgIGlmKCFBcHBfd2hucF9Db25maWcub25UVE1pbmlHYW1lIHx8IHRoaXMuYmFubmVyQWRVbml0SWQubGVuZ3RoPD0wKXJldHVybjtcbiAgICAgICAgaWYoIVRUQVBJLl9iYW5uZXIpe1xuICAgICAgICAgICAgY29uc3QgeyB3aW5kb3dXaWR0aCwgd2luZG93SGVpZ2h0IH0gPSBMYXlhLkJyb3dzZXIud2luZG93W1widHRcIl0uZ2V0U3lzdGVtSW5mb1N5bmMoKTtcbiAgICAgICAgICAgIHZhciB0YXJnZXRCYW5uZXJBZFdpZHRoID0gMTUwO1xuICAgICAgICAgICAgLy8g5Yib5bu65LiA5Liq5bGF5LqO5bGP5bmV5bqV6YOo5q2j5Lit55qE5bm/5ZGKXG4gICAgICAgICAgICBUVEFQSS5fYmFubmVyID0gTGF5YS5Ccm93c2VyLndpbmRvd1tcInR0XCJdLmNyZWF0ZUJhbm5lckFkKHtcbiAgICAgICAgICAgICAgICBhZFVuaXRJZDogVFRBUEkuYmFubmVyQWRVbml0SWQsXG4gICAgICAgICAgICAgICAgYWRJbnRlcnZhbHM6MzAsICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiB0YXJnZXRCYW5uZXJBZFdpZHRoLFxuICAgICAgICAgICAgICAgICAgICB0b3A6IHdpbmRvd0hlaWdodCAtICh0YXJnZXRCYW5uZXJBZFdpZHRoIC8gMTYpICogOSwgLy8g5qC55o2u57O757uf57qm5a6a5bC65a+46K6h566X5Ye65bm/5ZGK6auY5bqmXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgVFRBUEkuX2Jhbm5lci5vblJlc2l6ZShzaXplID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhzaXplLndpZHRoLCBzaXplLmhlaWdodCk7XG4gICAgICAgICAgICAgICAgVFRBUEkuX2Jhbm5lci5zdHlsZS50b3AgPSB3aW5kb3dIZWlnaHQgLSBzaXplLmhlaWdodDtcbiAgICAgICAgICAgICAgICBUVEFQSS5fYmFubmVyLnN0eWxlLmxlZnQgPSAod2luZG93V2lkdGggLSBzaXplLndpZHRoKSAvIDI7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBUVEFQSS5fYmFubmVyLnNob3coKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIGhpZGVCYW5uZXIoKVxuICAgIHtcbiAgICAgICAgaWYobnVsbCAhPSBUVEFQSS5fYmFubmVyKVxuICAgICAgICB7XG4gICAgICAgICAgICBUVEFQSS5fYmFubmVyLmhpZGUoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgc2hvd01vcmVHYW1lc01vZGFsKG9uU3VjY2VzcyA6IEZ1bmN0aW9uLG9uRmFpbCA6IEZ1bmN0aW9uKVxuICAgIHtcbiAgICAgICAgY29uc3Qgc3lzdGVtSW5mbyA9IExheWEuQnJvd3Nlci53aW5kb3dbXCJ0dFwiXS5nZXRTeXN0ZW1JbmZvU3luYygpO1xuICAgICAgICAvLyBpT1Mg5LiN5pSv5oyB77yM5bu66K6u5YWI5qOA5rWL5YaN5L2/55SoXG4gICAgICAgIGlmIChzeXN0ZW1JbmZvLnBsYXRmb3JtICE9PSBcImlvc1wiKSB7XG4gICAgICAgICAgICAvLyDmiZPlvIDkupLot7PlvLnnqpdcbiAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJ0dFwiXS5zaG93TW9yZUdhbWVzTW9kYWwoe1xuICAgICAgICAgICAgICAgIGFwcExhdW5jaE9wdGlvbnM6IFtcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgYXBwSWQ6IEFwcENvbmZpZy5BcHBJRCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXJ5OiBcImZvbz1iYXImYmF6PXF1eFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgZXh0cmFEYXRhOiB7fVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8vIHsuLi59XG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICBzdWNjZXNzKHJlcykge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcInN1Y2Nlc3NcIiwgcmVzLmVyck1zZyk7XG4gICAgICAgICAgICAgICAgICAgIGlmKG9uU3VjY2VzcylcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgb25TdWNjZXNzKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGZhaWwocmVzKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiZmFpbFwiLCByZXMuZXJyTXNnKTtcbiAgICAgICAgICAgICAgICAgICAgaWYob25GYWlsKVxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkZhaWwoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2VcbiAgICAgICAge1xuICAgICAgICAgICAgaWYob25GYWlsKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9uRmFpbCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG5cbiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAgIC8vIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS3mj5LlsY/luZXlub/lkYotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gIFxuICAgIC8vIHB1YmxpYyBzdGF0aWMgc2hvd0ludGVyc3RpdGlhbEFkKG9uQWRDbG9zZTogRnVuY3Rpb24sIG9uRmFpbGVkOiBGdW5jdGlvbikgIHtcbiAgICAvLyAgICAgaWYgKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lKSB7XG4gICAgLy8gICAgICAgICB2YXIgaW50ZXJzdGl0aWFsQWQgPSBMYXlhLkJyb3dzZXIud2luZG93W1wid3hcIl0uY3JlYXRlSW50ZXJzdGl0aWFsQWQoe1xuICAgIC8vICAgICAgICAgICAgIGFkVW5pdElkOiBUVEFQSS5JbnNBZFVuaXRJZCxcbiAgICAvLyAgICAgICAgIH0pXG5cbiAgICAvLyAgICAgICAgIGludGVyc3RpdGlhbEFkLm9uTG9hZCgoKSA9PiB7XG4gICAgLy8gICAgICAgICAgICAgY29uc29sZS5sb2coJ+aPkuWxj+W5v+WRiiDliqDovb3lrozmiJAnKTtcbiAgICAvLyAgICAgICAgICAgICBpbnRlcnN0aXRpYWxBZC5zaG93KCkuY2F0Y2goKGVycikgPT4ge1xuICAgIC8vICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn5o+S5bGP5bm/5ZGKIOaYvuekuuWksei0pSDvvJonICsgZXJyKVxuICAgIC8vICAgICAgICAgICAgICAgICBpZiAob25GYWlsZWQpIHtcbiAgICAvLyAgICAgICAgICAgICAgICAgICAgIG9uRmFpbGVkKCk7XG4gICAgLy8gICAgICAgICAgICAgICAgIH1cbiAgICAvLyAgICAgICAgICAgICB9KVxuICAgIC8vICAgICAgICAgfSlcblxuICAgIC8vICAgICAgICAgaW50ZXJzdGl0aWFsQWQub25FcnJvcigoZXJyKSA9PiB7XG4gICAgLy8gICAgICAgICAgICAgY29uc29sZS5sb2coJ+aPkuWxj+W5v+WRiiDliqDovb3lpLHotKUnICsgZXJyKTtcbiAgICAvLyAgICAgICAgICAgICBpZiAob25GYWlsZWQpIHtcbiAgICAvLyAgICAgICAgICAgICAgICAgb25GYWlsZWQoKTtcbiAgICAvLyAgICAgICAgICAgICB9XG4gICAgLy8gICAgICAgICB9KVxuXG4gICAgLy8gICAgICAgICBpbnRlcnN0aXRpYWxBZC5vbkNsb3NlKCgpID0+IHtcbiAgICAvLyAgICAgICAgICAgICBjb25zb2xlLmxvZygn5o+S5bGP5bm/5ZGKIOWFs+mXrScpO1xuICAgIC8vICAgICAgICAgICAgIGlmIChvbkFkQ2xvc2UpIHtcbiAgICAvLyAgICAgICAgICAgICAgICAgb25BZENsb3NlKCk7XG4gICAgLy8gICAgICAgICAgICAgfVxuICAgIC8vICAgICAgICAgfSlcbiAgICAvLyAgICAgfVxuICAgIC8vICAgICBlbHNlIHtcbiAgICAvLyAgICAgICAgIG9uQWRDbG9zZSgpO1xuICAgIC8vICAgICB9XG4gICAgLy8gfVxuICAgIC8qKlxuICAgICAqIOW+l+WIsOWwj+eoi+W6j+WQr+WKqOWPguaVsOeahOWQjOatpeaWueazle+8jOWPr+W+l+WIsOS4gOS4qk9iamVjdOi/lOWbnuWAvO+8jOi/lOWbnuWAvOWFt+S9k+eahOaVsOaNrue7k+aehOWcqOS4i+mdoueahOWIl+ihqOS4rVxuICAgICAqIHNjZW5lXHRudW1iZXJcdOWQr+WKqOWwj+a4uOaIj+eahOWcuuaZr+WAvFxuICAgICAqIHF1ZXJ5XHRPYmplY3RcdOWQr+WKqOWwj+a4uOaIj+eahCBxdWVyeSDlj4LmlbBcbiAgICAgKiBzaGFyZVRpY2tldFx0c3RyaW5nXHRzaGFyZVRpY2tldO+8jOivpuingeiOt+WPluabtOWkmui9rOWPkeS/oeaBr1xuICAgICAqIHJlZmVycmVySW5mb1x0b2JqZWN0XHTmnaXmupDkv6Hmga/jgILku47lj6bkuIDkuKrlsI/nqIvluo/jgIHlhazkvJflj7fmiJYgQXBwIOi/m+WFpeWwj+eoi+W6j+aXtui/lOWbnuOAguWQpuWImei/lOWbniB7fVxuICAgICAqIGh0dHBzOi8vZGV2ZWxvcGVycy53ZWl4aW4ucXEuY29tL21pbmlnYW1lL2Rldi9hcGkvYmFzZS9hcHAvbGlmZS1jeWNsZS93eC5nZXRMYXVuY2hPcHRpb25zU3luYy5odG1sXG4gICAgICogQHN0YXRpY1xuICAgICAqIEByZXR1cm5zIHtMYXVuY2hPcHRpb25zfSBcbiAgICAgKiBAbWVtYmVyb2YgVFRBUElcbiAgICAgKi9cbiAgICAvLyBwdWJsaWMgc3RhdGljIGdldExhdW5jaE9wdGlvbnNTeW5jKCkge1xuICAgIC8vICAgICAvLyBsZXQgcmVzdWx0ID0geyBzY2VuZTogMCwgcXVlcnk6IG51bGwsIHNoYXJlVGlja2V0OiBcIlwiLCByZWZlcnJlckluZm86IG51bGwgfTtcbiAgICAvLyAgICAgaWYgKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lKSB7XG4gICAgLy8gICAgICAgICBsZXQgb2JqID0gTGF5YS5Ccm93c2VyLndpbmRvd1tcInd4XCJdLmdldExhdW5jaE9wdGlvbnNTeW5jKClcbiAgICAvLyAgICAgICAgIGNvbnNvbGUubG9nKFwi5Zy65pmv5YC8IFwiICsgb2JqLnNjZW5lKTtcbiAgICAvLyAgICAgICAgIGxldCBzdHIgPSBKU09OLnN0cmluZ2lmeShvYmoucXVlcnkpO1xuICAgIC8vICAgICAgICAgY29uc29sZS5sb2coXCJRdWVyeeWPguaVsCBcIiArIHN0cik7XG4gICAgLy8gICAgICAgICBsZXQga2V5ID0gb2JqLnF1ZXJ5W1wia2V5XCJdO1xuICAgIC8vICAgICAgICAgY29uc29sZS5sb2coXCJRdWVyeeWPguaVsO+8mmtleSBcIiArIGtleSk7XG4gICAgLy8gICAgICAgICBjb25zb2xlLmxvZyhcIlNoYXJlVGlja2V0IFwiICsgb2JqLnNoYXJlVGlja2V0KTtcbiAgICAvLyAgICAgICAgIGNvbnNvbGUubG9nKFwiUmVmZXJyZXJJbmZvLmFwcElkIFwiICsgb2JqLnJlZmVycmVySW5mby5hcHBJZCk7XG4gICAgLy8gICAgICAgICBjb25zb2xlLmxvZyhcIlJlZmVycmVySW5mby5leHRyYURhdGEgXCIgKyBvYmoucmVmZXJyZXJJbmZvLmV4dHJhRGF0YSk7XG4gICAgLy8gICAgICAgICByZXR1cm4gb2JqO1xuICAgIC8vICAgICB9XG4gICAgLy8gICAgIGxldCBvYmogPSB7IHNjZW5lOiAxMDAxLCBxdWVyeTogXCJcIiwgc2hhcmVUaWNrZXQ6IFwiXCIsIGFwcElkOiBcIlwiLCBleHRyYURhdGE6IFwiXCIgfVxuICAgIC8vICAgICByZXR1cm4gb2JqO1xuICAgIC8vIH1cblxuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vIC8qKlxuICAgIC8vICAqIOaJk+W8gOW+ruS/oeW3puS4iuinkuWIhuS6q+i9rOWPkeeCueWHu+S6i+S7tizlnKjmuLjmiI/pgLvovpHkuK3osIPnlKjkuIDmrKHljbPlj69cbiAgICAvLyAgKiDms6jmhI/mraTmlrnms5Xlj6rkvJrlnKjnnJ/mnLrkuIrmiafooYzvvIzlnKjlvq7kv6HmqKHmi5/lmajnjq/looPkuIvngrnlh7vovazlj5HmjInpkq7ku4DkuYjpg73kuI3kvJrlj5HnlJ9cbiAgICAvLyAgKiBcbiAgICAvLyAgKiBAc3RhdGljXG4gICAgLy8gICogQHBhcmFtIHtzdHJpbmd9IHRpdGVsIOWIhuS6q+agh+mimFxuICAgIC8vICAqIEBwYXJhbSB7c3RyaW5nfSBpbWFnZVVybCDliIbkuqvlm77niYflnLDlnYBcbiAgICAvLyAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbc3VjY2Vzc10g5oiQ5Yqf5Zue6LCD5Ye95pWwKOWPr+S4jeWhqylcbiAgICAvLyAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbZmFpbF0g5aSx6LSl5Zue6LCD5Ye95pWwKOWPr+S4jeWhqylcbiAgICAvLyAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY29tcGxhdGVdIOWujOaIkOWbnuiwg+WHveaVsO+8jOaIkOWKn+Wksei0pemDveS8muaJp+ihjCjlj6/kuI3loaspXG4gICAgLy8gICogQG1lbWJlcm9mIFRUQVBJXG4gICAgLy8gICovXG4gICAgLy8gcHVibGljIHN0YXRpYyBTZXRTaGFyZU1lbnUodGl0ZWw6IHN0cmluZywgaW1hZ2VVcmw6IHN0cmluZywgc3VjY2Vzcz86IEZ1bmN0aW9uLCBmYWlsPzogRnVuY3Rpb24sIGNvbXBsYXRlPzogRnVuY3Rpb24pIHtcbiAgICAvLyAgICAgaWYgKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lKSB7XG4gICAgLy8gICAgICAgICBjb25zb2xlLmxvZyhcIuWwj+a4uOaIj+iuvue9rui9rOWPkeaMiemSrlwiKTtcbiAgICAvLyAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJ3eFwiXS5zaG93U2hhcmVNZW51KHtcbiAgICAvLyAgICAgICAgICAgICB3aXRoU2hhcmVUaWNrZXQ6IGZhbHNlLFxuICAgIC8vICAgICAgICAgICAgIHN1Y2Nlc3M6IHN1Y2Nlc3MsXG4gICAgLy8gICAgICAgICAgICAgZmFpbDogZmFpbCxcbiAgICAvLyAgICAgICAgICAgICBjb21wbGV0ZTogY29tcGxhdGVcbiAgICAvLyAgICAgICAgIH0pO1xuICAgIC8vICAgICAgICAgTGF5YS5Ccm93c2VyLndpbmRvd1tcInd4XCJdLm9uU2hhcmVBcHBNZXNzYWdlKGZ1bmN0aW9uICgpIHtcbiAgICAvLyAgICAgICAgICAgICByZXR1cm4ge1xuICAgIC8vICAgICAgICAgICAgICAgICB0aXRsZTogdGl0ZWwsXG4gICAgLy8gICAgICAgICAgICAgICAgIGltYWdlVXJsOiBpbWFnZVVybFxuICAgIC8vICAgICAgICAgICAgIH1cbiAgICAvLyAgICAgICAgIH0pO1xuICAgIC8vICAgICB9XG4gICAgLy8gfVxuXG5cbn0iLCJpbXBvcnQgRXZlbnRNZ3IgZnJvbSBcIi4uL0V2ZW50L0V2ZW50TWdyXCI7XG5pbXBvcnQgeyBFdmVudERlZiB9IGZyb20gXCIuLi9FdmVudC9FdmVudERlZlwiO1xuaW1wb3J0IEdhbWVDb21tb25Db25maWcgZnJvbSBcIi4uL0NvbmZpZy9HYW1lQ29tbW9uQ29uZmlnXCI7XG5cbi8v5ri45oiP5pWw5o2uLOS4uuS/neaMgeeJiOacrOWFvOWuue+8jOW7uuiuruS4jeimgeWIoOmZpOWSjOS/ruaUueWtl+auteWQjVxuZXhwb3J0IGNsYXNzIFVzZXJHYW1lRGF0YVxue1xuICAgIHB1YmxpYyAgbGV2ZWxOdW06IG51bWJlciA9IDE7Ly/lvZPliY3lhbPljaFcbiAgICBwdWJsaWMgIG1vbmV5TnVtOiBudW1iZXIgPSAwOy8v6YeR5biB5pWw6YePXG4gICAgcHVibGljICBjcnlzdGFsTnVtOiBudW1iZXIgPSAwOy8v6ZK755+z5pWw6YePXG4gICAgcHVibGljICBlbmVyZ3lOdW06IG51bWJlciA9IDA7Ly/kvZPlipvmlbDph49cbiAgICBwdWJsaWMgIHJlYWRvbmx5IGFjdG9yU2tpbnMgOiBBcnJheTxudW1iZXI+ID0gWzFdOy8v5bey6Kej6ZSB55qE55qu6IKkXG4gICAgcHVibGljICBjdXJBY3RvclNraW4gOiBudW1iZXIgPSAxOy8v5b2T5YmN55qu6IKkXG4gICAgcHVibGljICBsYXN0U2lnbkluVGltZTogbnVtYmVyID0gMDsvL+S4iuasoeetvuWIsOaXtumXtFxufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VyIGV4dGVuZHMgTGF5YS5TY3JpcHQgXG57XG4gICAgcHVibGljIHN0YXRpYyBjb2RlOiBzdHJpbmcgPSBcIlwiO1xuICAgIHB1YmxpYyBzdGF0aWMgb3BlbklkOiBzdHJpbmcgPSBcIlwiO1xuICAgIHB1YmxpYyBzdGF0aWMgdG9rZW46IHN0cmluZyA9IG51bGw7XG4gICAgcHVibGljIHN0YXRpYyBuaWNrTmFtZTogc3RyaW5nID0gXCJcIjtcbiAgICBwdWJsaWMgc3RhdGljIGdlbmRlcjpudW1iZXIgPSAwO1xuXG4gICAgcHVibGljIHN0YXRpYyBnZXQgaXNMb2dpbigpXG4gICAge1xuICAgICAgICByZXR1cm4gKFVzZXIuY29kZSAhPSBcIlwiKSB8fCAoVXNlci50b2tlbiAhPSBcIlwiKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHN0YXRpYyByZWFkb25seSBfZ2FtZURhdGEgOiBVc2VyR2FtZURhdGEgPSBuZXcgVXNlckdhbWVEYXRhKCk7XG5cbiAgICBwdWJsaWMgc3RhdGljIGdldFNhdmVEYXRhKCkgOiBzdHJpbmdcbiAgICB7XG4gICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShVc2VyLl9nYW1lRGF0YSk7XG4gICAgfVxuICAgIHB1YmxpYyBzdGF0aWMgdGVzdEluaXRVc2VyKClcbiAgICB7XG4gICAgICAgIFVzZXIuX2dhbWVEYXRhLmxldmVsTnVtID0gMTtcbiAgICAgICAgVXNlci5fZ2FtZURhdGEubW9uZXlOdW0gPSAwO1xuICAgICAgICBVc2VyLl9nYW1lRGF0YS5jcnlzdGFsTnVtID0gMDtcbiAgICAgICAgVXNlci5fZ2FtZURhdGEuZW5lcmd5TnVtID0gMTUwO1xuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgaW5pdGlVc2VyKGRhdGEpXG4gICAge1xuICAgICAgICBpZihkYXRhICYmIGRhdGEuY2RkYXRhICYmIDAgIT0gZGF0YS5jZGRhdGEpXG4gICAgICAgIHtcbiAgICAgICAgICAgIFVzZXIuX2dhbWVEYXRhLmxldmVsTnVtID0gZGF0YS5jZGRhdGEubGV2ZWxOdW07XG4gICAgICAgICAgICBVc2VyLl9nYW1lRGF0YS5tb25leU51bSA9IGRhdGEuY2RkYXRhLm1vbmV5TnVtO1xuICAgICAgICAgICAgVXNlci5fZ2FtZURhdGEuY3J5c3RhbE51bSA9IGRhdGEuY2RkYXRhLmNyeXN0YWxOdW07XG4gICAgICAgICAgICBVc2VyLl9nYW1lRGF0YS5lbmVyZ3lOdW0gPSBkYXRhLmNkZGF0YS5lbmVyZ3lOdW07XG4gICAgICAgICAgICB2YXIgYWN0b3JTa2lucyA9IGRhdGEuY2RkYXRhLmFjdG9yU2tpbnM7XG4gICAgICAgICAgICBpZihudWxsICE9IGFjdG9yU2tpbnMpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgZm9yKHZhciBpPTA7aSA8IGFjdG9yU2tpbnMubGVuZ3RoOysraSlcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGlmKDEgIT0gYWN0b3JTa2luc1tpXSlcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgVXNlci5fZ2FtZURhdGEuYWN0b3JTa2lucy5wdXNoKGFjdG9yU2tpbnNbaV0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgVXNlci5fZ2FtZURhdGEuY3VyQWN0b3JTa2luID0gZGF0YS5jZGRhdGEuY3VyQWN0b3JTa2luO1xuICAgICAgICAgICAgVXNlci5fZ2FtZURhdGEubGFzdFNpZ25JblRpbWUgPSBkYXRhLmNkZGF0YS5sYXN0U2lnbkluVGltZTtcblxuICAgICAgICAgICAgaWYoMCA9PSBkYXRhLmlzX2RheSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBVc2VyLl9nYW1lRGF0YS5lbmVyZ3lOdW0gPSBHYW1lQ29tbW9uQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0R2FtZUNvbmZpZ0RhdGEoKS5kYWlseUVuZXJneTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmKG51bGwgIT0gZGF0YSlcbiAgICAgICAge1xuICAgICAgICAgICAgaWYoMCA9PSBkYXRhLmlzX2RheSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBVc2VyLl9nYW1lRGF0YS5lbmVyZ3lOdW0gPSBHYW1lQ29tbW9uQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0R2FtZUNvbmZpZ0RhdGEoKS5kYWlseUVuZXJneTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlXG4gICAgICAgIHtcbiAgICAgICAgICAgIFVzZXIuX2dhbWVEYXRhLmVuZXJneU51bSA9IDEwMDtcbiAgICAgICAgfSAgICAgXG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyB1bkxvY2tNYXhMZXZlbE51bShsZXZlbE51bSA6IG51bWJlcilcbiAgICB7XG4gICAgICAgIHRoaXMuc2V0TGV2ZU51bShsZXZlbE51bSk7XG4gICAgICAgIGlmKFVzZXIuX2dhbWVEYXRhLmxldmVsTnVtIDwgbGV2ZWxOdW0pXG4gICAgICAgIHtcbiAgICAgICAgICAgIFVzZXIuX2dhbWVEYXRhLmxldmVsTnVtID0gbGV2ZWxOdW07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIHNldExldmVOdW0obGV2ZWxOdW0gOiBudW1iZXIpXG4gICAge1xuICAgICAgICBMYXlhLkxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiTGV2ZWxcIixsZXZlbE51bS50b1N0cmluZygpKTtcbiAgICAgICAgVXNlci5fZ2FtZURhdGEubGV2ZWxOdW0gPSBsZXZlbE51bTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIGdldExldmVOdW0oKSA6IG51bWJlclxuICAgIHtcbiAgICAgICAgdmFyIG15TnVtYmVyU3RyID0gTGF5YS5Mb2NhbFN0b3JhZ2UuZ2V0SXRlbShcIkxldmVsXCIpO1xuICAgICAgICBpZiAobXlOdW1iZXJTdHIgPT09IG51bGwpXG4gICAgICAgIHtcbiAgICAgICAgICAgIG15TnVtYmVyID0gMTtcbiAgICAgICAgfSBcbiAgICAgICAgZWxzZSBcbiAgICAgICAge1xuICAgICAgICAgICAgdmFyIG15TnVtYmVyID0gcGFyc2VJbnQobXlOdW1iZXJTdHIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBteU51bWJlcjtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIGFkZE1vbmV5KGFkZCA6IG51bWJlcilcbiAgICB7XG4gICAgICAgIGFkZCA9IE1hdGguY2VpbChhZGQpXG4gICAgICAgIExheWEuTG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJNb25leVwiLChVc2VyLl9nYW1lRGF0YS5tb25leU51bSArIGFkZCkudG9TdHJpbmcoKSk7XG4gICAgICAgIHZhciBsYXN0ID0gVXNlci5fZ2FtZURhdGEubW9uZXlOdW1cbiAgICAgICAgVXNlci5fZ2FtZURhdGEubW9uZXlOdW0gKz0gYWRkO1xuICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5kaXNwYXRjaChFdmVudERlZi5HYW1lX09uVXNlck1vbmV5Q2hhbmdlLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGN1cnIgOiBVc2VyLl9nYW1lRGF0YS5tb25leU51bSxcbiAgICAgICAgICAgICAgICBsYXN0IDogbGFzdFxuICAgICAgICAgICAgfSlcbiAgICB9XG4gICAgcHVibGljIHN0YXRpYyBzdWJNb25leShzdWIgOiBudW1iZXIpXG4gICAge1xuICAgICAgICBzdWIgPSBNYXRoLmNlaWwoc3ViKVxuICAgICAgICBMYXlhLkxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiTW9uZXlcIiwoVXNlci5fZ2FtZURhdGEubW9uZXlOdW0gLSBzdWIpLnRvU3RyaW5nKCkpO1xuICAgICAgICB2YXIgbGFzdCA9IFVzZXIuX2dhbWVEYXRhLm1vbmV5TnVtXG4gICAgICAgIFVzZXIuX2dhbWVEYXRhLm1vbmV5TnVtIC09IHN1YjtcbiAgICAgICAgaWYoVXNlci5fZ2FtZURhdGEubW9uZXlOdW0gPCAwKVxuICAgICAgICB7XG4gICAgICAgICAgICBVc2VyLl9nYW1lRGF0YS5tb25leU51bSA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UuZGlzcGF0Y2goRXZlbnREZWYuR2FtZV9PblVzZXJNb25leUNoYW5nZSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjdXJyIDogVXNlci5fZ2FtZURhdGEubW9uZXlOdW0sXG4gICAgICAgICAgICAgICAgbGFzdCA6IGxhc3RcbiAgICAgICAgICAgIH0pXG4gICAgfVxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0TW9uZXkoKVxuICAgIHtcbiAgICAgICAgdmFyIG15TnVtYmVyU3RyID0gTGF5YS5Mb2NhbFN0b3JhZ2UuZ2V0SXRlbShcIk1vbmV5XCIpO1xuICAgICAgICBpZiAobXlOdW1iZXJTdHIgPT09IG51bGwpXG4gICAgICAgIHtcbiAgICAgICAgICAgIG15TnVtYmVyID0gMTtcbiAgICAgICAgfSBcbiAgICAgICAgZWxzZSBcbiAgICAgICAge1xuICAgICAgICAgICAgdmFyIG15TnVtYmVyID0gcGFyc2VJbnQobXlOdW1iZXJTdHIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBteU51bWJlcjtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIGFkZENyeXN0YWwoYWRkIDogbnVtYmVyKVxuICAgIHtcbiAgICAgICAgYWRkID0gTWF0aC5jZWlsKGFkZClcbiAgICAgICAgTGF5YS5Mb2NhbFN0b3JhZ2Uuc2V0SXRlbShcIkNyeXN0YWxcIiwoVXNlci5fZ2FtZURhdGEuY3J5c3RhbE51bSArIGFkZCkudG9TdHJpbmcoKSk7XG4gICAgICAgIHZhciBsYXN0ID0gVXNlci5fZ2FtZURhdGEuY3J5c3RhbE51bVxuICAgICAgICBVc2VyLl9nYW1lRGF0YS5jcnlzdGFsTnVtICs9IGFkZDtcbiAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UuZGlzcGF0Y2goRXZlbnREZWYuR2FtZV9PblVzZXJDcnlzdGFsQ2hhbmdlLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGN1cnIgOiBVc2VyLl9nYW1lRGF0YS5jcnlzdGFsTnVtLFxuICAgICAgICAgICAgICAgIGxhc3QgOiBsYXN0XG4gICAgICAgICAgICB9KVxuICAgIH1cbiAgICBwdWJsaWMgc3RhdGljIHN1YkNyeXN0YWwoc3ViIDogbnVtYmVyKVxuICAgIHtcbiAgICAgICAgc3ViID0gTWF0aC5jZWlsKHN1YilcbiAgICAgICAgTGF5YS5Mb2NhbFN0b3JhZ2Uuc2V0SXRlbShcIkNyeXN0YWxcIiwoVXNlci5fZ2FtZURhdGEuY3J5c3RhbE51bSAtIHN1YikudG9TdHJpbmcoKSk7XG4gICAgICAgIHZhciBsYXN0ID0gVXNlci5fZ2FtZURhdGEuY3J5c3RhbE51bVxuICAgICAgICBVc2VyLl9nYW1lRGF0YS5jcnlzdGFsTnVtIC09IHN1YjtcbiAgICAgICAgaWYoVXNlci5fZ2FtZURhdGEuY3J5c3RhbE51bSA8IDApXG4gICAgICAgIHtcbiAgICAgICAgICAgIFVzZXIuX2dhbWVEYXRhLmNyeXN0YWxOdW0gPSAwO1xuICAgICAgICB9XG4gICAgICAgIEV2ZW50TWdyLmluc3RhbmNlLmRpc3BhdGNoKEV2ZW50RGVmLkdhbWVfT25Vc2VyQ3J5c3RhbENoYW5nZSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjdXJyIDogVXNlci5fZ2FtZURhdGEuY3J5c3RhbE51bSxcbiAgICAgICAgICAgICAgICBsYXN0IDogbGFzdFxuICAgICAgICAgICAgfSlcbiAgICB9XG4gICAgcHVibGljIHN0YXRpYyBnZXRDcnlzdGFsKClcbiAgICAgICAge3ZhciBteU51bWJlclN0ciA9IExheWEuTG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJDcnlzdGFsXCIpO1xuICAgICAgICBpZiAobXlOdW1iZXJTdHIgPT09IG51bGwpXG4gICAgICAgIHtcbiAgICAgICAgICAgIG15TnVtYmVyID0gMTtcbiAgICAgICAgfSBcbiAgICAgICAgZWxzZSBcbiAgICAgICAge1xuICAgICAgICAgICAgdmFyIG15TnVtYmVyID0gcGFyc2VJbnQobXlOdW1iZXJTdHIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBteU51bWJlcjtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIGFkZEVuZXJneShhZGQgOiBudW1iZXIpXG4gICAge1xuICAgICAgICBhZGQgPSBNYXRoLmNlaWwoYWRkKVxuICAgICAgICBMYXlhLkxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiRW5lcmd5XCIsKFVzZXIuX2dhbWVEYXRhLmVuZXJneU51bSArIGFkZCkudG9TdHJpbmcoKSk7XG4gICAgICAgIHZhciBsYXN0ID0gVXNlci5fZ2FtZURhdGEuZW5lcmd5TnVtXG4gICAgICAgIFVzZXIuX2dhbWVEYXRhLmVuZXJneU51bSArPSBhZGQ7XG4gICAgICAgIEV2ZW50TWdyLmluc3RhbmNlLmRpc3BhdGNoKEV2ZW50RGVmLkdhbWVfT25Vc2VyRW5lcmd5Q2hhbmdlLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGN1cnIgOiBVc2VyLl9nYW1lRGF0YS5lbmVyZ3lOdW0sXG4gICAgICAgICAgICAgICAgbGFzdCA6IGxhc3RcbiAgICAgICAgICAgIH0pXG4gICAgfVxuICAgIHB1YmxpYyBzdGF0aWMgc3ViRW5lcmd5KHN1YiA6IG51bWJlcilcbiAgICB7XG4gICAgICAgIHN1YiA9IE1hdGguY2VpbChzdWIpXG4gICAgICAgIExheWEuTG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJFbmVyZ3lcIiwoVXNlci5fZ2FtZURhdGEuZW5lcmd5TnVtIC0gc3ViKS50b1N0cmluZygpKTtcbiAgICAgICAgdmFyIGxhc3QgPSBVc2VyLl9nYW1lRGF0YS5lbmVyZ3lOdW1cbiAgICAgICAgVXNlci5fZ2FtZURhdGEuZW5lcmd5TnVtIC09IHN1YjtcbiAgICAgICAgaWYoVXNlci5fZ2FtZURhdGEuZW5lcmd5TnVtIDwgMClcbiAgICAgICAge1xuICAgICAgICAgICAgVXNlci5fZ2FtZURhdGEuZW5lcmd5TnVtID0gMDtcbiAgICAgICAgfVxuICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5kaXNwYXRjaChFdmVudERlZi5HYW1lX09uVXNlckVuZXJneUNoYW5nZSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjdXJyIDogVXNlci5fZ2FtZURhdGEuZW5lcmd5TnVtLFxuICAgICAgICAgICAgICAgIGxhc3QgOiBsYXN0XG4gICAgICAgICAgICB9KVxuICAgIH1cbiAgICBwdWJsaWMgc3RhdGljIGdldEVuZXJneSgpXG4gICAge1xuICAgICAgICB2YXIgbXlOdW1iZXJTdHIgPSBMYXlhLkxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiRW5lcmd5XCIpO1xuICAgICAgICBpZiAobXlOdW1iZXJTdHIgPT09IG51bGwpXG4gICAgICAgIHtcbiAgICAgICAgICAgIG15TnVtYmVyID0gMTtcbiAgICAgICAgfSBcbiAgICAgICAgZWxzZSBcbiAgICAgICAge1xuICAgICAgICAgICAgdmFyIG15TnVtYmVyID0gcGFyc2VJbnQobXlOdW1iZXJTdHIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBteU51bWJlcjtcbiAgICB9XG5cblxuICAgIHB1YmxpYyBzdGF0aWMgc2V0Q3VyQWN0b3JTa2luKHNraW4gOiBudW1iZXIpXG4gICAge1xuICAgICAgICBpZighVXNlci5hY3RvclNraW5Jc1VubG9jayhza2luKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdmFyIGxhc3QgPSBVc2VyLl9nYW1lRGF0YS5jdXJBY3RvclNraW47XG4gICAgICAgIFVzZXIuX2dhbWVEYXRhLmN1ckFjdG9yU2tpbiA9IHNraW47XG4gICAgICAgIEV2ZW50TWdyLmluc3RhbmNlLmRpc3BhdGNoKEV2ZW50RGVmLkdhbWVfT25Vc2VyQWN0b3JTa2luQ2hhbmdlLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGN1clNraW4gOiBza2luLFxuICAgICAgICAgICAgICAgIGxhc3RTa2luIDogbGFzdFxuICAgICAgICAgICAgfSk7XG4gICAgfVxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0Q3VyQWN0b3JTa2luKClcbiAgICB7XG4gICAgICAgIHJldHVybiBVc2VyLl9nYW1lRGF0YS5jdXJBY3RvclNraW47XG4gICAgfVxuICAgIHB1YmxpYyBzdGF0aWMgdW5sb2NrQWN0b3JTa2luKHNraW4gOiBudW1iZXIpIDogYm9vbGVhblxuICAgIHtcbiAgICAgICAgaWYoVXNlci5hY3RvclNraW5Jc1VubG9jayhza2luKSlcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgVXNlci5fZ2FtZURhdGEuYWN0b3JTa2lucy5wdXNoKHNraW4pO1xuICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5kaXNwYXRjaChFdmVudERlZi5HYW1lX09uVXNlclVubG9ja0FjdG9yU2tpbix7c2tpbiA6IHNraW59KTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHB1YmxpYyBzdGF0aWMgYWN0b3JTa2luSXNVbmxvY2soc2tpbiA6IG51bWJlcikgOiBib29sZWFuXG4gICAge1xuICAgICAgICBmb3IodmFyIGk9MDsgaSA8IFVzZXIuX2dhbWVEYXRhLmFjdG9yU2tpbnMubGVuZ3RoOysraSlcbiAgICAgICAge1xuICAgICAgICAgICAgaWYoc2tpbiA9PSBVc2VyLl9nYW1lRGF0YS5hY3RvclNraW5zW2ldKVxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcHVibGljIHN0YXRpYyBnZXRBY3RvclNraW5zKCkgOiBBcnJheTxudW1iZXI+XG4gICAge1xuICAgICAgICB2YXIgYXJyeSA6IEFycmF5PG51bWJlcj4gPSBuZXcgQXJyYXk8bnVtYmVyPigpO1xuICAgICAgICBmb3IodmFyIGk9MDsgaSA8IFVzZXIuX2dhbWVEYXRhLmFjdG9yU2tpbnMubGVuZ3RoOysraSlcbiAgICAgICAge1xuICAgICAgICAgICAgYXJyeS5wdXNoKFVzZXIuX2dhbWVEYXRhLmFjdG9yU2tpbnNbaV0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhcnJ5O1xuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgc2V0bGFzdFNpZ25JblRpbWUodGltZSA6IG51bWJlcilcbiAgICB7XG4gICAgICAgIFVzZXIuX2dhbWVEYXRhLmxhc3RTaWduSW5UaW1lID0gdGltZTtcbiAgICB9XG4gICAgcHVibGljIHN0YXRpYyBnZXRsYXN0U2lnbkluVGltZSgpXG4gICAge1xuICAgICAgICByZXR1cm4gVXNlci5fZ2FtZURhdGEubGFzdFNpZ25JblRpbWU7XG4gICAgfVxufVxuXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVdGlsaXRcbntcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IE9yaWdpblN0YWdlV2lkdGggPSAxMzM0O1xuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgT3JpZ2luU3RhZ2VIZWlnaHQgPSA3NTA7XG5cblxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgZ3JheXNjYWxlTWF0OiBBcnJheTxudW1iZXI+ID1cbiAgICAgICAgWzAuMzA4NiwgMC42MDk0LCAwLjA4MjAsIDAsIDAsXG4gICAgICAgICAgICAwLjMwODYsIDAuNjA5NCwgMC4wODIwLCAwLCAwLFxuICAgICAgICAgICAgMC4zMDg2LCAwLjYwOTQsIDAuMDgyMCwgMCwgMCxcbiAgICAgICAgICAgIDAsIDAsIDAsIDEsIDBdO1xuICAgIFxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgZ3JheXNjYWxlRmlsdGVyOiBMYXlhLkNvbG9yRmlsdGVyID0gbmV3IExheWEuQ29sb3JGaWx0ZXIoVXRpbGl0LmdyYXlzY2FsZU1hdCk7XG5cblxuICAgIHByb3RlY3RlZCBzdGF0aWMgcG9pbkRvd24gOiBMYXlhLlBvaW50ID0gbmV3IExheWEuUG9pbnQoMCwtMSk7XG4gICAgcHJvdGVjdGVkIHN0YXRpYyBwb2luVXAgOiBMYXlhLlBvaW50ID0gbmV3IExheWEuUG9pbnQoMCwxKTtcblxuICAgIFxuICAgIHB1YmxpYyBzdGF0aWMgTGVycChmb3JtIDogbnVtYmVyLHRvIDogbnVtYmVyLGRlbHRhIDogbnVtYmVyKSA6IG51bWJlclxuICAgIHtcbiAgICAgICAgaWYoZm9ybSA9PSB0bylcbiAgICAgICAgICAgIHJldHVybiB0bztcbiAgICAgICAgaWYoZm9ybSA+IHRvKVxuICAgICAgICB7XG4gICAgICAgICAgICB2YXIgbmV4dCA9IGZvcm0gLSBkZWx0YTtcbiAgICAgICAgICAgIGlmKG5leHQgPD0gdG8pXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRvO1xuICAgICAgICAgICAgcmV0dXJuIG5leHQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZihmb3JtIDwgdG8pXG4gICAgICAgIHtcbiAgICAgICAgICAgIHZhciBuZXh0ID0gZm9ybSArIGRlbHRhO1xuICAgICAgICAgICAgaWYobmV4dCA+PSB0bylcbiAgICAgICAgICAgICAgICByZXR1cm4gdG87XG4gICAgICAgICAgICByZXR1cm4gbmV4dDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgbGVycEV1bGVyQW5nbGUoZm9ybSA6IG51bWJlcix0byA6IG51bWJlcixkZWx0YSkgOiBudW1iZXJcbiAgICB7XG4gICAgICAgIHZhciBmb3JtID0gZm9ybSAlIDM2MDtcbiAgICAgICAgZm9ybSA9IGZvcm0gPj0gMCA/IGZvcm0gOiAoMzYwICsgZm9ybSk7XG4gICAgICAgIHZhciB0byA9IHRvICUgMzYwO1xuICAgICAgICB0byA9IHRvID49IDAgPyB0byA6ICgzNjAgKyB0byk7XG4gICAgICAgIHZhciBkaXMgPSBNYXRoLmFicyh0byAtIGZvcm0pO1xuICAgICAgICBpZihkaXMgPiAxODApXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlmKGZvcm0gPCB0bylcbiAgICAgICAgICAgICAgICB0byA9IHRvIC0gMzYwXG4gICAgICAgICAgICBlbHNlIGlmKGZvcm0gPiB0bylcbiAgICAgICAgICAgICAgICB0byA9IHRvICsgMzYwXG4gICAgICAgIH1cbiAgICAgICAgdmFyIG5leHQgPSBVdGlsaXQuTGVycChmb3JtLHRvLGRlbHRhKTtcbiAgICAgICAgcmV0dXJuIG5leHQ7XG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyBnZXRSb3RhdGlvbkJ5RGlyKHYgOiBMYXlhLlBvaW50KSA6IG51bWJlclxuICAgIHsgICBcbiAgICAgICAgdmFyIGRvdFZhbHVlID0gKHYueCAqIFV0aWxpdC5wb2luRG93bi54KSArICh2LnkgKiAgVXRpbGl0LnBvaW5Eb3duLnkpO1xuICAgICAgICB2YXIgY29zID0gZG90VmFsdWUgLyAodi5kaXN0YW5jZSgwLDApICAqIFV0aWxpdC5wb2luRG93bi5kaXN0YW5jZSgwLDApKTtcbiAgICAgICAgdmFyIHJhZGlhbiA9IE1hdGguYWNvcyhjb3MpXG4gICAgICAgIHZhciByb3RhdGlvbiA9IHJhZGlhbiAvICgyICogTWF0aC5QSSkgICogMzYwO1xuICAgICAgICBpZih2LnggPCAwKVxuICAgICAgICB7XG4gICAgICAgICAgICByb3RhdGlvbiA9IC1yb3RhdGlvbjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcm90YXRpb247XG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyBnZXRSb3RhdGlvbkJ5RGlyT24zRFNwYWNlKHYgOiBMYXlhLlBvaW50KVxuICAgIHtcbiAgICAgICAgdmFyIGRvdFZhbHVlID0gKHYueCAqIFV0aWxpdC5wb2luVXAueCkgKyAodi55ICogIFV0aWxpdC5wb2luVXAueSk7XG4gICAgICAgIHZhciBjb3MgPSBkb3RWYWx1ZSAvICh2LmRpc3RhbmNlKDAsMCkgICogVXRpbGl0LnBvaW5VcC5kaXN0YW5jZSgwLDApKTtcbiAgICAgICAgdmFyIHJhZGlhbiA9IE1hdGguYWNvcyhjb3MpXG4gICAgICAgIHZhciByb3RhdGlvbiA9IHJhZGlhbiAvICgyICogTWF0aC5QSSkgICogMzYwO1xuICAgICAgICBpZih2LnggPCAwKVxuICAgICAgICB7XG4gICAgICAgICAgICByb3RhdGlvbiA9IHJvdGF0aW9uICsgKDE4MCAtIHJvdGF0aW9uKSAqIDI7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJvdGF0aW9uO1xuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0RGlyQnlSb3RhdGlvbihyb3RhdGlvbiA6IG51bWJlcikgOiBMYXlhLlBvaW50XG4gICAgeyAgIFxuICAgICAgICB2YXIgcmFkaWFuID0gKHJvdGF0aW9uIC0gOTApICogTWF0aC5QSSAvIDE4MDsvLyAtOTAg5piv6L2s5o2i5Yiw5Zy65pmv5Z2Q5qCH57O7XG4gICAgICAgIHZhciB4ID0gTWF0aC5jb3MocmFkaWFuKTtcbiAgICAgICAgdmFyIHkgPSBNYXRoLnNpbihyYWRpYW4pO1xuICAgICAgICB2YXIgcG9pbnQgPSBuZXcgTGF5YS5Qb2ludCh4LHkpO1xuICAgICAgICBwb2ludC5ub3JtYWxpemUoKTtcbiAgICAgICAgcmV0dXJuIHBvaW50O1xuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0RGlyRGlyQW5nbGUoZGlyMSA6IExheWEuUG9pbnQsZGlyMiA6IExheWEuUG9pbnQpIDogbnVtYmVyXG4gICAgeyAgIFxuICAgICAgICB2YXIgZG90VmFsdWUgPSAoZGlyMS54ICogZGlyMi54KSArIChkaXIxLnkgKiAgZGlyMi55KTtcbiAgICAgICAgdmFyIGNvcyA9IGRvdFZhbHVlIC8gKGRpcjEuZGlzdGFuY2UoMCwwKSAgKiBkaXIyLmRpc3RhbmNlKDAsMCkpO1xuICAgICAgICB2YXIgcmFkaWFuID0gTWF0aC5hY29zKGNvcylcbiAgICAgICAgdmFyIGFuZ2xlID0gcmFkaWFuIC8gKDIgKiBNYXRoLlBJKSAgKiAzNjA7XG4gICAgICAgIHJldHVybiBhbmdsZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIGdldERpclNjYWxhckxlbmd0aChkaXIgOiBMYXlhLlBvaW50KSA6IG51bWJlclxuICAgIHtcbiAgICAgICAgdmFyIHNsID0gTWF0aC5zcXJ0KGRpci54ICogZGlyLnggKyBkaXIueSAqIGRpci55KTtcbiAgICAgICAgcmV0dXJuIHNsO1xuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgc2V0U3BPblBhcmVudENlbnRlcihzcCA6IExheWEuU3ByaXRlKVxuICAgIHtcbiAgICAgICAgaWYobnVsbCA9PSBzcC5wYXJlbnQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHZhciBwc3AgPSBzcC5wYXJlbnQgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgIHZhciB4ICA9IDA7XG4gICAgICAgIHZhciB5ICA9IDA7XG4gICAgICAgIHZhciB4ICA9IHggLSBzcC53aWR0aCAvIDIgKiBzcC5zY2FsZVggKyBwc3Aud2lkdGggLyAyO1xuICAgICAgICB2YXIgeSAgPSB5IC0gc3AuaGVpZ2h0IC8gMiAgKiBzcC5zY2FsZVkgICsgcHNwLmhlaWdodCAvIDI7XG4gICAgICAgIHNwLnggPSB4O1xuICAgICAgICBzcC55ID0geTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIGdldFBvaW50VG9MaW5lRGlzdGFuY2UoeCA6IG51bWJlcix5IDogbnVtYmVyLExpbmVTdGFydCA6IExheWEuUG9pbnQsTGluZUVuZCA6IExheWEuUG9pbnQpIDogbnVtYmVyXG4gICAge1xuICAgICAgICB2YXIgdG9TdGFydERpciA9IG5ldyBMYXlhLlBvaW50KHggIC0gTGluZVN0YXJ0LngseSAtIExpbmVTdGFydC55KTtcbiAgICAgICAgdmFyIHRvRW5kRGlyID0gbmV3IExheWEuUG9pbnQoeCAgLSBMaW5lRW5kLngseSAtIExpbmVFbmQueSk7XG4gICAgICAgIHZhciBsaW5lRGlyID0gbmV3IExheWEuUG9pbnQoTGluZUVuZC54IC0gTGluZVN0YXJ0LnksTGluZUVuZC55IC0gTGluZVN0YXJ0LnkpXG4gICAgICAgIHZhciBkb3RUb1N0YXJ0RGlyID0gKGxpbmVEaXIueCAqIHRvU3RhcnREaXIueCkgKyAobGluZURpci55ICogdG9TdGFydERpci55KVxuICAgICAgICBpZihkb3RUb1N0YXJ0RGlyIDw9IDApXG4gICAgICAgIHtcbiAgICAgICAgICAgIHJldHVybiB0b1N0YXJ0RGlyLmRpc3RhbmNlKDAsMCk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGRvdFRvRW5kRGlyID0gKGxpbmVEaXIueCAqIHRvRW5kRGlyLngpICsgKGxpbmVEaXIueSAqIHRvRW5kRGlyLnkpXG4gICAgICAgIGlmIChkb3RUb0VuZERpciA8PSAwKVxuICAgICAgICB7XG4gICAgICAgICAgICByZXR1cm4gdG9FbmREaXIuZGlzdGFuY2UoMCwwKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgdG9TdGFydERpcyA9IHRvU3RhcnREaXIuZGlzdGFuY2UoMCwwKTtcbiAgICAgICAgdmFyIGxpbmVEaXJEaXMgPSBsaW5lRGlyLmRpc3RhbmNlKDAsMCk7XG4gICAgICAgIHZhciBjb3MgPSBkb3RUb1N0YXJ0RGlyIC8gKHRvU3RhcnREaXMgKiBsaW5lRGlyRGlzKTtcbiAgICAgICAgdmFyIHJhZGlhbnMgPSBNYXRoLmFjb3MoY29zKVxuICAgICAgICB2YXIgZGlzID0gTWF0aC5zaW4ocmFkaWFucykgKiB0b1N0YXJ0RGlzXG4gICAgICAgIHJldHVybiBkaXM7XG4gICAgfVxuXG5cbiAgICBwdWJsaWMgc3RhdGljIGlzSXBob25lWCgpXG4gICAge1xuICAgICAgICBpZighTGF5YS5Ccm93c2VyLm9uSVBob25lKVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB2YXIgcmF0ZSA9IDgyOCAvIDE3OTI7XG4gICAgICAgIGlmKChMYXlhLkJyb3dzZXIud2lkdGggLyAgTGF5YS5Ccm93c2VyLmhlaWdodCA8PSByYXRlKSB8fCAoTGF5YS5Ccm93c2VyLmhlaWdodCAvICBMYXlhLkJyb3dzZXIud2lkdGggPD0gcmF0ZSkpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIC8vIGlmKChMYXlhLkJyb3dzZXIud2lkdGggPT0gMjQzNiAmJiBMYXlhLkJyb3dzZXIuaGVpZ2h0ID09IDExMjUpIFxuICAgICAgICAvLyAgICAgfHwgKExheWEuQnJvd3Nlci5oZWlnaHQgPT0gMjQzNiAmJiBMYXlhLkJyb3dzZXIud2lkdGggPT0gMTEyNSkpXG4gICAgICAgIC8vIHtcbiAgICAgICAgLy8gICAgIHJldHVybiB0cnVlXG4gICAgICAgIC8vIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfSBcblxuICAgIHB1YmxpYyBzdGF0aWMgaXNJcGhvbmUoKVxuICAgIHtcbiAgICAgICAgcmV0dXJuIExheWEuQnJvd3Nlci5vbklQaG9uZVxuICAgIH1cblxuXG4gICAgcHVibGljIHN0YXRpYyBnZXRDaGlsZChub2RlIDogTGF5YS5Ob2RlLG5hbWUgOiBzdHJpbmcpIDogTGF5YS5Ob2RlXG4gICAge1xuICAgICAgICBmb3IodmFyIGk9MDtpIDwgbm9kZS5udW1DaGlsZHJlbjsrK2kpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHZhciBjaGlsZCA9IG5vZGUuZ2V0Q2hpbGRBdChpKTtcbiAgICAgICAgICAgIGlmKGNoaWxkLm5hbWUgPT0gbmFtZSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY2hpbGQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdmFyIHRhcmdldCA9IFV0aWxpdC5nZXRDaGlsZChjaGlsZCxuYW1lKTtcbiAgICAgICAgICAgICAgICBpZih0YXJnZXQpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0YXJnZXQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyBmb3JFYWNoQ2hpbGQobm9kZSA6IExheWEuTm9kZSxlYWNoIDogRnVuY3Rpb24pXG4gICAge1xuICAgICAgICBmb3IobGV0IGk9MDtpIDwgbm9kZS5udW1DaGlsZHJlbjsrK2kpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGxldCBjaGlsZCA9IG5vZGUuZ2V0Q2hpbGRBdChpKTtcbiAgICAgICAgICAgIGVhY2goY2hpbGQpO1xuICAgICAgICAgICAgVXRpbGl0LmZvckVhY2hDaGlsZChjaGlsZCxlYWNoKTtcbiAgICAgICAgfVxuICAgIH1cbn0iLCJpbXBvcnQgeyBTa2luQ29uZmlnRGF0YSB9IGZyb20gXCIuLi8uLi9Db25maWcvU2tpbkNvbmZpZ1wiO1xuaW1wb3J0IFVzZXIgZnJvbSBcIi4uLy4uL1VzZXIvVXNlclwiO1xuaW1wb3J0IFFRTWluaUdhbWVBUEkgZnJvbSBcIi4uLy4uL1FRTWluaUdhbWVBUElcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQWN0b3JTa2luQm94IGV4dGVuZHMgTGF5YS5TY3JpcHQgXG57XG4gICAgcHJvdGVjdGVkIF9zZWxlY3RCZyA6IExheWEuU3ByaXRlO1xuICAgIHByb3RlY3RlZCBfdW5sb2NrQmcgOiBMYXlhLlNwcml0ZTtcbiAgICBwcm90ZWN0ZWQgX2x1Y2tCZyA6IExheWEuU3ByaXRlO1xuXG4gICAgcHJvdGVjdGVkIF9jcnlzdGFsVW5sb2NrQnRuIDogTGF5YS5TcHJpdGU7XG4gICAgcHJvdGVjdGVkIF9jcnlzdGFsQ29zdFRleHQgOiBMYXlhLlRleHQ7XG4gICAgcHJvdGVjdGVkIF92ZWRpb1VubG9ja0J0biA6IExheWEuU3ByaXRlO1xuICAgIHByb3RlY3RlZCBfdmVkaW9Db3N0VGV4dCA6IExheWEuVGV4dDtcbiAgICBwcm90ZWN0ZWQgX3Nob3dTa2luOkxheWEuU3ByaXRlOyAgICBcblxuICAgIHByb3RlY3RlZCBfZGF0YSA6IFNraW5Db25maWdEYXRhID0gbnVsbDtcblxuICAgIG9uQXdha2UoKVxuICAgIHtcbiAgICAgICAgdGhpcy5fc2VsZWN0QmcgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiU2VsZWN0XCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl91bmxvY2tCZyA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJVbmxvY2tcIikgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgIHRoaXMuX2x1Y2tCZyA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJMb2NrXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl9zaG93U2tpbiA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJTaG93U2tpblwiKSBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgdGhpcy5fY3J5c3RhbFVubG9ja0J0biA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJDcnlzdGFsVW5sb2NrQnRuXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl9jcnlzdGFsQ29zdFRleHQgPSB0aGlzLl9jcnlzdGFsVW5sb2NrQnRuLmdldENoaWxkQnlOYW1lKFwiVGV4dFwiKSBhcyBMYXlhLlRleHQ7XG4gICAgICAgIHRoaXMuX3ZlZGlvVW5sb2NrQnRuID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIlZlZGlvVW5sb2NrQnRuXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl92ZWRpb0Nvc3RUZXh0ID0gdGhpcy5fdmVkaW9VbmxvY2tCdG4uZ2V0Q2hpbGRCeU5hbWUoXCJUZXh0XCIpIGFzIExheWEuVGV4dDtcbiAgICB9XG5cbiAgICBvbkVuYWJsZSgpXG4gICAge1xuICAgICAgICB0aGlzLl91bmxvY2tCZy5vbihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5vblNwQ2xpY2spO1xuICAgICAgICB0aGlzLl9jcnlzdGFsVW5sb2NrQnRuLm9uKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uQ3J5c3RhbFVubG9ja0J0bik7XG4gICAgICAgIHRoaXMuX3ZlZGlvVW5sb2NrQnRuLm9uKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uVmVkaW9VbmxvY2tCdG4pO1xuICAgIH1cblxuICAgIG9uRGlzYWJsZSgpXG4gICAge1xuICAgICAgICB0aGlzLl91bmxvY2tCZy5vZmYoTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25TcENsaWNrKTtcbiAgICAgICAgdGhpcy5fY3J5c3RhbFVubG9ja0J0bi5vZmYoTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25DcnlzdGFsVW5sb2NrQnRuKTtcbiAgICAgICAgdGhpcy5fdmVkaW9VbmxvY2tCdG4ub2ZmKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uVmVkaW9VbmxvY2tCdG4pO1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXREYXRhKGRhdGEgOiBTa2luQ29uZmlnRGF0YSlcbiAgICB7XG4gICAgICAgIHRoaXMuX2RhdGEgPSBkYXRhO1xuICAgICAgICB0aGlzLl9zaG93U2tpbi5sb2FkSW1hZ2UoXCJzdWJSZXMvcGxheWVyL1wiKyBkYXRhLnNraW5JbmRleCArXCIucG5nXCIpXG4gICAgICAgIHRoaXMuX3NlbGVjdEJnLnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5fdW5sb2NrQmcudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLl9sdWNrQmcudmlzaWJsZSA9IGZhbHNlO1xuXG4gICAgICAgIHRoaXMuX2NyeXN0YWxVbmxvY2tCdG4udmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLl92ZWRpb1VubG9ja0J0bi52aXNpYmxlID0gZmFsc2U7XG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgaWYobnVsbCAhPSB0aGlzLl9kYXRhKVxuICAgICAgICB7XG4gICAgICAgICAgICBpZihVc2VyLmFjdG9yU2tpbklzVW5sb2NrKHRoaXMuX2RhdGEuc2tpbkluZGV4KSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpZihVc2VyLmdldEN1ckFjdG9yU2tpbigpID09IHRoaXMuX2RhdGEuc2tpbkluZGV4KVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fc2VsZWN0QmcudmlzaWJsZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3VubG9ja0JnLnZpc2libGUgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9sdWNrQmcudmlzaWJsZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgaWYodGhpcy5fZGF0YS5jb3N0RGlhbW9uZCA+IDAgKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY3J5c3RhbFVubG9ja0J0bi52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY3J5c3RhbENvc3RUZXh0LnRleHQgPSBTdHJpbmcodGhpcy5fZGF0YS5jb3N0RGlhbW9uZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYodGhpcy5fZGF0YS52ZWRpbyA+IDApXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl92ZWRpb1VubG9ja0J0bi52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fdmVkaW9Db3N0VGV4dC50ZXh0ID0gXCIwL1wiICsgU3RyaW5nKHRoaXMuX2RhdGEudmVkaW8pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByb3RlY3RlZCBvblNwQ2xpY2soKVxuICAgIHtcbiAgICAgICAgaWYobnVsbCAhPSB0aGlzLl9kYXRhICYmIFVzZXIuYWN0b3JTa2luSXNVbmxvY2sodGhpcy5fZGF0YS5za2luSW5kZXgpKVxuICAgICAgICB7XG4gICAgICAgICAgICBVc2VyLnNldEN1ckFjdG9yU2tpbih0aGlzLl9kYXRhLnNraW5JbmRleCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgb25DcnlzdGFsVW5sb2NrQnRuKClcbiAgICB7XG4gICAgICAgIGlmKG51bGwgIT0gdGhpcy5fZGF0YSBcbiAgICAgICAgICAgICYmIHRoaXMuX2RhdGEuY29zdERpYW1vbmQgPiAwIFxuICAgICAgICAgICAgJiYgVXNlci5nZXRDcnlzdGFsKCkgPj0gdGhpcy5fZGF0YS5jb3N0RGlhbW9uZClcbiAgICAgICAge1xuICAgICAgICAgICAgVXNlci5zdWJDcnlzdGFsKHRoaXMuX2RhdGEuY29zdERpYW1vbmQpO1xuICAgICAgICAgICAgdmFyIHNraW5JbmRleCA9IHRoaXMuX2RhdGEuc2tpbkluZGV4O1xuICAgICAgICAgICAgaWYoVXNlci51bmxvY2tBY3RvclNraW4oc2tpbkluZGV4KSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBVc2VyLnNldEN1ckFjdG9yU2tpbihza2luSW5kZXgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uVmVkaW9VbmxvY2tCdG4oKVxuICAgIHtcbiAgICAgICAgaWYobnVsbCAhPSB0aGlzLl9kYXRhICYmIHRoaXMuX2RhdGEudmVkaW8gPiAwKVxuICAgICAgICB7XG4gICAgICAgICAgICB2YXIgc2tpbkluZGV4ID0gdGhpcy5fZGF0YS5za2luSW5kZXg7XG4gICAgICAgICAgICBRUU1pbmlHYW1lQVBJLnNob3dSZXdhcmRlZFZpZGVvQWQoKG9rKT0+XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaWYob2spXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBpZihVc2VyLnVubG9ja0FjdG9yU2tpbihza2luSW5kZXgpKVxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBVc2VyLnNldEN1ckFjdG9yU2tpbihza2luSW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwoKT0+XG4gICAgICAgICAgICB7XG5cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICB9XG59IiwiaW1wb3J0IFZpZXdCYXNlIGZyb20gXCIuLi9WaWV3QmFzZVwiO1xuaW1wb3J0IFV0aWxpdCBmcm9tIFwiLi4vLi4vVXRpbGl0XCI7XG5pbXBvcnQgRXZlbnRNZ3IgZnJvbSBcIi4uLy4uL0V2ZW50L0V2ZW50TWdyXCI7XG5pbXBvcnQgeyBFdmVudERlZiB9IGZyb20gXCIuLi8uLi9FdmVudC9FdmVudERlZlwiO1xuaW1wb3J0IEFjdG9yU2tpbkJveCBmcm9tIFwiLi9BY3RvclNraW5Cb3hcIjtcbmltcG9ydCBTa2luQ29uZmlnLCB7IFNraW5Db25maWdEYXRhIH0gZnJvbSBcIi4uLy4uL0NvbmZpZy9Ta2luQ29uZmlnXCI7XG5pbXBvcnQgVXNlciBmcm9tIFwiLi4vLi4vVXNlci9Vc2VyXCI7XG5pbXBvcnQgQ2FjaGVkUVFCYW5uZXJBZCBmcm9tIFwiLi4vLi4vQ2FjaGVkUVFCYW5uZXJBZFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBY3RvclNraW5WaWV3IGV4dGVuZHMgVmlld0Jhc2VcbntcbiAgICBwcm90ZWN0ZWQgX3RvcFpvbmUgOiBMYXlhLkNsaXA7XG4gICAgcHJvdGVjdGVkIF9jcnlzdGFsVGV4dCA6IExheWEuVGV4dDtcbiAgICBwcm90ZWN0ZWQgX2VuZXJneVRleHQgOiBMYXlhLlRleHQ7XG4gICAgcHJvdGVjdGVkIF9jbG9zZUJ0biA6IExheWEuU3ByaXRlO1xuXG4gICAgcHJvdGVjdGVkIF9jZW50ZXJab25lIDogTGF5YS5DbGlwO1xuICAgIHByb3RlY3RlZCBfc2tpblN0YXRlTGlzdCA6IExheWEuTGlzdDtcblxuICAgIG9uQXdha2UoKVxuICAgIHtcbiAgICAgICAgdGhpcy5fdG9wWm9uZSA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJUb3Bab25lXCIpIGFzIExheWEuQ2xpcDtcbiAgICAgICAgaWYoVXRpbGl0LmlzSXBob25lWCgpKVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLl90b3Bab25lLnRvcCA9IDcwO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2NyeXN0YWxUZXh0ID0gdGhpcy5fdG9wWm9uZS5nZXRDaGlsZEJ5TmFtZShcIkNyeXN0YWxcIikuZ2V0Q2hpbGRCeU5hbWUoXCJUZXh0XCIpIGFzIExheWEuVGV4dDtcbiAgICAgICAgdGhpcy5fZW5lcmd5VGV4dCA9IHRoaXMuX3RvcFpvbmUuZ2V0Q2hpbGRCeU5hbWUoXCJFbmVyZ3lcIikuZ2V0Q2hpbGRCeU5hbWUoXCJUZXh0XCIpIGFzIExheWEuVGV4dDtcbiAgICAgICAgdGhpcy5fY2xvc2VCdG4gPSB0aGlzLl90b3Bab25lLmdldENoaWxkQnlOYW1lKFwiQ2xvc2VCdG5cIikgYXMgTGF5YS5TcHJpdGU7XG5cbiAgICAgICAgdGhpcy5fY2VudGVyWm9uZSA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJDZW50ZXJab25lXCIpIGFzIExheWEuQ2xpcDtcbiAgICAgICAgdGhpcy5fc2tpblN0YXRlTGlzdCA9IHRoaXMuX2NlbnRlclpvbmUuZ2V0Q2hpbGRCeU5hbWUoXCJMaXN0XCIpIGFzIExheWEuTGlzdDtcbiAgICAgICAgdGhpcy5fc2tpblN0YXRlTGlzdC5yZW5kZXJIYW5kbGVyID0gTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLm9uTGlzdFJlbmRlciwgbnVsbCwgZmFsc2UpO1xuICAgICAgICB0aGlzLl9za2luU3RhdGVMaXN0LmhTY3JvbGxCYXJTa2luID0gXCJcIjtcbiAgICB9XG5cbiAgICBhZGRFdmVudCgpXG4gICAge1xuICAgICAgICB0aGlzLl9jbG9zZUJ0bi5vbihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5jbG9zZVZpZXcpO1xuXG4gICAgICAgIEV2ZW50TWdyLmluc3RhbmNlLnJlZ0V2ZW10KEV2ZW50RGVmLkdhbWVfT25Vc2VyQ3J5c3RhbENoYW5nZSx0aGlzLHRoaXMub25DcnlzdGFsQ2hhbmdlKTtcbiAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UucmVnRXZlbXQoRXZlbnREZWYuR2FtZV9PblVzZXJFbmVyZ3lDaGFuZ2UsdGhpcyx0aGlzLm9uRW5lcmd5Q2hhbmdlKTtcbiAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UucmVnRXZlbXQoRXZlbnREZWYuR2FtZV9PblVzZXJVbmxvY2tBY3RvclNraW4sdGhpcyx0aGlzLnJlZnJlc2hBY3RvclNraW5TdGF0ZUxpc3QpO1xuICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5yZWdFdmVtdChFdmVudERlZi5HYW1lX09uVXNlckFjdG9yU2tpbkNoYW5nZSx0aGlzLHRoaXMucmVmcmVzaEFjdG9yU2tpblN0YXRlTGlzdCk7XG4gICAgfVxuXG4gICAgcmVtb3ZlRXZlbnQoKVxuICAgIHtcbiAgICAgICAgdGhpcy5fY2xvc2VCdG4ub24oTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMuY2xvc2VWaWV3KTtcbiAgICAgICAgXG4gICAgICAgIEV2ZW50TWdyLmluc3RhbmNlLnJlbW92ZUV2ZW50KEV2ZW50RGVmLkdhbWVfT25Vc2VyQ3J5c3RhbENoYW5nZSx0aGlzLHRoaXMub25DcnlzdGFsQ2hhbmdlKTtcbiAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UucmVtb3ZlRXZlbnQoRXZlbnREZWYuR2FtZV9PblVzZXJFbmVyZ3lDaGFuZ2UsdGhpcyx0aGlzLm9uRW5lcmd5Q2hhbmdlKTtcbiAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UucmVtb3ZlRXZlbnQoRXZlbnREZWYuR2FtZV9PblVzZXJVbmxvY2tBY3RvclNraW4sdGhpcyx0aGlzLnJlZnJlc2hBY3RvclNraW5TdGF0ZUxpc3QpO1xuICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5yZW1vdmVFdmVudChFdmVudERlZi5HYW1lX09uVXNlckFjdG9yU2tpbkNoYW5nZSx0aGlzLHRoaXMucmVmcmVzaEFjdG9yU2tpblN0YXRlTGlzdCk7XG4gICAgfVxuXG4gICAgcHVibGljIG9wZW5WaWV3KGRhdGE/OiBhbnkpOiB2b2lkIFxuICAgIHtcbiAgICAgICAgc3VwZXIub3BlblZpZXcoZGF0YSk7XG4gICAgICAgIHRoaXMucmVmcmVzaEFjdG9yU2tpblN0YXRlTGlzdCgpO1xuICAgICAgICBDYWNoZWRRUUJhbm5lckFkLmhpZGUoKTtcbiAgICAgICAgdmFyIGN1cnJlbnRTa2luSW5kZXggPSBVc2VyLmdldEN1ckFjdG9yU2tpbigpO1xuICAgICAgICBmb3IodmFyIGk9MDtpIDwgdGhpcy5fc2tpblN0YXRlTGlzdC5hcnJheS5sZW5ndGg7KytpKVxuICAgICAgICB7XG4gICAgICAgICAgICBpZih0aGlzLl9za2luU3RhdGVMaXN0LmFycmF5W2ldLnNraW5JbmRleCA9PSBjdXJyZW50U2tpbkluZGV4KVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRoaXMuX3NraW5TdGF0ZUxpc3Quc2Nyb2xsVG8oaSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLl9jcnlzdGFsVGV4dC50ZXh0ID0gU3RyaW5nKFVzZXIuZ2V0Q3J5c3RhbCgpKTtcbiAgICAgICAgdGhpcy5fZW5lcmd5VGV4dC50ZXh0ID0gU3RyaW5nKFVzZXIuZ2V0RW5lcmd5KCkpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBvbkNyeXN0YWxDaGFuZ2UocGFyYSlcbiAgICB7XG4gICAgICAgIHZhciBjdXJyIDogbnVtYmVyID0gcGFyYS5jdXJyO1xuICAgICAgICB2YXIgbGFzdCA6IG51bWJlciA9IHBhcmEubGFzdDtcbiAgICAgICAgdGhpcy5fY3J5c3RhbFRleHQudGV4dCA9IFN0cmluZyhjdXJyKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgb25FbmVyZ3lDaGFuZ2UocGFyYSlcbiAgICB7XG4gICAgICAgIHZhciBjdXJyIDogbnVtYmVyID0gcGFyYS5jdXJyO1xuICAgICAgICB2YXIgbGFzdCA6IG51bWJlciA9IHBhcmEubGFzdDtcbiAgICAgICAgdGhpcy5fZW5lcmd5VGV4dC50ZXh0ID0gU3RyaW5nKGN1cnIpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBvbkxpc3RSZW5kZXIoY2VsbDogTGF5YS5Cb3gsIGluZGV4OiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgdmFyIGRhdGEgPSB0aGlzLl9za2luU3RhdGVMaXN0LmFycmF5W2luZGV4XSBhcyBTa2luQ29uZmlnRGF0YTtcbiAgICAgICAgdmFyIGJveCA6IEFjdG9yU2tpbkJveCA9IGNlbGwuZ2V0Q29tcG9uZW50KEFjdG9yU2tpbkJveCkgYXMgQWN0b3JTa2luQm94O1xuICAgICAgICBib3guc2V0RGF0YShkYXRhKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgcmVmcmVzaEFjdG9yU2tpblN0YXRlTGlzdCgpXG4gICAge1xuICAgICAgICB2YXIgc2tpbkRhdGFzID0gU2tpbkNvbmZpZy5nZXRJbnN0YW5jZSgpLmdldFNraW5Db25maWdEYXRhcygpO1xuICAgICAgICB2YXIgZGF0YUFycmF5ID0gbmV3IEFycmF5PFNraW5Db25maWdEYXRhPigpO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNraW5EYXRhcy5sZW5ndGg7ICsraSkgIFxuICAgICAgICB7XG4gICAgICAgICAgICB2YXIgZGF0YSA9IHNraW5EYXRhc1tpXS5jbG9uZSgpO1xuICAgICAgICAgICAgZGF0YUFycmF5LnB1c2goZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fc2tpblN0YXRlTGlzdC5hcnJheSA9IGRhdGFBcnJheTtcbiAgICB9XG59IiwiaW1wb3J0IFNvdW5kTWdyIGZyb20gXCIuLi9NZ3IvU291bmRNZ3JcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQnV0dG9uQW5pbSBleHRlbmRzIExheWEuU2NyaXB0IHtcblxuICAgIHB1YmxpYyB1c2VTb3VuZCA6IGJvb2xlYW4gID0gdHJ1ZTtcblxuICAgIGNvbnN0cnVjdG9yKCkgeyBzdXBlcigpOyB9XG5cbiAgICBvbkF3YWtlKCk6IHZvaWQge1xuICAgICAgICB0aGlzLm93bmVyLm9uKExheWEuRXZlbnQuTU9VU0VfRE9XTiwgdGhpcywgdGhpcy5vbkRvd24pO1xuICAgICAgICB0aGlzLm93bmVyLm9uKExheWEuRXZlbnQuTU9VU0VfVVAsIHRoaXMsIHRoaXMub25VcCk7XG4gICAgICAgIHRoaXMub3duZXIub24oTGF5YS5FdmVudC5NT1VTRV9PVVQsIHRoaXMsIHRoaXMub25VcCk7XG4gICAgfVxuXG4gICAgb25EaXNhYmxlKCk6IHZvaWQge1xuICAgICAgICB0aGlzLm93bmVyLm9mZkFsbCgpO1xuICAgICAgICBMYXlhLlR3ZWVuLmNsZWFyQWxsKHRoaXMpO1xuICAgIH1cblxuICAgIHB1YmxpYyBvbkRvd24oKTogdm9pZCB7XG4gICAgICAgIExheWEuVHdlZW4udG8odGhpcy5vd25lciwgeyBzY2FsZVg6IDAuOSwgc2NhbGVZOiAwLjkgfSwgNTApO1xuICAgICAgICBpZih0aGlzLnVzZVNvdW5kKVxuICAgICAgICB7XG4gICAgICAgICAgICBTb3VuZE1nci5pbnN0YW5jZS5wbGF5U291bmQoXCJhbm5pdVwiKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgb25VcCgpOiB2b2lkIHtcbiAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLm93bmVyLCB7IHNjYWxlWDogMSwgc2NhbGVZOiAxIH0sIDUwKTtcbiAgICB9XG59IiwiaW1wb3J0IFZpZXdCYXNlIGZyb20gXCIuLi8uLi9WaWV3L1ZpZXdCYXNlXCI7XG5pbXBvcnQgeyBFdmVudERlZiB9IGZyb20gXCIuLi8uLi9FdmVudC9FdmVudERlZlwiO1xuaW1wb3J0IEV2ZW50TWdyIGZyb20gXCIuLi8uLi9FdmVudC9FdmVudE1nclwiO1xuaW1wb3J0IEFwcFN3aXRjaENvbmZpZyBmcm9tIFwiLi4vLi4vQ29uZmlnL0FwcFN3aXRjaENvbmZpZ1wiO1xuaW1wb3J0IFd1ZGlhbk1nciBmcm9tIFwiLi4vLi4vTWdyL1d1ZGlhbk1nclwiO1xuaW1wb3J0IENhY2hlZFdYQmFubmVyQWQgZnJvbSBcIi4uLy4uL0NhY2hlZFdYQmFubmVyQWRcIjtcbi8qKlxuICog54uC54K556qX5Y+j5L2/55So6IyD5L6L5aaC5LiLXG4gICAgLy/pppblhYjliKTmlq3ni4Lngrnlip/og73lvIDlhbNXdWRpYW5NZ3IuV3VkaWFuRmxhZ+aYr+WQpuaJk+W8gO+8jOWmguaenOayoeaJk+W8gOWwseebtOaOpei3s+i/h+aVtOS4qumAu+i+kVxuICAgIFd1ZGlhbk1nci5HZXRJcEJsb2NrU3RhdGUoKTsvL+WcqOa4uOaIj+mHjOWIneWni+WMlueahOaXtuWAmeiwg+eUqOi/meS4quaWueazleWIneWni+WMlklw5bGP6JS9ZmxhZ1xuICAgIC8v5bCG6L+Z5q615Luj56CB5o+S5YWl6ZyA6KaB6LCD55So54uC54K556qX5Y+j55qE5Zyw5pa5XG4gICAgbGV0IGRhdGEgOiBhbnkgPSB7fTtcbiAgICAvL+eLgueCuemAu+i+keWujOaIkOWQjueahOWbnuiwg+aWueazlVxuICAgIGRhdGEuQ29tcGxldGUgPSBmdW5jdGlvbigpe1xuICAgICAgICBjb25zb2xlLmxvZyhcIueLgueCueaMiemSrue7k+adn1wiKTsvL+WcqOi/memHjOWGmeWFpeeLgueCueeql+WPo+e7k+adn+WQjumcgOimgeiwg+eUqOeahOmAu+i+ke+8jOS+i+WmguW8ueWHuue7k+eul+mhtemdolxuICAgIH1cbiAgICAvLyDlrozmiJDngrnlh7vkuYvlkI7ojrflvpfnmoTlpZblirHmlbDph4/vvIzkvp3nhaflkITpobnnm67kuI3lkIzoh6rooYzlrp7njrBcbiAgICBkYXRhLlByaXplQ291bnQgPSAzMDtcbiAgICAvLyDlnKjosIPnlKjnqpflj6PliY3lv4XpobvlhbPpl63lvZPliY3mraPlnKjmmL7npLrnmoTlrpjmlrlCYW5uZXLlub/lkYrvvIzov5nkuKrnqpflj6PmiY3og73mraPluLjov5DooYzvvIzlhbfkvZPnmoTpgLvovpHlkITkurrpnIDoh6rooYzlrp7njrBcbiAgICAvLyDogIzkuJTlhbPpl63lrpjmlrlCYW5uZXLlj6/ku6XnqI3lvq7mj5Dml6nkuIDkupvvvIzpgb/lhY3popHnuYHosIPnlKjlh7rplJnmiJbogIXkuI3nqLPlrppcbiAgICBFdmVudF9QS19NZ3IuaW5zdGFuY2UuZGlzcGF0Y2goRXZlbnRfUEtfRGVmLkFEX0Nsb3NlQmFubmVyLCB0cnVlKTsvL+i/meWPpeS7o+eggeaYr+aIkeeUqOadpeWFs+mXreWumOaWuUJhbm5lcu+8jOWQhOmhueebruiHquihjOWunueOsFxuICAgIFZpZXdNZ3IuaW5zdGFuY2Uub3BlblZpZXcoVmlld0RlZi5DbGlja0dldFByaXplLGRhdGEpO1xuICogXG4gKiBAZXhwb3J0XG4gKiBAY2xhc3MgQ2xpY2tHZXRQcml6ZVxuICogQGV4dGVuZHMge1ZpZXdCYXNlfVxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDbGlja0dldFByaXplIGV4dGVuZHMgVmlld0Jhc2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpO1xuICAgIH1cbiAgICBwcml2YXRlIF9jbGlja19CdG46IExheWEuQnV0dG9uOy8v57uZ55So5oi354uC54K555qE5oyJ6ZKuXG4gICAgcHJpdmF0ZSBfYXJyb3dfSW1nOiBMYXlhLkltYWdlOy8v566t5aS077yM55So5LqO57uZ55So5oi35o+Q56S6XG4gICAgcHJpdmF0ZSBfb3Blbl9CdG46IExheWEuU3ByaXRlO1xuICAgIHByaXZhdGUgX2Jhbm5lckFkX1ZpZXc6IExheWEuVUlDb21wb25lbnQ7XG4gICAgcHJpdmF0ZSBfY2xpY2tUaW1lX1BCYXI6IExheWEuSW1hZ2U7Ly/ov5vluqbmnaHog4zmma9cbiAgICBwcml2YXRlIF9jbGlja1RpbWVfUEJhciRCYXI6IExheWEuSW1hZ2U7Ly/ov5vluqbmnaHnu4Tku7ZcbiAgICBwcml2YXRlIF9nZXRQcml6ZV9WaWV3OiBMYXlhLlVJQ29tcG9uZW50O1xuICAgIHByaXZhdGUgX3ByaXplQ291bnRfVGV4dDogTGF5YS5UZXh0O1xuICAgIHByaXZhdGUgX2NvbmZpcm1fQnRuOiBMYXlhLlNwcml0ZTtcbiAgICBwcml2YXRlIF9iZzogTGF5YS5VSUNvbXBvbmVudDtcbiAgICBwcml2YXRlIF9jbGlja1Byb2dyZXNzOiBudW1iZXI7Ly/ov5vluqbmnaHnu4Tku7bnmoTlrr3luqbvvIzms6jmhI9JZGXkuK3kuIDlrpropoHloavlhpnov5vluqbmnaHnu4Tku7bnmoRXaWR0aOWxnuaAp1xuICAgIHByaXZhdGUgX2NsaWNrQmFyT3JpZ2luYWxXaWR0aDogbnVtYmVyO1xuICAgIHByaXZhdGUgX2NsaWNrVGltZTogbnVtYmVyOy8v55So5p2l5L+d5a2Y55So5oi35b2T5YmN54K55Ye75qyh5pWwXG4gICAgcHJpdmF0ZSBfdG90YWxDbGlja1RpbWU6IG51bWJlcjsvL+eUqOS6juiuoeeul+WuouaIt+aAu+WFseeCueWHu+S6huWkmuWwkeasoeaMiemSrlxuICAgIHByaXZhdGUgX3RvdGFsQ2xpY2tUaW1lcjogbnVtYmVyID0gMjI7Ly/nlKjmiLfkuIDnm7TmsqHkuK3lpZfot6/vvIzpgqPkuYjngrnlh7vkuobov5nkuYjlpJrmrKHpg73ov5jmmK/orqnku5bnu6fnu63njqnkuIvljrvvvIzkuI3opoHljaHmrbvnqIvluo9cbiAgICBwcml2YXRlIF9uZWVkQ2xpY2tUaW1lOiBudW1iZXIgPSAxMDsvL+S4gOWFseeCueWkmuWwkeasoeiDveWkn+iOt+W+l+WlluWKse+8jOeUqOS6juaYvuekuui/m+W6puadoVxuICAgIHByaXZhdGUgX2Jhbm5lckNsaWNrVGltZTogbnVtYmVyID0gNzsvL+eCueWkmuWwkeasoeW8gOWni+aYvuekumJhbm5lcnLlpZfot6/nlKjmiLfvvIzlj6/lvq7osIMgICAgXG4gICAgcHJpdmF0ZSBfcHJpemVDb3VudDogbnVtYmVyOy8v6I635b6X55qE5aWW5Yqx5pWw6YeP77yM6ZyA6KaB5Zyo5omT5byA56qX5Y+j5pe25Lyg5YWl5Y+C5pWwXG4gICAgcHJpdmF0ZSBfYXJyb3dVcDogYm9vbGVhbjtcbiAgICBwcml2YXRlIF9iYW5uZXJDbGlja2VkOiBib29sZWFuO1xuICAgIHByaXZhdGUgX2NvbXBlbGV0RnVuY3Rpb246IEZ1bmN0aW9uO1xuICAgIC8vIHByaXZhdGUgX3d1ZGlhbkxvYWRGbGFnOiBib29sZWFuO1xuICAgIG9uQXdha2UoKSB7XG4gICAgICAgIHRoaXMuX2NsaWNrX0J0biA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJDbGlja19CdG5cIikgYXMgTGF5YS5CdXR0b247XG4gICAgICAgIHRoaXMuX2NsaWNrX0J0bi5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLkJ1dHRvbkNsaWNrZWQpO1xuICAgICAgICB0aGlzLl9hcnJvd19JbWcgPSB0aGlzLl9jbGlja19CdG4uZ2V0Q2hpbGRCeU5hbWUoXCJBcnJvd19JbWdcIikgYXMgTGF5YS5JbWFnZTtcbiAgICAgICAgdGhpcy5fYmcgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiQkdcIikgYXMgTGF5YS5VSUNvbXBvbmVudDtcbiAgICAgICAgdGhpcy5fb3Blbl9CdG4gPSB0aGlzLl9iZy5nZXRDaGlsZEJ5TmFtZShcIk9wZW5fQnRuXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl9nZXRQcml6ZV9WaWV3ID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkdldFByaXplX1ZpZXdcIikgYXMgTGF5YS5VSUNvbXBvbmVudDtcbiAgICAgICAgdGhpcy5fcHJpemVDb3VudF9UZXh0ID0gdGhpcy5fZ2V0UHJpemVfVmlldy5nZXRDaGlsZEJ5TmFtZShcIlByaXplQ291bnRfVGV4dFwiKSBhcyBMYXlhLlRleHQ7XG4gICAgICAgIHRoaXMuX2NvbmZpcm1fQnRuID0gdGhpcy5fZ2V0UHJpemVfVmlldy5nZXRDaGlsZEJ5TmFtZShcIkNvbmZpcm1fQnRuXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl9nZXRQcml6ZV9WaWV3LnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5fY2xpY2tUaW1lX1BCYXIgPSB0aGlzLl9iZy5nZXRDaGlsZEJ5TmFtZShcIkNsaWNrVGltZV9QQmFyXCIpIGFzIExheWEuSW1hZ2U7XG4gICAgICAgIHRoaXMuX2NsaWNrVGltZV9QQmFyJEJhciA9IHRoaXMuX2NsaWNrVGltZV9QQmFyLmdldENoaWxkQnlOYW1lKFwiQ2xpY2tUaW1lX1BCYXIkQmFyXCIpIGFzIExheWEuSW1hZ2U7XG4gICAgICAgIHRoaXMuX2NsaWNrQmFyT3JpZ2luYWxXaWR0aCA9IHRoaXMuX2NsaWNrVGltZV9QQmFyJEJhci53aWR0aDtcbiAgICAgICAgdGhpcy5fYmFubmVyQWRfVmlldyA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJCYW5uZXJBZF9WaWV3XCIpIGFzIExheWEuVUlDb21wb25lbnQ7XG4gICAgICAgIHRoaXMuX2NsaWNrVGltZV9QQmFyJEJhci53aWR0aCA9IDA7XG4gICAgICAgIHRoaXMuX2NsaWNrVGltZSA9IDA7XG4gICAgICAgIHRoaXMuX3RvdGFsQ2xpY2tUaW1lID0gMDtcbiAgICAgICAgLy9FdmVudE1nci5pbnN0YW5jZS5yZWdPbmNlRXZlbnQoRXZlbnREZWYuQURfV3VkaWFuQmFubmVyX0xvYWRDb21wbGV0ZSwgdGhpcywgdGhpcy5XdWRpYW5Mb2FkQ29tcGxldGUpO1xuICAgIH1cblxuICAgIG9uVXBkYXRlKCkge1xuICAgICAgICAvKiDnrq3lpLTkuIrkuIvnp7vliqggKi9cbiAgICAgICAgaWYgKHRoaXMuX2Fycm93VXApIHtcbiAgICAgICAgICAgIHRoaXMuX2Fycm93X0ltZy50b3AgKz0gTGF5YS50aW1lci5kZWx0YSAvIDU7XG4gICAgICAgICAgICBpZiAodGhpcy5fYXJyb3dfSW1nLnRvcCA+IC0xNDApIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9hcnJvd1VwID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLl9hcnJvd19JbWcudG9wIC09IExheWEudGltZXIuZGVsdGEgLyA1O1xuICAgICAgICAgICAgaWYgKHRoaXMuX2Fycm93X0ltZy50b3AgPCAtMTgwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fYXJyb3dVcCA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLyog5oyJ6ZKu5LiN5oyJ77yM6L+b5bqm5p2h6Ieq5Yqo6YCA5ZueICovXG4gICAgICAgIGlmICghdGhpcy5fYmFubmVyQ2xpY2tlZCkge1xuICAgICAgICAgICAgbGV0IHNwZCA9IDIgKyAodGhpcy5fY2xpY2tUaW1lX1BCYXIkQmFyLndpZHRoIC8gdGhpcy5fY2xpY2tCYXJPcmlnaW5hbFdpZHRoKSAqIDY7XG4gICAgICAgICAgICBpZiAodGhpcy5fY2xpY2tUaW1lX1BCYXIkQmFyLndpZHRoID49IHNwZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2NsaWNrVGltZV9QQmFyJEJhci53aWR0aCAtPSBzcGQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoKHRoaXMuX2NsaWNrVGltZV9QQmFyJEJhci53aWR0aCAvIHRoaXMuX2NsaWNrQmFyT3JpZ2luYWxXaWR0aCkgKyAwLjEgPCAodGhpcy5fY2xpY2tUaW1lIC8gdGhpcy5fbmVlZENsaWNrVGltZSkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9jbGlja1RpbWUtLTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBlbHNlIHtcbiAgICAgICAgLy8gICAgIGlmICh0aGlzLl9jbGlja1RpbWVfUEJhciRCYXIud2lkdGggPD0gdGhpcy5fY2xpY2tCYXJPcmlnaW5hbFdpZHRoKSB7XG4gICAgICAgIC8vICAgICAgICAgdGhpcy5fY2xpY2tUaW1lX1BCYXIkQmFyLndpZHRoICs9IDI7XG4gICAgICAgIC8vICAgICAgICAgaWYgKHRoaXMuX2NsaWNrVGltZV9QQmFyJEJhci53aWR0aCA+IHRoaXMuX2NsaWNrQmFyT3JpZ2luYWxXaWR0aCkge1xuICAgICAgICAvLyAgICAgICAgICAgICB0aGlzLl9jbGlja1RpbWVfUEJhciRCYXIud2lkdGggPSB0aGlzLl9jbGlja0Jhck9yaWdpbmFsV2lkdGhcbiAgICAgICAgLy8gICAgICAgICB9XG4gICAgICAgIC8vICAgICB9XG4gICAgICAgIC8vIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICog5omT5byAQmFubmVyXG4gICAgICogXG4gICAgICogQHBhcmFtIHsqfSBbZGF0YV0gXG4gICAgICogQG1lbWJlcm9mIENsaWNrR2V0UHJpemVcbiAgICAgKi9cbiAgICBvcGVuVmlldyhkYXRhPzogYW55KSB7XG4gICAgICAgIHRoaXMuX2NvbXBlbGV0RnVuY3Rpb24gPSBkYXRhLkNvbXBsZXRlO1xuICAgICAgICB0aGlzLl9wcml6ZUNvdW50ID0gZGF0YS5Qcml6ZUNvdW50O1xuICAgICAgICBzdXBlci5vcGVuVmlldyhkYXRhKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICog55So5oi35oiQ5Yqf6I635b6X5aWW5YqxXG4gICAgICogXG4gICAgICogQG1lbWJlcm9mIENsaWNrR2V0UHJpemVcbiAgICAgKi9cbiAgICBPcGVuUHJpemVXaW5kb3coKSB7XG4gICAgICAgIHRoaXMuX2JnLnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xuICAgICAgICB0aGlzLl9wcml6ZUNvdW50X1RleHQudGV4dCA9IHRoaXMuX3ByaXplQ291bnQudG9TdHJpbmcoKTtcbiAgICAgICAgdGhpcy5fZ2V0UHJpemVfVmlldy52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgLyog56Gu6K6k5oyJ6ZKuICovXG4gICAgICAgIHRoaXMuX2NvbmZpcm1fQnRuLm9uY2UoTGF5YS5FdmVudC5DTElDSywgdGhpcywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKHNlbGYuX2NvbXBlbGV0RnVuY3Rpb24pIHtcbiAgICAgICAgICAgICAgICBzZWxmLl9jb21wZWxldEZ1bmN0aW9uKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZWxmLmNsb3NlVmlldygpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICog6K+v54K56aKE5Yqg6L295a6M5oiQXG4gICAgICogXG4gICAgICogQG1lbWJlcm9mIENsaWNrR2V0UHJpemVcbiAgICAgKi9cbiAgICAvLyBXdWRpYW5Mb2FkQ29tcGxldGUoKSB7XG4gICAgLy8gICAgIGNvbnNvbGUubG9nKFwiV3VkaWFuQmFubmVy6aKE5Yqg6L295a6M5q+VXCIpO1xuICAgIC8vICAgICB0aGlzLl93dWRpYW5Mb2FkRmxhZyA9IHRydWU7XG4gICAgLy8gfVxuICAgIC8qKlxuICAgICAqIOWwhkJhbm5lcuaYvuekulxuICAgICAqIFxuICAgICAqIEBtZW1iZXJvZiBDbGlja0dldFByaXplXG4gICAgICovXG4gICAgU2hvd0Jhbm5lcigpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJBRF9XdWRpYW5CYW5uZXJfU2hvd1wiKTtcbiAgICAgICAgQ2FjaGVkV1hCYW5uZXJBZC5zaG93KCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIOeLgueCueaMiemSrumAu+i+kVxuICAgICAqIFxuICAgICAqIFxuICAgICAqIEBtZW1iZXJvZiBDbGlja0dldFByaXplXG4gICAgICovXG4gICAgQnV0dG9uQ2xpY2tlZCgpIHtcbiAgICAgICAgdGhpcy5fY2xpY2tUaW1lKys7XG4gICAgICAgIHRoaXMuX3RvdGFsQ2xpY2tUaW1lKys7XG4gICAgICAgIC8vbmFubmVy5LiA55u05rKh5Yqg6L295oiQ5YqfLOS/neaMgei/m+W6puadoVxuICAgICAgICBpZiAodGhpcy5fY2xpY2tUaW1lID4gdGhpcy5fbmVlZENsaWNrVGltZSkge1xuICAgICAgICAgICAgdGhpcy5fY2xpY2tUaW1lID0gdGhpcy5fbmVlZENsaWNrVGltZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5fY2xpY2tUaW1lID49IHRoaXMuX2Jhbm5lckNsaWNrVGltZSAvKiYmIHRoaXMuX3d1ZGlhbkxvYWRGbGFnKi8pIHtcbiAgICAgICAgICAgIGlmICh0aGlzLl9jbGlja1RpbWUgPj0gdGhpcy5fbmVlZENsaWNrVGltZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2NsaWNrVGltZSA9IHRoaXMuX25lZWRDbGlja1RpbWUgLSAxO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fYmFubmVyQ2xpY2tlZCA9IHRydWU7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIuivr+eCuUJhbm5lcuWll+i3r+WQr+WKqFwiKTtcbiAgICAgICAgICAgIC8v55So5oi36L+e54K577yM5Ye6YmFubmVyXG4gICAgICAgICAgICB0aGlzLlNob3dCYW5uZXIoKTtcbiAgICAgICAgICAgIExheWEudGltZXIub25jZSgyMDAwLCB0aGlzLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5CYW5uZXJDbGlja2VkKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICAvL+eUqOaIt+S4gOebtOayoeiiq+Wll+i3r+WIsO+8jOiuqeS7lue7p+e7reeOqVxuICAgICAgICBlbHNlIGlmICh0aGlzLl90b3RhbENsaWNrVGltZSA+IHRoaXMuX3RvdGFsQ2xpY2tUaW1lcikge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCLnlKjmiLfkuIDnm7TmsqHngrnliLDvvIzmlL7ku5bkuIDpqaxcIiwgdGhpcy5fdG90YWxDbGlja1RpbWUpO1xuICAgICAgICAgICAgdGhpcy5CYW5uZXJDbGlja2VkKCk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHByb2dyZXNzID0gKHRoaXMuX2NsaWNrVGltZSAvIHRoaXMuX25lZWRDbGlja1RpbWUpICogdGhpcy5fY2xpY2tCYXJPcmlnaW5hbFdpZHRoO1xuICAgICAgICB0aGlzLl9jbGlja1RpbWVfUEJhciRCYXIud2lkdGggPSBwcm9ncmVzcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQmFubmVy5bey57uP54K55Ye75LmL5ZCO77yM6K6p55So5oi36I635b6X5aWW5YqxXG4gICAgICogXG4gICAgICogQG1lbWJlcm9mIENsaWNrR2V0UHJpemVcbiAgICAgKi9cbiAgICBCYW5uZXJDbGlja2VkKCkge1xuICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5kaXNwYXRjaChFdmVudERlZi5BRF9XdWRpYW5CYW5uZXJfSGlkZSk7XG4gICAgICAgIHRoaXMuX2Jhbm5lckNsaWNrZWQgPSB0cnVlO1xuICAgICAgICB0aGlzLl9jbGlja1RpbWUgPSB0aGlzLl9uZWVkQ2xpY2tUaW1lO1xuICAgICAgICB0aGlzLl9jbGlja1RpbWVfUEJhciRCYXIud2lkdGggPSB0aGlzLl9jbGlja0Jhck9yaWdpbmFsV2lkdGg7XG4gICAgICAgIHRoaXMuX2NsaWNrX0J0bi52aXNpYmxlID0gZmFsc2U7XG4gICAgICAgIHRoaXMuX29wZW5fQnRuLnZpc2libGUgPSB0cnVlO1xuICAgICAgICAvLyB0aGlzLl9iYW5uZXJBZF9WaWV3LnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgLy8gdGhpcy5fYmFubmVyQWRfVmlldy5hY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5PcGVuUHJpemVXaW5kb3coKTtcbiAgICB9XG5cbiAgICBvbkRlc3Ryb3koKVxuICAgIHtcbiAgICAgICAgc3VwZXIub25EZXN0cm95KCk7XG4gICAgICAgIENhY2hlZFdYQmFubmVyQWQuaGlkZSgpO1xuICAgIH1cbn0iLCJpbXBvcnQgVmlld0Jhc2UgZnJvbSBcIi4uLy4uL1ZpZXcvVmlld0Jhc2VcIjtcbmltcG9ydCBXdWRpYW5NZ3IgZnJvbSBcIi4uLy4uL01nci9XdWRpYW5NZ3JcIjtcbmltcG9ydCBRUU1pbmlHYW1lQVBJIGZyb20gXCIuLi8uLi9RUU1pbmlHYW1lQVBJXCI7XG5pbXBvcnQgQXBwU3dpdGNoQ29uZmlnIGZyb20gXCIuLi8uLi9Db25maWcvQXBwU3dpdGNoQ29uZmlnXCI7XG5pbXBvcnQgVXNlciBmcm9tIFwiLi4vLi4vVXNlci9Vc2VyXCI7XG5pbXBvcnQgRXZlbnRNZ3IgZnJvbSBcIi4uLy4uL0V2ZW50L0V2ZW50TWdyXCI7XG5pbXBvcnQgeyBFdmVudERlZiB9IGZyb20gXCIuLi8uLi9FdmVudC9FdmVudERlZlwiO1xuaW1wb3J0IENhY2hlZFFRQmFubmVyQWQgZnJvbSBcIi4uLy4uL0NhY2hlZFFRQmFubmVyQWRcIjtcblxuLyoqXG4gKiDni4Lngrnnqpflj6Pkvb/nlKjojIPkvovlpoLkuItcbiAgICAvL+mmluWFiOWIpOaWreeLgueCueWKn+iDveW8gOWFs1d1ZGlhbk1nci5XdWRpYW5GbGFn5piv5ZCm5omT5byA77yM5aaC5p6c5rKh5omT5byA5bCx55u05o6l6Lez6L+H5pW05Liq6YC76L6RXG4gICAgV3VkaWFuTWdyLkdldElwQmxvY2tTdGF0ZSgpOy8v5Zyo5ri45oiP6YeM5Yid5aeL5YyW55qE5pe25YCZ6LCD55So6L+Z5Liq5pa55rOV5Yid5aeL5YyWSXDlsY/olL1mbGFnXG4gICAgLy/lsIbov5nmrrXku6PnoIHmj5LlhaXpnIDopoHosIPnlKjni4Lngrnnqpflj6PnmoTlnLDmlrlcbiAgICBsZXQgZGF0YSA6IGFueSA9IHt9O1xuICAgIC8v54uC54K56YC76L6R5a6M5oiQ5ZCO55qE5Zue6LCD5pa55rOVXG4gICAgZGF0YS5Db21wbGV0ZSA9IGZ1bmN0aW9uKCl7XG4gICAgICAgIGNvbnNvbGUubG9nKFwi54uC54K55oyJ6ZKu57uT5p2fXCIpOy8v5Zyo6L+Z6YeM5YaZ5YWl54uC54K556qX5Y+j57uT5p2f5ZCO6ZyA6KaB6LCD55So55qE6YC76L6R77yM5L6L5aaC5by55Ye657uT566X6aG16Z2iXG4gICAgfVxuICAgIC8vIOWujOaIkOeCueWHu+S5i+WQjuiOt+W+l+eahOWlluWKseaVsOmHj++8jOS+neeFp+WQhOmhueebruS4jeWQjOiHquihjOWunueOsFxuICAgIGRhdGEuUHJpemVDb3VudCA9IDMwO1xuICAgIC8vIOWcqOiwg+eUqOeql+WPo+WJjeW/hemhu+WFs+mXreW9k+WJjeato+WcqOaYvuekuueahOWumOaWuUJhbm5lcuW5v+WRiu+8jOi/meS4queql+WPo+aJjeiDveato+W4uOi/kOihjO+8jOWFt+S9k+eahOmAu+i+keWQhOS6uumcgOiHquihjOWunueOsFxuICAgIC8vIOiAjOS4lOWFs+mXreWumOaWuUJhbm5lcuWPr+S7peeojeW+ruaPkOaXqeS4gOS6m++8jOmBv+WFjemikee5geiwg+eUqOWHuumUmeaIluiAheS4jeeos+WumlxuICAgIEV2ZW50TWdyLmluc3RhbmNlLmRpc3BhdGNoKEV2ZW50RGVmLkFEX0Nsb3NlQmFubmVyLCB0cnVlKTsvL+i/meWPpeS7o+eggeaYr+aIkeeUqOadpeWFs+mXreWumOaWuUJhbm5lcu+8jOWQhOmhueebruiHquihjOWunueOsFxuICAgIFZpZXdNZ3IuaW5zdGFuY2Uub3BlblZpZXcoVmlld0RlZi5DbGlja0dldFByaXplLGRhdGEpO1xuICogXG4gKiBAZXhwb3J0XG4gKiBAY2xhc3MgQ2xpY2tHZXRQcml6ZVxuICogQGV4dGVuZHMge1ZpZXdCYXNlfVxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDbGlja0dldFByaXplXzIgZXh0ZW5kcyBWaWV3QmFzZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgfVxuICAgIHByaXZhdGUgX2NsaWNrMV9CdG46IExheWEuQnV0dG9uOy8v57uZ55So5oi354uC54K555qE5oyJ6ZKuXG4gICAgcHJpdmF0ZSBfY2xpY2syX0J0bjogTGF5YS5CdXR0b247Ly/nu5nnlKjmiLfni4LngrnnmoTmjInpkq5cbiAgICBwcml2YXRlIF9hcnJvd19JbWc6IExheWEuSW1hZ2U7Ly/nrq3lpLTvvIznlKjkuo7nu5nnlKjmiLfmj5DnpLpcbiAgICAvLyBwcml2YXRlIF9vcGVuX0J0bjogTGF5YS5TcHJpdGU7XG4gICAgcHJpdmF0ZSBfYmFubmVyQWRfVmlldzogTGF5YS5VSUNvbXBvbmVudDtcbiAgICBwcml2YXRlIF9jbGlja1RpbWVfUEJhcjogTGF5YS5JbWFnZTsvL+i/m+W6puadoeiDjOaZr1xuICAgIHByaXZhdGUgX2NsaWNrVGltZV9QQmFyJEJhcjogTGF5YS5JbWFnZTsvL+i/m+W6puadoee7hOS7tlxuICAgIHByaXZhdGUgX2dldFByaXplX1ZpZXc6IExheWEuVUlDb21wb25lbnQ7XG4gICAgcHJpdmF0ZSBfcHJpemVDb3VudF9UZXh0OiBMYXlhLlRleHQ7XG4gICAgcHJpdmF0ZSBfY29uZmlybV9CdG46IExheWEuU3ByaXRlO1xuICAgIHByaXZhdGUgX2JnOiBMYXlhLlVJQ29tcG9uZW50O1xuICAgIHByaXZhdGUgX2NsaWNrUHJvZ3Jlc3M6IG51bWJlcjsvL+i/m+W6puadoee7hOS7tueahOWuveW6pu+8jOazqOaEj0lkZeS4reS4gOWumuimgeWhq+WGmei/m+W6puadoee7hOS7tueahFdpZHRo5bGe5oCnXG4gICAgcHJpdmF0ZSBfY2xpY2tCYXJPcmlnaW5hbFdpZHRoOiBudW1iZXI7XG4gICAgcHJpdmF0ZSBfY2xpY2tUaW1lOiBudW1iZXI7Ly/nlKjmnaXkv53lrZjnlKjmiLflvZPliY3ngrnlh7vmrKHmlbBcbiAgICBwcml2YXRlIF90b3RhbENsaWNrVGltZTogbnVtYmVyOy8v55So5LqO6K6h566X5a6i5oi35oC75YWx54K55Ye75LqG5aSa5bCR5qyh5oyJ6ZKuXG4gICAgcHJpdmF0ZSBfdG90YWxDbGlja1RpbWVyOiBudW1iZXIgPSAyMjsvL+eUqOaIt+S4gOebtOayoeS4reWll+i3r++8jOmCo+S5iOeCueWHu+S6hui/meS5iOWkmuasoemDvei/mOaYr+iuqeS7lue7p+e7reeOqeS4i+WOu++8jOS4jeimgeWNoeatu+eoi+W6j1xuICAgIHByaXZhdGUgX25lZWRDbGlja1RpbWU6IG51bWJlciA9IDEwOy8v5LiA5YWx54K55aSa5bCR5qyh6IO95aSf6I635b6X5aWW5Yqx77yM55So5LqO5pi+56S66L+b5bqm5p2hXG4gICAgcHJpdmF0ZSBfYmFubmVyQ2xpY2tUaW1lOiBudW1iZXIgPSA2Oy8v54K55aSa5bCR5qyh5byA5aeL5pi+56S6YmFubmVycuWll+i3r+eUqOaIt++8jOWPr+W+ruiwgyAgICBcbiAgICBwcml2YXRlIF9wcml6ZUNvdW50OiBudW1iZXI7Ly/ojrflvpfnmoTlpZblirHmlbDph4/vvIzpnIDopoHlnKjmiZPlvIDnqpflj6Pml7bkvKDlhaXlj4LmlbBcbiAgICBwcml2YXRlIF9hcnJvd1VwOiBib29sZWFuID0gZmFsc2U7XG4gICAgcHJpdmF0ZSBfYmFubmVyQ2xpY2tlZDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgcHJpdmF0ZSBfY29tcGVsZXRIYW5kZXI6IExheWEuSGFuZGxlcjtcbiAgICBwcml2YXRlIF9ibG9ja01hc2s6IExheWEuVUlDb21wb25lbnQ7XG4gICAgcHJpdmF0ZSBfY2xpY2tTa2VsZXRvbl9QYXI6IExheWEuU3ByaXRlO1xuICAgIHByaXZhdGUgX2NsaWNrU2tlbGV0b246IExheWEuU2tlbGV0b247XG4gICAgcHJpdmF0ZSBfcHVuY2hTa2VsZXRvbjogTGF5YS5Ta2VsZXRvbjtcbiAgICBwcml2YXRlIF9wdW5jaFNrZWxldG9uX1BhcjogTGF5YS5TcHJpdGU7XG4gICAgcHJpdmF0ZSBfcHVuY2hUaW1lcjogbnVtYmVyID0gMDtcbiAgICBwcml2YXRlIF93dWRpYW5Mb2FkRmxhZzogYm9vbGVhbjtcbiAgICBwcml2YXRlIF9jbGlja1R5cGU6IG51bWJlcjtcbiAgICBwcml2YXRlIF9wcml6ZV9JbWc6IExheWEuU3ByaXRlO1xuICAgIHByaXZhdGUgX25vUHJpemVfVGV4dDogTGF5YS5UZXh0O1xuICAgIG9uQXdha2UoKSB7XG4gICAgICAgIC8vIGxvY2FsU3RvcmFnZS5jbGVhcigpO1xuICAgICAgICB0aGlzLl9jbGljazFfQnRuID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkNsaWNrMV9CdG5cIikgYXMgTGF5YS5CdXR0b247XG4gICAgICAgIHRoaXMuX2NsaWNrMV9CdG4ub24oTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5CdXR0b25DbGlja2VkKTtcbiAgICAgICAgdGhpcy5fY2xpY2syX0J0biA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJDbGljazJfQnRuXCIpIGFzIExheWEuQnV0dG9uO1xuICAgICAgICB0aGlzLl9jbGljazJfQnRuLm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMuQnV0dG9uQ2xpY2tlZCk7XG4gICAgICAgIHRoaXMuX2Fycm93X0ltZyA9IHRoaXMuX2NsaWNrMl9CdG4uZ2V0Q2hpbGRCeU5hbWUoXCJBcnJvd19JbWdcIikgYXMgTGF5YS5JbWFnZTtcbiAgICAgICAgdGhpcy5fYmcgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiQkdcIikgYXMgTGF5YS5VSUNvbXBvbmVudDtcbiAgICAgICAgLy8gdGhpcy5fb3Blbl9CdG4gPSB0aGlzLl9iZy5nZXRDaGlsZEJ5TmFtZShcIk9wZW5fQnRuXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl9nZXRQcml6ZV9WaWV3ID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkdldFByaXplX1ZpZXdcIikgYXMgTGF5YS5VSUNvbXBvbmVudDtcbiAgICAgICAgdGhpcy5fcHJpemVDb3VudF9UZXh0ID0gdGhpcy5fZ2V0UHJpemVfVmlldy5nZXRDaGlsZEJ5TmFtZShcIlByaXplQ291bnRfVGV4dFwiKSBhcyBMYXlhLlRleHQ7XG4gICAgICAgIHRoaXMuX2NvbmZpcm1fQnRuID0gdGhpcy5fZ2V0UHJpemVfVmlldy5nZXRDaGlsZEJ5TmFtZShcIkNvbmZpcm1fQnRuXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl9jb25maXJtX0J0bi5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLmNsb3NlVmlldyk7XG4gICAgICAgIHRoaXMuX2dldFByaXplX1ZpZXcudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLl9jbGlja1RpbWVfUEJhciA9IHRoaXMuX2JnLmdldENoaWxkQnlOYW1lKFwiQ2xpY2tUaW1lX1BCYXJcIikgYXMgTGF5YS5JbWFnZTtcbiAgICAgICAgdGhpcy5fY2xpY2tUaW1lX1BCYXIkQmFyID0gdGhpcy5fY2xpY2tUaW1lX1BCYXIuZ2V0Q2hpbGRCeU5hbWUoXCJDbGlja1RpbWVfUEJhciRCYXJcIikgYXMgTGF5YS5JbWFnZTtcbiAgICAgICAgdGhpcy5fY2xpY2tCYXJPcmlnaW5hbFdpZHRoID0gdGhpcy5fY2xpY2tUaW1lX1BCYXIkQmFyLndpZHRoO1xuICAgICAgICB0aGlzLl9iYW5uZXJBZF9WaWV3ID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkJhbm5lckFkX1ZpZXdcIikgYXMgTGF5YS5VSUNvbXBvbmVudDtcbiAgICAgICAgdGhpcy5fY2xpY2tUaW1lX1BCYXIkQmFyLndpZHRoID0gMDtcbiAgICAgICAgdGhpcy5fY2xpY2tUaW1lID0gMDtcbiAgICAgICAgdGhpcy5fdG90YWxDbGlja1RpbWUgPSAwO1xuICAgICAgICB0aGlzLl9ibG9ja01hc2sgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiQmxvY2tcIikgYXMgTGF5YS5VSUNvbXBvbmVudDtcbiAgICAgICAgLy9FdmVudE1nci5pbnN0YW5jZS5yZWdPbmNlRXZlbnQoRXZlbnREZWYuQURfV3VkaWFuQmFubmVyX0xvYWRDb21wbGV0ZSwgdGhpcywgdGhpcy5XdWRpYW5Mb2FkQ29tcGxldGUpO1xuICAgICAgICB0aGlzLl9wdW5jaFNrZWxldG9uX1BhciA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJQdW5ja19Ta2VsZXRvblwiKSBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgdGhpcy5fcHVuY2hTa2VsZXRvbiA9IG5ldyBMYXlhLlNrZWxldG9uKCk7XG4gICAgICAgIHRoaXMuX3B1bmNoU2tlbGV0b24ubG9hZChcInN1YlJlcy9zcGluZS9DaGFyYWN0ZXIvTmV3UHJvamVjdC5za1wiLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX3B1bmNoU2tlbGV0b25fUGFyLmFkZENoaWxkKHRoaXMuX3B1bmNoU2tlbGV0b24pO1xuICAgICAgICAgICAgdGhpcy5fcHVuY2hTa2VsZXRvbi5wbGF5KDAsIHRydWUpO1xuICAgICAgICB9KSk7XG4gICAgICAgIHRoaXMuX2NsaWNrU2tlbGV0b25fUGFyID0gdGhpcy5fY2xpY2sxX0J0bi5nZXRDaGlsZEJ5TmFtZShcIkNsaWNrU2tlbGV0b25fUGFyXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl9jbGlja1NrZWxldG9uID0gbmV3IExheWEuU2tlbGV0b24oKTtcbiAgICAgICAgdGhpcy5fY2xpY2tTa2VsZXRvbi5sb2FkKFwic3ViUmVzL3NwaW5lL1RpcC9OZXdQcm9qZWN0LnNrXCIsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5fY2xpY2tTa2VsZXRvbl9QYXIuYWRkQ2hpbGQodGhpcy5fY2xpY2tTa2VsZXRvbik7XG4gICAgICAgICAgICB0aGlzLl9jbGlja1NrZWxldG9uLnBsYXkoMCwgdHJ1ZSk7XG4gICAgICAgIH0pKTtcbiAgICAgICAgdGhpcy5fcHJpemVfSW1nID0gdGhpcy5fZ2V0UHJpemVfVmlldy5nZXRDaGlsZEJ5TmFtZShcIlByaXplX0ltZ1wiKSBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgdGhpcy5fbm9Qcml6ZV9UZXh0ID0gdGhpcy5fZ2V0UHJpemVfVmlldy5nZXRDaGlsZEJ5TmFtZShcIk5vUHJpemVfVGV4dFwiKSBhcyBMYXlhLlRleHQ7XG4gICAgfVxuICAgIG9uVXBkYXRlKCkge1xuICAgICAgICAvKiDnrq3lpLTkuIrkuIvnp7vliqggKi9cbiAgICAgICAgaWYgKHRoaXMuX2Fycm93VXApIHtcbiAgICAgICAgICAgIHRoaXMuX2Fycm93X0ltZy50b3AgKz0gTGF5YS50aW1lci5kZWx0YSAvIDU7XG4gICAgICAgICAgICBpZiAodGhpcy5fYXJyb3dfSW1nLnRvcCA+IC0xNDApIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9hcnJvd1VwID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLl9hcnJvd19JbWcudG9wIC09IExheWEudGltZXIuZGVsdGEgLyA1O1xuICAgICAgICAgICAgaWYgKHRoaXMuX2Fycm93X0ltZy50b3AgPCAtMTgwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fYXJyb3dVcCA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5fcHVuY2hUaW1lciA+IDApIHtcbiAgICAgICAgICAgIHRoaXMuX3B1bmNoVGltZXIgLT0gTGF5YS50aW1lci5kZWx0YTtcbiAgICAgICAgICAgIGlmICh0aGlzLl9wdW5jaFRpbWVyIDw9IDApIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9wdW5jaFNrZWxldG9uLnBsYXkoMCwgdHJ1ZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfVxuICAgICAgICAvKiDmjInpkq7kuI3mjInvvIzov5vluqbmnaHoh6rliqjpgIDlm54gKi9cbiAgICAgICAgaWYgKCF0aGlzLl9iYW5uZXJDbGlja2VkKSB7XG4gICAgICAgICAgICBsZXQgc3BkID0gMiArICh0aGlzLl9jbGlja1RpbWVfUEJhciRCYXIud2lkdGggLyB0aGlzLl9jbGlja0Jhck9yaWdpbmFsV2lkdGgpICogNjtcbiAgICAgICAgICAgIGlmICh0aGlzLl9jbGlja1RpbWVfUEJhciRCYXIud2lkdGggPj0gc3BkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fY2xpY2tUaW1lX1BCYXIkQmFyLndpZHRoIC09IHNwZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICgodGhpcy5fY2xpY2tUaW1lX1BCYXIkQmFyLndpZHRoIC8gdGhpcy5fY2xpY2tCYXJPcmlnaW5hbFdpZHRoKSArIDAuMSA8ICh0aGlzLl9jbGlja1RpbWUgLyB0aGlzLl9uZWVkQ2xpY2tUaW1lKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2NsaWNrVGltZS0tO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIGVsc2Uge1xuICAgICAgICAvLyAgICAgaWYgKHRoaXMuX2NsaWNrVGltZV9QQmFyJEJhci53aWR0aCA8PSB0aGlzLl9jbGlja0Jhck9yaWdpbmFsV2lkdGgpIHtcbiAgICAgICAgLy8gICAgICAgICB0aGlzLl9jbGlja1RpbWVfUEJhciRCYXIud2lkdGggKz0gMjtcbiAgICAgICAgLy8gICAgICAgICBpZiAodGhpcy5fY2xpY2tUaW1lX1BCYXIkQmFyLndpZHRoID4gdGhpcy5fY2xpY2tCYXJPcmlnaW5hbFdpZHRoKSB7XG4gICAgICAgIC8vICAgICAgICAgICAgIHRoaXMuX2NsaWNrVGltZV9QQmFyJEJhci53aWR0aCA9IHRoaXMuX2NsaWNrQmFyT3JpZ2luYWxXaWR0aFxuICAgICAgICAvLyAgICAgICAgIH1cbiAgICAgICAgLy8gICAgIH1cbiAgICAgICAgLy8gfVxuICAgIH1cbiAgICBwdW5jaFBsYXkoKSB7XG4gICAgICAgIGlmICh0aGlzLl9wdW5jaFRpbWVyID4gMCkge1xuICAgICAgICAgICAgdGhpcy5fcHVuY2hTa2VsZXRvbi5wbGF5KDEsIGZhbHNlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuX3B1bmNoU2tlbGV0b24ucGxheSgwLCB0cnVlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBvblNob3coKSB7XG4gICAgICAgIHRoaXMuX2NvbXBlbGV0SGFuZGVyID0gdGhpcy5fZGF0YS5Db21wbGV0ZUhhbmRlcjtcbiAgICAgICAgdGhpcy5fcHJpemVDb3VudCA9IHRoaXMuX2RhdGEuUHJpemVDb3VudDtcbiAgICAgICAgdGhpcy5fY2xpY2tUeXBlID0gdGhpcy5fZGF0YS5DbGlja1R5cGU7XG4gICAgICAgIGlmICh0aGlzLl9jbGlja1R5cGUgPT0gMikge1xuICAgICAgICAgICAgdGhpcy5fY2xpY2sxX0J0bi52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMuX2NsaWNrMl9CdG4udmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHRoaXMuX2NsaWNrVHlwZSA9PSAxKSB7XG4gICAgICAgICAgICB0aGlzLl9jbGljazFfQnRuLnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuX2NsaWNrMl9CdG4udmlzaWJsZSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgQ2FjaGVkUVFCYW5uZXJBZC5oaWRlKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIOeUqOaIt+aIkOWKn+iOt+W+l+WlluWKsVxuICAgICAqIFxuICAgICAqIEBtZW1iZXJvZiBDbGlja0dldFByaXplXG4gICAgICovXG4gICAgT3BlblByaXplV2luZG93KCkge1xuICAgICAgICBsZXQgcmF0ZSA9IEFwcFN3aXRjaENvbmZpZy5nZXRJbnN0YW5jZSgpLmdldEFwcFN3aXRjaERhdGEoKS5za2luUFI7XG4gICAgICAgIGxldCBiZyA9IHRoaXMuX2dldFByaXplX1ZpZXcuZ2V0Q2hpbGRCeU5hbWUoXCJiZ1wiKSBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgYmcudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLl9ub1ByaXplX1RleHQudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLl9iZy52aXNpYmxlID0gZmFsc2U7XG4gICAgICAgIC8vIGxldCByZFJhdGUgPSBNYXRoLnJhbmRvbSgpICogMTAwO1xuICAgICAgICAvLyBpZiAocmRSYXRlID4gcmF0ZSkge1xuICAgICAgICAvLyAgICAgdGhpcy5fcHJpemVDb3VudF9UZXh0LnRleHQgPSB0aGlzLl9wcml6ZUNvdW50LnRvU3RyaW5nKCk7XG4gICAgICAgIC8vICAgICAvLyBsZXQgb3duZWQgPSBTa2luTWdyLkluc3RhbmNlLkN1cnJlbnRTa2luRGF0ZS5Pd25lZDtcbiAgICAgICAgLy8gICAgIFVzZXIuZ2V0QWN0b3JTa2lucygpXG4gICAgICAgIC8vICAgICBsZXQgc2tpbkluZGV4ID0gMDtcbiAgICAgICAgLy8gICAgIGZvciAoc2tpbkluZGV4ID0gMDsgc2tpbkluZGV4IDwgb3duZWQubGVuZ3RoOyBza2luSW5kZXgrKykge1xuICAgICAgICAvLyAgICAgICAgIGxldCBvID0gb3duZWRbc2tpbkluZGV4XTtcbiAgICAgICAgLy8gICAgICAgICBpZiAoIW8pIHtcbiAgICAgICAgLy8gICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIC8vICAgICAgICAgfVxuICAgICAgICAvLyAgICAgfVxuICAgICAgICAvLyAgICAgc2tpbkluZGV4ID0gTWF0aC5taW4oc2tpbkluZGV4LCBvd25lZC5sZW5ndGggLSAxKTtcbiAgICAgICAgLy8gICAgIC8vIFNraW5NZ3IuSW5zdGFuY2UuVW5Mb2NrU2tpbihza2luSW5kZXgpO1xuICAgICAgICAvLyAgICAgLy8gU2tpbk1nci5JbnN0YW5jZS5TZXRDdXJyZW50U2tpbihza2luSW5kZXgpO1xuICAgICAgICAvLyAgICAgLy8gRXZlbnRNZ3IuaW5zdGFuY2UuZGlzcGF0Y2goRXZlbnREZWYuR2FtZV9DaGFuZ2VTa2luLCBbc2tpbkluZGV4XSk7XG4gICAgICAgIC8vICAgICB0aGlzLl9wcml6ZV9JbWcubG9hZEltYWdlKFwic3ViUmVzL3BsYXllci9cIiArIHNraW5JbmRleCArIFwiLnBuZ1wiLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsICgpID0+IHtcbiAgICAgICAgLy8gICAgICAgICBiZy52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgLy8gICAgICAgICB0aGlzLl9nZXRQcml6ZV9WaWV3LnZpc2libGUgPSB0cnVlO1xuICAgICAgICAvLyAgICAgfSkpO1xuICAgICAgICAvLyB9XG4gICAgICAgIC8qIGVsc2UgKi8ge1xuICAgICAgICAgICAgYmcudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICAgICAgKHRoaXMuX2dldFByaXplX1ZpZXcuZ2V0Q2hpbGRCeU5hbWUoXCJUaXRsZVwiKSBhcyBMYXlhLlNwcml0ZSkudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5fcHJpemVDb3VudF9UZXh0LnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuX25vUHJpemVfVGV4dC52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMuX2dldFByaXplX1ZpZXcudmlzaWJsZSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgLyog56Gu6K6k5oyJ6ZKuICovXG4gICAgfVxuICAgIC8qKlxuICAgICAqIOivr+eCuemihOWKoOi9veWujOaIkFxuICAgICAqIFxuICAgICAqIEBtZW1iZXJvZiBDbGlja0dldFByaXplXG4gICAgICovXG4gICAgLy8gV3VkaWFuTG9hZENvbXBsZXRlKCkge1xuICAgIC8vICAgICBjb25zb2xlLmxvZyhcIld1ZGlhbkJhbm5lcumihOWKoOi9veWujOavlVwiKTtcbiAgICAvLyAgICAgdGhpcy5fd3VkaWFuTG9hZEZsYWcgPSB0cnVlO1xuICAgIC8vIH1cbiAgICAvKipcbiAgICAgKiDlsIZCYW5uZXLmmL7npLpcbiAgICAgKiBcbiAgICAgKiBAbWVtYmVyb2YgQ2xpY2tHZXRQcml6ZVxuICAgICAqL1xuICAgIFNob3dCYW5uZXIoKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiQURfV3VkaWFuQmFubmVyX1Nob3dcIik7XG4gICAgICAgIC8vIENhY2hlZFdYQmFubmVyQWQuc2hvdygpO1xuICAgICAgICBpZiAodGhpcy5fY2xpY2tUeXBlID09IDIpIHtcbiAgICAgICAgICAgIFFRTWluaUdhbWVBUEkuc2hvd0FwcEJveEFkKCgpID0+IHsgfSwgKCkgPT4geyB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0aGlzLl9jbGlja1R5cGUgPT0gMSkge1xuICAgICAgICAgICAgQ2FjaGVkUVFCYW5uZXJBZC5jaGFuZ2VTaG93KCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgb25DbG9zZSgpIHtcbiAgICAgICAgaWYgKHRoaXMuX2NvbXBlbGV0SGFuZGVyKSB7XG4gICAgICAgICAgICB0aGlzLl9jb21wZWxldEhhbmRlci5ydW4oKTtcbiAgICAgICAgfVxuICAgICAgICBDYWNoZWRRUUJhbm5lckFkLmhpZGUoKTtcbiAgICAgICAgLy8gaWYgKHRoaXMuX2NsaWNrVHlwZSA9PSAyKSB7XG5cbiAgICAgICAgLy8gfVxuICAgICAgICAvLyBlbHNlIGlmICh0aGlzLl9jbGlja1R5cGUgPT0gMSkge1xuICAgICAgICAvLyAgICAgQ2FjaGVkUVFCYW5uZXJBZC5oaWRlKCk7XG4gICAgICAgIC8vIH1cbiAgICAgICAgc3VwZXIub25DbG9zZSgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiDni4LngrnmjInpkq7pgLvovpFcbiAgICAgKiBcbiAgICAgKiBcbiAgICAgKiBAbWVtYmVyb2YgQ2xpY2tHZXRQcml6ZVxuICAgICAqL1xuICAgIEJ1dHRvbkNsaWNrZWQoKSB7XG4gICAgICAgIHRoaXMuX2Jsb2NrTWFzay52aXNpYmxlID0gZmFsc2U7XG4gICAgICAgIHRoaXMuX3B1bmNoVGltZXIgPSAzMjA7XG4gICAgICAgIHRoaXMuX3B1bmNoU2tlbGV0b24ucGxheSgxLCB0cnVlKTtcbiAgICAgICAgdGhpcy5fY2xpY2tUaW1lKys7XG4gICAgICAgIHRoaXMuX3RvdGFsQ2xpY2tUaW1lKys7XG4gICAgICAgIC8vbmFubmVy5LiA55u05rKh5Yqg6L295oiQ5YqfLOS/neaMgei/m+W6puadoVxuICAgICAgICBpZiAodGhpcy5fY2xpY2tUaW1lID4gdGhpcy5fbmVlZENsaWNrVGltZSkge1xuICAgICAgICAgICAgdGhpcy5fY2xpY2tUaW1lID0gdGhpcy5fbmVlZENsaWNrVGltZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5fY2xpY2tUaW1lID49IHRoaXMuX2Jhbm5lckNsaWNrVGltZSAvKiYmIHRoaXMuX3d1ZGlhbkxvYWRGbGFnKi8gJiYgIXRoaXMuX2Jhbm5lckNsaWNrZWQpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLl9jbGlja1RpbWUgPj0gdGhpcy5fbmVlZENsaWNrVGltZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2NsaWNrVGltZSA9IHRoaXMuX25lZWRDbGlja1RpbWUgLSAxO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fYmFubmVyQ2xpY2tlZCA9IHRydWU7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIuivr+eCuUJhbm5lcuWll+i3r+WQr+WKqFwiKTtcbiAgICAgICAgICAgIC8v55So5oi36L+e54K577yM5Ye6YmFubmVyXG4gICAgICAgICAgICB0aGlzLlNob3dCYW5uZXIoKTtcbiAgICAgICAgICAgIExheWEudGltZXIub25jZSgyMDAwLCB0aGlzLCB0aGlzLkJhbm5lckNsaWNrZWQpO1xuICAgICAgICB9XG4gICAgICAgIC8v55So5oi35LiA55u05rKh6KKr5aWX6Lev5Yiw77yM6K6p5LuW57un57ut546pXG4gICAgICAgIGVsc2UgaWYgKHRoaXMuX3RvdGFsQ2xpY2tUaW1lID4gdGhpcy5fdG90YWxDbGlja1RpbWVyICYmICF0aGlzLl9iYW5uZXJDbGlja2VkKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIueUqOaIt+S4gOebtOayoeeCueWIsO+8jOaUvuS7luS4gOmprFwiLCB0aGlzLl90b3RhbENsaWNrVGltZSk7XG4gICAgICAgICAgICB0aGlzLkJhbm5lckNsaWNrZWQoKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgcHJvZ3Jlc3MgPSAodGhpcy5fY2xpY2tUaW1lIC8gdGhpcy5fbmVlZENsaWNrVGltZSkgKiB0aGlzLl9jbGlja0Jhck9yaWdpbmFsV2lkdGg7XG4gICAgICAgIHRoaXMuX2NsaWNrVGltZV9QQmFyJEJhci53aWR0aCA9IHByb2dyZXNzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBCYW5uZXLlt7Lnu4/ngrnlh7vkuYvlkI7vvIzorqnnlKjmiLfojrflvpflpZblirFcbiAgICAgKiBcbiAgICAgKiBAbWVtYmVyb2YgQ2xpY2tHZXRQcml6ZVxuICAgICAqL1xuICAgIEJhbm5lckNsaWNrZWQoKSB7XG4gICAgICAgIHRoaXMuX2Jhbm5lckNsaWNrZWQgPSB0cnVlO1xuICAgICAgICB0aGlzLl9jbGlja1RpbWUgPSB0aGlzLl9uZWVkQ2xpY2tUaW1lO1xuICAgICAgICB0aGlzLl9jbGlja1RpbWVfUEJhciRCYXIud2lkdGggPSB0aGlzLl9jbGlja0Jhck9yaWdpbmFsV2lkdGg7XG4gICAgICAgIHRoaXMuX2NsaWNrMV9CdG4udmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLl9jbGljazJfQnRuLnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgLy8gdGhpcy5fb3Blbl9CdG4udmlzaWJsZSA9IHRydWU7XG4gICAgICAgIC8vIHRoaXMuX2Jhbm5lckFkX1ZpZXcudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICAvLyB0aGlzLl9iYW5uZXJBZF9WaWV3LmFjdGl2ZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLk9wZW5Qcml6ZVdpbmRvdygpO1xuICAgIH1cbn0iLCJpbXBvcnQgQmFubmVyQWRWaWV3IGZyb20gXCIuLi8uLi9TaGFyZUFkL1ZpZXcvQmFubmVyQWRWaWV3XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVuaXZlcnNhbEJvdHRvbVpvbmUgZXh0ZW5kcyBMYXlhLlNjcmlwdCBcbntcblxuICAgIHByb3RlY3RlZCBfb3duZXJTcHJpdGUgOiBMYXlhLlNwcml0ZTtcbiAgICBwcm90ZWN0ZWQgX2F1dG9ab25lOiBMYXlhLlVJQ29tcG9uZW50O1xuICAgIHByb3RlY3RlZCBfbG9vcEFEWm9uZTogTGF5YS5VSUNvbXBvbmVudDtcbiAgICBwcm90ZWN0ZWQgX2Jhbm5lckFEWm9uZTogTGF5YS5VSUNvbXBvbmVudDtcbiAgICBwcm90ZWN0ZWQgX2Jhbm5lckFkIDogQmFubmVyQWRWaWV3O1xuXG4gICAgb25Bd2FrZSgpXG4gICAge1xuICAgICAgICB0aGlzLl9vd25lclNwcml0ZSA9IHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgIHRoaXMuX2F1dG9ab25lID0gdGhpcy5fb3duZXJTcHJpdGUuZ2V0Q2hpbGRCeU5hbWUoXCJBdXRvWm9uZVwiKSBhcyBMYXlhLlVJQ29tcG9uZW50O1xuICAgICAgICB0aGlzLl9sb29wQURab25lID0gdGhpcy5fb3duZXJTcHJpdGUuZ2V0Q2hpbGRCeU5hbWUoXCJMb29wQURcIikgYXMgTGF5YS5VSUNvbXBvbmVudDsgXG4gICAgICAgIHRoaXMuX2Jhbm5lckFEWm9uZSA9IHRoaXMuX293bmVyU3ByaXRlLmdldENoaWxkQnlOYW1lKFwiQmFubmVyQURcIikgYXMgTGF5YS5VSUNvbXBvbmVudDsgXG4gICAgICAgIHRoaXMuX2Jhbm5lckFkID0gdGhpcy5fYmFubmVyQURab25lLmdldENvbXBvbmVudChCYW5uZXJBZFZpZXcpO1xuICAgIH1cbiAgICBcbiAgICBvbkVuYWJsZSgpOiB2b2lkIFxuICAgIHtcbiAgICAgICAgdmFyIGFzcGVjdFJhdGlvID0gTGF5YS5zdGFnZS53aWR0aCAvIExheWEuc3RhZ2UuaGVpZ2h0O1xuICAgICAgICBpZihhc3BlY3RSYXRpbyAgPCAwLjUpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuX2F1dG9ab25lLmJvdHRvbSA9IHRoaXMuX2xvb3BBRFpvbmUuaGVpZ2h0ICsgdGhpcy5fYmFubmVyQURab25lLmhlaWdodDtcbiAgICAgICAgICAgIHRoaXMuX2xvb3BBRFpvbmUuYm90dG9tID0gdGhpcy5fYmFubmVyQURab25lLmhlaWdodDtcbiAgICAgICAgICAgIHRoaXMuX2Jhbm5lckFEWm9uZS52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuX2F1dG9ab25lLmJvdHRvbSA9IHRoaXMuX2xvb3BBRFpvbmUuaGVpZ2h0O1xuICAgICAgICAgICAgdGhpcy5fbG9vcEFEWm9uZS5ib3R0b20gPSAwO1xuICAgICAgICAgICAgdGhpcy5fYmFubmVyQURab25lLnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cblxufSIsImltcG9ydCBWaWV3QmFzZSBmcm9tIFwiLi4vVmlld0Jhc2VcIjtcbmltcG9ydCBVc2VyIGZyb20gXCIuLi8uLi9Vc2VyL1VzZXJcIjtcbmltcG9ydCBHYW1lQ29tbW9uQ29uZmlnIGZyb20gXCIuLi8uLi9Db25maWcvR2FtZUNvbW1vbkNvbmZpZ1wiO1xuaW1wb3J0IFV0aWxpdCBmcm9tIFwiLi4vLi4vVXRpbGl0XCI7XG5pbXBvcnQgRXZlbnRNZ3IgZnJvbSBcIi4uLy4uL0V2ZW50L0V2ZW50TWdyXCI7XG5pbXBvcnQgeyBFdmVudERlZiB9IGZyb20gXCIuLi8uLi9FdmVudC9FdmVudERlZlwiO1xuaW1wb3J0IFZpZXdNZ3IsIHsgVmlld0RlZiB9IGZyb20gXCIuLi8uLi9NZ3IvVmlld01nclwiO1xuaW1wb3J0IENhY2hlZFFRQmFubmVyQWQgZnJvbSBcIi4uLy4uL0NhY2hlZFFRQmFubmVyQWRcIjtcbmltcG9ydCBRUU1pbmlHYW1lQVBJIGZyb20gXCIuLi8uLi9RUU1pbmlHYW1lQVBJXCI7XG5cbmV4cG9ydCBlbnVtIEZyZWVSZXdhcmRUeXBlXG57XG4gICAgTm9uZSA9IFwiMFwiLFxuICAgIENyeXN0YWwgPSBcIjFcIixcbiAgICBFbmVyZ3kgPSBcIjJcIixcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRnJlZVJld2FyZFZpZXcgZXh0ZW5kcyBWaWV3QmFzZVxue1xuICAgIHByb3RlY3RlZCBfdG9wWm9uZSA6IExheWEuQ2xpcDtcbiAgICBwcm90ZWN0ZWQgX2NyeXN0YWxUZXh0IDogTGF5YS5UZXh0O1xuICAgIHByb3RlY3RlZCBfZW5lcmd5VGV4dCA6IExheWEuVGV4dDtcblxuICAgIHByb3RlY3RlZCBfY2VudGVyWm9uZSA6IExheWEuQ2xpcDtcbiAgICBwcm90ZWN0ZWQgX3Jld2FyZEJ0biA6IExheWEuU3ByaXRlO1xuICAgIHByb3RlY3RlZCBfcmV3YXJkVGV4dCA6IExheWEuVGV4dDtcbiAgICBwcm90ZWN0ZWQgX2Nsb3NlQnRuIDogTGF5YS5TcHJpdGU7XG5cbiAgICBwcm90ZWN0ZWQgX3Jld2FyZFRhZ3MgOiBhbnkgPSB7fTtcblxuICAgIHByb3RlY3RlZCBfY3VyUmV3YXJkVHlwZSA6IEZyZWVSZXdhcmRUeXBlID0gRnJlZVJld2FyZFR5cGUuTm9uZTtcblxuICAgIHByb3RlY3RlZCBfYmFubmVyQ2xvc2VkOmJvb2xlYW4gPSBmYWxzZTtcbiAgICBvbkF3YWtlKClcbiAgICB7XG4gICAgICAgIHRoaXMuX3RvcFpvbmUgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiVG9wWm9uZVwiKSBhcyBMYXlhLkNsaXA7XG4gICAgICAgIGlmKFV0aWxpdC5pc0lwaG9uZVgoKSlcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5fdG9wWm9uZS50b3AgPSA3MDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9jcnlzdGFsVGV4dCA9IHRoaXMuX3RvcFpvbmUuZ2V0Q2hpbGRCeU5hbWUoXCJDcnlzdGFsXCIpLmdldENoaWxkQnlOYW1lKFwiVGV4dFwiKSBhcyBMYXlhLlRleHQ7IFxuICAgICAgICB0aGlzLl9lbmVyZ3lUZXh0ID0gdGhpcy5fdG9wWm9uZS5nZXRDaGlsZEJ5TmFtZShcIkVuZXJneVwiKS5nZXRDaGlsZEJ5TmFtZShcIlRleHRcIikgYXMgTGF5YS5UZXh0O1xuXG4gICAgICAgIHRoaXMuX2NlbnRlclpvbmUgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiQ2VudGVyWm9uZVwiKSBhcyBMYXlhLkNsaXA7XG4gICAgICAgIHRoaXMuX3Jld2FyZEJ0biA9IHRoaXMuX2NlbnRlclpvbmUuZ2V0Q2hpbGRCeU5hbWUoXCJSZXdhcmRCdG5cIikgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgIHRoaXMuX3Jld2FyZFRleHQgPSB0aGlzLl9jZW50ZXJab25lLmdldENoaWxkQnlOYW1lKFwiUmV3YXJkVGV4dFwiKSBhcyBMYXlhLlRleHQ7XG4gICAgICAgIHRoaXMuX2Nsb3NlQnRuID0gdGhpcy5fY2VudGVyWm9uZS5nZXRDaGlsZEJ5TmFtZShcIkNsb3NlQnRuXCIpIGFzIExheWEuU3ByaXRlO1xuXG4gICAgICAgIHRoaXMuX3Jld2FyZFRhZ3NbRnJlZVJld2FyZFR5cGUuQ3J5c3RhbF0gPSB0aGlzLl9jZW50ZXJab25lLmdldENoaWxkQnlOYW1lKFwiQ3J5c3RhbFRhZ1wiKSBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgdGhpcy5fcmV3YXJkVGFnc1tGcmVlUmV3YXJkVHlwZS5FbmVyZ3ldID0gdGhpcy5fY2VudGVyWm9uZS5nZXRDaGlsZEJ5TmFtZShcIkVuZXJneVRhZ1wiKSBhcyBMYXlhLlNwcml0ZTtcblxuICAgICAgICB0aGlzLnNob3dUYWcoRnJlZVJld2FyZFR5cGUuTm9uZSk7XG4gICAgICAgIGlmKFZpZXdNZ3IuaW5zdGFuY2UuZ2V0VmlldyhWaWV3RGVmLkdhbWVNYWluVmlldykhPW51bGwpe1xuICAgICAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UuZGlzcGF0Y2goRXZlbnREZWYuQURfU3dpdGNoQmFubmVyLFtmYWxzZV0pO1xuICAgICAgICAgICAgdGhpcy5fYmFubmVyQ2xvc2VkPXRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYoVmlld01nci5pbnN0YW5jZS5nZXRWaWV3KFZpZXdEZWYuR2FtZU92ZXJWaWV3KSE9bnVsbCl7XG4gICAgICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5kaXNwYXRjaChFdmVudERlZi5BRF9Td2l0Y2hCYW5uZXIsW2ZhbHNlXSk7XG4gICAgICAgICAgICB0aGlzLl9iYW5uZXJDbG9zZWQ9dHJ1ZTsgICAgICAgICAgICBcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFkZEV2ZW50KClcbiAgICB7XG4gICAgICAgIHRoaXMuX3Jld2FyZEJ0bi5vbihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5vblJld2FyZEJ0bik7XG4gICAgICAgIHRoaXMuX2Nsb3NlQnRuLm9uKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLmNsb3NlVmlldyk7XG5cbiAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UucmVnRXZlbXQoRXZlbnREZWYuR2FtZV9PblVzZXJDcnlzdGFsQ2hhbmdlLHRoaXMsdGhpcy5vbkNyeXN0YWxDaGFuZ2UpO1xuICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5yZWdFdmVtdChFdmVudERlZi5HYW1lX09uVXNlckVuZXJneUNoYW5nZSx0aGlzLHRoaXMub25FbmVyZ3lDaGFuZ2UpO1xuICAgIH1cblxuICAgIHJlbW92ZUV2ZW50KClcbiAgICB7XG4gICAgICAgIHRoaXMuX3Jld2FyZEJ0bi5vZmYoTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25SZXdhcmRCdG4pO1xuICAgICAgICB0aGlzLl9jbG9zZUJ0bi5vZmYoTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMuY2xvc2VWaWV3KTtcbiAgICAgICAgXG4gICAgICAgIEV2ZW50TWdyLmluc3RhbmNlLnJlbW92ZUV2ZW50KEV2ZW50RGVmLkdhbWVfT25Vc2VyQ3J5c3RhbENoYW5nZSx0aGlzLHRoaXMub25DcnlzdGFsQ2hhbmdlKTtcbiAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UucmVtb3ZlRXZlbnQoRXZlbnREZWYuR2FtZV9PblVzZXJFbmVyZ3lDaGFuZ2UsdGhpcyx0aGlzLm9uRW5lcmd5Q2hhbmdlKTtcbiAgICB9XG5cbiAgICBvblNob3coKXtcbiAgICAgICAgdGhpcy5fY3VyUmV3YXJkVHlwZSA9IG51bGwgPT0gdGhpcy5fZGF0YS5yZXdhcmRUeXBlID8gRnJlZVJld2FyZFR5cGUuTm9uZSA6IHRoaXMuX2RhdGEucmV3YXJkVHlwZSBhcyBGcmVlUmV3YXJkVHlwZTtcbiAgICAgICAgc3dpdGNoICh0aGlzLl9jdXJSZXdhcmRUeXBlKSAge1xuICAgICAgICAgICAgY2FzZSBGcmVlUmV3YXJkVHlwZS5DcnlzdGFsOlxuICAgICAgICAgICAgICAgIHRoaXMuX3Jld2FyZFRleHQudGV4dCA9IFwieFwiICsgR2FtZUNvbW1vbkNvbmZpZy5nZXRJbnN0YW5jZSgpLmdldEdhbWVDb25maWdEYXRhKCkuZnJlZURpYW1vbmQ7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEZyZWVSZXdhcmRUeXBlLkVuZXJneTpcbiAgICAgICAgICAgICAgICB0aGlzLl9yZXdhcmRUZXh0LnRleHQgPSBcInhcIiArIEdhbWVDb21tb25Db25maWcuZ2V0SW5zdGFuY2UoKS5nZXRHYW1lQ29uZmlnRGF0YSgpLmZyZWVFbmVyZ3k7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zaG93VGFnKHRoaXMuX2N1clJld2FyZFR5cGUpO1xuICAgICAgICBDYWNoZWRRUUJhbm5lckFkLmhpZGUoKTtcbiAgICAgICAgdGhpcy5fY3J5c3RhbFRleHQudGV4dCA9IFN0cmluZyhVc2VyLmdldENyeXN0YWwoKSk7XG4gICAgICAgIHRoaXMuX2VuZXJneVRleHQudGV4dCA9IFN0cmluZyhVc2VyLmdldEVuZXJneSgpKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgb25DcnlzdGFsQ2hhbmdlKHBhcmEpXG4gICAge1xuICAgICAgICB2YXIgY3VyciA6IG51bWJlciA9IHBhcmEuY3VycjtcbiAgICAgICAgdmFyIGxhc3QgOiBudW1iZXIgPSBwYXJhLmxhc3Q7XG4gICAgICAgIHRoaXMuX2NyeXN0YWxUZXh0LnRleHQgPSBTdHJpbmcoY3Vycik7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uRW5lcmd5Q2hhbmdlKHBhcmEpXG4gICAge1xuICAgICAgICB2YXIgY3VyciA6IG51bWJlciA9IHBhcmEuY3VycjtcbiAgICAgICAgdmFyIGxhc3QgOiBudW1iZXIgPSBwYXJhLmxhc3Q7XG4gICAgICAgIHRoaXMuX2VuZXJneVRleHQudGV4dCA9IFN0cmluZyhjdXJyKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgb25SZXdhcmRCdG4oKVxuICAgIHtcbiAgICAgICAgdmFyIHJld2FyZFR5cGUgPSB0aGlzLl9jdXJSZXdhcmRUeXBlO1xuICAgICAgICB2YXIgcmV3YXJkTnVtID0gMDtcbiAgICAgICAgc3dpdGNoICh0aGlzLl9jdXJSZXdhcmRUeXBlKSAge1xuICAgICAgICAgICAgY2FzZSBGcmVlUmV3YXJkVHlwZS5DcnlzdGFsOlxuICAgICAgICAgICAgICAgIHJld2FyZE51bSA9IEdhbWVDb21tb25Db25maWcuZ2V0SW5zdGFuY2UoKS5nZXRHYW1lQ29uZmlnRGF0YSgpLmZyZWVEaWFtb25kO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBGcmVlUmV3YXJkVHlwZS5FbmVyZ3k6XG4gICAgICAgICAgICAgICAgcmV3YXJkTnVtID0gR2FtZUNvbW1vbkNvbmZpZy5nZXRJbnN0YW5jZSgpLmdldEdhbWVDb25maWdEYXRhKCkuZnJlZUVuZXJneTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgIHRoaXMuX3Jld2FyZEJ0bi52aXNpYmxlID0gZmFsc2U7XG4gICAgICAgIFFRTWluaUdhbWVBUEkuc2hvd1Jld2FyZGVkVmlkZW9BZCgob2spPT5cbiAgICAgICAgeyAgIFxuICAgICAgICAgICAgaWYob2spXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChyZXdhcmRUeXBlKSAge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIEZyZWVSZXdhcmRUeXBlLkNyeXN0YWw6XG4gICAgICAgICAgICAgICAgICAgICAgICBVc2VyLmFkZENyeXN0YWwocmV3YXJkTnVtKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIEZyZWVSZXdhcmRUeXBlLkVuZXJneTpcbiAgICAgICAgICAgICAgICAgICAgICAgIFVzZXIuYWRkRW5lcmd5KHJld2FyZE51bSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICB7XG5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNlbGYuX3Jld2FyZEJ0bi52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgfSwoKT0+XG4gICAgICAgIHtcbiAgICAgICAgICAgIHNlbGYuX3Jld2FyZEJ0bi52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgc2hvd1RhZyh0eXBlIDogRnJlZVJld2FyZFR5cGUpXG4gICAge1xuICAgICAgICBmb3IodmFyIGtleSBpbiB0aGlzLl9yZXdhcmRUYWdzKVxuICAgICAgICB7XG4gICAgICAgICAgICB2YXIgdGFnID0gdGhpcy5fcmV3YXJkVGFnc1trZXldIGFzIExheWEuU3ByaXRlO1xuICAgICAgICAgICAgdGFnLnZpc2libGUgPSAodHlwZSA9PSBrZXkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIG9uQ2xvc2UoKXtcbiAgICAgICAgc3VwZXIub25DbG9zZSgpO1xuICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5kaXNwYXRjaChFdmVudERlZi5BRF9Td2l0Y2hCYW5uZXIsW3RydWVdKTtcbiAgICB9XG59IiwiaW1wb3J0IFZpZXdCYXNlIGZyb20gXCIuLi9WaWV3QmFzZVwiO1xuaW1wb3J0IFV0aWxpdCBmcm9tIFwiLi4vLi4vVXRpbGl0XCI7XG5pbXBvcnQgRXZlbnRNZ3IgZnJvbSBcIi4uLy4uL0V2ZW50L0V2ZW50TWdyXCI7XG5pbXBvcnQgeyBFdmVudERlZiB9IGZyb20gXCIuLi8uLi9FdmVudC9FdmVudERlZlwiO1xuaW1wb3J0IFdYQVBJIGZyb20gXCIuLi8uLi9XWEFQSVwiO1xuaW1wb3J0IExldmVsQ29uZmlnIGZyb20gXCIuLi8uLi9Db25maWcvTGV2ZWxDb25maWdcIjtcbmltcG9ydCBVc2VyIGZyb20gXCIuLi8uLi9Vc2VyL1VzZXJcIjtcbmltcG9ydCBWaWV3TWdyLCB7IFZpZXdEZWYgfSBmcm9tIFwiLi4vLi4vTWdyL1ZpZXdNZ3JcIjtcbmltcG9ydCBHYW1lTWdyIGZyb20gXCIuLi8uLi9NZ3IvR2FtZU1nclwiO1xuaW1wb3J0IEFwcFN3aXRjaENvbmZpZyBmcm9tIFwiLi4vLi4vQ29uZmlnL0FwcFN3aXRjaENvbmZpZ1wiOztcbmltcG9ydCBDYWNoZWRXWEJhbm5lckFkIGZyb20gXCIuLi8uLi9DYWNoZWRXWEJhbm5lckFkXCI7XG5pbXBvcnQgQmFubmVyQWRWaWV3IGZyb20gXCIuLi8uLi9TaGFyZUFkL1ZpZXcvQmFubmVyQWRWaWV3XCI7XG5pbXBvcnQgV3VkaWFuTWdyIGZyb20gXCIuLi8uLi9NZ3IvV3VkaWFuTWdyXCI7XG5pbXBvcnQgQUxELCB7IEFMREV2ZW50RGVmIH0gZnJvbSBcIi4uLy4uL0FMRFwiO1xuaW1wb3J0IFNoYXJlQWQgZnJvbSBcIi4uLy4uL1NoYXJlQWQvU2hhcmVBZFwiO1xuaW1wb3J0IE15QmFubmVyQWRWaWV3IGZyb20gXCIuLi8uLi9TaGFyZUFkL1ZpZXcvTXlCYW5uZXJBZFZpZXdcIjtcbmltcG9ydCB7IEZyZWVSZXdhcmRUeXBlIH0gZnJvbSBcIi4uL0ZyZWVSZXdhcmQvRnJlZVJld2FyZFZpZXdcIjtcbmltcG9ydCBDYWNoZWRRUUJhbm5lckFkIGZyb20gXCIuLi8uLi9DYWNoZWRRUUJhbm5lckFkXCI7XG5pbXBvcnQgUVFNaW5pR2FtZUFQSSBmcm9tIFwiLi4vLi4vUVFNaW5pR2FtZUFQSVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHYW1lT3ZlciBleHRlbmRzIFZpZXdCYXNlIHtcbiAgICBwcm90ZWN0ZWQgX3RvcFpvbmU6IExheWEuQ2xpcDtcbiAgICBwcm90ZWN0ZWQgX2NyeXN0YWxUZXh0OiBMYXlhLlRleHQ7XG4gICAgcHJvdGVjdGVkIF9lbmVyZ3lUZXh0OiBMYXlhLlRleHQ7XG4gICAgcHJvdGVjdGVkIF9sZXZlbENvbXBsZXRlZDogTGF5YS5TcHJpdGU7XG4gICAgcHJvdGVjdGVkIF9sZXZlbEZhaWxlZDogTGF5YS5TcHJpdGU7XG4gICAgcHJvdGVjdGVkIF9jZW50ZXJab25lOiBMYXlhLlNwcml0ZTtcbiAgICBwcm90ZWN0ZWQgX2JhY2tCdG46IExheWEuU3ByaXRlO1xuICAgIHByb3RlY3RlZCBfbmV4dEJ0bjogTGF5YS5TcHJpdGU7XG4gICAgcHJvdGVjdGVkIF9zaGFyZUJ0bjogTGF5YS5TcHJpdGU7XG4gICAgcHJvdGVjdGVkIF9idXR0b25zOiBMYXlhLlVJQ29tcG9uZW50O1xuICAgIHByb3RlY3RlZCBfd2luVGFnOiBMYXlhLlNwcml0ZTtcbiAgICBwcm90ZWN0ZWQgX2xvc2VUYWc6IExheWEuU3ByaXRlO1xuXG4gICAgcHJvdGVjdGVkIF9uZXh0QnRuV2luVGFnOiBMYXlhLlNwcml0ZTtcbiAgICBwcm90ZWN0ZWQgX25leHRCdG5Mb3NlVGFnOiBMYXlhLlNwcml0ZTtcblxuICAgIHByb3RlY3RlZCBfYmFubmVyOiBMYXlhLlVJQ29tcG9uZW50O1xuICAgIG9uQXdha2UoKSB7XG4gICAgICAgIHRoaXMuX3RvcFpvbmUgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiVG9wWm9uZVwiKSBhcyBMYXlhLkNsaXA7XG4gICAgICAgIGlmIChVdGlsaXQuaXNJcGhvbmVYKCkpIHtcbiAgICAgICAgICAgIHRoaXMuX3RvcFpvbmUudG9wID0gNzA7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fY3J5c3RhbFRleHQgPSB0aGlzLl90b3Bab25lLmdldENoaWxkQnlOYW1lKFwiQ3J5c3RhbFwiKS5nZXRDaGlsZEJ5TmFtZShcIlRleHRcIikgYXMgTGF5YS5UZXh0O1xuICAgICAgICB0aGlzLl9lbmVyZ3lUZXh0ID0gdGhpcy5fdG9wWm9uZS5nZXRDaGlsZEJ5TmFtZShcIkVuZXJneVwiKS5nZXRDaGlsZEJ5TmFtZShcIlRleHRcIikgYXMgTGF5YS5UZXh0O1xuICAgICAgICB0aGlzLl9sZXZlbENvbXBsZXRlZCA9IHRoaXMuX3RvcFpvbmUuZ2V0Q2hpbGRCeU5hbWUoXCJDT01QXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl9sZXZlbEZhaWxlZCA9IHRoaXMuX3RvcFpvbmUuZ2V0Q2hpbGRCeU5hbWUoXCJGQUlMXCIpIGFzIExheWEuU3ByaXRlO1xuXG4gICAgICAgIHRoaXMuX2J1dHRvbnMgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiQnV0dG9uc1wiKSBhcyBMYXlhLlVJQ29tcG9uZW50O1xuICAgICAgICB0aGlzLl9jZW50ZXJab25lID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkNlbnRlclpvbmVcIikgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgIHRoaXMuX2JhY2tCdG4gPSB0aGlzLl9idXR0b25zLmdldENoaWxkQnlOYW1lKFwiQmFja0J0blwiKSBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgdGhpcy5fbmV4dEJ0biA9IHRoaXMuX2J1dHRvbnMuZ2V0Q2hpbGRCeU5hbWUoXCJOZXh0QnRuXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl9zaGFyZUJ0biA9IHRoaXMuX2J1dHRvbnMuZ2V0Q2hpbGRCeU5hbWUoXCJTaGFyZUJ0blwiKSBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgdGhpcy5fc2hhcmVCdG4udmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLl93aW5UYWcgPSB0aGlzLl9jZW50ZXJab25lLmdldENoaWxkQnlOYW1lKFwiTG9vcEFEXCIpLmdldENoaWxkQnlOYW1lKFwiV2luVGFnXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl9sb3NlVGFnID0gdGhpcy5fY2VudGVyWm9uZS5nZXRDaGlsZEJ5TmFtZShcIkxvb3BBRFwiKS5nZXRDaGlsZEJ5TmFtZShcIkxvc2VUYWdcIikgYXMgTGF5YS5TcHJpdGU7XG5cbiAgICAgICAgdGhpcy5fbmV4dEJ0bldpblRhZyA9IHRoaXMuX25leHRCdG4uZ2V0Q2hpbGRCeU5hbWUoXCJ3aW5cIikgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgIHRoaXMuX25leHRCdG5Mb3NlVGFnID0gdGhpcy5fbmV4dEJ0bi5nZXRDaGlsZEJ5TmFtZShcImxvc2VcIikgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgIHRoaXMuX2Jhbm5lciA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJCYW5uZXJBRFwiKSBhcyBMYXlhLlVJQ29tcG9uZW50O1xuICAgICAgICAvLyBBTEQuYWxkU2VuZE9ubHlTaW5nbGVSZXBvcnQoQUxERXZlbnREZWYuRW50ZXJHYW1lQ29tcGxhdGVWaWV3KTtcbiAgICB9XG5cbiAgICBhZGRFdmVudCgpIHtcbiAgICAgICAgdGhpcy5fYmFja0J0bi5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uQmFja0J0bik7XG4gICAgICAgIHRoaXMuX25leHRCdG4ub24oTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5vbk5leHRCdG4pO1xuICAgICAgICB0aGlzLl9zaGFyZUJ0bi5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uU2hhcmVCdG4pO1xuXG4gICAgICAgIEV2ZW50TWdyLmluc3RhbmNlLnJlZ0V2ZW10KEV2ZW50RGVmLkdhbWVfT25Vc2VyQ3J5c3RhbENoYW5nZSwgdGhpcywgdGhpcy5vbkNyeXN0YWxDaGFuZ2UpO1xuICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5yZWdFdmVtdChFdmVudERlZi5HYW1lX09uVXNlckVuZXJneUNoYW5nZSwgdGhpcywgdGhpcy5vbkVuZXJneUNoYW5nZSk7XG4gICAgfVxuXG4gICAgcmVtb3ZlRXZlbnQoKSB7XG4gICAgICAgIHRoaXMuX2JhY2tCdG4ub2ZmKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25CYWNrQnRuKTtcbiAgICAgICAgdGhpcy5fbmV4dEJ0bi5vZmYoTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5vbk5leHRCdG4pO1xuICAgICAgICB0aGlzLl9zaGFyZUJ0bi5vZmYoTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5vblNoYXJlQnRuKTtcblxuICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5yZW1vdmVFdmVudChFdmVudERlZi5HYW1lX09uVXNlckNyeXN0YWxDaGFuZ2UsIHRoaXMsIHRoaXMub25DcnlzdGFsQ2hhbmdlKTtcbiAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UucmVtb3ZlRXZlbnQoRXZlbnREZWYuR2FtZV9PblVzZXJFbmVyZ3lDaGFuZ2UsIHRoaXMsIHRoaXMub25FbmVyZ3lDaGFuZ2UpO1xuICAgIH1cblxuICAgIG9uU2hvdygpIHtcbiAgICAgICAgQ2FjaGVkUVFCYW5uZXJBZC5oaWRlKCk7XG4gICAgICAgIHRoaXMuX2xldmVsQ29tcGxldGVkLnZpc2libGUgPSB0aGlzLl9kYXRhLmlzV2luO1xuICAgICAgICB0aGlzLl9sZXZlbEZhaWxlZC52aXNpYmxlID0gIXRoaXMuX2RhdGEuaXNXaW47XG4gICAgICAgIHRoaXMuX3dpblRhZy52aXNpYmxlID0gdGhpcy5fZGF0YS5pc1dpbjtcbiAgICAgICAgdGhpcy5fbG9zZVRhZy52aXNpYmxlID0gIXRoaXMuX2RhdGEuaXNXaW47XG4gICAgICAgIHRoaXMuX25leHRCdG5XaW5UYWcudmlzaWJsZSA9IHRoaXMuX2RhdGEuaXNXaW47XG4gICAgICAgIHRoaXMuX25leHRCdG5Mb3NlVGFnLnZpc2libGUgPSAhdGhpcy5fZGF0YS5pc1dpbjtcbiAgICAgICAgdGhpcy5fY3J5c3RhbFRleHQudGV4dCA9IFN0cmluZyhVc2VyLmdldENyeXN0YWwoKSk7XG4gICAgICAgIHRoaXMuX2VuZXJneVRleHQudGV4dCA9IFN0cmluZyhVc2VyLmdldEVuZXJneSgpKTtcbiAgICAgICAgaWYgKFd1ZGlhbk1nci5BdXRvQm94RmxhZykge1xuICAgICAgICAgICAgaWYgKFd1ZGlhbk1nci5XZWlZaUZsYWcpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9idXR0b25zLmJvdHRvbSA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBRUU1pbmlHYW1lQVBJLnNob3dBcHBCb3hBZCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKFd1ZGlhbk1nci5XZWlZaUZsYWcpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5JbmR1Y2VDbGljaygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgQ2FjaGVkUVFCYW5uZXJBZC5jaGFuZ2VTaG93KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChXdWRpYW5NZ3IuV2VpWWlGbGFnKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuSW5kdWNlQ2xpY2soKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIENhY2hlZFFRQmFubmVyQWQuY2hhbmdlU2hvdygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBpZiAoV3VkaWFuTWdyLldlaVlpRmxhZykge1xuICAgICAgICAgICAgICAgIENhY2hlZFFRQmFubmVyQWQuaGlkZSgpO1xuICAgICAgICAgICAgICAgIHRoaXMuSW5kdWNlQ2xpY2soKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIENhY2hlZFFRQmFubmVyQWQuY2hhbmdlU2hvdygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgc3VwZXIub25TaG93KCk7XG4gICAgfVxuXG4gICAgSW5kdWNlQ2xpY2soKSB7XG4gICAgICAgIHRoaXMuX2J1dHRvbnMuYm90dG9tID0gMDtcbiAgICAgICAgdGhpcy5fYnV0dG9ucy5tb3VzZUVuYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgbGV0IGJ0bk1vdmVUaW1lciA9IEFwcFN3aXRjaENvbmZpZy5nZXRJbnN0YW5jZSgpLmdldEFwcFN3aXRjaERhdGEoKS5idG5Nb3ZlVGltZXIgKiAxMDAwO1xuICAgICAgICBsZXQgYmFubmVyTW92ZVRpbWVyID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLmJhbm5lck1vdmVUaW1lciAqIDEwMDA7XG4gICAgICAgIExheWEudGltZXIub25jZShiYW5uZXJNb3ZlVGltZXIsIHRoaXMsIHRoaXMuSW5kdWNlTWV0aG9kKTtcbiAgICAgICAgTGF5YS50aW1lci5vbmNlKGJ0bk1vdmVUaW1lciwgdGhpcywgdGhpcy5Nb3ZlVXApO1xuICAgIH1cblxuICAgIEluZHVjZU1ldGhvZCgpIHtcbiAgICAgICAgQ2FjaGVkUVFCYW5uZXJBZC5jaGFuZ2VTaG93KCk7XG4gICAgfVxuXG4gICAgTW92ZVVwKCkge1xuICAgICAgICB0aGlzLl9idXR0b25zLm1vdXNlRW5hYmxlZCA9IHRydWU7XG4gICAgICAgIC8qIGlmIChBZHZlcnRpc2VtZW50Vmlldy5TaG93Qm90aEFkKSB7XG4gICAgICAgICAgICB0aGlzLl9idXR0b25zLmJvdHRvbSA9IDUwMDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlICovIHtcbiAgICAgICAgICAgIHRoaXMuX2J1dHRvbnMuYm90dG9tID0gMjUwO1xuICAgICAgICB9XG4gICAgfVxuICAgIHByb3RlY3RlZCBvbkNyeXN0YWxDaGFuZ2UocGFyYSkge1xuICAgICAgICB2YXIgY3VycjogbnVtYmVyID0gcGFyYS5jdXJyO1xuICAgICAgICB2YXIgbGFzdDogbnVtYmVyID0gcGFyYS5sYXN0O1xuICAgICAgICB0aGlzLl9jcnlzdGFsVGV4dC50ZXh0ID0gU3RyaW5nKGN1cnIpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBvbkVuZXJneUNoYW5nZShwYXJhKSB7XG4gICAgICAgIHZhciBjdXJyOiBudW1iZXIgPSBwYXJhLmN1cnI7XG4gICAgICAgIHZhciBsYXN0OiBudW1iZXIgPSBwYXJhLmxhc3Q7XG4gICAgICAgIHRoaXMuX2VuZXJneVRleHQudGV4dCA9IFN0cmluZyhjdXJyKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgb25CYWNrQnRuKCkge1xuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgIFZpZXdNZ3IuaW5zdGFuY2Uub3BlblZpZXcoVmlld0RlZi5HYW1lTWFpblZpZXcsIC8qIHtcbiAgICAgICAgICAgIGNsb3NlRnVuY3Rpb246ICgpID0+IHtcbiAgICAgICAgICAgICAgICBWaWV3TWdyLmluc3RhbmNlLm9wZW5WaWV3KFZpZXdEZWYuR2FtZU1haW5WaWV3KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSAqL251bGwsICgpID0+IHtcbiAgICAgICAgICAgICAgICBzZWxmLmNsb3NlVmlldygpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgLy90b2RvOumUgOavgea4uOaIj1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBvbk5leHRCdG4oKSB7XG4gICAgICAgIHZhciBsZXZlbE51bSA9IHRoaXMuX2RhdGEubGV2ZWxOdW07XG4gICAgICAgIGlmICh0aGlzLl9kYXRhLmlzV2luKSB7XG4gICAgICAgICAgICB2YXIgbGV2ZWxOdW0gPSB0aGlzLl9kYXRhLmxldmVsTnVtICsgMTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgZGF0YSA9IExldmVsQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0TGV2ZWxDb25maWdEYXRhQnlMZXZlbE51bShsZXZlbE51bSk7XG4gICAgICAgIGlmIChudWxsICE9IGRhdGEpIHtcbiAgICAgICAgICAgIGlmICgxID09IGRhdGEudmVkaW9Db3N0Tm9FbmVyZ3kpIHtcbiAgICAgICAgICAgICAgICBRUU1pbmlHYW1lQVBJLnNob3dSZXdhcmRlZFZpZGVvQWQoKG9rKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChvaykge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy/kuI3mtojogJfkvZPlipvlvIDlsYBcbiAgICAgICAgICAgICAgICAgICAgICAgIEV2ZW50TWdyLmluc3RhbmNlLmRpc3BhdGNoKEV2ZW50RGVmLkdhbWVfU3RhcnRHYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV2ZWxOdW06IGRhdGEubGV2ZWxOdW0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvc3RFbmVyZ3k6IGRhdGEuY29zdEVuZXJneSAqIDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNyeXN0YWxSZXdhcmQ6IGRhdGEuZ2V0RGlhbW9uZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jbG9zZVZpZXcoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChVc2VyLmdldEVuZXJneSgpIDwgZGF0YS5jb3N0RW5lcmd5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgVmlld01nci5pbnN0YW5jZS5vcGVuVmlldyhWaWV3RGVmLkZyZWVSZXdhcmRWaWV3LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXdhcmRUeXBlOiBGcmVlUmV3YXJkVHlwZS5FbmVyZ3lcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gVmlld01nci5pbnN0YW5jZS5zaG93VGlwcyhcIuS9k+WKm+S4jei2s1wiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAvL+ato+W4uOW8gOWxgFxuICAgICAgICAgICAgICAgICAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UuZGlzcGF0Y2goRXZlbnREZWYuR2FtZV9TdGFydEdhbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXZlbE51bTogZGF0YS5sZXZlbE51bSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29zdEVuZXJneTogZGF0YS5jb3N0RW5lcmd5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcnlzdGFsUmV3YXJkOiBkYXRhLmdldERpYW1vbmQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2xvc2VWaWV3KCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChVc2VyLmdldEVuZXJneSgpIDwgZGF0YS5jb3N0RW5lcmd5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBWaWV3TWdyLmluc3RhbmNlLm9wZW5WaWV3KFZpZXdEZWYuRnJlZVJld2FyZFZpZXcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXdhcmRUeXBlOiBGcmVlUmV3YXJkVHlwZS5FbmVyZ3lcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFZpZXdNZ3IuaW5zdGFuY2Uuc2hvd1RpcHMoXCLkvZPlipvkuI3otrNcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgLy/mraPluLjlvIDlsYBcbiAgICAgICAgICAgICAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UuZGlzcGF0Y2goRXZlbnREZWYuR2FtZV9TdGFydEdhbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV2ZWxOdW06IGRhdGEubGV2ZWxOdW0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29zdEVuZXJneTogZGF0YS5jb3N0RW5lcmd5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNyeXN0YWxSZXdhcmQ6IGRhdGEuZ2V0RGlhbW9uZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2xvc2VWaWV3KCk7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKDEgPT0gZGF0YS52ZWRpb0RvdWJsZURpYW1vbmQpIHtcbiAgICAgICAgICAgICAgICBpZiAoVXNlci5nZXRFbmVyZ3koKSA8IGRhdGEuY29zdEVuZXJneSkge1xuICAgICAgICAgICAgICAgICAgICBWaWV3TWdyLmluc3RhbmNlLm9wZW5WaWV3KFZpZXdEZWYuRnJlZVJld2FyZFZpZXcsXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV3YXJkVHlwZTogRnJlZVJld2FyZFR5cGUuRW5lcmd5XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgLy8gVmlld01nci5pbnN0YW5jZS5zaG93VGlwcyhcIuS9k+WKm+S4jei2s1wiKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBRUU1pbmlHYW1lQVBJLnNob3dSZXdhcmRlZFZpZGVvQWQoKG9rKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChvaykge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy/lj4zlgI3lpZblirHlvIDlsYBcbiAgICAgICAgICAgICAgICAgICAgICAgIEV2ZW50TWdyLmluc3RhbmNlLmRpc3BhdGNoKEV2ZW50RGVmLkdhbWVfU3RhcnRHYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV2ZWxOdW06IGRhdGEubGV2ZWxOdW0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvc3RFbmVyZ3k6IGRhdGEuY29zdEVuZXJneSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3J5c3RhbFJld2FyZDogZGF0YS5nZXREaWFtb25kICogMixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jbG9zZVZpZXcoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8v5q2j5bi45byA5bGAXG4gICAgICAgICAgICAgICAgICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5kaXNwYXRjaChFdmVudERlZi5HYW1lX1N0YXJ0R2FtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldmVsTnVtOiBkYXRhLmxldmVsTnVtLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3N0RW5lcmd5OiBkYXRhLmNvc3RFbmVyZ3ksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNyeXN0YWxSZXdhcmQ6IGRhdGEuZ2V0RGlhbW9uZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2xvc2VWaWV3KCk7XG4gICAgICAgICAgICAgICAgfSwgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAvL+ato+W4uOW8gOWxgFxuICAgICAgICAgICAgICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5kaXNwYXRjaChFdmVudERlZi5HYW1lX1N0YXJ0R2FtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXZlbE51bTogZGF0YS5sZXZlbE51bSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3N0RW5lcmd5OiBkYXRhLmNvc3RFbmVyZ3ksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3J5c3RhbFJld2FyZDogZGF0YS5nZXREaWFtb25kLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jbG9zZVZpZXcoKTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKFVzZXIuZ2V0RW5lcmd5KCkgPCBkYXRhLmNvc3RFbmVyZ3kpIHtcbiAgICAgICAgICAgICAgICAgICAgVmlld01nci5pbnN0YW5jZS5vcGVuVmlldyhWaWV3RGVmLkZyZWVSZXdhcmRWaWV3LFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJld2FyZFR5cGU6IEZyZWVSZXdhcmRUeXBlLkVuZXJneVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIC8vIFZpZXdNZ3IuaW5zdGFuY2Uuc2hvd1RpcHMoXCLkvZPlipvkuI3otrNcIik7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy/mraPluLjlvIDlsYBcbiAgICAgICAgICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5kaXNwYXRjaChFdmVudERlZi5HYW1lX1N0YXJ0R2FtZSxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV2ZWxOdW06IGRhdGEubGV2ZWxOdW0sXG4gICAgICAgICAgICAgICAgICAgICAgICBjb3N0RW5lcmd5OiBkYXRhLmNvc3RFbmVyZ3ksXG4gICAgICAgICAgICAgICAgICAgICAgICBjcnlzdGFsUmV3YXJkOiBkYXRhLmdldERpYW1vbmQsXG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgdGhpcy5jbG9zZVZpZXcoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByb3RlY3RlZCBvblNoYXJlQnRuKCkge1xuICAgICAgICBRUU1pbmlHYW1lQVBJLnNoYXJlKChvaykgPT4ge1xuXG4gICAgICAgIH0sIFwiXCIsIFwiXCIpO1xuICAgIH1cblxuICAgIG9uQ2xvc2UoKSB7XG4gICAgICAgIEdhbWVNZ3IuZ2V0SW5zdGFuY2UoKS5zYXZlR2FtZURhdGEoKTtcbiAgICAgICAgQ2FjaGVkV1hCYW5uZXJBZC5oaWRlKCk7XG4gICAgICAgIHN1cGVyLm9uQ2xvc2UoKTtcbiAgICB9XG59IiwiaW1wb3J0IFZpZXdCYXNlIGZyb20gXCIuLi9WaWV3QmFzZVwiO1xuaW1wb3J0IFV0aWxpdCBmcm9tIFwiLi4vLi4vVXRpbGl0XCI7XG5pbXBvcnQgRXZlbnRNZ3IgZnJvbSBcIi4uLy4uL0V2ZW50L0V2ZW50TWdyXCI7XG5pbXBvcnQgeyBFdmVudERlZiB9IGZyb20gXCIuLi8uLi9FdmVudC9FdmVudERlZlwiO1xuaW1wb3J0IFVzZXIgZnJvbSBcIi4uLy4uL1VzZXIvVXNlclwiO1xuaW1wb3J0IFZpZXdNZ3IsIHsgVmlld0RlZiB9IGZyb20gXCIuLi8uLi9NZ3IvVmlld01nclwiO1xuaW1wb3J0IEdhbWVNZ3IgZnJvbSBcIi4uLy4uL01nci9HYW1lTWdyXCI7XG5pbXBvcnQgQXBwU3dpdGNoQ29uZmlnIGZyb20gXCIuLi8uLi9Db25maWcvQXBwU3dpdGNoQ29uZmlnXCI7XG5pbXBvcnQgV3VkaWFuTWdyIGZyb20gXCIuLi8uLi9NZ3IvV3VkaWFuTWdyXCI7XG5pbXBvcnQgQ2FjaGVkUVFCYW5uZXJBZCBmcm9tIFwiLi4vLi4vQ2FjaGVkUVFCYW5uZXJBZFwiO1xuaW1wb3J0IFFRTWluaUdhbWVBUEkgZnJvbSBcIi4uLy4uL1FRTWluaUdhbWVBUElcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZVJld2FyZFZpZXcgZXh0ZW5kcyBWaWV3QmFzZSB7XG4gICAgcHJvdGVjdGVkIF90b3Bab25lOiBMYXlhLkNsaXA7XG4gICAgcHJvdGVjdGVkIF9jcnlzdGFsVGV4dDogTGF5YS5UZXh0O1xuICAgIHByb3RlY3RlZCBfZW5lcmd5VGV4dDogTGF5YS5UZXh0O1xuXG4gICAgcHJvdGVjdGVkIF9jZW50ZXJab25lOiBMYXlhLlNwcml0ZTtcbiAgICBwcm90ZWN0ZWQgX3Jld2FyZEJ0bjogTGF5YS5TcHJpdGU7XG4gICAgcHJvdGVjdGVkIF9tb3JlUmV3YXJkQnRuOiBMYXlhLlNwcml0ZTtcbiAgICBwcm90ZWN0ZWQgX3Jld2FyZFRleHQ6IExheWEuVGV4dDtcblxuICAgIG9uQXdha2UoKSAge1xuICAgICAgICB0aGlzLl90b3Bab25lID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIlRvcFpvbmVcIikgYXMgTGF5YS5DbGlwO1xuICAgICAgICBpZiAoVXRpbGl0LmlzSXBob25lWCgpKSAge1xuICAgICAgICAgICAgdGhpcy5fdG9wWm9uZS50b3AgPSA3MDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9jcnlzdGFsVGV4dCA9IHRoaXMuX3RvcFpvbmUuZ2V0Q2hpbGRCeU5hbWUoXCJDcnlzdGFsXCIpLmdldENoaWxkQnlOYW1lKFwiVGV4dFwiKSBhcyBMYXlhLlRleHQ7XG4gICAgICAgIHRoaXMuX2VuZXJneVRleHQgPSB0aGlzLl90b3Bab25lLmdldENoaWxkQnlOYW1lKFwiRW5lcmd5XCIpLmdldENoaWxkQnlOYW1lKFwiVGV4dFwiKSBhcyBMYXlhLlRleHQ7XG5cbiAgICAgICAgdGhpcy5fY2VudGVyWm9uZSA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJDZW50ZXJab25lXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl9yZXdhcmRCdG4gPSB0aGlzLl9jZW50ZXJab25lLmdldENoaWxkQnlOYW1lKFwiUmV3YXJkQnRuXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl9tb3JlUmV3YXJkQnRuID0gdGhpcy5fY2VudGVyWm9uZS5nZXRDaGlsZEJ5TmFtZShcIk1vcmVSZXdhcmRCdG5cIikgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgIHRoaXMuX3Jld2FyZFRleHQgPSB0aGlzLl9jZW50ZXJab25lLmdldENoaWxkQnlOYW1lKFwiUmV3YXJkVGV4dFwiKSBhcyBMYXlhLlRleHQ7XG4gICAgfVxuXG4gICAgb25TdGFydCgpIHtcbiAgICAgICAgaWYgKFd1ZGlhbk1nci5HZXRJcEJsb2NrZWQoKSkge1xuICAgICAgICAgICAgbGV0IHRpbWUgPSBBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkuY29udGludWVCdG5EZWxheVRpbWU7XG4gICAgICAgICAgICBpZiAodGltZSA+IDApIHtcbiAgICAgICAgICAgICAgICBpZiAodGltZSA8IDEwMCkge1xuICAgICAgICAgICAgICAgICAgICB0aW1lICo9IDEwMDA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuX3Jld2FyZEJ0bi52aXNpYmxlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgTGF5YS50aW1lci5vbmNlKHRpbWUsIHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fcmV3YXJkQnRuLnZpc2libGUgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgYWRkRXZlbnQoKSAge1xuICAgICAgICB0aGlzLl9yZXdhcmRCdG4ub24oTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5vblJld2FyZEJ0bik7XG4gICAgICAgIHRoaXMuX21vcmVSZXdhcmRCdG4ub24oTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5vbk1vcmVSZXdhcmRCdG4pO1xuXG4gICAgICAgIEV2ZW50TWdyLmluc3RhbmNlLnJlZ0V2ZW10KEV2ZW50RGVmLkdhbWVfT25Vc2VyQ3J5c3RhbENoYW5nZSwgdGhpcywgdGhpcy5vbkNyeXN0YWxDaGFuZ2UpO1xuICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5yZWdFdmVtdChFdmVudERlZi5HYW1lX09uVXNlckVuZXJneUNoYW5nZSwgdGhpcywgdGhpcy5vbkVuZXJneUNoYW5nZSk7XG4gICAgfVxuXG4gICAgcmVtb3ZlRXZlbnQoKSAge1xuICAgICAgICB0aGlzLl9yZXdhcmRCdG4ub2ZmKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25SZXdhcmRCdG4pO1xuICAgICAgICB0aGlzLl9tb3JlUmV3YXJkQnRuLm9mZihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uTW9yZVJld2FyZEJ0bik7XG5cbiAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UucmVtb3ZlRXZlbnQoRXZlbnREZWYuR2FtZV9PblVzZXJDcnlzdGFsQ2hhbmdlLCB0aGlzLCB0aGlzLm9uQ3J5c3RhbENoYW5nZSk7XG4gICAgICAgIEV2ZW50TWdyLmluc3RhbmNlLnJlbW92ZUV2ZW50KEV2ZW50RGVmLkdhbWVfT25Vc2VyRW5lcmd5Q2hhbmdlLCB0aGlzLCB0aGlzLm9uRW5lcmd5Q2hhbmdlKTtcbiAgICB9XG5cbiAgICBvblNob3coKSB7XG4gICAgICAgIHRoaXMuX3Jld2FyZFRleHQudGV4dCA9IFwiWFwiICsgdGhpcy5fZGF0YS5yZXdhcmROdW07XG4gICAgICAgIHRoaXMuX2NyeXN0YWxUZXh0LnRleHQgPSBTdHJpbmcoVXNlci5nZXRDcnlzdGFsKCkpO1xuICAgICAgICB0aGlzLl9lbmVyZ3lUZXh0LnRleHQgPSBTdHJpbmcoVXNlci5nZXRFbmVyZ3koKSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uQ3J5c3RhbENoYW5nZShwYXJhKSAge1xuICAgICAgICB2YXIgY3VycjogbnVtYmVyID0gcGFyYS5jdXJyO1xuICAgICAgICB2YXIgbGFzdDogbnVtYmVyID0gcGFyYS5sYXN0O1xuICAgICAgICB0aGlzLl9jcnlzdGFsVGV4dC50ZXh0ID0gU3RyaW5nKGN1cnIpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBvbkVuZXJneUNoYW5nZShwYXJhKSAge1xuICAgICAgICB2YXIgY3VycjogbnVtYmVyID0gcGFyYS5jdXJyO1xuICAgICAgICB2YXIgbGFzdDogbnVtYmVyID0gcGFyYS5sYXN0O1xuICAgICAgICB0aGlzLl9lbmVyZ3lUZXh0LnRleHQgPSBTdHJpbmcoY3Vycik7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uUmV3YXJkQnRuKCkgIHtcbiAgICAgICAgVXNlci5hZGRDcnlzdGFsKHRoaXMuX2RhdGEucmV3YXJkTnVtKVxuICAgICAgICB0aGlzLmNsb3NlVmlldygpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBvbk1vcmVSZXdhcmRCdG4oKSAge1xuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgIHRoaXMuX21vcmVSZXdhcmRCdG4udmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLl9yZXdhcmRCdG4udmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICBRUU1pbmlHYW1lQVBJLnNob3dSZXdhcmRlZFZpZGVvQWQoKG9rKSA9PiAge1xuICAgICAgICAgICAgaWYgKG9rKSAge1xuICAgICAgICAgICAgICAgIFVzZXIuYWRkQ3J5c3RhbChzZWxmLl9kYXRhLnJld2FyZE51bSAqIDMpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlICB7XG4gICAgICAgICAgICAgICAgVXNlci5hZGRDcnlzdGFsKHNlbGYuX2RhdGEucmV3YXJkTnVtKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2VsZi5jbG9zZVZpZXcoKTtcbiAgICAgICAgfSwgKCkgPT4gIHtcbiAgICAgICAgICAgICAgICBVc2VyLmFkZENyeXN0YWwoc2VsZi5fZGF0YS5yZXdhcmROdW0pXG4gICAgICAgICAgICAgICAgc2VsZi5jbG9zZVZpZXcoKTtcbiAgICAgICAgICAgIH0pO1xuICAgIH1cblxuICAgIG9uQ2xvc2UoKSAge1xuICAgICAgICBWaWV3TWdyLmluc3RhbmNlLm9wZW5WaWV3KFZpZXdEZWYuR2FtZU92ZXJWaWV3LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGlzV2luOiB0cnVlLFxuICAgICAgICAgICAgICAgIGxldmVsTnVtOiB0aGlzLl9kYXRhLmxldmVsTnVtXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgc3VwZXIub25DbG9zZSgpO1xuICAgIH1cbn0iLCJpbXBvcnQgVmlld0Jhc2UgZnJvbSBcIi4uL1ZpZXdCYXNlXCI7XG5pbXBvcnQgVXRpbGl0IGZyb20gXCIuLi8uLi9VdGlsaXRcIjtcbmltcG9ydCBFdmVudE1nciBmcm9tIFwiLi4vLi4vRXZlbnQvRXZlbnRNZ3JcIjtcbmltcG9ydCB7IEV2ZW50RGVmIH0gZnJvbSBcIi4uLy4uL0V2ZW50L0V2ZW50RGVmXCI7XG5pbXBvcnQgVmlld01nciwgeyBWaWV3RGVmIH0gZnJvbSBcIi4uLy4uL01nci9WaWV3TWdyXCI7XG5pbXBvcnQgVG91Y2hDdHIgZnJvbSBcIi4uLy4uL0dhbWVDb3JlL1RvdWNoQ3RyXCI7XG5pbXBvcnQgR2FtZU1nciBmcm9tIFwiLi4vLi4vTWdyL0dhbWVNZ3JcIjtcbmltcG9ydCBVc2VyIGZyb20gXCIuLi8uLi9Vc2VyL1VzZXJcIjtcbmltcG9ydCBBcHBTd2l0Y2hDb25maWcgZnJvbSBcIi4uLy4uL0NvbmZpZy9BcHBTd2l0Y2hDb25maWdcIjtcbmltcG9ydCBXdWRpYW5NZ3IgZnJvbSBcIi4uLy4uL01nci9XdWRpYW5NZ3JcIjtcbmltcG9ydCBBTEQsIHsgQUxERXZlbnREZWYgfSBmcm9tIFwiLi4vLi4vQUxEXCI7XG5pbXBvcnQgQ2FjaGVkUVFCYW5uZXJBZCBmcm9tIFwiLi4vLi4vQ2FjaGVkUVFCYW5uZXJBZFwiO1xuaW1wb3J0IFFRTWluaUdhbWVBUEkgZnJvbSBcIi4uLy4uL1FRTWluaUdhbWVBUElcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZVZpZXcgZXh0ZW5kcyBWaWV3QmFzZSB7XG4gICAgcHJvdGVjdGVkIF90b3Bab25lOiBMYXlhLkNsaXA7XG4gICAgcHJvdGVjdGVkIF9leGl0QnRuOiBMYXlhLlNwcml0ZTtcbiAgICBwcm90ZWN0ZWQgX3Jlc3RhcnRCdG46IExheWEuU3ByaXRlO1xuICAgIHByb3RlY3RlZCBfc2tpcEJ0bjogTGF5YS5TcHJpdGU7XG4gICAgcHJvdGVjdGVkIF9sZXZlbFRleHQ6IExheWEuVGV4dDtcbiAgICBwcml2YXRlIF9jdXJyZW50U2NlbmU6IExheWEuU2NlbmU7XG4gICAgcHJpdmF0ZSBzdGF0aWMgX2luc3RhbmNlOiBHYW1lVmlldztcblxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0IEluc3RhbmNlKCk6IEdhbWVWaWV3IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2luc3RhbmNlO1xuICAgIH1cbiAgICBwdWJsaWMgZ2V0IEN1cnJlbnRTY2VuZSgpOiBMYXlhLlNjZW5lIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2N1cnJlbnRTY2VuZTtcbiAgICB9XG5cbiAgICBvbkF3YWtlKCkge1xuICAgICAgICBHYW1lVmlldy5faW5zdGFuY2UgPSB0aGlzO1xuICAgICAgICB0aGlzLl90b3Bab25lID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIlRvcFpvbmVcIikgYXMgTGF5YS5DbGlwO1xuICAgICAgICBpZiAoVXRpbGl0LmlzSXBob25lWCgpKSB7XG4gICAgICAgICAgICB0aGlzLl90b3Bab25lLnRvcCA9IDcwO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2V4aXRCdG4gPSB0aGlzLl90b3Bab25lLmdldENoaWxkQnlOYW1lKFwiRXhpdEJ0blwiKSBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgdGhpcy5fcmVzdGFydEJ0biA9IHRoaXMuX3RvcFpvbmUuZ2V0Q2hpbGRCeU5hbWUoXCJSZXN0YXJ0QnRuXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl9za2lwQnRuID0gdGhpcy5fdG9wWm9uZS5nZXRDaGlsZEJ5TmFtZShcIlNraXBCdG5cIikgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgIHRoaXMuX2xldmVsVGV4dCA9IHRoaXMuX3RvcFpvbmUuZ2V0Q2hpbGRCeU5hbWUoXCJMZXZlbFwiKSBhcyBMYXlhLlRleHQ7XG4gICAgICAgIC8vIEFMRC5hbGRTZW5kT25seVNpbmdsZVJlcG9ydChBTERFdmVudERlZi5FbnRlckJhdHRsZVZpZXcpO1xuICAgIH1cblxuICAgIGFkZEV2ZW50KCkge1xuICAgICAgICB0aGlzLl9leGl0QnRuLm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25FeGl0QnRuKTtcbiAgICAgICAgdGhpcy5fcmVzdGFydEJ0bi5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uUmVzdGFyQnRuKTtcbiAgICAgICAgdGhpcy5fc2tpcEJ0bi5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uU2tpcEJ0bik7XG4gICAgfVxuXG4gICAgcmVtb3ZlRXZlbnQoKSB7XG4gICAgICAgIHRoaXMuX2V4aXRCdG4ub2ZmKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25FeGl0QnRuKTtcbiAgICAgICAgdGhpcy5fcmVzdGFydEJ0bi5vZmYoTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5vblJlc3RhckJ0bik7XG4gICAgICAgIHRoaXMuX3NraXBCdG4ub2ZmKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25Ta2lwQnRuKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgb25FeGl0QnRuKCkge1xuICAgICAgICB0aGlzLkNsb3NlT2xkU2NlbmUoKTtcbiAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UuZGlzcGF0Y2goRXZlbnREZWYuR2FtZV9FeGl0R2FtZSk7XG4gICAgICAgIFZpZXdNZ3IuaW5zdGFuY2Uub3BlblZpZXcoVmlld0RlZi5HYW1lTWFpblZpZXcpO1xuICAgICAgICB0aGlzLmNsb3NlVmlldygpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBvblJlc3RhckJ0bigpIHtcbiAgICAgICAgdGhpcy5fc2tpcEJ0bi52aXNpYmxlID0gZmFsc2U7XG4gICAgICAgIFFRTWluaUdhbWVBUEkuc2hvd1Jld2FyZGVkVmlkZW9BZCgob2spID0+IHtcbiAgICAgICAgICAgIGlmIChvaykge1xuICAgICAgICAgICAgICAgIHRoaXMuTG9hZEdhbWUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuX3NraXBCdG4udmlzaWJsZSA9IHRydWU7XG4gICAgICAgIH0sICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX3NraXBCdG4udmlzaWJsZSA9IHRydWU7XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uU2tpcEJ0bigpIHtcbiAgICAgICAgdGhpcy5fc2tpcEJ0bi52aXNpYmxlID0gZmFsc2U7XG4gICAgICAgIFFRTWluaUdhbWVBUEkuc2hvd1Jld2FyZGVkVmlkZW9BZCgob2spID0+IHtcbiAgICAgICAgICAgIGlmIChvaykge1xuICAgICAgICAgICAgICAgIC8vdG9kbzrlvIDlp4vkuIvkuIDlhbPmuLjmiI/vvIzorr7nva7lvZPliY3lhbPljaHov5vluqZcbiAgICAgICAgICAgICAgICB0aGlzLkdhbWVPdmVyKHRydWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fc2tpcEJ0bi52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgfSwgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5fc2tpcEJ0bi52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgfSlcbiAgICB9XG4gICAgTG9hZEdhbWUoKSB7XG4gICAgICAgIHRoaXMuQ2xvc2VPbGRTY2VuZSgpO1xuICAgICAgICAvLyBMYXlhLnRpbWVyLmZyYW1lT25jZSgyLCB0aGlzLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuTG9hZFN0ZXAxKCk7XG4gICAgICAgIHRoaXMuX2xldmVsVGV4dC50ZXh0ID0gXCJMRVZFTDogXCIgKyB0aGlzLl9kYXRhLmxldmVsTnVtO1xuICAgICAgICAvLyB9KTtcbiAgICB9XG4gICAgTG9hZFN0ZXAxKCkge1xuICAgICAgICBsZXQgbGV2ZWwgPSB0aGlzLl9kYXRhLmxldmVsTnVtO1xuICAgICAgICBpZiAobGV2ZWwgPiA1MCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCLlhbPljaHotoXlh7rovrnnlYws6Jma5YGH5YWz5Y2h5Li6OlwiICsgbGV2ZWwpO1xuICAgICAgICAgICAgbGV2ZWwgPSBNYXRoLmNlaWwodGhpcy5HZXRSZFNlZWQobGV2ZWwgKyAxMjM0NSkgKiA0OCkgKyAyO1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCLlhbPljaHotoXlh7rovrnnlYws55yf5a6e5YWz5Y2h5Li6OlwiICsgbGV2ZWwpO1xuICAgICAgICB9XG4gICAgICAgIC8vIExheWEuU2NlbmUubG9hZChcIkdhbWVTY2VuZS9DdXRSb3BlIC0g5Ymv5pysLmpzb25cIiwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAoc2NlbmU6IExheWEuU2NlbmUpID0+IHtcbiAgICAgICAgTGF5YS5TY2VuZS5sb2FkKFwiR2FtZVNjZW5lL2xldmVsX1wiICsgbGV2ZWwgKyBcIi5qc29uXCIsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKHNjZW5lOiBMYXlhLlNjZW5lKSA9PiB7XG4gICAgICAgICAgICB0aGlzLm93bmVyLmFkZENoaWxkQXQoc2NlbmUsIDApO1xuICAgICAgICAgICAgdGhpcy5fY3VycmVudFNjZW5lID0gc2NlbmU7XG4gICAgICAgICAgICB0aGlzLl9jdXJyZW50U2NlbmUuYWRkQ29tcG9uZW50KFRvdWNoQ3RyKTtcbiAgICAgICAgfSwgbnVsbCkpO1xuICAgIH1cbiAgICBHZXRSZFNlZWQoc2VlZDogbnVtYmVyKSB7XG4gICAgICAgIHNlZWQgPSAoc2VlZCAqIDkzMDEgKyA0OTI5NykgJSAyMzMyODA7XG4gICAgICAgIHJldHVybiBzZWVkIC8gKDIzMzI4MC4wKTtcbiAgICB9XG4gICAgQ2xvc2VPbGRTY2VuZSgpIHtcbiAgICAgICAgaWYgKHRoaXMuX2N1cnJlbnRTY2VuZSAhPSBudWxsKSB7XG4gICAgICAgICAgICBMYXlhLlBoeXNpY3MuSS5zdG9wKCk7XG4gICAgICAgICAgICAvLyB0aGlzLl9jdXJyZW50U2NlbmUucmVtb3ZlU2VsZigpO1xuICAgICAgICAgICAgdGhpcy5fY3VycmVudFNjZW5lLnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuX2N1cnJlbnRTY2VuZS5hY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgICAgIGxldCBzZWxmID0gdGhpcztcbiAgICAgICAgICAgIC8vIExheWEudGltZXIuZnJhbWVPbmNlKDEsIHNlbGYsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX2N1cnJlbnRTY2VuZS5kZXN0cm95KCk7XG4gICAgICAgICAgICB0aGlzLl9jdXJyZW50U2NlbmUgPSBudWxsO1xuICAgICAgICAgICAgLy8gfSk7XG4gICAgICAgIH1cbiAgICAgICAgKExheWEuUGh5c2ljcy5JIGFzIGFueSkuX2VuYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgTGF5YS5QaHlzaWNzLkkuc3RhcnQoKTtcbiAgICB9XG4gICAgb25TaG93KCkge1xuICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5kaXNwYXRjaChFdmVudERlZi5HYW1lX1N0b3BCZ20pO1xuICAgICAgICBWaWV3TWdyLmluc3RhbmNlLmNsb3NlVmlldyhWaWV3RGVmLkdhbWVNYWluVmlldyk7XG4gICAgICAgIFVzZXIuc3ViRW5lcmd5KHRoaXMuX2RhdGEuY29zdEVuZXJneSk7XG4gICAgICAgIENhY2hlZFFRQmFubmVyQWQuaGlkZSgpO1xuICAgICAgICB0aGlzLkxvYWRHYW1lKCk7XG4gICAgfVxuICAgIHB1YmxpYyBHYW1lT3Zlcih3aW46IGJvb2xlYW4pIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJHYW1lIE92ZXIsIFJlc3VsdCA6XCIsIHdpbik7XG4gICAgICAgIExheWEudGltZXIuZnJhbWVPbmNlKDEsIHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuQ2xvc2VPbGRTY2VuZSgpO1xuICAgICAgICAgICAgdGhpcy5jbG9zZVZpZXcoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChXdWRpYW5NZ3IuS3VhbmdEaWFCb3hGbGFnKSB7XG4gICAgICAgICAgICBsZXQgY3VyclRpbWUgPSBMYXlhLnRpbWVyLmN1cnJUaW1lcjtcbiAgICAgICAgICAgIGxldCBkYXRhOiBhbnkgPSB7fTtcbiAgICAgICAgICAgIGRhdGEuUHJpemVDb3VudCA9IFwi5oGt5Zac6I635b6X55qu6IKkXCI7XG4gICAgICAgICAgICBkYXRhLkNsaWNrVHlwZSA9IDI7XG4gICAgICAgICAgICBkYXRhLkNvbXBsZXRlSGFuZGVyID0gTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAoZGF0YSwgd2luKSA9PiB7XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5kaXNwYXRjaChFdmVudERlZi5HYW1lX29uR2FtZUNvbXBsYXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBpc1dpbjogd2luLCBsZXZlbE51bTogZGF0YS5sZXZlbE51bSwgY3J5c3RhbFJld2FyZDogZGF0YS5jcnlzdGFsUmV3YXJkIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcIua4uOaIj+W8gOWni+eLgueCueWBnOeVmeaXtumXtFwiLChMYXlhLnRpbWVyLmN1cnJUaW1lciAtIGN1cnJUaW1lKSAvIDEwMDApO1xuICAgICAgICAgICAgICAgIC8vIEFMRC5hbGRTZW5kT25seVNpbmdsZVJlcG9ydChBTERFdmVudERlZi5TdGF5Q29tcGxhdGVDbGlja0dldFByaXplVGltZSxcbiAgICAgICAgICAgICAgICAvLyAgICAge1xuICAgICAgICAgICAgICAgIC8vICAgICAgICAgXCLml7bpl7RcIjogKExheWEudGltZXIuY3VyclRpbWVyIC0gY3VyclRpbWUpIC8gMTAwMFxuICAgICAgICAgICAgICAgIC8vICAgICB9KTtcbiAgICAgICAgICAgIH0sIFt0aGlzLl9kYXRhLCB3aW5dKTtcbiAgICAgICAgICAgIFZpZXdNZ3IuaW5zdGFuY2Uub3BlblZpZXcoVmlld0RlZi5DbGlja0dldFByaXplXzIsIGRhdGEsICgpID0+IHtcbiAgICAgICAgICAgICAgICAvLyBBTEQuYWxkU2VuZE9ubHlTaW5nbGVSZXBvcnQoQUxERXZlbnREZWYuRW50ZXJDb21wbGF0ZUNsaWNrR2V0UHJpemUpO1xuICAgICAgICAgICAgICAgIC8vIEFMRC5hbGRTZW5kT25seVNpbmdsZVJlcG9ydChBTERFdmVudERlZi5FbnRlckNvbXBsYXRlQ2xpY2tHZXRQcml6ZVNjZW5lLFxuICAgICAgICAgICAgICAgIC8vICAgICB7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICBcIuWcuuaZr+WAvFwiOiBXWEFQSS5nZXRMYXVuY2hPcHRpb25zU3luYygpLnNjZW5lXG4gICAgICAgICAgICAgICAgLy8gICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5kaXNwYXRjaChFdmVudERlZi5HYW1lX29uR2FtZUNvbXBsYXRlLFxuICAgICAgICAgICAgICAgIHsgaXNXaW46IHdpbiwgbGV2ZWxOdW06IHRoaXMuX2RhdGEubGV2ZWxOdW0sIGNyeXN0YWxSZXdhcmQ6IHRoaXMuX2RhdGEuY3J5c3RhbFJld2FyZCB9KTtcbiAgICAgICAgfVxuICAgICAgICAvLyBWaWV3TWdyLmluc3RhbmNlLm9wZW5WaWV3KFZpZXdEZWYuR2FtZVZpZXcsIGRhdGUpO1xuICAgIH1cbn0iLCJpbXBvcnQgVmlld0Jhc2UgZnJvbSBcIi4vVmlld0Jhc2VcIjtcblxuZXhwb3J0IGRlZmF1bHQgaW50ZXJmYWNlIElWaWV3U3RhdGVMaXN0ZW5lclxue1xuICAgIG9uVmlld1Nob3codmlldyA6IFZpZXdCYXNlKSA6IHZvaWQ7XG4gICAgb25WaWV3SGlkZSh2aWV3IDogVmlld0Jhc2UpIDogdm9pZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzSVZpZXdTdGF0ZUxpc3RlbmVyKGVsZW1lbnQgOiBhbnkpXG57XG4gICAgaWYoKG51bGwgIT0gZWxlbWVudC5vblZpZXdTaG93ICYmIHR5cGVvZihlbGVtZW50Lm9uVmlld1Nob3cpID09IFwiZnVuY3Rpb25cIilcbiAgICAgICAgJiYgKG51bGwgIT0gZWxlbWVudC5vblZpZXdIaWRlICYmIHR5cGVvZihlbGVtZW50Lm9uVmlld0hpZGUpID09IFwiZnVuY3Rpb25cIikgKVxuICAgIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cblxuIiwiaW1wb3J0IHsgTGV2ZWxDb25maWdEYXRhIH0gZnJvbSBcIi4uLy4uL0NvbmZpZy9MZXZlbENvbmZpZ1wiO1xuaW1wb3J0IFVzZXIgZnJvbSBcIi4uLy4uL1VzZXIvVXNlclwiO1xuaW1wb3J0IEV2ZW50TWdyIGZyb20gXCIuLi8uLi9FdmVudC9FdmVudE1nclwiO1xuaW1wb3J0IHsgRXZlbnREZWYgfSBmcm9tIFwiLi4vLi4vRXZlbnQvRXZlbnREZWZcIjtcbmltcG9ydCBWaWV3TWdyLCB7IFZpZXdEZWYgfSBmcm9tIFwiLi4vLi4vTWdyL1ZpZXdNZ3JcIjtcbmltcG9ydCB7IEZyZWVSZXdhcmRUeXBlIH0gZnJvbSBcIi4uL0ZyZWVSZXdhcmQvRnJlZVJld2FyZFZpZXdcIjtcbmltcG9ydCBRUU1pbmlHYW1lQVBJIGZyb20gXCIuLi8uLi9RUU1pbmlHYW1lQVBJXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExldmVsU3RhdGVCb3ggZXh0ZW5kcyBMYXlhLlNjcmlwdCBcbntcblxuICAgIHB1YmxpYyBzdGF0aWMgTG9ja0NsaWNrIDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgcHJvdGVjdGVkIF9jdXJyZW50VGFnIDogTGF5YS5TcHJpdGU7XG4gICAgcHJvdGVjdGVkIF9jb21wbGF0ZVRhZyA6IExheWEuU3ByaXRlO1xuICAgIHByb3RlY3RlZCBfbG9ja1RhZyA6IExheWEuU3ByaXRlO1xuICAgIFxuICAgIHByb3RlY3RlZCBfbm9FbmVyZ3lDb3N0IDogTGF5YS5TcHJpdGU7XG4gICAgcHJvdGVjdGVkIF9tb3JlQ3J5c3RhbFJld2FyZCA6IExheWEuU3ByaXRlO1xuXG4gICAgcHJvdGVjdGVkIF9sZXZlbE51bVRleHQgOiBMYXlhLkZvbnRDbGlwO1xuXG4gICAgcHJvdGVjdGVkIF9kYXRhIDogTGV2ZWxDb25maWdEYXRhO1xuXG4gICAgb25Bd2FrZSgpXG4gICAge1xuICAgICAgICB0aGlzLl9jdXJyZW50VGFnID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkN1cnJlbnRcIikgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgIHRoaXMuX2NvbXBsYXRlVGFnID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkNvbXBsYXRlXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl9sb2NrVGFnID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkxvY2tcIikgYXMgTGF5YS5TcHJpdGU7XG5cbiAgICAgICAgdGhpcy5fbm9FbmVyZ3lDb3N0ID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIk5vRW5lcmd5Q29zdFwiKSBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgdGhpcy5fbW9yZUNyeXN0YWxSZXdhcmQgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiTW9yZUNyeXN0YWxSZXdhcmRcIikgYXMgTGF5YS5TcHJpdGU7XG5cbiAgICAgICAgdGhpcy5fbGV2ZWxOdW1UZXh0ID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkxldmVsTnVtVGV4dFwiKSBhcyBMYXlhLkZvbnRDbGlwO1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXREYXRhKGRhdGEgOiBMZXZlbENvbmZpZ0RhdGEpXG4gICAge1xuICAgICAgICB0aGlzLl9jdXJyZW50VGFnLnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5fY29tcGxhdGVUYWcudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLl9sb2NrVGFnLnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5fZGF0YSA9IGRhdGE7XG4gICAgICAgIGlmKG51bGwgIT0gdGhpcy5fZGF0YSlcbiAgICAgICAge1xuICAgICAgICAgICAgdmFyIGN1cnJlbnRMZXZlbE51bSA9IFVzZXIuZ2V0TGV2ZU51bSgpO1xuICAgICAgICAgICAgdGhpcy5fbGV2ZWxOdW1UZXh0LnZhbHVlID0gU3RyaW5nKHRoaXMuX2RhdGEubGV2ZWxOdW0pO1xuICAgICAgICAgICAgdGhpcy5fbGV2ZWxOdW1UZXh0LnkgPSA2OTtcbiAgICAgICAgICAgIGlmKGN1cnJlbnRMZXZlbE51bSA9PSB0aGlzLl9kYXRhLmxldmVsTnVtKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRoaXMuX2N1cnJlbnRUYWcudmlzaWJsZSA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmKGN1cnJlbnRMZXZlbE51bSA+IHRoaXMuX2RhdGEubGV2ZWxOdW0pXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGhpcy5fY29tcGxhdGVUYWcudmlzaWJsZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgdGhpcy5fbGV2ZWxOdW1UZXh0LnkgPSA1NDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYoY3VycmVudExldmVsTnVtIDwgdGhpcy5fZGF0YS5sZXZlbE51bSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9sb2NrVGFnLnZpc2libGUgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fbm9FbmVyZ3lDb3N0LnZpc2libGUgPSB0aGlzLl9kYXRhLnZlZGlvQ29zdE5vRW5lcmd5ID09IDE7XG4gICAgICAgICAgICB0aGlzLl9tb3JlQ3J5c3RhbFJld2FyZC52aXNpYmxlID0gdGhpcy5fZGF0YS52ZWRpb0RvdWJsZURpYW1vbmQgPT0gMTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIG9uQ2xpY2soKVxuICAgIHtcbiAgICAgICAgdmFyIGRhdGEgPSB0aGlzLl9kYXRhXG4gICAgICAgIGlmKG51bGwgIT0gZGF0YSlcbiAgICAgICAge1xuICAgICAgICAgICAgdmFyIGN1cnJlbnRMZXZlbE51bSA9IFVzZXIuZ2V0TGV2ZU51bSgpO1xuICAgICAgICAgICAgaWYoY3VycmVudExldmVsTnVtID49IGRhdGEubGV2ZWxOdW0pXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaWYoMSA9PSBkYXRhLnZlZGlvQ29zdE5vRW5lcmd5KVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgTGV2ZWxTdGF0ZUJveC5Mb2NrQ2xpY2sgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBRUU1pbmlHYW1lQVBJLnNob3dSZXdhcmRlZFZpZGVvQWQoKG9rKT0+XG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKG9rKVxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8v5LiN5raI6ICX5L2T5Yqb5byA5bGAXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UuZGlzcGF0Y2goRXZlbnREZWYuR2FtZV9TdGFydEdhbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldmVsTnVtIDogZGF0YS5sZXZlbE51bSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvc3RFbmVyZ3kgOiBkYXRhLmNvc3RFbmVyZ3kgKiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3J5c3RhbFJld2FyZCA6IGRhdGEuZ2V0RGlhbW9uZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBWaWV3TWdyLmluc3RhbmNlLmNsb3NlVmlldyhWaWV3RGVmLkxldmVsU3RhdGVWaWV3KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoVXNlci5nZXRFbmVyZ3koKSA8IGRhdGEuY29zdEVuZXJneSkgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVmlld01nci5pbnN0YW5jZS5vcGVuVmlldyhWaWV3RGVmLkZyZWVSZXdhcmRWaWV3LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJld2FyZFR5cGU6IEZyZWVSZXdhcmRUeXBlLkVuZXJneVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFZpZXdNZ3IuaW5zdGFuY2Uuc2hvd1RpcHMoXCLkvZPlipvkuI3otrNcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UuZGlzcGF0Y2goRXZlbnREZWYuR2FtZV9TdGFydEdhbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldmVsTnVtIDogZGF0YS5sZXZlbE51bSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvc3RFbmVyZ3kgOiBkYXRhLmNvc3RFbmVyZ3ksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcnlzdGFsUmV3YXJkIDogZGF0YS5nZXREaWFtb25kLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFZpZXdNZ3IuaW5zdGFuY2UuY2xvc2VWaWV3KFZpZXdEZWYuTGV2ZWxTdGF0ZVZpZXcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIExldmVsU3RhdGVCb3guTG9ja0NsaWNrID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIH0sKCk9PlxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoVXNlci5nZXRFbmVyZ3koKSA8IGRhdGEuY29zdEVuZXJneSkgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBWaWV3TWdyLmluc3RhbmNlLm9wZW5WaWV3KFZpZXdEZWYuRnJlZVJld2FyZFZpZXcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJld2FyZFR5cGU6IEZyZWVSZXdhcmRUeXBlLkVuZXJneVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBWaWV3TWdyLmluc3RhbmNlLnNob3dUaXBzKFwi5L2T5Yqb5LiN6LazXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8v5q2j5bi45byA5bGAXG4gICAgICAgICAgICAgICAgICAgICAgICBMZXZlbFN0YXRlQm94LkxvY2tDbGljayA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UuZGlzcGF0Y2goRXZlbnREZWYuR2FtZV9TdGFydEdhbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXZlbE51bSA6IGRhdGEubGV2ZWxOdW0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvc3RFbmVyZ3kgOiBkYXRhLmNvc3RFbmVyZ3ksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNyeXN0YWxSZXdhcmQgOiBkYXRhLmdldERpYW1vbmQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgIFZpZXdNZ3IuaW5zdGFuY2UuY2xvc2VWaWV3KFZpZXdEZWYuTGV2ZWxTdGF0ZVZpZXcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmKDEgPT0gIGRhdGEudmVkaW9Eb3VibGVEaWFtb25kKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKFVzZXIuZ2V0RW5lcmd5KCkgPCBkYXRhLmNvc3RFbmVyZ3kpICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBWaWV3TWdyLmluc3RhbmNlLm9wZW5WaWV3KFZpZXdEZWYuRnJlZVJld2FyZFZpZXcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXdhcmRUeXBlOiBGcmVlUmV3YXJkVHlwZS5FbmVyZ3lcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFZpZXdNZ3IuaW5zdGFuY2Uuc2hvd1RpcHMoXCLkvZPlipvkuI3otrNcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgUVFNaW5pR2FtZUFQSS5zaG93UmV3YXJkZWRWaWRlb0FkKChvayk9PlxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZihvaylcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL+WPjOWAjeWlluWKseW8gOWxgFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV2ZW50TWdyLmluc3RhbmNlLmRpc3BhdGNoKEV2ZW50RGVmLkdhbWVfU3RhcnRHYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXZlbE51bSA6IGRhdGEubGV2ZWxOdW0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3N0RW5lcmd5IDogZGF0YS5jb3N0RW5lcmd5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3J5c3RhbFJld2FyZCA6IGRhdGEuZ2V0RGlhbW9uZCAqIDIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgVmlld01nci5pbnN0YW5jZS5jbG9zZVZpZXcoVmlld0RlZi5MZXZlbFN0YXRlVmlldyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/mraPluLjlvIDlsYBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5kaXNwYXRjaChFdmVudERlZi5HYW1lX1N0YXJ0R2FtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV2ZWxOdW0gOiBkYXRhLmxldmVsTnVtLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29zdEVuZXJneSA6IGRhdGEuY29zdEVuZXJneSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNyeXN0YWxSZXdhcmQgOiBkYXRhLmdldERpYW1vbmQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgVmlld01nci5pbnN0YW5jZS5jbG9zZVZpZXcoVmlld0RlZi5MZXZlbFN0YXRlVmlldyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBMZXZlbFN0YXRlQm94LkxvY2tDbGljayA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9LCgpPT5cbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy/mraPluLjlvIDlsYBcbiAgICAgICAgICAgICAgICAgICAgICAgIExldmVsU3RhdGVCb3guTG9ja0NsaWNrID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5kaXNwYXRjaChFdmVudERlZi5HYW1lX1N0YXJ0R2FtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldmVsTnVtIDogZGF0YS5sZXZlbE51bSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29zdEVuZXJneSA6IGRhdGEuY29zdEVuZXJneSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3J5c3RhbFJld2FyZCA6IGRhdGEuZ2V0RGlhbW9uZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgVmlld01nci5pbnN0YW5jZS5jbG9zZVZpZXcoVmlld0RlZi5MZXZlbFN0YXRlVmlldyk7XG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChVc2VyLmdldEVuZXJneSgpIDwgZGF0YS5jb3N0RW5lcmd5KSAge1xuICAgICAgICAgICAgICAgICAgICAgICAgVmlld01nci5pbnN0YW5jZS5vcGVuVmlldyhWaWV3RGVmLkZyZWVSZXdhcmRWaWV3LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV3YXJkVHlwZTogRnJlZVJld2FyZFR5cGUuRW5lcmd5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBWaWV3TWdyLmluc3RhbmNlLnNob3dUaXBzKFwi5L2T5Yqb5LiN6LazXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8v5q2j5bi45byA5bGAXG4gICAgICAgICAgICAgICAgICAgIEV2ZW50TWdyLmluc3RhbmNlLmRpc3BhdGNoKEV2ZW50RGVmLkdhbWVfU3RhcnRHYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldmVsTnVtIDogZGF0YS5sZXZlbE51bSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3N0RW5lcmd5IDogZGF0YS5jb3N0RW5lcmd5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNyeXN0YWxSZXdhcmQgOiBkYXRhLmdldERpYW1vbmQsXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICBWaWV3TWdyLmluc3RhbmNlLmNsb3NlVmlldyhWaWV3RGVmLkxldmVsU3RhdGVWaWV3KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59IiwiaW1wb3J0IFZpZXdCYXNlIGZyb20gXCIuLi9WaWV3QmFzZVwiO1xuaW1wb3J0IEV2ZW50TWdyIGZyb20gXCIuLi8uLi9FdmVudC9FdmVudE1nclwiO1xuaW1wb3J0IHsgRXZlbnREZWYgfSBmcm9tIFwiLi4vLi4vRXZlbnQvRXZlbnREZWZcIjtcbmltcG9ydCBVc2VyIGZyb20gXCIuLi8uLi9Vc2VyL1VzZXJcIjtcbmltcG9ydCBVdGlsaXQgZnJvbSBcIi4uLy4uL1V0aWxpdFwiO1xuaW1wb3J0IExldmVsU3RhdGVCb3ggZnJvbSBcIi4vTGV2ZWxTdGF0ZUJveFwiO1xuaW1wb3J0IExldmVsU3RhdGVEYXRhIGZyb20gXCIuLi8uLi9EYXRhL0xldmVsU3RhdGVEYXRhXCI7XG5pbXBvcnQgTGV2ZWxDb25maWcsIHsgTGV2ZWxDb25maWdEYXRhIH0gZnJvbSBcIi4uLy4uL0NvbmZpZy9MZXZlbENvbmZpZ1wiO1xuaW1wb3J0IFZpZXdNZ3IsIHsgVmlld0RlZiB9IGZyb20gXCIuLi8uLi9NZ3IvVmlld01nclwiO1xuaW1wb3J0IENhY2hlZFFRQmFubmVyQWQgZnJvbSBcIi4uLy4uL0NhY2hlZFFRQmFubmVyQWRcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTGV2ZWxTdGF0ZVZpZXcgZXh0ZW5kcyBWaWV3QmFzZVxue1xuICAgIHByb3RlY3RlZCBfdG9wWm9uZSA6IExheWEuQ2xpcDtcbiAgICBwcm90ZWN0ZWQgX2NyeXN0YWxUZXh0IDogTGF5YS5UZXh0O1xuICAgIHByb3RlY3RlZCBfZW5lcmd5VGV4dCA6IExheWEuVGV4dDtcbiAgICBwcm90ZWN0ZWQgX2Nsb3NlQnRuIDogTGF5YS5TcHJpdGU7XG5cbiAgICBwcm90ZWN0ZWQgX2NlbnRlclpvbmUgOiBMYXlhLlNwcml0ZTtcbiAgICBwcm90ZWN0ZWQgX2xldmVsTnVtVGV4dCA6IExheWEuVGV4dDtcbiAgICBwcm90ZWN0ZWQgX2xldmVsU3RhdGVMaXN0IDogTGF5YS5MaXN0O1xuXG4gICAgb25Bd2FrZSgpXG4gICAge1xuICAgICAgICB0aGlzLl90b3Bab25lID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIlRvcFpvbmVcIikgYXMgTGF5YS5DbGlwO1xuICAgICAgICBpZihVdGlsaXQuaXNJcGhvbmVYKCkpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuX3RvcFpvbmUudG9wID0gNzA7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fY3J5c3RhbFRleHQgPSB0aGlzLl90b3Bab25lLmdldENoaWxkQnlOYW1lKFwiQ3J5c3RhbFwiKS5nZXRDaGlsZEJ5TmFtZShcIlRleHRcIikgYXMgTGF5YS5UZXh0O1xuICAgICAgICB0aGlzLl9lbmVyZ3lUZXh0ID0gdGhpcy5fdG9wWm9uZS5nZXRDaGlsZEJ5TmFtZShcIkVuZXJneVwiKS5nZXRDaGlsZEJ5TmFtZShcIlRleHRcIikgYXMgTGF5YS5UZXh0O1xuICAgICAgICB0aGlzLl9jbG9zZUJ0biA9IHRoaXMuX3RvcFpvbmUuZ2V0Q2hpbGRCeU5hbWUoXCJDbG9zZUJ0blwiKSBhcyBMYXlhLlNwcml0ZTtcblxuICAgICAgICB0aGlzLl9jZW50ZXJab25lID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkNlbnRlclpvbmVcIikgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgIHRoaXMuX2xldmVsTnVtVGV4dCA9ICB0aGlzLl9jZW50ZXJab25lLmdldENoaWxkQnlOYW1lKFwiTGV2ZWxOdW1UZXh0XCIpIGFzIExheWEuVGV4dDtcbiAgICAgICAgdGhpcy5fbGV2ZWxTdGF0ZUxpc3QgPSB0aGlzLl9jZW50ZXJab25lLmdldENoaWxkQnlOYW1lKFwiTGlzdFwiKSBhcyBMYXlhLkxpc3Q7XG4gICAgICAgIHRoaXMuX2xldmVsU3RhdGVMaXN0LnJlbmRlckhhbmRsZXIgPSBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMub25MaXN0UmVuZGVyLCBudWxsLCBmYWxzZSlcbiAgICAgICAgdGhpcy5fbGV2ZWxTdGF0ZUxpc3QudlNjcm9sbEJhclNraW4gPSBcIlwiO1xuICAgIH1cblxuICAgIGFkZEV2ZW50KClcbiAgICB7XG4gICAgICAgIHRoaXMuX2Nsb3NlQnRuLm9uKExheWEuRXZlbnQuQ0xJQ0ssdGhpcywoKT0+e1xuICAgICAgICAgICAgVmlld01nci5pbnN0YW5jZS5vcGVuVmlldyhWaWV3RGVmLkdhbWVNYWluVmlldyk7XG4gICAgICAgICAgICB0aGlzLmNsb3NlVmlldygpO1xuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIEV2ZW50TWdyLmluc3RhbmNlLnJlZ0V2ZW10KEV2ZW50RGVmLkdhbWVfT25Vc2VyQ3J5c3RhbENoYW5nZSx0aGlzLHRoaXMub25DcnlzdGFsQ2hhbmdlKTtcbiAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UucmVnRXZlbXQoRXZlbnREZWYuR2FtZV9PblVzZXJFbmVyZ3lDaGFuZ2UsdGhpcyx0aGlzLm9uRW5lcmd5Q2hhbmdlKTtcbiAgICB9XG5cbiAgICByZW1vdmVFdmVudCgpXG4gICAge1xuICAgICAgICB0aGlzLl9jbG9zZUJ0bi5vbihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5jbG9zZVZpZXcpO1xuICAgICAgICBcbiAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UucmVtb3ZlRXZlbnQoRXZlbnREZWYuR2FtZV9PblVzZXJDcnlzdGFsQ2hhbmdlLHRoaXMsdGhpcy5vbkNyeXN0YWxDaGFuZ2UpO1xuICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5yZW1vdmVFdmVudChFdmVudERlZi5HYW1lX09uVXNlckVuZXJneUNoYW5nZSx0aGlzLHRoaXMub25FbmVyZ3lDaGFuZ2UpO1xuICAgIH1cblxuICAgIHB1YmxpYyBvcGVuVmlldyhkYXRhPzogYW55KTogdm9pZCBcbiAgICB7XG4gICAgICAgIHN1cGVyLm9wZW5WaWV3KGRhdGEpO1xuICAgICAgICBDYWNoZWRRUUJhbm5lckFkLmhpZGUoKTsgICAgICAgIFxuICAgICAgICB0aGlzLl9jcnlzdGFsVGV4dC50ZXh0ID0gU3RyaW5nKFVzZXIuZ2V0Q3J5c3RhbCgpKTtcbiAgICAgICAgdGhpcy5fZW5lcmd5VGV4dC50ZXh0ID0gU3RyaW5nKFVzZXIuZ2V0RW5lcmd5KCkpO1xuICAgICAgICB0aGlzLl9sZXZlbE51bVRleHQudGV4dCA9IFN0cmluZyhVc2VyLmdldExldmVOdW0oKSk7XG4gICAgICAgIHRoaXMucmVmcmVzaExldmVsU3RhdGVMaXN0KCk7XG4gICAgICAgIGZvcih2YXIgaT0wO2kgPCB0aGlzLl9sZXZlbFN0YXRlTGlzdC5hcnJheS5sZW5ndGg7KytpKVxuICAgICAgICB7XG4gICAgICAgICAgICB2YXIgZCA9IHRoaXMuX2xldmVsU3RhdGVMaXN0LmFycmF5W2ldIGFzIExldmVsQ29uZmlnRGF0YTtcbiAgICAgICAgICAgIGlmKGQubGV2ZWxOdW0gPT0gVXNlci5nZXRMZXZlTnVtKCkpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGhpcy5fbGV2ZWxTdGF0ZUxpc3Quc2Nyb2xsVG8oaSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgTGV2ZWxTdGF0ZUJveC5Mb2NrQ2xpY2sgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgb25DcnlzdGFsQ2hhbmdlKHBhcmEpXG4gICAge1xuICAgICAgICB2YXIgY3VyciA6IG51bWJlciA9IHBhcmEuY3VycjtcbiAgICAgICAgdmFyIGxhc3QgOiBudW1iZXIgPSBwYXJhLmxhc3Q7XG4gICAgICAgIHRoaXMuX2NyeXN0YWxUZXh0LnRleHQgPSBTdHJpbmcoY3Vycik7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uRW5lcmd5Q2hhbmdlKHBhcmEpXG4gICAge1xuICAgICAgICB2YXIgY3VyciA6IG51bWJlciA9IHBhcmEuY3VycjtcbiAgICAgICAgdmFyIGxhc3QgOiBudW1iZXIgPSBwYXJhLmxhc3Q7XG4gICAgICAgIHRoaXMuX2VuZXJneVRleHQudGV4dCA9IFN0cmluZyhjdXJyKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgb25MaXN0UmVuZGVyKGNlbGw6IExheWEuQm94LCBpbmRleDogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIHZhciBkYXRhID0gdGhpcy5fbGV2ZWxTdGF0ZUxpc3QuYXJyYXlbaW5kZXhdIGFzIExldmVsQ29uZmlnRGF0YTtcbiAgICAgICAgdmFyIGJveCA6IExldmVsU3RhdGVCb3ggPSBjZWxsLmdldENvbXBvbmVudChMZXZlbFN0YXRlQm94KSBhcyBMZXZlbFN0YXRlQm94O1xuICAgICAgICBib3guc2V0RGF0YShkYXRhKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgcmVmcmVzaExldmVsU3RhdGVMaXN0KClcbiAgICB7XG4gICAgICAgIHZhciBsZXZlbERhdGFzID0gTGV2ZWxDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRMZXZlbENvbmZpZ0RhdGFzKCk7XG4gICAgICAgIHZhciBkYXRhQXJyYXkgPSBuZXcgQXJyYXk8TGV2ZWxDb25maWdEYXRhPigpO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxldmVsRGF0YXMubGVuZ3RoOyArK2kpICBcbiAgICAgICAge1xuICAgICAgICAgICAgdmFyIGRhdGEgPSBsZXZlbERhdGFzW2ldLmNsb25lKCk7XG4gICAgICAgICAgICBkYXRhQXJyYXkucHVzaChkYXRhKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9sZXZlbFN0YXRlTGlzdC5hcnJheSA9IGRhdGFBcnJheTtcbiAgICB9XG59IiwiaW1wb3J0IFZpZXdCYXNlIGZyb20gXCIuLi9WaWV3QmFzZVwiO1xuaW1wb3J0IExvZ29BbmkgZnJvbSBcIi4vTG9nb0FuaVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMb2FkaW5nVmlldyBleHRlbmRzIFZpZXdCYXNlXG57XG4gICAgcHJvdGVjdGVkIF9wcm9jZXNzQmFyQmcgOiBMYXlhLkNsaXA7XG4gICAgcHJvdGVjdGVkIF9wcm9jZXNzQmFyIDogTGF5YS5DbGlwO1xuICAgIHByb3RlY3RlZCBfYmcgOiBMYXlhLkNsaXA7XG4gICAgcHJvdGVjdGVkIF9ib3R0b21ab25lIDogTGF5YS5DbGlwO1xuXG4gICAgcHJvdGVjdGVkIF9wcm9jZXNzV2lkdGggOiBudW1iZXIgPSAwO1xuXG4gICAgcHJvdGVjdGVkIF9sb2dvQW5pIDogTG9nb0FuaSA9IG51bGw7XG5cbiAgICBvbkF3YWtlKClcbiAgICB7XG4gICAgICAgIHRoaXMuX2JnID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkJnXCIpIGFzIExheWEuQ2xpcDtcbiAgICAgICAgdGhpcy5fYm90dG9tWm9uZSA9IHRoaXMuX2JnLmdldENoaWxkQnlOYW1lKFwiQm90dG9tWm9uZVwiKSBhcyBMYXlhLkNsaXA7XG4gICAgICAgIHRoaXMuX3Byb2Nlc3NCYXJCZyA9IHRoaXMuX2JvdHRvbVpvbmUuZ2V0Q2hpbGRCeU5hbWUoXCJwcm9jZXNzQmFyQmdcIikgYXMgTGF5YS5DbGlwO1xuICAgICAgICB0aGlzLl9wcm9jZXNzQmFyID0gdGhpcy5fcHJvY2Vzc0JhckJnLmdldENoaWxkQnlOYW1lKFwicHJvY2Vzc0JhclwiKSBhcyBMYXlhLkNsaXA7XG4gICAgICAgIHRoaXMuX3Byb2Nlc3NXaWR0aCA9IHRoaXMuX3Byb2Nlc3NCYXIud2lkdGg7XG4gICAgICAgIHRoaXMuX2xvZ29BbmkgPSB0aGlzLl9ib3R0b21ab25lLmdldENoaWxkQnlOYW1lKFwiTG9nb0FuaVwiKS5nZXRDb21wb25lbnQoTG9nb0FuaSk7XG4gICAgICAgIHRoaXMuX2xvZ29BbmkuZW5hYmxlZCA9IGZhbHNlO1xuICAgIH1cblxuICAgIG9uU3RhcnQoKVxuICAgIHtcbiAgICAgICAgTGF5YS50aW1lci5vbmNlKDI1MCx0aGlzLCgpPT5cbiAgICAgICAge1xuICAgICAgICAgICAgLy90aGlzLl9sb2dvQW5pLnBsYXlBbmkoKTtcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBvbkVuYWJsZSgpXG4gICAge1xuICAgICAgICBzdXBlci5vbkVuYWJsZSgpO1xuICAgIH1cblxuICAgIGFkZEV2ZW50KClcbiAgICB7XG4gICAgICAgIHN1cGVyLmFkZEV2ZW50KCk7XG4gICAgfVxuXG4gICAgcmVtb3ZlRXZlbnQoKVxuICAgIHtcbiAgICAgICAgc3VwZXIucmVtb3ZlRXZlbnQoKTtcbiAgICB9XG5cbiAgICBvblVwZGF0ZSgpXG4gICAge1xuICAgICAgICB0aGlzLl9iZy53aWR0aCA9IExheWEuc3RhZ2Uud2lkdGg7XG4gICAgICAgIHRoaXMuX2JnLmhlaWdodCA9IExheWEuc3RhZ2UuaGVpZ2h0O1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXRQcm9jZXNzKHByb2Nlc3MgOiBudW1iZXIpXG4gICAge1xuICAgICAgICBpZihwcm9jZXNzIDwgMCApXG4gICAgICAgICAgICBwcm9jZXNzID0gMDtcbiAgICAgICAgaWYocHJvY2VzcyA+IDEgKVxuICAgICAgICAgICAgcHJvY2VzcyA9IDE7XG4gICAgICAgIHZhciB3aWR0aCA9IHRoaXMuX3Byb2Nlc3NXaWR0aCAqIHByb2Nlc3M7XG4gICAgICAgIGlmKHdpZHRoIDwgMSlcbiAgICAgICAgICAgIHdpZHRoID0gMTtcbiAgICAgICAgdGhpcy5fcHJvY2Vzc0Jhci53aWR0aCA9IHdpZHRoO1xuICAgIH1cbiAgICBcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBMb2dvQW5pIGV4dGVuZHMgTGF5YS5TY3JpcHQgXG57XG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IF9hbmlTcHJpdGVzIDogQXJyYXk8TGF5YS5TcHJpdGU+ID0gW107XG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IF9hbmlTcHJpdGVPcmlnaW5Qb3MgOiBBcnJheTxMYXlhLlBvaW50PiA9IFtdO1xuXG4gICAgb25Bd2FrZSgpXG4gICAge1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMub3duZXIubnVtQ2hpbGRyZW47ICsraSkgIFxuICAgICAgICB7XG4gICAgICAgICAgICBsZXQgY2hpbGQgPSB0aGlzLm93bmVyLmdldENoaWxkQXQoaSkgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgICAgICBjaGlsZC5hbHBoYSA9IDA7XG4gICAgICAgICAgICB0aGlzLl9hbmlTcHJpdGVzLnB1c2goY2hpbGQpO1xuICAgICAgICAgICAgdGhpcy5fYW5pU3ByaXRlT3JpZ2luUG9zLnB1c2gobmV3IExheWEuUG9pbnQoY2hpbGQueCxjaGlsZC55KSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgcGxheUFuaSgpXG4gICAge1xuICAgICAgICAvLyBpZihMYXlhLkJyb3dzZXIub25RR01pbmlHYW1lKVxuICAgICAgICAvLyB7XG4gICAgICAgIC8vICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuX2FuaVNwcml0ZXMubGVuZ3RoOyArK2kpICBcbiAgICAgICAgLy8gICAgIHsgXG4gICAgICAgIC8vICAgICAgICAgdGhpcy5fYW5pU3ByaXRlc1tpXS52aXNpYmxlID0gZmFsc2U7XG4gICAgICAgIC8vICAgICB9XG4gICAgICAgIC8vICAgICByZXR1cm47XG4gICAgICAgIC8vIH1cbiAgICAgICAgLy8gZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9hbmlTcHJpdGVzLmxlbmd0aDsgKytpKSAgXG4gICAgICAgIC8vIHsgICBcbiAgICAgICAgLy8gICAgIGxldCBpc0xhc3QgPSBpID09ICh0aGlzLl9hbmlTcHJpdGVzLmxlbmd0aCAtIDEpID8gdHJ1ZSA6IGZhbHNlO1xuICAgICAgICAvLyAgICAgbGV0IHNwID0gdGhpcy5fYW5pU3ByaXRlc1tpXTtcbiAgICAgICAgLy8gICAgIGxldCBvcmlnaW5Qb3MgPSB0aGlzLl9hbmlTcHJpdGVPcmlnaW5Qb3NbaV07XG4gICAgICAgIC8vICAgICBzcC5hbHBoYSA9IDA7XG4gICAgICAgIC8vICAgICBzcC55ICs9IG9yaWdpblBvcy55ICsgNTA7XG4gICAgICAgIC8vICAgICBsZXQgc2VsZiA9IHRoaXM7XG4gICAgICAgIC8vICAgICBMYXlhLlR3ZWVuLnRvKHNwLFxuICAgICAgICAvLyAgICAgICAgIHtcbiAgICAgICAgLy8gICAgICAgICAgICAgeTogb3JpZ2luUG9zLnksXG4gICAgICAgIC8vICAgICAgICAgICAgIGFscGhhOiAxXG4gICAgICAgIC8vICAgICAgICAgfSxcbiAgICAgICAgLy8gICAgICAgICA0NTAsIExheWEuRWFzZS5lbGFzdGljT3V0LCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsICgpID0+IHtcbiAgICAgICAgLy8gICAgICAgICAgICAgaWYoaXNMYXN0KVxuICAgICAgICAvLyAgICAgICAgICAgICB7XG4gICAgICAgIC8vICAgICAgICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoMzAwLHNlbGYsKCk9PlxuICAgICAgICAvLyAgICAgICAgICAgICAgICAge1xuICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgIHNlbGYucGxheUFuaSgpO1xuICAgICAgICAvLyAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgLy8gICAgICAgICAgICAgfVxuICAgICAgICAvLyAgICAgICAgIH0pLGkgKiA4MClcbiAgICAgICAgLy8gfVxuICAgIH1cbn0iLCJpbXBvcnQgVmlld0Jhc2UgZnJvbSBcIi4uL1ZpZXdCYXNlXCI7XG5pbXBvcnQgVXNlciBmcm9tIFwiLi4vLi4vVXNlci9Vc2VyXCI7XG5pbXBvcnQgRXZlbnRNZ3IgZnJvbSBcIi4uLy4uL0V2ZW50L0V2ZW50TWdyXCI7XG5pbXBvcnQgeyBFdmVudERlZiB9IGZyb20gXCIuLi8uLi9FdmVudC9FdmVudERlZlwiO1xuaW1wb3J0IFdYQVBJIGZyb20gXCIuLi8uLi9XWEFQSVwiO1xuaW1wb3J0IFV0aWxpdCBmcm9tIFwiLi4vLi4vVXRpbGl0XCI7XG5pbXBvcnQgVmlld01nciwgeyBWaWV3RGVmIH0gZnJvbSBcIi4uLy4uL01nci9WaWV3TWdyXCI7XG5pbXBvcnQgeyBGcmVlUmV3YXJkVHlwZSB9IGZyb20gXCIuLi9GcmVlUmV3YXJkL0ZyZWVSZXdhcmRWaWV3XCI7XG5pbXBvcnQgU291bmRNZ3IgZnJvbSBcIi4uLy4uL01nci9Tb3VuZE1nclwiO1xuaW1wb3J0IEFMRCwgeyBBTERFdmVudERlZiB9IGZyb20gXCIuLi8uLi9BTERcIjtcbmltcG9ydCBDYWNoZWRRUUJhbm5lckFkIGZyb20gXCIuLi8uLi9DYWNoZWRRUUJhbm5lckFkXCI7XG5pbXBvcnQgUVFNaW5pR2FtZUFQSSBmcm9tIFwiLi4vLi4vUVFNaW5pR2FtZUFQSVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNYWluVmlldyBleHRlbmRzIFZpZXdCYXNlIHtcbiAgICBwcm90ZWN0ZWQgX3RvcFpvbmU6IExheWEuQ2xpcDtcbiAgICBwcm90ZWN0ZWQgX2NyeXN0YWxUZXh0OiBMYXlhLlRleHQ7XG4gICAgcHJvdGVjdGVkIF9lbmVyZ3lUZXh0OiBMYXlhLlRleHQ7XG5cbiAgICBwcm90ZWN0ZWQgX3N0YXJ0R2FtZUJ0bjogTGF5YS5TcHJpdGU7XG4gICAgcHJvdGVjdGVkIF9tb3JlR2FtZUJ0bjogTGF5YS5TcHJpdGU7XG4gICAgcHJvdGVjdGVkIF9Mb2dvQW5pbTogTGF5YS5TcHJpdGU7XG5cbiAgICBwcm90ZWN0ZWQgX2NlbnRlclpvbmU6IExheWEuQ2xpcDtcblxuICAgIHByb3RlY3RlZCBfYXV0b1pvbmU6IExheWEuU3ByaXRlO1xuICAgIHByb3RlY3RlZCBfZnJlZUNyeVN0YWxCdG46IExheWEuU3ByaXRlO1xuICAgIHByb3RlY3RlZCBfZnJlZUVuZXJneUJ0bjogTGF5YS5TcHJpdGU7XG4gICAgcHJvdGVjdGVkIF9za2luQnRuOiBMYXlhLlNwcml0ZTtcbiAgICAvLyBwcm90ZWN0ZWQgX3NoYXJlQnRuIDogTGF5YS5TcHJpdGU7XG5cbiAgICBwcm90ZWN0ZWQgX2FkVUlNYXNrOiBMYXlhLlVJQ29tcG9uZW50O1xuICAgIG9uQXdha2UoKSAge1xuICAgICAgICB0aGlzLl90b3Bab25lID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIlRvcFpvbmVcIikgYXMgTGF5YS5DbGlwO1xuICAgICAgICBpZiAoVXRpbGl0LmlzSXBob25lWCgpKSAge1xuICAgICAgICAgICAgdGhpcy5fdG9wWm9uZS50b3AgPSA3MDtcbiAgICAgICAgICAgICh0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiU2lkZUFkX1ZpZXdcIikgYXMgTGF5YS5VSUNvbXBvbmVudCkudG9wICs9IDcwO1xuICAgICAgICAgICAgKHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJTaGFrZUxvb3BBZFwiKSBhcyBMYXlhLlVJQ29tcG9uZW50KS50b3AgKz0gNzA7XG4gICAgICAgICAgICAodGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkFuaUFkXCIpIGFzIExheWEuVUlDb21wb25lbnQpLnRvcCArPSA3MDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9jcnlzdGFsVGV4dCA9IHRoaXMuX3RvcFpvbmUuZ2V0Q2hpbGRCeU5hbWUoXCJGcmVlQ3J5c3RhbEJ0blwiKS5nZXRDaGlsZEJ5TmFtZShcIlRleHRcIikgYXMgTGF5YS5UZXh0O1xuICAgICAgICB0aGlzLl9lbmVyZ3lUZXh0ID0gdGhpcy5fdG9wWm9uZS5nZXRDaGlsZEJ5TmFtZShcIkZyZWVFbmVyZ3lCdG5cIikuZ2V0Q2hpbGRCeU5hbWUoXCJUZXh0XCIpIGFzIExheWEuVGV4dDtcblxuICAgICAgICB0aGlzLl9jZW50ZXJab25lID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkNlbnRlclpvbmVcIikgYXMgTGF5YS5DbGlwO1xuXG4gICAgICAgIHRoaXMuX2F1dG9ab25lID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkJvdHRvbVpvbmVcIikuZ2V0Q2hpbGRCeU5hbWUoXCJBdXRvWm9uZVwiKSBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgdGhpcy5fc3RhcnRHYW1lQnRuID0gdGhpcy5fYXV0b1pvbmUuZ2V0Q2hpbGRCeU5hbWUoXCJTdGFydEdhbWVCdG5cIikgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgIHRoaXMuX3N0YXJ0R2FtZUJ0bi52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5fbW9yZUdhbWVCdG4gPSB0aGlzLl9hdXRvWm9uZS5nZXRDaGlsZEJ5TmFtZShcIk1vcmVHYW1lQnRuXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl9tb3JlR2FtZUJ0bi52aXNpYmxlID0gZmFsc2U7XG4gICAgICAgIC8vdGhpcy5fTG9nb0FuaW0gPSB0aGlzLl9hdXRvWm9uZS5nZXRDaGlsZEJ5TmFtZShcIkxvZ29BbmlcIikgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgIC8vdGhpcy5fTG9nb0FuaW0udmlzaWJsZSA9IGZhbHNlO1xuXG4gICAgICAgIHRoaXMuX2ZyZWVDcnlTdGFsQnRuID0gdGhpcy5fdG9wWm9uZS5nZXRDaGlsZEJ5TmFtZShcIkZyZWVDcnlzdGFsQnRuXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl9mcmVlRW5lcmd5QnRuID0gdGhpcy5fdG9wWm9uZS5nZXRDaGlsZEJ5TmFtZShcIkZyZWVFbmVyZ3lCdG5cIikgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgIHRoaXMuX3NraW5CdG4gPSB0aGlzLl90b3Bab25lLmdldENoaWxkQnlOYW1lKFwiU2tpbkJ0blwiKSBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgLy8gdGhpcy5fc2hhcmVCdG4gPSB0aGlzLl9hdXRvWm9uZS5nZXRDaGlsZEJ5TmFtZShcIlNoYXJlQnRuXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICAvLyBBTEQuYWxkU2VuZE9ubHlTaW5nbGVSZXBvcnQoQUxERXZlbnREZWYuRW50ZXJNYWluVmlldyk7XG5cbiAgICAgICAgdGhpcy5fYWRVSU1hc2sgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiQWRVSU1hc2tcIikgYXMgTGF5YS5VSUNvbXBvbmVudDtcbiAgICAgICAgdmFyIGFzcGVjdFJhdGlvID0gTGF5YS5zdGFnZS53aWR0aCAvIExheWEuc3RhZ2UuaGVpZ2h0O1xuICAgICAgICBpZiAoYXNwZWN0UmF0aW8gPCAwLjUpIHtcbiAgICAgICAgICAgIHRoaXMuX2FkVUlNYXNrLmJvdHRvbSA9IDUxNTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuX2FkVUlNYXNrLmJvdHRvbSA9IDI2NTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9hZFVJTWFzay52aXNpYmxlID0gZmFsc2U7XG4gICAgfVxuXG4gICAgYWRkRXZlbnQoKSAge1xuICAgICAgICB0aGlzLl9zdGFydEdhbWVCdG4ub24oTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5vblN0YXJ0R2FtZUJ0bik7XG4gICAgICAgIHRoaXMuX21vcmVHYW1lQnRuLm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25Nb3JlR2FtZUJ0bik7XG4gICAgICAgIHRoaXMuX2ZyZWVDcnlTdGFsQnRuLm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25GcmVlQ3J5c3RhbEJ0bik7XG4gICAgICAgIHRoaXMuX2ZyZWVFbmVyZ3lCdG4ub24oTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5vbkZyZWVFbmVyZ3lCdG4pO1xuICAgICAgICB0aGlzLl9za2luQnRuLm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25Ta2luQnRuKTtcbiAgICAgICAgLy8gdGhpcy5fc2hhcmVCdG4ub24oTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25TaGFyZUJ0bik7XG5cbiAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UucmVnRXZlbXQoRXZlbnREZWYuR2FtZV9PblVzZXJDcnlzdGFsQ2hhbmdlLCB0aGlzLCB0aGlzLm9uQ3J5c3RhbENoYW5nZSk7XG4gICAgICAgIEV2ZW50TWdyLmluc3RhbmNlLnJlZ0V2ZW10KEV2ZW50RGVmLkdhbWVfT25Vc2VyRW5lcmd5Q2hhbmdlLCB0aGlzLCB0aGlzLm9uRW5lcmd5Q2hhbmdlKTtcbiAgICAgICAgLy8gRXZlbnRNZ3IuaW5zdGFuY2UucmVnRXZlbXQoRXZlbnREZWYuQURfT25TaGFyZUFkRmFpbF9Vc2VDYW5jZWwsdGhpcyx0aGlzLm9uTW9yZUdhbWVCdG4pO1xuICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5yZWdFdmVtdChFdmVudERlZi5BRF9NYWluQWRVaU1hc2ssIHRoaXMsIHRoaXMuY2hhbmdlQWRNYXNrKTtcblxuICAgIH1cblxuICAgIHJlbW92ZUV2ZW50KCkgIHtcbiAgICAgICAgdGhpcy5fc3RhcnRHYW1lQnRuLm9mZihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uU3RhcnRHYW1lQnRuKTtcbiAgICAgICAgdGhpcy5fbW9yZUdhbWVCdG4ub2ZmKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25Nb3JlR2FtZUJ0bik7XG4gICAgICAgIHRoaXMuX2ZyZWVDcnlTdGFsQnRuLm9mZihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uRnJlZUNyeXN0YWxCdG4pO1xuICAgICAgICB0aGlzLl9mcmVlRW5lcmd5QnRuLm9mZihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uRnJlZUVuZXJneUJ0bik7XG4gICAgICAgIHRoaXMuX3NraW5CdG4ub2ZmKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25Ta2luQnRuKTtcbiAgICAgICAgLy8gdGhpcy5fc2hhcmVCdG4ub2ZmKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uU2hhcmVCdG4pO1xuXG4gICAgICAgIEV2ZW50TWdyLmluc3RhbmNlLnJlbW92ZUV2ZW50KEV2ZW50RGVmLkdhbWVfT25Vc2VyQ3J5c3RhbENoYW5nZSwgdGhpcywgdGhpcy5vbkNyeXN0YWxDaGFuZ2UpO1xuICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5yZW1vdmVFdmVudChFdmVudERlZi5HYW1lX09uVXNlckVuZXJneUNoYW5nZSwgdGhpcywgdGhpcy5vbkVuZXJneUNoYW5nZSk7XG4gICAgICAgIC8vIEV2ZW50TWdyLmluc3RhbmNlLnJlbW92ZUV2ZW50KEV2ZW50RGVmLkFEX09uU2hhcmVBZEZhaWxfVXNlQ2FuY2VsLHRoaXMsdGhpcy5vbk1vcmVHYW1lQnRuKTtcbiAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UucmVtb3ZlRXZlbnQoRXZlbnREZWYuQURfTWFpbkFkVWlNYXNrLCB0aGlzLCB0aGlzLmNoYW5nZUFkTWFzayk7XG5cbiAgICB9XG5cbiAgICBwdWJsaWMgb3BlblZpZXcoZGF0YT86IGFueSk6IHZvaWQge1xuICAgICAgICBzdXBlci5vcGVuVmlldyhkYXRhKTtcbiAgICAgICAgdGhpcy5fY3J5c3RhbFRleHQudGV4dCA9IFN0cmluZyhVc2VyLmdldENyeXN0YWwoKSk7XG4gICAgICAgIHRoaXMuX2VuZXJneVRleHQudGV4dCA9IFN0cmluZyhVc2VyLmdldEVuZXJneSgpKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgb25DcnlzdGFsQ2hhbmdlKHBhcmEpICB7XG4gICAgICAgIHZhciBjdXJyOiBudW1iZXIgPSBwYXJhLmN1cnI7XG4gICAgICAgIHZhciBsYXN0OiBudW1iZXIgPSBwYXJhLmxhc3Q7XG4gICAgICAgIHRoaXMuX2NyeXN0YWxUZXh0LnRleHQgPSBTdHJpbmcoY3Vycik7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uRW5lcmd5Q2hhbmdlKHBhcmEpICB7XG4gICAgICAgIHZhciBjdXJyOiBudW1iZXIgPSBwYXJhLmN1cnI7XG4gICAgICAgIHZhciBsYXN0OiBudW1iZXIgPSBwYXJhLmxhc3Q7XG4gICAgICAgIHRoaXMuX2VuZXJneVRleHQudGV4dCA9IFN0cmluZyhjdXJyKTtcbiAgICB9XG5cblxuICAgIHByb3RlY3RlZCBvbkZyZWVFbmVyZ3lCdG4oKSAge1xuICAgICAgICBWaWV3TWdyLmluc3RhbmNlLm9wZW5WaWV3KFZpZXdEZWYuRnJlZVJld2FyZFZpZXcsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgcmV3YXJkVHlwZTogRnJlZVJld2FyZFR5cGUuRW5lcmd5XG4gICAgICAgICAgICB9KVxuICAgIH1cblxuICAgIHByb3RlY3RlZCBvbkZyZWVDcnlzdGFsQnRuKCkgIHtcbiAgICAgICAgVmlld01nci5pbnN0YW5jZS5vcGVuVmlldyhWaWV3RGVmLkZyZWVSZXdhcmRWaWV3LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHJld2FyZFR5cGU6IEZyZWVSZXdhcmRUeXBlLkNyeXN0YWxcbiAgICAgICAgICAgIH0pXG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uU2tpbkJ0bigpICB7XG4gICAgICAgIFZpZXdNZ3IuaW5zdGFuY2Uub3BlblZpZXcoVmlld0RlZi5BY3RvclNraW5WaWV3KTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgb25TaGFyZUJ0bigpICB7XG4gICAgICAgIFFRTWluaUdhbWVBUEkuc2hhcmUoKG9rKSA9PiAge1xuXG4gICAgICAgIH0sIFwi5oGQ6b6Z5a6d5a6d6KKr5Lq657uR5p625LqG77yM5b+r5p2l5pWR5pWR5a6D5ZCn77yBXCIsIFwic3ViUmVzL2ltYWdlL+WIhuS6q+Wbvi5wbmdcIik7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uTW9yZUdhbWVCdG4oKSAge1xuICAgICAgICAvLyBWaWV3TWdyLmluc3RhbmNlLm9wZW5WaWV3KFZpZXdEZWYuTW9yZUdhbWVWaWV3KTtcbiAgICAgICAgUVFNaW5pR2FtZUFQSS5zaG93QXBwQm94QWQoKCkgPT4geyB9LCAoKSA9PiB7IH0pO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBvblN0YXJ0R2FtZUJ0bigpICB7XG4gICAgICAgIC8vIEFMRC5hbGRTZW5kT25seVNpbmdsZVJlcG9ydChBTERFdmVudERlZi5DbGlja0dhbWVTdGFydCk7ICAgICAgICBcbiAgICAgICAgdGhpcy5jbG9zZVZpZXcoKTtcbiAgICAgICAgVmlld01nci5pbnN0YW5jZS5vcGVuVmlldyhWaWV3RGVmLkxldmVsU3RhdGVWaWV3KTtcbiAgICB9XG5cbiAgICBvblNob3coKSB7XG4gICAgICAgIEV2ZW50TWdyLmluc3RhbmNlLmRpc3BhdGNoKEV2ZW50RGVmLkdhbWVfUGxheUJnbSk7XG4gICAgfVxuXG4gICAgY2hhbmdlQWRNYXNrKHZpc2libGU6IGJvb2xlYW4pIHtcbiAgICAgICAgdGhpcy5fYWRVSU1hc2sudmlzaWJsZSA9IHZpc2libGU7XG4gICAgfVxufSIsImltcG9ydCBWaWV3QmFzZSBmcm9tIFwiLi4vVmlld0Jhc2VcIjtcbmltcG9ydCBVdGlsaXQgZnJvbSBcIi4uLy4uL1V0aWxpdFwiO1xuaW1wb3J0IExvb3BBZFZpZXcgZnJvbSBcIi4uLy4uL1NoYXJlQWQvVmlldy9Mb29wQWRWaWV3XCI7XG5pbXBvcnQgVmlld01nciwgeyBWaWV3RGVmIH0gZnJvbSBcIi4uLy4uL01nci9WaWV3TWdyXCI7XG5pbXBvcnQgQXBwU3dpdGNoQ29uZmlnIGZyb20gXCIuLi8uLi9Db25maWcvQXBwU3dpdGNoQ29uZmlnXCI7XG5pbXBvcnQgQUxELCB7IEFMREV2ZW50RGVmIH0gZnJvbSBcIi4uLy4uL0FMRFwiO1xuaW1wb3J0IFNoYXJlQWQgZnJvbSBcIi4uLy4uL1NoYXJlQWQvU2hhcmVBZFwiO1xuaW1wb3J0IEV2ZW50TWdyIGZyb20gXCIuLi8uLi9FdmVudC9FdmVudE1nclwiO1xuaW1wb3J0IHsgRXZlbnREZWYgfSBmcm9tIFwiLi4vLi4vRXZlbnQvRXZlbnREZWZcIjtcbmltcG9ydCBDYWNoZWRXWEJhbm5lckFkIGZyb20gXCIuLi8uLi9DYWNoZWRXWEJhbm5lckFkXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1vcmVHYW1lVmlldyBleHRlbmRzIFZpZXdCYXNlXG57XG4gICAgcHJvdGVjdGVkIF90b3Bab25lIDogTGF5YS5DbGlwO1xuICAgIHByb3RlY3RlZCBfY2xvc2VCdG4gOiBMYXlhLlNwcml0ZTtcbiAgICBwcm90ZWN0ZWQgX2Nsb3NlQnRuMiA6IExheWEuU3ByaXRlO1xuXG4gICAgcHJvdGVjdGVkIF9sb29wQWQgOiBMb29wQWRWaWV3O1xuICAgIG9uQXdha2UoKVxuICAgIHtcbiAgICAgICAgdGhpcy5fdG9wWm9uZSA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJUb3Bab25lXCIpIGFzIExheWEuQ2xpcDtcbiAgICAgICAgaWYoVXRpbGl0LmlzSXBob25lWCgpKVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLl90b3Bab25lLnRvcCA9IDcwO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2Nsb3NlQnRuID0gdGhpcy5fdG9wWm9uZS5nZXRDaGlsZEJ5TmFtZShcIkNsb3NlQnRuXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl9jbG9zZUJ0bjIgPSB0aGlzLl90b3Bab25lLmdldENoaWxkQnlOYW1lKFwiQ2xvc2VCdG4yXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl9sb29wQWQgPSB0aGlzLl90b3Bab25lLmdldENoaWxkQnlOYW1lKFwiTG9vcEFEXCIpLmdldENvbXBvbmVudChMb29wQWRWaWV3KSBhcyBMb29wQWRWaWV3O1xuICAgICAgICB0aGlzLl9sb29wQWQuQWRQb3NJRCA9IDE4NTtcbiAgICB9XG4gICAgb25TaG93KCl7XG4gICAgICAgIENhY2hlZFdYQmFubmVyQWQuaGlkZSgpO1xuICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5kaXNwYXRjaChFdmVudERlZi5BRF9Td2l0Y2hCYW5uZXIsW2ZhbHNlXSk7XG4gICAgICAgIC8vIFNoYXJlQWQuUmFuZG9tSnVtcChBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkucG9wQWRTd2l0Y2gpO1xuICAgICAgICBpZih0aGlzLl9kYXRhICYmIHRoaXMuX2RhdGEuY2xvc2VGdW5jdGlvbil7XG4gICAgICAgICAgICB0aGlzLm9uQ2xvc2VFdmVudCA9IHRoaXMuX2RhdGEuY2xvc2VGdW5jdGlvbjtcbiAgICAgICAgfVxuICAgICAgICBpZih0aGlzLl9kYXRhICYmIHRoaXMuX2RhdGEuQ29udGludWVHYW1lKXtcbiAgICAgICAgICAgIC8vIEFMRC5hbGRTZW5kT25seVNpbmdsZVJlcG9ydChBTERFdmVudERlZi5FbnRlckdhbWVPdmVyTW9yZUdhbWUpO1xuICAgICAgICAgICAgdGhpcy5fY2xvc2VCdG4udmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICAgICAgbGV0IHRpbWUgPSBBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkuY29udGludWVCdG5EZWxheVRpbWUqMTAwMDtcbiAgICAgICAgICAgIExheWEudGltZXIub25jZSh0aW1lLHRoaXMsKCk9PntcbiAgICAgICAgICAgICAgICB0aGlzLl9jbG9zZUJ0bjIudmlzaWJsZSA9IHRydWU7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNle1xuICAgICAgICAgICAgdGhpcy5fY2xvc2VCdG4yLnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuX2Nsb3NlQnRuLnZpc2libGUgPSB0cnVlO1xuICAgICAgICAgICAgLy8gdGhpcy5vbkNsb3NlRXZlbnQgPSAoKSA9PiB7XG4gICAgICAgICAgICAvLyAgICAgaWYoVmlld01nci5pbnN0YW5jZS5nZXRWaWV3KFZpZXdEZWYuTWFpblZpZXcpID09IG51bGwpe1xuICAgICAgICAgICAgLy8gICAgICAgICBWaWV3TWdyLmluc3RhbmNlLm9wZW5WaWV3KFZpZXdEZWYuTWFpblZpZXcpO1xuICAgICAgICAgICAgLy8gICAgIH1cbiAgICAgICAgICAgIC8vIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIG9uQ2xvc2UoKXtcbiAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UuZGlzcGF0Y2goRXZlbnREZWYuQURfU3dpdGNoQmFubmVyLFt0cnVlXSk7XG4gICAgICAgIHN1cGVyLm9uQ2xvc2UoKTtcbiAgICB9XG5cbiAgICBhZGRFdmVudCgpXG4gICAge1xuICAgICAgICB0aGlzLl9jbG9zZUJ0bi5vbihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5jbG9zZVZpZXcpO1xuICAgICAgICB0aGlzLl9jbG9zZUJ0bjIub24oTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMuY2xvc2VWaWV3KTsgICAgICAgIFxuICAgIH1cblxuICAgIHJlbW92ZUV2ZW50KClcbiAgICB7XG4gICAgICAgIHRoaXMuX2Nsb3NlQnRuLm9mZihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5jbG9zZVZpZXcpO1xuICAgICAgICB0aGlzLl9jbG9zZUJ0bjIub2ZmKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLmNsb3NlVmlldyk7ICAgICAgICBcbiAgICB9XG59IiwiaW1wb3J0IFd1ZGlhbk1nciBmcm9tIFwiLi4vLi4vLi4vTWdyL1d1ZGlhbk1nclwiO1xuaW1wb3J0IEFwcFN3aXRjaENvbmZpZyBmcm9tIFwiLi4vLi4vLi4vQ29uZmlnL0FwcFN3aXRjaENvbmZpZ1wiO1xuaW1wb3J0IFdYQURNZ3IsIHsgV1hCYW5uZGVyQWQgfSBmcm9tIFwiLi4vLi4vLi4vTWdyL1dYQURNZ3JcIjtcbmltcG9ydCBVdGlsaXQgZnJvbSBcIi4uLy4uLy4uL1V0aWxpdFwiO1xuaW1wb3J0IFFRVGVtcGxhdGVWaWV3QmFzZSBmcm9tIFwiLi4vUVFUZW1wbGF0ZVZpZXdCYXNlXCI7XG5pbXBvcnQgUVFNaW5pR2FtZUFQSSBmcm9tIFwiLi4vLi4vLi4vUVFNaW5pR2FtZUFQSVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBRUUdhbWVGYWlsVmlld1RlbXBsYXRlIGV4dGVuZHMgUVFUZW1wbGF0ZVZpZXdCYXNlXG57XG4gICAgcHJvdGVjdGVkIF9jZW50ZXJab25lIDogTGF5YS5DbGlwID0gbnVsbDtcbiAgICBwcm90ZWN0ZWQgX2JhY2tCdG4gOiBMYXlhLlNwcml0ZSA9IG51bGw7XG4gICAgcHJvdGVjdGVkIF9jb250aW51ZUJ0biA6IExheWEuU3ByaXRlID0gbnVsbDtcbiAgICBcbiAgICBwcm90ZWN0ZWQgX2NsaWNrVGFnIDogYm9vbGVhbiA9IGZhbHNlO1xuICAgIHByb3RlY3RlZCBfY2xpY2tUaW1pbmdUYWcgOiBib29sZWFuID0gZmFsc2U7XG5cbiAgICBvbkF3YWtlKClcbiAgICB7XG4gICAgICAgIHN1cGVyLm9uQXdha2UoKTtcbiAgICAgICAgdGhpcy5fY2VudGVyWm9uZSA9IHRoaXMuVmlldy5nZXRDaGlsZEJ5TmFtZShcIkNlbnRlclpvbmVcIikgYXMgTGF5YS5DbGlwO1xuICAgICAgICBpZihVdGlsaXQuaXNJcGhvbmVYKCkpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuX2NlbnRlclpvbmUudG9wID0gIHRoaXMuX2NlbnRlclpvbmUudG9wICsgNzU7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLl9iYWNrQnRuID0gdGhpcy5fY2VudGVyWm9uZS5nZXRDaGlsZEJ5TmFtZShcIkJhY2tCdG5cIikgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgIHRoaXMuX2NvbnRpbnVlQnRuID0gdGhpcy5fY2VudGVyWm9uZS5nZXRDaGlsZEJ5TmFtZShcIkNvbnRpbnVlQnRuXCIpIGFzIExheWEuU3ByaXRlO1xuICAgIH1cblxuICAgIG9uU3RhcnQoKVxuICAgIHtcbiAgICAgICAgc3VwZXIub25TdGFydCgpO1xuICAgICAgICBpZihXdWRpYW5NZ3IuV3VkaWFuRmxhZylcbiAgICAgICAge1xuICAgICAgICAgICAgbGV0IHlQb3MgPSB0aGlzLl9jZW50ZXJab25lLmhlaWdodCAtIDE1MDtcbiAgICAgICAgICAgIHRoaXMuX2JhY2tCdG4ueSA9IHlQb3M7XG4gICAgICAgICAgICB0aGlzLl9jb250aW51ZUJ0bi55ID0geVBvcztcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xuICAgICAgICBpZihBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkucXFjZmcuYm94ID09IDEpXG4gICAgICAgIHtcbiAgICAgICAgICAgIFFRTWluaUdhbWVBUEkuc2hvd0FwcEJveEFkKCgpPT5cbiAgICAgICAgICAgIHtcblxuICAgICAgICAgICAgfSwoKT0+XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdmFyIGJ0bk1vdmVUaW1lciA9IEFwcFN3aXRjaENvbmZpZy5nZXRJbnN0YW5jZSgpLmdldEFwcFN3aXRjaERhdGEoKS5idG5Nb3ZlVGltZXI7XG4gICAgICAgICAgICAgICAgdmFyIGJhbm5lck1vdmVUaW1lciA9IEFwcFN3aXRjaENvbmZpZy5nZXRJbnN0YW5jZSgpLmdldEFwcFN3aXRjaERhdGEoKS5iYW5uZXJNb3ZlVGltZXI7XG4gICAgICAgICAgICAgICAgTGF5YS50aW1lci5vbmNlKGJhbm5lck1vdmVUaW1lciAqIDEwMDAsc2VsZixzZWxmLkJhbm5lclVwKTtcbiAgICAgICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoYnRuTW92ZVRpbWVyICogMTAwMCxzZWxmLHNlbGYuQnRuVXApO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgICBlbHNlXG4gICAgICAgIHtcbiAgICAgICAgICAgIHZhciBidG5Nb3ZlVGltZXIgPSBBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkuYnRuTW92ZVRpbWVyO1xuICAgICAgICAgICAgdmFyIGJhbm5lck1vdmVUaW1lciA9IEFwcFN3aXRjaENvbmZpZy5nZXRJbnN0YW5jZSgpLmdldEFwcFN3aXRjaERhdGEoKS5iYW5uZXJNb3ZlVGltZXI7XG4gICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoYmFubmVyTW92ZVRpbWVyICogMTAwMCxzZWxmLHNlbGYuQmFubmVyVXApO1xuICAgICAgICAgICAgTGF5YS50aW1lci5vbmNlKGJ0bk1vdmVUaW1lciAqIDEwMDAsc2VsZixzZWxmLkJ0blVwKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFkZEV2ZW50KClcbiAgICB7XG4gICAgICAgIHN1cGVyLmFkZEV2ZW50KCk7XG4gICAgICAgIHRoaXMuX2JhY2tCdG4ub24oTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25CYWNrQnRuKTtcbiAgICAgICAgdGhpcy5fY29udGludWVCdG4ub24oTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25Db250aW51ZUJ0bik7XG4gICAgfVxuXG4gICAgcmVtb3ZlRXZlbnQoKVxuICAgIHtcbiAgICAgICAgc3VwZXIucmVtb3ZlRXZlbnQoKTtcbiAgICAgICAgdGhpcy5fYmFja0J0bi5vZmYoTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25CYWNrQnRuKTtcbiAgICAgICAgdGhpcy5fY29udGludWVCdG4ub2ZmKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uQ29udGludWVCdG4pO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBvbkJhY2tCdG4oKVxuICAgIHtcbiAgICAgICAgaWYoIXRoaXMuX2NsaWNrVGFnICYmIFd1ZGlhbk1nci5XdWRpYW5GbGFnKVxuICAgICAgICB7XG4gICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXNcbiAgICAgICAgICAgIGlmKCF0aGlzLl9jbGlja1RpbWluZ1RhZylcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9jbGlja1RpbWluZ1RhZyA9IHRydWVcbiAgICAgICAgICAgICAgICB2YXIgYnRuTW92ZVRpbWVyID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLmJ0bk1vdmVUaW1lcjtcbiAgICAgICAgICAgICAgICB2YXIgYmFubmVyTW92ZVRpbWVyID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLmJhbm5lck1vdmVUaW1lcjtcbiAgICAgICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoYmFubmVyTW92ZVRpbWVyICogMTAwMCx0aGlzLHRoaXMuQmFubmVyVXApO1xuICAgICAgICAgICAgICAgIExheWEudGltZXIub25jZShidG5Nb3ZlVGltZXIgKiAxMDAwLHRoaXMsdGhpcy5CdG5VcCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvL3RvZG865L2g55qE5Luj56CBXG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uQ29udGludWVCdG4oKVxuICAgIHtcbiAgICAgICAgaWYoIXRoaXMuX2NsaWNrVGFnICYmIFd1ZGlhbk1nci5XdWRpYW5GbGFnKVxuICAgICAgICB7XG4gICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXNcbiAgICAgICAgICAgIGlmKCF0aGlzLl9jbGlja1RpbWluZ1RhZylcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9jbGlja1RpbWluZ1RhZyA9IHRydWVcbiAgICAgICAgICAgICAgICB2YXIgYnRuTW92ZVRpbWVyID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLmJ0bk1vdmVUaW1lcjtcbiAgICAgICAgICAgICAgICB2YXIgYmFubmVyTW92ZVRpbWVyID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLmJhbm5lck1vdmVUaW1lcjtcbiAgICAgICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoYmFubmVyTW92ZVRpbWVyICogMTAwMCx0aGlzLHRoaXMuQmFubmVyVXApO1xuICAgICAgICAgICAgICAgIExheWEudGltZXIub25jZShidG5Nb3ZlVGltZXIgKiAxMDAwLHRoaXMsdGhpcy5CdG5VcCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvL3RvZG865L2g55qE5Luj56CBXG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIEJhbm5lclVwKClcbiAgICB7XG4gICAgICAgIC8vdG9kb++8muaYvuekukJhbm5lclxuICAgIH1cblxuICAgIHByb3RlY3RlZCBCdG5VcCgpXG4gICAge1xuICAgICAgICB0aGlzLl9jbGlja1RhZyA9IHRydWU7XG4gICAgICAgIHRoaXMuX2JhY2tCdG4ueSA9IDcyMDtcbiAgICAgICAgdGhpcy5fY29udGludWVCdG4ueSA9IDcyMDtcbiAgICB9XG5cbiAgICBvbkRlc3Ryb3koKVxuICAgIHtcbiAgICAgICAgLy90b2Rv77ya6ZqQ6JePQmFubmVyXG4gICAgfVxufSIsImltcG9ydCBXdWRpYW5NZ3IgZnJvbSBcIi4uLy4uLy4uL01nci9XdWRpYW5NZ3JcIjtcbmltcG9ydCBBcHBTd2l0Y2hDb25maWcgZnJvbSBcIi4uLy4uLy4uL0NvbmZpZy9BcHBTd2l0Y2hDb25maWdcIjtcbmltcG9ydCBVdGlsaXQgZnJvbSBcIi4uLy4uLy4uL1V0aWxpdFwiO1xuaW1wb3J0IFFRVGVtcGxhdGVWaWV3QmFzZSBmcm9tIFwiLi4vUVFUZW1wbGF0ZVZpZXdCYXNlXCI7XG5pbXBvcnQgUVFNaW5pR2FtZUFQSSBmcm9tIFwiLi4vLi4vLi4vUVFNaW5pR2FtZUFQSVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBRUUdhbWVXaW5WaWV3VGVtcGxhdGUgZXh0ZW5kcyBRUVRlbXBsYXRlVmlld0Jhc2VcbntcbiAgICBwcm90ZWN0ZWQgX2NlbnRlclpvbmUgOiBMYXlhLkNsaXAgPSBudWxsO1xuICAgIHByb3RlY3RlZCBfYmFja0J0biA6IExheWEuU3ByaXRlID0gbnVsbDtcbiAgICBwcm90ZWN0ZWQgX25leHRCdG4gOiBMYXlhLlNwcml0ZSA9IG51bGw7XG4gICAgXG4gICAgcHJvdGVjdGVkIF9jbGlja1RhZyA6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBwcm90ZWN0ZWQgX2NsaWNrVGltaW5nVGFnIDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgXG4gICAgb25Bd2FrZSgpXG4gICAge1xuICAgICAgICBzdXBlci5vbkF3YWtlKCk7XG4gICAgICAgIHRoaXMuX2NlbnRlclpvbmUgPSB0aGlzLlZpZXcuZ2V0Q2hpbGRCeU5hbWUoXCJDZW50ZXJab25lXCIpIGFzIExheWEuQ2xpcDtcbiAgICAgICAgaWYoVXRpbGl0LmlzSXBob25lWCgpKVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLl9jZW50ZXJab25lLnRvcCA9ICB0aGlzLl9jZW50ZXJab25lLnRvcCArIDc1O1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5fYmFja0J0biA9IHRoaXMuX2NlbnRlclpvbmUuZ2V0Q2hpbGRCeU5hbWUoXCJCYWNrQnRuXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl9uZXh0QnRuID0gdGhpcy5fY2VudGVyWm9uZS5nZXRDaGlsZEJ5TmFtZShcIk5leHRCdG5cIikgYXMgTGF5YS5TcHJpdGU7XG4gICAgfVxuXG4gICAgb25TdGFydCgpXG4gICAge1xuICAgICAgICBzdXBlci5vblN0YXJ0KCk7XG4gICAgICAgIGlmKFd1ZGlhbk1nci5XdWRpYW5GbGFnICYmIDEgPT0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLnFxY2ZnLndlaXlpKVxuICAgICAgICB7XG4gICAgICAgICAgICBsZXQgeVBvcyA9IHRoaXMuX2NlbnRlclpvbmUuaGVpZ2h0IC0gMTUwO1xuICAgICAgICAgICAgdGhpcy5fYmFja0J0bi55ID0geVBvcztcbiAgICAgICAgICAgIHRoaXMuX25leHRCdG4ueSA9IHlQb3M7XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgc2VsZiA9IHRoaXM7XG4gICAgICAgIGlmKEFwcFN3aXRjaENvbmZpZy5nZXRJbnN0YW5jZSgpLmdldEFwcFN3aXRjaERhdGEoKS5xcWNmZy5ib3ggPT0gMSlcbiAgICAgICAge1xuICAgICAgICAgICAgUVFNaW5pR2FtZUFQSS5zaG93QXBwQm94QWQoKCk9PlxuICAgICAgICAgICAge1xuXG4gICAgICAgICAgICB9LCgpPT5cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB2YXIgYnRuTW92ZVRpbWVyID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLmJ0bk1vdmVUaW1lcjtcbiAgICAgICAgICAgICAgICB2YXIgYmFubmVyTW92ZVRpbWVyID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLmJhbm5lck1vdmVUaW1lcjtcbiAgICAgICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoYmFubmVyTW92ZVRpbWVyICogMTAwMCxzZWxmLHNlbGYuQmFubmVyVXApO1xuICAgICAgICAgICAgICAgIExheWEudGltZXIub25jZShidG5Nb3ZlVGltZXIgKiAxMDAwLHNlbGYsc2VsZi5CdG5VcCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgICAgIGVsc2VcbiAgICAgICAge1xuICAgICAgICAgICAgdmFyIGJ0bk1vdmVUaW1lciA9IEFwcFN3aXRjaENvbmZpZy5nZXRJbnN0YW5jZSgpLmdldEFwcFN3aXRjaERhdGEoKS5idG5Nb3ZlVGltZXI7XG4gICAgICAgICAgICB2YXIgYmFubmVyTW92ZVRpbWVyID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLmJhbm5lck1vdmVUaW1lcjtcbiAgICAgICAgICAgIExheWEudGltZXIub25jZShiYW5uZXJNb3ZlVGltZXIgKiAxMDAwLHNlbGYsc2VsZi5CYW5uZXJVcCk7XG4gICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoYnRuTW92ZVRpbWVyICogMTAwMCxzZWxmLHNlbGYuQnRuVXApO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgYWRkRXZlbnQoKVxuICAgIHtcbiAgICAgICAgc3VwZXIuYWRkRXZlbnQoKTtcbiAgICAgICAgdGhpcy5fYmFja0J0bi5vbihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5vbkJhY2tCdG4pO1xuICAgICAgICB0aGlzLl9uZXh0QnRuLm9uKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uTmV4dEJ0bik7XG4gICAgfVxuXG4gICAgcmVtb3ZlRXZlbnQoKVxuICAgIHtcbiAgICAgICAgc3VwZXIucmVtb3ZlRXZlbnQoKTtcbiAgICAgICAgdGhpcy5fYmFja0J0bi5vZmYoTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25CYWNrQnRuKTtcbiAgICAgICAgdGhpcy5fbmV4dEJ0bi5vZmYoTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25OZXh0QnRuKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgb25CYWNrQnRuKClcbiAgICB7XG4gICAgICAgIGlmKCF0aGlzLl9jbGlja1RhZyAmJiBXdWRpYW5NZ3IuV3VkaWFuRmxhZylcbiAgICAgICAge1xuICAgICAgICAgICAgdmFyIHNlbGYgPSB0aGlzXG4gICAgICAgICAgICBpZighdGhpcy5fY2xpY2tUaW1pbmdUYWcpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGhpcy5fY2xpY2tUaW1pbmdUYWcgPSB0cnVlXG4gICAgICAgICAgICAgICAgdmFyIGJ0bk1vdmVUaW1lciA9IEFwcFN3aXRjaENvbmZpZy5nZXRJbnN0YW5jZSgpLmdldEFwcFN3aXRjaERhdGEoKS5idG5Nb3ZlVGltZXI7XG4gICAgICAgICAgICAgICAgdmFyIGJhbm5lck1vdmVUaW1lciA9IEFwcFN3aXRjaENvbmZpZy5nZXRJbnN0YW5jZSgpLmdldEFwcFN3aXRjaERhdGEoKS5iYW5uZXJNb3ZlVGltZXI7XG4gICAgICAgICAgICAgICAgTGF5YS50aW1lci5vbmNlKGJhbm5lck1vdmVUaW1lciAqIDEwMDAsdGhpcyx0aGlzLkJhbm5lclVwKTtcbiAgICAgICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoYnRuTW92ZVRpbWVyICogMTAwMCx0aGlzLHRoaXMuQnRuVXApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLy90b2RvOuS9oOeahOS7o+eggVxuICAgIH1cblxuICAgIHByb3RlY3RlZCBvbk5leHRCdG4oKVxuICAgIHtcbiAgICAgICAgaWYoIXRoaXMuX2NsaWNrVGFnICYmIFd1ZGlhbk1nci5XdWRpYW5GbGFnKVxuICAgICAgICB7XG4gICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXNcbiAgICAgICAgICAgIGlmKCF0aGlzLl9jbGlja1RpbWluZ1RhZylcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9jbGlja1RpbWluZ1RhZyA9IHRydWVcbiAgICAgICAgICAgICAgICB2YXIgYnRuTW92ZVRpbWVyID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLmJ0bk1vdmVUaW1lcjtcbiAgICAgICAgICAgICAgICB2YXIgYmFubmVyTW92ZVRpbWVyID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLmJhbm5lck1vdmVUaW1lcjtcbiAgICAgICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoYmFubmVyTW92ZVRpbWVyICogMTAwMCx0aGlzLHRoaXMuQmFubmVyVXApO1xuICAgICAgICAgICAgICAgIExheWEudGltZXIub25jZShidG5Nb3ZlVGltZXIgKiAxMDAwLHRoaXMsdGhpcy5CdG5VcCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvL3RvZG865L2g55qE5Luj56CBXG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIEJhbm5lclVwKClcbiAgICB7XG4gICAgICAgIC8vdG9kb++8muaYvuekukJhbm5lclxuICAgIH1cblxuICAgIHByb3RlY3RlZCBCdG5VcCgpXG4gICAge1xuICAgICAgICB0aGlzLl9jbGlja1RhZyA9IHRydWU7XG4gICAgICAgIHRoaXMuX2JhY2tCdG4ueSA9IDcyMDtcbiAgICAgICAgdGhpcy5fbmV4dEJ0bi55ID0gNzIwO1xuICAgIH1cblxuICAgIG9uRGVzdHJveSgpXG4gICAge1xuICAgICAgICAvL3RvZG/vvJrpmpDol49CYW5uZXJcbiAgICB9XG59IiwiaW1wb3J0IEtSUV9NYWluIGZyb20gXCIuLi8uLi8uLi9LUlEvVmlld0NvbS9LUlFfTWFpblwiO1xuaW1wb3J0IFV0aWxpdCBmcm9tIFwiLi4vLi4vLi4vVXRpbGl0XCI7XG5pbXBvcnQgUVFUZW1wbGF0ZVZpZXdCYXNlIGZyb20gXCIuLi9RUVRlbXBsYXRlVmlld0Jhc2VcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUVFJbkdhbWVWaWV3VGVtcGxhdGUgZXh0ZW5kcyBRUVRlbXBsYXRlVmlld0Jhc2VcbntcbiAgICBwcm90ZWN0ZWQgX2NlbnRlclpvbmUgOiBMYXlhLkNsaXAgPSBudWxsO1xuXG4gICAgb25Bd2FrZSgpXG4gICAge1xuICAgICAgICBzdXBlci5vbkF3YWtlKCk7XG4gICAgICAgIHRoaXMuX2NlbnRlclpvbmUgPSB0aGlzLlZpZXcuZ2V0Q2hpbGRCeU5hbWUoXCJDZW50ZXJab25lXCIpIGFzIExheWEuQ2xpcDtcblxuICAgICAgICB2YXIgYXNwZWN0UmF0aW8gPSBMYXlhLnN0YWdlLndpZHRoIC8gTGF5YS5zdGFnZS5oZWlnaHQ7XG4gICAgICAgIGlmKGFzcGVjdFJhdGlvICA8IDAuNSkgXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlmKFV0aWxpdC5pc0lwaG9uZVgoKSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9jZW50ZXJab25lLnRvcCA9ICB0aGlzLl9jZW50ZXJab25lLnRvcCArIDc1O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2VcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5fY2VudGVyWm9uZS50b3AgPSAgdGhpcy5fY2VudGVyWm9uZS50b3AgLSAyMDA7XG4gICAgICAgICAgICBpZihVdGlsaXQuaXNJcGhvbmVYKCkpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGhpcy5fY2VudGVyWm9uZS50b3AgPSAgdGhpcy5fY2VudGVyWm9uZS50b3AgKyA3NTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIG9uU3RhcnQoKVxuICAgIHtcbiAgICAgICAgc3VwZXIub25TdGFydCgpO1xuICAgIH1cblxuICAgIGFkZEV2ZW50KClcbiAgICB7XG4gICAgICAgIHN1cGVyLmFkZEV2ZW50KCk7XG4gICAgfVxuXG4gICAgcmVtb3ZlRXZlbnQoKVxuICAgIHtcbiAgICAgICAgc3VwZXIucmVtb3ZlRXZlbnQoKTtcbiAgICB9XG59IiwiaW1wb3J0IEtSUV9NYWluIGZyb20gXCIuLi8uLi8uLi9LUlEvVmlld0NvbS9LUlFfTWFpblwiO1xuaW1wb3J0IEV2ZW50TWdyIGZyb20gXCIuLi8uLi8uLi9FdmVudC9FdmVudE1nclwiO1xuaW1wb3J0IHsgRXZlbnREZWYgfSBmcm9tIFwiLi4vLi4vLi4vRXZlbnQvRXZlbnREZWZcIjtcbmltcG9ydCBVc2VyIGZyb20gXCIuLi8uLi8uLi9Vc2VyL1VzZXJcIjtcbmltcG9ydCBVdGlsaXQgZnJvbSBcIi4uLy4uLy4uL1V0aWxpdFwiO1xuaW1wb3J0IFFRVGVtcGxhdGVWaWV3QmFzZSBmcm9tIFwiLi4vUVFUZW1wbGF0ZVZpZXdCYXNlXCI7XG5pbXBvcnQgUVFNaW5pR2FtZUFQSSBmcm9tIFwiLi4vLi4vLi4vUVFNaW5pR2FtZUFQSVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBRUU1haW5WaWV3VGVtcGxhdGUgZXh0ZW5kcyBRUVRlbXBsYXRlVmlld0Jhc2VcbntcbiAgICBwcm90ZWN0ZWQgX2NlbnRlclpvbmUgOiBMYXlhLkNsaXAgPSBudWxsO1xuICAgIHByb3RlY3RlZCBfc3RhcnRCdG4gOiBMYXlhLlNwcml0ZSA9IG51bGw7XG5cbiAgICBwcm90ZWN0ZWQgX2xldmVsTnVtIDogTGF5YS5Gb250Q2xpcCA9IG51bGw7XG4gICAgcHJvdGVjdGVkIF9tb25leU51bSA6IExheWEuRm9udENsaXAgPSBudWxsO1xuICAgIFxuICAgIHByb3RlY3RlZCBfbW9yZUdhbWVCdG4gOiBMYXlhLlNwcml0ZSA9IG51bGw7XG5cbiAgICBvbkF3YWtlKClcbiAgICB7XG4gICAgICAgIHN1cGVyLm9uQXdha2UoKTtcblxuICAgICAgICB0aGlzLl9jZW50ZXJab25lID0gdGhpcy5WaWV3LmdldENoaWxkQnlOYW1lKFwiQ2VudGVyWm9uZVwiKSBhcyBMYXlhLkNsaXA7XG4gICAgICAgIHRoaXMuX21vcmVHYW1lQnRuID0gdGhpcy5fY2VudGVyWm9uZS5nZXRDaGlsZEJ5TmFtZShcIk1vcmVHYW1lQnRuXCIpIGFzIExheWEuU3ByaXRlO1xuXG4gICAgICAgIHZhciBhc3BlY3RSYXRpbyA9IExheWEuc3RhZ2Uud2lkdGggLyBMYXlhLnN0YWdlLmhlaWdodDtcbiAgICAgICAgaWYoYXNwZWN0UmF0aW8gIDwgMC41KSBcbiAgICAgICAge1xuICAgICAgICAgICAgaWYoVXRpbGl0LmlzSXBob25lWCgpKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRoaXMuX2NlbnRlclpvbmUudG9wID0gIHRoaXMuX2NlbnRlclpvbmUudG9wICsgNzU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLl9jZW50ZXJab25lLnRvcCA9ICB0aGlzLl9jZW50ZXJab25lLnRvcCAtIDIwMDtcbiAgICAgICAgICAgIGlmKFV0aWxpdC5pc0lwaG9uZVgoKSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9jZW50ZXJab25lLnRvcCA9ICB0aGlzLl9jZW50ZXJab25lLnRvcCArIDc1O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5fc3RhcnRCdG4gPSB0aGlzLl9jZW50ZXJab25lLmdldENoaWxkQnlOYW1lKFwiU3RhcnRCdG5cIikgYXMgTGF5YS5TcHJpdGU7XG5cbiAgICAgICAgdGhpcy5fbGV2ZWxOdW0gPSB0aGlzLl9jZW50ZXJab25lLmdldENoaWxkQnlOYW1lKFwiTGV2ZWxJbmZvXCIpLmdldENoaWxkQnlOYW1lKFwiTGV2ZWxOdW1cIikgYXMgTGF5YS5Gb250Q2xpcDtcbiAgICAgICAgdGhpcy5fbW9uZXlOdW0gPSB0aGlzLl9jZW50ZXJab25lLmdldENoaWxkQnlOYW1lKFwiTW9uZXlJbmZvXCIpLmdldENoaWxkQnlOYW1lKFwiTW9uZXlOdW1cIikgYXMgTGF5YS5Gb250Q2xpcDtcbiAgICB9XG5cbiAgICBvblN0YXJ0KClcbiAgICB7XG4gICAgICAgIHN1cGVyLm9uU3RhcnQoKTtcbiAgICAgICAgdGhpcy5fbW9uZXlOdW0udmFsdWUgPSBTdHJpbmcoVXNlci5nZXRNb25leSgpKTtcbiAgICAgICAgdGhpcy5fbGV2ZWxOdW0udmFsdWUgPSBTdHJpbmcoVXNlci5nZXRMZXZlTnVtKCkpO1xuICAgIH1cblxuICAgIGFkZEV2ZW50KClcbiAgICB7XG4gICAgICAgIHN1cGVyLmFkZEV2ZW50KCk7XG4gICAgICAgIHRoaXMuX3N0YXJ0QnRuLm9uKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uU3RhcnRCdG4pO1xuICAgICAgICB0aGlzLl9tb3JlR2FtZUJ0bi5vbihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5vbk1vcmVHYW1lQnRuKTtcblxuICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5yZWdFdmVtdChFdmVudERlZi5HYW1lX09uVXNlck1vbmV5Q2hhbmdlLHRoaXMsdGhpcy5vblVzZXJNb25leUNoYW5nZSk7XG4gICAgfVxuXG4gICAgcmVtb3ZlRXZlbnQoKVxuICAgIHtcbiAgICAgICAgc3VwZXIucmVtb3ZlRXZlbnQoKTtcbiAgICAgICAgdGhpcy5fc3RhcnRCdG4ub2ZmKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uU3RhcnRCdG4pO1xuICAgICAgICB0aGlzLl9tb3JlR2FtZUJ0bi5vZmYoTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25Nb3JlR2FtZUJ0bik7XG4gICAgICAgIFxuICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5yZW1vdmVFdmVudChFdmVudERlZi5HYW1lX09uVXNlck1vbmV5Q2hhbmdlLHRoaXMsdGhpcy5vblVzZXJNb25leUNoYW5nZSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uU3RhcnRCdG4oKVxuICAgIHtcbiAgICAgICAgXG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uTW9yZUdhbWVCdG4oKVxuICAgIHtcbiAgICAgICAgUVFNaW5pR2FtZUFQSS5zaG93QXBwQm94QWQoKCk9PlxuICAgICAgICB7XG4gICAgICAgICAgICBcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uVXNlck1vbmV5Q2hhbmdlKHBhcmEpXG4gICAge1xuICAgICAgICBsZXQgY3VyciA9IHBhcmEuY3VycjtcbiAgICAgICAgbGV0IGxhc3QgPSBwYXJhLmxhc3Q7XG4gICAgICAgIHRoaXMuX21vbmV5TnVtLnZhbHVlID0gU3RyaW5nKGN1cnIpO1xuICAgIH1cbn0iLCJpbXBvcnQgVmlld0Jhc2UgZnJvbSBcIi4uLy4uLy4uL1ZpZXcvVmlld0Jhc2VcIjtcbmltcG9ydCB7IEV2ZW50RGVmIH0gZnJvbSBcIi4uLy4uLy4uL0V2ZW50L0V2ZW50RGVmXCI7XG5pbXBvcnQgRXZlbnRNZ3IgZnJvbSBcIi4uLy4uLy4uL0V2ZW50L0V2ZW50TWdyXCI7XG5pbXBvcnQgQXBwU3dpdGNoQ29uZmlnIGZyb20gXCIuLi8uLi8uLi9Db25maWcvQXBwU3dpdGNoQ29uZmlnXCI7XG5pbXBvcnQgV3VkaWFuTWdyIGZyb20gXCIuLi8uLi8uLi9NZ3IvV3VkaWFuTWdyXCI7XG5pbXBvcnQgQ2FjaGVkV1hCYW5uZXJBZCBmcm9tIFwiLi4vLi4vLi4vQ2FjaGVkV1hCYW5uZXJBZFwiO1xuaW1wb3J0IFFRTWluaUdhbWVBUEkgZnJvbSBcIi4uLy4uLy4uL1FRTWluaUdhbWVBUElcIjtcbmltcG9ydCBDYWNoZWRRUUJhbm5lckFkIGZyb20gXCIuLi8uLi8uLi9DYWNoZWRRUUJhbm5lckFkXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFFRQ3JhenlDbGljayBleHRlbmRzIFZpZXdCYXNlIHtcblxuICAgIHByb3RlY3RlZCBfY2xpY2tfQnRuOiBMYXlhLkJ1dHRvbjsvL+e7meeUqOaIt+eLgueCueeahOaMiemSrlxuICAgIHByb3RlY3RlZCBfYXJyb3dfSW1nOiBMYXlhLkltYWdlOy8v566t5aS077yM55So5LqO57uZ55So5oi35o+Q56S6XG4gICAgcHJvdGVjdGVkIF9nZXRQcml6ZV9WaWV3OiBMYXlhLlVJQ29tcG9uZW50O1xuICAgIHByb3RlY3RlZCBfcHJpemVDb3VudF9UZXh0OiBMYXlhLlRleHQ7XG4gICAgcHJvdGVjdGVkIF9jb25maXJtX0J0bjogTGF5YS5TcHJpdGU7XG5cbiAgICBwcm90ZWN0ZWQgX2NsaWNrQmFyIDogTGF5YS5DbGlwID0gbnVsbDtcbiAgICBwcm90ZWN0ZWQgX2NsaWNrQmFyT3JpZ2luYWxXaWR0aDogbnVtYmVyO1xuICAgIHByb3RlY3RlZCBfY2xpY2tUaW1lOiBudW1iZXI7Ly/nlKjmnaXkv53lrZjnlKjmiLflvZPliY3ngrnlh7vmrKHmlbBcbiAgICBwcm90ZWN0ZWQgX3RvdGFsQ2xpY2tUaW1lOiBudW1iZXI7Ly/nlKjkuo7orqHnrpflrqLmiLfmgLvlhbHngrnlh7vkuoblpJrlsJHmrKHmjInpkq5cbiAgICBwcm90ZWN0ZWQgX3RvdGFsQ2xpY2tUaW1lcjogbnVtYmVyID0gMTU7Ly/nlKjmiLfkuIDnm7TmsqHkuK3lpZfot6/vvIzpgqPkuYjngrnlh7vkuobov5nkuYjlpJrmrKHpg73ov5jmmK/orqnku5bnu6fnu63njqnkuIvljrvvvIzkuI3opoHljaHmrbvnqIvluo9cbiAgICBwcm90ZWN0ZWQgX25lZWRDbGlja1RpbWU6IG51bWJlciA9IDEwOy8v5LiA5YWx54K55aSa5bCR5qyh6IO95aSf6I635b6X5aWW5Yqx77yM55So5LqO5pi+56S66L+b5bqm5p2hXG4gICAgcHJvdGVjdGVkIF9iYW5uZXJDbGlja1RpbWU6IG51bWJlciA9IDEwOy8v54K55aSa5bCR5qyh5byA5aeL5pi+56S6YmFubmVycuWll+i3r+eUqOaIt++8jOWPr+W+ruiwgyAgIFxuXG4gICAgcHJvdGVjdGVkIF9hcnJvd1VwOiBib29sZWFuO1xuICAgIHByb3RlY3RlZCBfYmFubmVyQ2xpY2tlZDogYm9vbGVhbjtcblxuICAgIHByb3RlY3RlZCBfY29tcGVsZXRGdW5jdGlvbjogRnVuY3Rpb247XG4gICAgcHJvdGVjdGVkIF9wcml6ZUNvdW50OiBudW1iZXI7XG4gICAgXG5cbiAgICBwcm90ZWN0ZWQgZHJnb246IExheWEuU2tlbGV0b247XG5cblxuICAgIG9uQXdha2UoKSB7XG4gICAgICAgIHRoaXMuX2NsaWNrX0J0biA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJDbGlja19CdG5cIikgYXMgTGF5YS5CdXR0b247XG4gICAgICAgIHRoaXMuX2NsaWNrX0J0bi5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLkJ1dHRvbkNsaWNrZWQpO1xuICAgICAgICB0aGlzLl9hcnJvd19JbWcgPSB0aGlzLl9jbGlja19CdG4uZ2V0Q2hpbGRCeU5hbWUoXCJBcnJvd19JbWdcIikgYXMgTGF5YS5JbWFnZTtcbiAgICAgICAgdGhpcy5fZ2V0UHJpemVfVmlldyA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJHZXRQcml6ZV9WaWV3XCIpIGFzIExheWEuVUlDb21wb25lbnQ7XG4gICAgICAgIHRoaXMuX3ByaXplQ291bnRfVGV4dCA9IHRoaXMuX2dldFByaXplX1ZpZXcuZ2V0Q2hpbGRCeU5hbWUoXCJQcml6ZUNvdW50X1RleHRcIikgYXMgTGF5YS5UZXh0O1xuICAgICAgICB0aGlzLl9jb25maXJtX0J0biA9IHRoaXMuX2dldFByaXplX1ZpZXcuZ2V0Q2hpbGRCeU5hbWUoXCJDb25maXJtX0J0blwiKSBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgdGhpcy5fZ2V0UHJpemVfVmlldy52aXNpYmxlID0gZmFsc2U7XG5cbiAgICAgICAgdGhpcy5fY2xpY2tCYXIgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiQ2xpY2tCYXJcIikuZ2V0Q2hpbGRCeU5hbWUoXCJDbGlja0JhclwiKSBhcyBMYXlhLkNsaXA7XG4gICAgICAgIHRoaXMuX2NsaWNrQmFyT3JpZ2luYWxXaWR0aCA9IHRoaXMuX2NsaWNrQmFyLndpZHRoO1xuICAgICAgICB0aGlzLl9jbGlja0Jhci53aWR0aCA9IDA7XG5cbiAgICAgICAgdGhpcy5fY2xpY2tUaW1lID0gMDtcbiAgICAgICAgdGhpcy5fdG90YWxDbGlja1RpbWUgPSAwO1xuXG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcbiAgICAgICAgTGF5YS5sb2FkZXIubG9hZChcIkNsaWNrR2V0UHJpemUvcXVhbmppLnBuZ1wiLExheWEuSGFuZGxlci5jcmVhdGUodGhpcywodGV4dHVyZSA6IExheWEuVGV4dHVyZSk9PlxuICAgICAgICB7XG4gICAgICAgICAgICB0ZXh0dXJlLmJpdG1hcC5sb2NrID0gdHJ1ZTtcbiAgICAgICAgICAgIExheWEubG9hZGVyLmxvYWQoXCJDbGlja0dldFByaXplL3F1YW5qaS5za1wiLExheWEuSGFuZGxlci5jcmVhdGUodGhpcywoYnl0ZXMpPT5cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcInRleHR1cmVcIix0ZXh0dXJlKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcImJ5dGVzXCIsYnl0ZXMpO1xuICAgICAgICAgICAgICAgIGxldCB0ZW1wbGF0ZSA9IG5ldyBMYXlhLlRlbXBsZXQoKVxuICAgICAgICAgICAgICAgIHRlbXBsYXRlLnBhcnNlRGF0YSh0ZXh0dXJlLGJ5dGVzKTtcbiAgICAgICAgICAgICAgICBzZWxmLmRyZ29uID0gdGVtcGxhdGUuYnVpbGRBcm1hdHVyZSgpO1xuICAgICAgICAgICAgICAgIHNlbGYub3duZXIuYWRkQ2hpbGQoc2VsZi5kcmdvbik7XG4gICAgICAgICAgICAgICAgc2VsZi5kcmdvbi54ID0gMzc1O1xuICAgICAgICAgICAgICAgIHNlbGYuZHJnb24ueSA9IDYxMDtcbiAgICAgICAgICAgICAgICBzZWxmLmRyZ29uLnNjYWxlWCA9IDI7XG4gICAgICAgICAgICAgICAgc2VsZi5kcmdvbi5zY2FsZVkgPSAyO1xuICAgICAgICAgICAgICAgIHNlbGYuZHJnb24ucGFyZW50LnNldENoaWxkSW5kZXgoc2VsZi5kcmdvbiwxKTtcbiAgICAgICAgICAgICAgICBzZWxmLmRyZ29uLnBsYXkoMCwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJxdWFuamkg5Yqg6L295a6M5oiQISEhIVwiLHRlbXBsYXRlKTtcbiAgICAgICAgICAgIH0pLExheWEuSGFuZGxlci5jcmVhdGUodGhpcywoKT0+e30pLFwiXCIsMCxmYWxzZSxcIlwiLHRydWUpXG4gICAgICAgIH0pLExheWEuSGFuZGxlci5jcmVhdGUodGhpcywoKT0+e30pLFwiXCIsMCxmYWxzZSxcIlwiLHRydWUpO1xuICAgIH1cblxuICAgIG9uVXBkYXRlKCkge1xuICAgICAgICBpZiAodGhpcy5fYXJyb3dVcCkge1xuICAgICAgICAgICAgdGhpcy5fYXJyb3dfSW1nLnRvcCArPSBMYXlhLnRpbWVyLmRlbHRhIC8gNTtcbiAgICAgICAgICAgIGlmICh0aGlzLl9hcnJvd19JbWcudG9wID4gLTE0MCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2Fycm93VXAgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuX2Fycm93X0ltZy50b3AgLT0gTGF5YS50aW1lci5kZWx0YSAvIDU7XG4gICAgICAgICAgICBpZiAodGhpcy5fYXJyb3dfSW1nLnRvcCA8IC0xODApIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9hcnJvd1VwID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoIXRoaXMuX2Jhbm5lckNsaWNrZWQpIHtcbiAgICAgICAgICAgIGxldCBzcGQgPSAyICsgKHRoaXMuX2NsaWNrQmFyLndpZHRoIC8gdGhpcy5fY2xpY2tCYXJPcmlnaW5hbFdpZHRoKSAqIDY7XG4gICAgICAgICAgICBpZiAodGhpcy5fY2xpY2tCYXIud2lkdGggPj0gc3BkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fY2xpY2tCYXIud2lkdGggLT0gc3BkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCh0aGlzLl9jbGlja0Jhci53aWR0aCAvIHRoaXMuX2NsaWNrQmFyT3JpZ2luYWxXaWR0aCkgKyAwLjEgPCAodGhpcy5fY2xpY2tUaW1lIC8gdGhpcy5fbmVlZENsaWNrVGltZSkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9jbGlja1RpbWUtLTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIG9wZW5WaWV3KGRhdGE/OiBhbnkpIHtcbiAgICAgICAgdGhpcy5fY29tcGVsZXRGdW5jdGlvbiA9IGRhdGEuQ29tcGxldGU7XG4gICAgICAgIHRoaXMuX3ByaXplQ291bnQgPSBkYXRhLlByaXplQ291bnQ7XG4gICAgICAgIHN1cGVyLm9wZW5WaWV3KGRhdGEpO1xuICAgIH1cblxuICAgIE9wZW5Qcml6ZVdpbmRvdygpIHtcbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xuICAgICAgICB0aGlzLl9wcml6ZUNvdW50X1RleHQudGV4dCA9IHRoaXMuX3ByaXplQ291bnQudG9TdHJpbmcoKTtcbiAgICAgICAgdGhpcy5fZ2V0UHJpemVfVmlldy52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5fY29uZmlybV9CdG4ub25jZShMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBDYWNoZWRRUUJhbm5lckFkLmhpZGUoKTtcbiAgICAgICAgICAgIGlmIChzZWxmLl9jb21wZWxldEZ1bmN0aW9uKSB7XG4gICAgICAgICAgICAgICAgc2VsZi5fY29tcGVsZXRGdW5jdGlvbigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2VsZi5jbG9zZVZpZXcoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgU2hvd0Jhbm5lcigpIHtcbiAgICAgICAgaWYoQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLnFxY2ZnLmt1YW5nZGlhbkJhbm5lciA9PSAxKVxuICAgICAgICB7XG4gICAgICAgICAgICBDYWNoZWRRUUJhbm5lckFkLnNob3coKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIEJ1dHRvbkNsaWNrZWQoKSB7XG4gICAgICAgIHRoaXMuX2NsaWNrVGltZSsrO1xuICAgICAgICB0aGlzLl90b3RhbENsaWNrVGltZSsrO1xuICAgICAgICBpZihudWxsICE9IHRoaXMuZHJnb24pXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuZHJnb24ucGxheSgxLCBmYWxzZSlcbiAgICAgICAgICAgIHRoaXMuZHJnb24ub25jZShMYXlhLkV2ZW50LlNUT1BQRUQsIHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmRyZ29uLnBsYXkoMCwgdHJ1ZSlcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9jbGlja1RpbWUgPiB0aGlzLl9uZWVkQ2xpY2tUaW1lKSB7XG4gICAgICAgICAgICB0aGlzLl9jbGlja1RpbWUgPSB0aGlzLl9uZWVkQ2xpY2tUaW1lO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9jbGlja1RpbWUgPj0gdGhpcy5fYmFubmVyQ2xpY2tUaW1lKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5fY2xpY2tUaW1lID49IHRoaXMuX25lZWRDbGlja1RpbWUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9jbGlja1RpbWUgPSB0aGlzLl9uZWVkQ2xpY2tUaW1lIC0gMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLl9iYW5uZXJDbGlja2VkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fYmFubmVyQ2xpY2tlZCA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLlNob3dCYW5uZXIoKTtcbiAgICAgICAgICAgIExheWEudGltZXIub25jZSgyMDAwLCB0aGlzLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5CYW5uZXJDbGlja2VkKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0aGlzLl90b3RhbENsaWNrVGltZSA+IHRoaXMuX3RvdGFsQ2xpY2tUaW1lcikge1xuICAgICAgICAgICAgdGhpcy5CYW5uZXJDbGlja2VkKCk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHByb2dyZXNzID0gKHRoaXMuX2NsaWNrVGltZSAvIHRoaXMuX25lZWRDbGlja1RpbWUpICogdGhpcy5fY2xpY2tCYXJPcmlnaW5hbFdpZHRoO1xuICAgICAgICB0aGlzLl9jbGlja0Jhci53aWR0aCA9IHByb2dyZXNzO1xuICAgIH1cblxuICAgIEJhbm5lckNsaWNrZWQoKSB7XG4gICAgICAgIEV2ZW50TWdyLmluc3RhbmNlLmRpc3BhdGNoKEV2ZW50RGVmLkFEX1d1ZGlhbkJhbm5lcl9IaWRlKTtcbiAgICAgICAgdGhpcy5fYmFubmVyQ2xpY2tlZCA9IHRydWU7XG4gICAgICAgIHRoaXMuX2NsaWNrVGltZSA9IHRoaXMuX25lZWRDbGlja1RpbWU7XG4gICAgICAgIHRoaXMuX2NsaWNrQmFyLndpZHRoID0gdGhpcy5fY2xpY2tCYXJPcmlnaW5hbFdpZHRoO1xuICAgICAgICB0aGlzLl9jbGlja19CdG4udmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLk9wZW5Qcml6ZVdpbmRvdygpO1xuICAgIH1cblxuICAgIG9uRGVzdHJveSgpIHtcbiAgICAgICAgaWYoQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLnFxY2ZnLmt1YW5nZGlhbkJhbm5lciA9PSAxKVxuICAgICAgICB7XG4gICAgICAgICAgICBDYWNoZWRRUUJhbm5lckFkLmhpZGUoKTtcbiAgICAgICAgfVxuICAgIH1cbn0iLCJpbXBvcnQgVmlld0Jhc2UgZnJvbSBcIi4uLy4uLy4uL1ZpZXcvVmlld0Jhc2VcIjtcbmltcG9ydCB7IEV2ZW50RGVmIH0gZnJvbSBcIi4uLy4uLy4uL0V2ZW50L0V2ZW50RGVmXCI7XG5pbXBvcnQgRXZlbnRNZ3IgZnJvbSBcIi4uLy4uLy4uL0V2ZW50L0V2ZW50TWdyXCI7XG5pbXBvcnQgQXBwU3dpdGNoQ29uZmlnIGZyb20gXCIuLi8uLi8uLi9Db25maWcvQXBwU3dpdGNoQ29uZmlnXCI7XG5pbXBvcnQgV3VkaWFuTWdyIGZyb20gXCIuLi8uLi8uLi9NZ3IvV3VkaWFuTWdyXCI7XG5pbXBvcnQgQ2FjaGVkV1hCYW5uZXJBZCBmcm9tIFwiLi4vLi4vLi4vQ2FjaGVkV1hCYW5uZXJBZFwiO1xuaW1wb3J0IFFRTWluaUdhbWVBUEkgZnJvbSBcIi4uLy4uLy4uL1FRTWluaUdhbWVBUElcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUVFDcmF6eUNsaWNrMiBleHRlbmRzIFZpZXdCYXNlIHtcblxuICAgIHByb3RlY3RlZCBfZ2V0UHJpemVfVmlldzogTGF5YS5VSUNvbXBvbmVudDtcbiAgICBwcm90ZWN0ZWQgX3ByaXplQ291bnRfVGV4dDogTGF5YS5UZXh0O1xuICAgIHByb3RlY3RlZCBfY29uZmlybV9CdG46IExheWEuU3ByaXRlO1xuXG4gICAgcHJvdGVjdGVkIF9jbGlja0JhciA6IExheWEuQ2xpcCA9IG51bGw7XG4gICAgcHJvdGVjdGVkIF9jbGlja0Jhck9yaWdpbmFsV2lkdGg6IG51bWJlcjtcbiAgICBwcm90ZWN0ZWQgX2NsaWNrVGltZTogbnVtYmVyOy8v55So5p2l5L+d5a2Y55So5oi35b2T5YmN54K55Ye75qyh5pWwXG4gICAgcHJvdGVjdGVkIF90b3RhbENsaWNrVGltZTogbnVtYmVyOy8v55So5LqO6K6h566X5a6i5oi35oC75YWx54K55Ye75LqG5aSa5bCR5qyh5oyJ6ZKuXG4gICAgcHJvdGVjdGVkIF90b3RhbENsaWNrVGltZXI6IG51bWJlciA9IDE1Oy8v55So5oi35LiA55u05rKh5Lit5aWX6Lev77yM6YKj5LmI54K55Ye75LqG6L+Z5LmI5aSa5qyh6YO96L+Y5piv6K6p5LuW57un57ut546p5LiL5Y6777yM5LiN6KaB5Y2h5q2756iL5bqPXG4gICAgcHJvdGVjdGVkIF9uZWVkQ2xpY2tUaW1lOiBudW1iZXIgPSAxMDsvL+S4gOWFseeCueWkmuWwkeasoeiDveWkn+iOt+W+l+WlluWKse+8jOeUqOS6juaYvuekuui/m+W6puadoVxuICAgIHByb3RlY3RlZCBfYmFubmVyQ2xpY2tUaW1lOiBudW1iZXIgPSAxMDsvL+eCueWkmuWwkeasoeW8gOWni+aYvuekumJhbm5lcnLlpZfot6/nlKjmiLfvvIzlj6/lvq7osIMgICBcblxuICAgIHByb3RlY3RlZCBfYXJyb3dVcDogYm9vbGVhbjtcbiAgICBwcm90ZWN0ZWQgX2Jhbm5lckNsaWNrZWQ6IGJvb2xlYW47XG5cbiAgICBwcm90ZWN0ZWQgX2NvbXBlbGV0RnVuY3Rpb246IEZ1bmN0aW9uO1xuICAgIHByb3RlY3RlZCBfcHJpemVDb3VudDogbnVtYmVyO1xuICAgIFxuXG4gICAgcHJvdGVjdGVkIGRyZ29uOiBMYXlhLlNrZWxldG9uO1xuXG4gICAgcHJvdGVjdGVkIF9jbGlja0J0biA6IExheWEuQ2xpcCA9IG51bGw7XG5cblxuICAgIG9uQXdha2UoKSB7XG5cbiAgICAgICAgdGhpcy5fY2xpY2tCdG4gPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiQ2xpY2tCdG5cIikgYXMgTGF5YS5DbGlwO1xuICAgICAgICB0aGlzLl9jbGlja0J0bi5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLkJ1dHRvbkNsaWNrZWQpO1xuICAgICAgICB0aGlzLl9nZXRQcml6ZV9WaWV3ID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkdldFByaXplX1ZpZXdcIikgYXMgTGF5YS5VSUNvbXBvbmVudDtcbiAgICAgICAgdGhpcy5fcHJpemVDb3VudF9UZXh0ID0gdGhpcy5fZ2V0UHJpemVfVmlldy5nZXRDaGlsZEJ5TmFtZShcIlByaXplQ291bnRfVGV4dFwiKSBhcyBMYXlhLlRleHQ7XG4gICAgICAgIHRoaXMuX2NvbmZpcm1fQnRuID0gdGhpcy5fZ2V0UHJpemVfVmlldy5nZXRDaGlsZEJ5TmFtZShcIkNvbmZpcm1fQnRuXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl9nZXRQcml6ZV9WaWV3LnZpc2libGUgPSBmYWxzZTtcblxuICAgICAgICB0aGlzLl9jbGlja0JhciA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJDbGlja0JhclwiKS5nZXRDaGlsZEJ5TmFtZShcIkNsaWNrQmFyXCIpIGFzIExheWEuQ2xpcDtcbiAgICAgICAgdGhpcy5fY2xpY2tCYXJPcmlnaW5hbFdpZHRoID0gdGhpcy5fY2xpY2tCYXIud2lkdGg7XG4gICAgICAgIHRoaXMuX2NsaWNrQmFyLndpZHRoID0gMDtcblxuICAgICAgICB0aGlzLl9jbGlja1RpbWUgPSAwO1xuICAgICAgICB0aGlzLl90b3RhbENsaWNrVGltZSA9IDA7XG5cbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xuICAgICAgICBMYXlhLmxvYWRlci5sb2FkKFwiQ2xpY2tHZXRQcml6ZS9xdWFuamkucG5nXCIsTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCh0ZXh0dXJlIDogTGF5YS5UZXh0dXJlKT0+XG4gICAgICAgIHtcbiAgICAgICAgICAgIHRleHR1cmUuYml0bWFwLmxvY2sgPSB0cnVlO1xuICAgICAgICAgICAgTGF5YS5sb2FkZXIubG9hZChcIkNsaWNrR2V0UHJpemUvcXVhbmppLnNrXCIsTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLChieXRlcyk9PlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwidGV4dHVyZVwiLHRleHR1cmUpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiYnl0ZXNcIixieXRlcyk7XG4gICAgICAgICAgICAgICAgbGV0IHRlbXBsYXRlID0gbmV3IExheWEuVGVtcGxldCgpXG4gICAgICAgICAgICAgICAgdGVtcGxhdGUucGFyc2VEYXRhKHRleHR1cmUsYnl0ZXMpO1xuICAgICAgICAgICAgICAgIHNlbGYuZHJnb24gPSB0ZW1wbGF0ZS5idWlsZEFybWF0dXJlKCk7XG4gICAgICAgICAgICAgICAgc2VsZi5vd25lci5hZGRDaGlsZChzZWxmLmRyZ29uKTtcbiAgICAgICAgICAgICAgICBzZWxmLmRyZ29uLnggPSAzNzU7XG4gICAgICAgICAgICAgICAgc2VsZi5kcmdvbi55ID0gNjEwO1xuICAgICAgICAgICAgICAgIHNlbGYuZHJnb24uc2NhbGVYID0gMjtcbiAgICAgICAgICAgICAgICBzZWxmLmRyZ29uLnNjYWxlWSA9IDI7XG4gICAgICAgICAgICAgICAgc2VsZi5kcmdvbi5wYXJlbnQuc2V0Q2hpbGRJbmRleChzZWxmLmRyZ29uLDEpO1xuICAgICAgICAgICAgICAgIHNlbGYuZHJnb24ucGxheSgwLCB0cnVlKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcInF1YW5qaSDliqDovb3lrozmiJAhISEhXCIsdGVtcGxhdGUpO1xuICAgICAgICAgICAgfSksTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCgpPT57fSksXCJcIiwwLGZhbHNlLFwiXCIsdHJ1ZSlcbiAgICAgICAgfSksTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCgpPT57fSksXCJcIiwwLGZhbHNlLFwiXCIsdHJ1ZSk7XG4gICAgfVxuXG4gICAgb25VcGRhdGUoKSB7XG4gICAgICAgIGlmICghdGhpcy5fYmFubmVyQ2xpY2tlZCkge1xuICAgICAgICAgICAgbGV0IHNwZCA9IDIgKyAodGhpcy5fY2xpY2tCYXIud2lkdGggLyB0aGlzLl9jbGlja0Jhck9yaWdpbmFsV2lkdGgpICogNjtcbiAgICAgICAgICAgIGlmICh0aGlzLl9jbGlja0Jhci53aWR0aCA+PSBzcGQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9jbGlja0Jhci53aWR0aCAtPSBzcGQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoKHRoaXMuX2NsaWNrQmFyLndpZHRoIC8gdGhpcy5fY2xpY2tCYXJPcmlnaW5hbFdpZHRoKSArIDAuMSA8ICh0aGlzLl9jbGlja1RpbWUgLyB0aGlzLl9uZWVkQ2xpY2tUaW1lKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2NsaWNrVGltZS0tO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgb3BlblZpZXcoZGF0YT86IGFueSkge1xuICAgICAgICB0aGlzLl9jb21wZWxldEZ1bmN0aW9uID0gZGF0YS5Db21wbGV0ZTtcbiAgICAgICAgdGhpcy5fcHJpemVDb3VudCA9IGRhdGEuUHJpemVDb3VudDtcbiAgICAgICAgc3VwZXIub3BlblZpZXcoZGF0YSk7XG4gICAgfVxuXG4gICAgT3BlblByaXplV2luZG93KCkge1xuICAgICAgICBsZXQgc2VsZiA9IHRoaXM7XG4gICAgICAgIHRoaXMuX3ByaXplQ291bnRfVGV4dC50ZXh0ID0gdGhpcy5fcHJpemVDb3VudC50b1N0cmluZygpO1xuICAgICAgICB0aGlzLl9nZXRQcml6ZV9WaWV3LnZpc2libGUgPSB0cnVlO1xuICAgICAgICB0aGlzLl9jb25maXJtX0J0bi5vbmNlKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmIChzZWxmLl9jb21wZWxldEZ1bmN0aW9uKSB7XG4gICAgICAgICAgICAgICAgc2VsZi5fY29tcGVsZXRGdW5jdGlvbigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2VsZi5jbG9zZVZpZXcoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgU2hvd0Jhbm5lcigpIHtcbiAgICAgICAgaWYoQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLnFxY2ZnLmt1YW5nZGlhbkJveCA9PSAxKVxuICAgICAgICB7XG4gICAgICAgICAgICBRUU1pbmlHYW1lQVBJLnNob3dBcHBCb3hBZCgoKT0+XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIEJ1dHRvbkNsaWNrZWQoKSB7XG4gICAgICAgIHRoaXMuX2NsaWNrVGltZSsrO1xuICAgICAgICB0aGlzLl90b3RhbENsaWNrVGltZSsrO1xuICAgICAgICBpZihudWxsICE9IHRoaXMuZHJnb24pXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuZHJnb24ucGxheSgxLCBmYWxzZSlcbiAgICAgICAgICAgIHRoaXMuZHJnb24ub25jZShMYXlhLkV2ZW50LlNUT1BQRUQsIHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmRyZ29uLnBsYXkoMCwgdHJ1ZSlcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9jbGlja1RpbWUgPiB0aGlzLl9uZWVkQ2xpY2tUaW1lKSB7XG4gICAgICAgICAgICB0aGlzLl9jbGlja1RpbWUgPSB0aGlzLl9uZWVkQ2xpY2tUaW1lO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9jbGlja1RpbWUgPj0gdGhpcy5fYmFubmVyQ2xpY2tUaW1lKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5fY2xpY2tUaW1lID49IHRoaXMuX25lZWRDbGlja1RpbWUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9jbGlja1RpbWUgPSB0aGlzLl9uZWVkQ2xpY2tUaW1lIC0gMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLl9iYW5uZXJDbGlja2VkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fYmFubmVyQ2xpY2tlZCA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLlNob3dCYW5uZXIoKTtcbiAgICAgICAgICAgIExheWEudGltZXIub25jZSgyMDAwLCB0aGlzLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5CYW5uZXJDbGlja2VkKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0aGlzLl90b3RhbENsaWNrVGltZSA+IHRoaXMuX3RvdGFsQ2xpY2tUaW1lcikge1xuICAgICAgICAgICAgdGhpcy5CYW5uZXJDbGlja2VkKCk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHByb2dyZXNzID0gKHRoaXMuX2NsaWNrVGltZSAvIHRoaXMuX25lZWRDbGlja1RpbWUpICogdGhpcy5fY2xpY2tCYXJPcmlnaW5hbFdpZHRoO1xuICAgICAgICB0aGlzLl9jbGlja0Jhci53aWR0aCA9IHByb2dyZXNzO1xuICAgIH1cblxuICAgIEJhbm5lckNsaWNrZWQoKSB7XG4gICAgICAgIEV2ZW50TWdyLmluc3RhbmNlLmRpc3BhdGNoKEV2ZW50RGVmLkFEX1d1ZGlhbkJhbm5lcl9IaWRlKTtcbiAgICAgICAgdGhpcy5fYmFubmVyQ2xpY2tlZCA9IHRydWU7XG4gICAgICAgIHRoaXMuX2NsaWNrVGltZSA9IHRoaXMuX25lZWRDbGlja1RpbWU7XG4gICAgICAgIHRoaXMuX2NsaWNrQmFyLndpZHRoID0gdGhpcy5fY2xpY2tCYXJPcmlnaW5hbFdpZHRoO1xuICAgICAgICB0aGlzLl9jbGlja0J0bi52aXNpYmxlID0gZmFsc2U7XG4gICAgICAgIHRoaXMuT3BlblByaXplV2luZG93KCk7XG4gICAgfVxuXG4gICAgb25EZXN0cm95KCkge1xuXG4gICAgfVxufSIsImltcG9ydCBWaWV3QmFzZSBmcm9tIFwiLi4vVmlld0Jhc2VcIjtcbmltcG9ydCBVdGlsaXQgZnJvbSBcIi4uLy4uL1V0aWxpdFwiO1xuaW1wb3J0IFZpZXdNZ3IsIHsgVmlld0RlZiB9IGZyb20gXCIuLi8uLi9NZ3IvVmlld01nclwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBRUVRlbXBsYXRlVmlld0Jhc2UgZXh0ZW5kcyBWaWV3QmFzZSBcbntcblxuICAgIG9uQXdha2UoKVxuICAgIHtcblxuICAgIH1cblxuICAgIGFkZEV2ZW50KClcbiAgICB7XG4gICAgICAgIHN1cGVyLmFkZEV2ZW50KCk7XG4gICAgfVxuXG4gICAgcmVtb3ZlRXZlbnQoKVxuICAgIHtcbiAgICAgICAgc3VwZXIucmVtb3ZlRXZlbnQoKTtcbiAgICB9XG5cblxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNjYWxlQnJlYXRoaW5nQW5pIGV4dGVuZHMgTGF5YS5TY3JpcHQgXG57XG5cbiAgICBwdWJsaWMgYnJlYXRoaW5nU3BlZWQgPSAyMDAwO1xuICAgIHB1YmxpYyBtYXhTY2FsZSA9IDE7XG4gICAgcHVibGljIG1pblNjYWxlID0gMC45O1xuICAgIHByb3RlY3RlZCBfYWRkIDogYm9vbGVhbiA9IGZhbHNlO1xuICAgIHByb3RlY3RlZCBfb3duZXJTcHJpdGUgOiBMYXlhLlNwcml0ZTtcbiAgICBcbiAgICBvbkF3YWtlKClcbiAgICB7XG4gICAgICAgIHRoaXMuX293bmVyU3ByaXRlID0gdGhpcy5vd25lciBhcyBMYXlhLlNwcml0ZTtcbiAgICB9XG5cbiAgICBvblN0YXJ0KClcbiAgICB7XG4gICAgICAgIHRoaXMuX293bmVyU3ByaXRlLnNjYWxlKHRoaXMubWF4U2NhbGUsdGhpcy5tYXhTY2FsZSk7XG4gICAgfVxuICAgIFxuICAgIG9uRW5hYmxlKClcbiAgICB7XG4gICAgICAgIHRoaXMuX293bmVyU3ByaXRlLm9uKExheWEuRXZlbnQuRk9DVVNfQ0hBTkdFLHRoaXMsdGhpcy5vbkZvY3VzQ2hhbmdlKTtcbiAgICB9XG5cbiAgICBvbkRpc2FibGUoKVxuICAgIHtcbiAgICAgICAgdGhpcy5fb3duZXJTcHJpdGUub2ZmKExheWEuRXZlbnQuRk9DVVNfQ0hBTkdFLHRoaXMsdGhpcy5vbkZvY3VzQ2hhbmdlKTtcbiAgICB9XG5cbiAgICBvblVwZGF0ZSgpXG4gICAge1xuICAgICAgICBpZih0aGlzLl9vd25lclNwcml0ZS52aXNpYmxlKVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLmJnQW5pKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgYmdBbmkoKVxuICAgIHtcbiAgICAgICAgdmFyIGRlbHRhID0gTWF0aC5taW4oNTAsTGF5YS50aW1lci5kZWx0YSk7XG4gICAgICAgIGlmKCF0aGlzLl9hZGQpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IHRoaXMuX293bmVyU3ByaXRlLnNjYWxlWCAtIE1hdGgubWluKDUwLExheWEudGltZXIuZGVsdGEpIC8gdGhpcy5icmVhdGhpbmdTcGVlZCAgKiAxXG4gICAgICAgICAgICB2YWx1ZSA9IE1hdGgubWF4KHRoaXMubWluU2NhbGUsdmFsdWUpXG4gICAgICAgICAgICB0aGlzLl9vd25lclNwcml0ZS5zY2FsZSh2YWx1ZSx2YWx1ZSk7XG4gICAgICAgICAgICBpZih0aGlzLl9vd25lclNwcml0ZS5zY2FsZVggPD0gdGhpcy5taW5TY2FsZSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9hZGQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2VcbiAgICAgICAge1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gdGhpcy5fb3duZXJTcHJpdGUuc2NhbGVYICsgTWF0aC5taW4oNTAsTGF5YS50aW1lci5kZWx0YSkgLyB0aGlzLmJyZWF0aGluZ1NwZWVkICAqIDE7XG4gICAgICAgICAgICB2YWx1ZSA9IE1hdGgubWluKHRoaXMubWF4U2NhbGUsdmFsdWUpXG4gICAgICAgICAgICB0aGlzLl9vd25lclNwcml0ZS5zY2FsZSh2YWx1ZSx2YWx1ZSk7XG4gICAgICAgICAgICBpZih0aGlzLl9vd25lclNwcml0ZS5zY2FsZVggPj0gdGhpcy5tYXhTY2FsZSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9hZGQgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByb3RlY3RlZCBvbkZvY3VzQ2hhbmdlKClcbiAgICB7XG4gICAgICAgIHRoaXMuX293bmVyU3ByaXRlLnNjYWxlKHRoaXMubWF4U2NhbGUsdGhpcy5tYXhTY2FsZSk7XG4gICAgICAgIHRoaXMuX2FkZCA9IGZhbHNlO1xuICAgIH1cbn0iLCJpbXBvcnQgVmlld0Jhc2UgZnJvbSBcIi4uL1ZpZXdCYXNlXCI7XG5pbXBvcnQgVXNlciBmcm9tIFwiLi4vLi4vVXNlci9Vc2VyXCI7XG5pbXBvcnQgV1hBUEkgZnJvbSBcIi4uLy4uL1dYQVBJXCI7XG5pbXBvcnQgR2FtZUNvbW1vbkNvbmZpZyBmcm9tIFwiLi4vLi4vQ29uZmlnL0dhbWVDb21tb25Db25maWdcIjtcbmltcG9ydCBDYWNoZWRRUUJhbm5lckFkIGZyb20gXCIuLi8uLi9DYWNoZWRRUUJhbm5lckFkXCI7XG5pbXBvcnQgUVFNaW5pR2FtZUFQSSBmcm9tIFwiLi4vLi4vUVFNaW5pR2FtZUFQSVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTaWduSW5SZXdhcmRWaWV3IGV4dGVuZHMgVmlld0Jhc2VcbntcblxuICAgIHByb3RlY3RlZCBfY2VudGVyWm9uZSA6IExheWEuQ2xpcDtcbiAgICBwcm90ZWN0ZWQgX3NpZ25JbkJ0biA6IExheWEuU3ByaXRlO1xuICAgIHByb3RlY3RlZCBfbm9ybWFsU2lnbkluQnRuIDogTGF5YS5TcHJpdGU7XG4gICAgcHJvdGVjdGVkIF9yZXdhcmRUZXh0IDogTGF5YS5UZXh0O1xuICAgIHByb3RlY3RlZCBfY2xvc2VCdG4gOiBMYXlhLlNwcml0ZTtcblxuICAgIG9uQXdha2UoKVxuICAgIHtcbiAgICAgICAgdGhpcy5fY2VudGVyWm9uZSA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJDZW50ZXJab25lXCIpIGFzIExheWEuQ2xpcDtcbiAgICAgICAgdGhpcy5fc2lnbkluQnRuID0gdGhpcy5fY2VudGVyWm9uZS5nZXRDaGlsZEJ5TmFtZShcIlNpZ25JbkJ0blwiKSBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgdGhpcy5fbm9ybWFsU2lnbkluQnRuID0gdGhpcy5fY2VudGVyWm9uZS5nZXRDaGlsZEJ5TmFtZShcIk5vcm1hbFNpZ25JbkJ0blwiKSBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgdGhpcy5fcmV3YXJkVGV4dCA9IHRoaXMuX2NlbnRlclpvbmUuZ2V0Q2hpbGRCeU5hbWUoXCJSZXdhcmRUZXh0XCIpIGFzIExheWEuVGV4dDtcbiAgICAgICAgdGhpcy5fY2xvc2VCdG4gPSB0aGlzLl9jZW50ZXJab25lLmdldENoaWxkQnlOYW1lKFwiQ2xvc2VCdG5cIikgYXMgTGF5YS5TcHJpdGU7XG4gICAgfVxuXG4gICAgYWRkRXZlbnQoKVxuICAgIHtcbiAgICAgICAgdGhpcy5fc2lnbkluQnRuLm9uKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uU2lnbkluQnRuKTtcbiAgICAgICAgdGhpcy5fbm9ybWFsU2lnbkluQnRuLm9uKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uTm9ybWFsU2lnbkluQnRuKTtcbiAgICAgICAgdGhpcy5fY2xvc2VCdG4ub24oTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMuY2xvc2VWaWV3KTtcbiAgICB9XG5cbiAgICByZW1vdmVFdmVudCgpXG4gICAge1xuICAgICAgICB0aGlzLl9zaWduSW5CdG4ub2ZmKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uU2lnbkluQnRuKTtcbiAgICAgICAgdGhpcy5fbm9ybWFsU2lnbkluQnRuLm9mZihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5vbk5vcm1hbFNpZ25JbkJ0bik7XG4gICAgICAgIHRoaXMuX2Nsb3NlQnRuLm9mZihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5jbG9zZVZpZXcpO1xuICAgIH1cblxuICAgIG9uU2hvdygpe1xuICAgICAgICBDYWNoZWRRUUJhbm5lckFkLmhpZGUoKTsgICAgICAgIFxuICAgICAgICB0aGlzLl9yZXdhcmRUZXh0LnRleHQgPSBcInhcIiArIEdhbWVDb21tb25Db25maWcuZ2V0SW5zdGFuY2UoKS5nZXRHYW1lQ29uZmlnRGF0YSgpLnNpZ25HZXREaWFtb25kO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBvblNpZ25JbkJ0bigpXG4gICAge1xuICAgICAgICBpZih0aGlzLmNhblNpZ25JbigpKVxuICAgICAgICB7XG4gICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgICAgICB0aGlzLl9zaWduSW5CdG4udmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICAgICAgUVFNaW5pR2FtZUFQSS5zaG93UmV3YXJkZWRWaWRlb0FkKChvayk9PlxuICAgICAgICAgICAgeyAgIFxuICAgICAgICAgICAgICAgIGlmKG9rKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgVXNlci5zZXRsYXN0U2lnbkluVGltZShEYXRlLm5vdygpKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJld2FyZCA9IEdhbWVDb21tb25Db25maWcuZ2V0SW5zdGFuY2UoKS5nZXRHYW1lQ29uZmlnRGF0YSgpLnNpZ25HZXREaWFtb25kO1xuICAgICAgICAgICAgICAgICAgICBVc2VyLmFkZENyeXN0YWwocmV3YXJkICogMyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICB7XG5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc2VsZi5yZWZyZXNoU2lnbkluQnRuU3RhdGUoKVxuICAgICAgICAgICAgfSwoKT0+XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VsZi5yZWZyZXNoU2lnbkluQnRuU3RhdGUoKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByb3RlY3RlZCBvbk5vcm1hbFNpZ25JbkJ0bigpXG4gICAge1xuICAgICAgICBpZih0aGlzLmNhblNpZ25JbigpKVxuICAgICAgICB7XG4gICAgICAgICAgICBVc2VyLnNldGxhc3RTaWduSW5UaW1lKERhdGUubm93KCkpO1xuICAgICAgICAgICAgdmFyIHJld2FyZCA9IEdhbWVDb21tb25Db25maWcuZ2V0SW5zdGFuY2UoKS5nZXRHYW1lQ29uZmlnRGF0YSgpLnNpZ25HZXREaWFtb25kO1xuICAgICAgICAgICAgVXNlci5hZGRDcnlzdGFsKHJld2FyZCk7XG4gICAgICAgICAgICB0aGlzLnJlZnJlc2hTaWduSW5CdG5TdGF0ZSgpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgY2FuU2lnbkluKCkgOiBib29sZWFuXG4gICAge1xuICAgICAgICB2YXIgbGFzdERhdGUgPSBuZXcgRGF0ZShVc2VyLmdldGxhc3RTaWduSW5UaW1lKCkpO1xuICAgICAgICB2YXIgY3VyRGF0ZSA9IG5ldyBEYXRlKERhdGUubm93KCkpO1xuICAgICAgICBpZihEYXRlLm5vdygpIC0gVXNlci5nZXRsYXN0U2lnbkluVGltZSgpID49IDg2NDAwMDAwIHx8IGxhc3REYXRlLmdldFVUQ0RheSgpICE9IGN1ckRhdGUuZ2V0VVRDRGF5KCkpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgcmVmcmVzaFNpZ25JbkJ0blN0YXRlKClcbiAgICB7XG4gICAgICAgIHRoaXMuX3NpZ25JbkJ0bi52aXNpYmxlID0gdGhpcy5jYW5TaWduSW4oKTtcbiAgICB9XG59IiwiaW1wb3J0IFd1ZGlhbk1nciBmcm9tIFwiLi4vLi4vLi4vTWdyL1d1ZGlhbk1nclwiO1xuaW1wb3J0IEFwcFN3aXRjaENvbmZpZyBmcm9tIFwiLi4vLi4vLi4vQ29uZmlnL0FwcFN3aXRjaENvbmZpZ1wiO1xuaW1wb3J0IFdYQURNZ3IsIHsgV1hCYW5uZGVyQWQgfSBmcm9tIFwiLi4vLi4vLi4vTWdyL1dYQURNZ3JcIjtcbmltcG9ydCBVdGlsaXQgZnJvbSBcIi4uLy4uLy4uL1V0aWxpdFwiO1xuaW1wb3J0IFRUVGVtcGxhdGVWaWV3QmFzZSBmcm9tIFwiLi4vVFRUZW1wbGF0ZVZpZXdCYXNlXCI7XG5pbXBvcnQgVFRBUEkgZnJvbSBcIi4uLy4uLy4uL1RUQVBJXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRUR2FtZUZhaWxWaWV3VGVtcGxhdGUgZXh0ZW5kcyBUVFRlbXBsYXRlVmlld0Jhc2VcbntcbiAgICBwcm90ZWN0ZWQgX2NlbnRlclpvbmUgOiBMYXlhLkNsaXAgPSBudWxsO1xuICAgIFxuICAgIHByb3RlY3RlZCBfY2xpY2tUYWcgOiBib29sZWFuID0gZmFsc2U7XG4gICAgcHJvdGVjdGVkIF9jbGlja1RpbWluZ1RhZyA6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAgIHByb3RlY3RlZCBfbW9yZUdhbWVCdG4gOiBMYXlhLlNwcml0ZSA9IG51bGw7XG4gICAgcHJvdGVjdGVkIF9zaGFyZUJ0biA6IExheWEuU3ByaXRlID0gbnVsbDtcblxuICAgIHByb3RlY3RlZCBfYmFja0J0biA6IExheWEuU3ByaXRlID0gbnVsbDtcbiAgICBwcm90ZWN0ZWQgX29rQnRuIDogTGF5YS5TcHJpdGUgPSBudWxsO1xuICAgIHByb3RlY3RlZCBfdmlkZW9CdG4gOiBMYXlhLlNwcml0ZSA9IG51bGw7XG4gICAgXG5cbiAgICBvbkF3YWtlKClcbiAgICB7XG4gICAgICAgIHN1cGVyLm9uQXdha2UoKTtcbiAgICAgICAgdGhpcy5fY2VudGVyWm9uZSA9IHRoaXMuVmlldy5nZXRDaGlsZEJ5TmFtZShcIkNlbnRlclpvbmVcIikgYXMgTGF5YS5DbGlwO1xuICAgICAgICBpZihVdGlsaXQuaXNJcGhvbmVYKCkpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuX2NlbnRlclpvbmUudG9wID0gIHRoaXMuX2NlbnRlclpvbmUudG9wICsgNzU7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLl9tb3JlR2FtZUJ0biA9IHRoaXMuX2NlbnRlclpvbmUuZ2V0Q2hpbGRCeU5hbWUoXCJNb3JlR2FtZUJ0blwiKSBhcyBMYXlhLkNsaXA7XG4gICAgICAgIHRoaXMuX3NoYXJlQnRuID0gdGhpcy5fY2VudGVyWm9uZS5nZXRDaGlsZEJ5TmFtZShcIlNoYXJlQnRuXCIpIGFzIExheWEuQ2xpcDtcblxuICAgICAgICB0aGlzLl9iYWNrQnRuID0gdGhpcy5fY2VudGVyWm9uZS5nZXRDaGlsZEJ5TmFtZShcIkJhY2tCdG5cIikgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgIHRoaXMuX29rQnRuID0gdGhpcy5fY2VudGVyWm9uZS5nZXRDaGlsZEJ5TmFtZShcIk9rQnRuXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl92aWRlb0J0biA9IHRoaXMuX2NlbnRlclpvbmUuZ2V0Q2hpbGRCeU5hbWUoXCJWaWRlb0J0blwiKSBhcyBMYXlhLlNwcml0ZTtcblxuICAgICAgICB0aGlzLl9tb3JlR2FtZUJ0bi52aXNpYmxlID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLnR0Y2ZnLm1vcmVHYW1lU3dpdGNoID09IDE7XG4gICAgfVxuXG4gICAgb25TdGFydCgpXG4gICAge1xuICAgICAgICBzdXBlci5vblN0YXJ0KCk7XG4gICAgICAgIGlmKFd1ZGlhbk1nci5XdWRpYW5GbGFnKVxuICAgICAgICB7XG4gICAgICAgICAgICBsZXQgeVBvcyA9IHRoaXMuX2NlbnRlclpvbmUuaGVpZ2h0IC0gMTUwO1xuICAgICAgICAgICAgdGhpcy5fYmFja0J0bi55ID0geVBvcztcbiAgICAgICAgICAgIHRoaXMuX29rQnRuLnkgPSB5UG9zO1xuICAgICAgICAgICAgdGhpcy5fdmlkZW9CdG4ueSA9IHlQb3M7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHZhciBidG5Nb3ZlVGltZXIgPSBBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkuYnRuTW92ZVRpbWVyO1xuICAgICAgICB2YXIgYmFubmVyTW92ZVRpbWVyID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLmJhbm5lck1vdmVUaW1lcjtcbiAgICAgICAgTGF5YS50aW1lci5vbmNlKGJhbm5lck1vdmVUaW1lciAqIDEwMDAsdGhpcyx0aGlzLkJhbm5lclVwKTtcbiAgICAgICAgTGF5YS50aW1lci5vbmNlKGJ0bk1vdmVUaW1lciAqIDEwMDAsdGhpcyx0aGlzLkJ0blVwKTtcblxuICAgICAgICBpZihBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkudHRjZmcubHVwaW5nID09IDEpXG4gICAgICAgIHtcbiAgICAgICAgICAgIFRUQVBJLnNoYXJlUmVjb3JkKCgpPT5cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBhZGRFdmVudCgpXG4gICAge1xuICAgICAgICBzdXBlci5hZGRFdmVudCgpO1xuICAgICAgICB0aGlzLl9iYWNrQnRuLm9uKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uQmFja0J0bik7XG4gICAgICAgIHRoaXMuX29rQnRuLm9uKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uT2tCdG4pO1xuICAgICAgICB0aGlzLl92aWRlb0J0bi5vbihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5vbk9rQnRuKTtcbiAgICAgICAgXG4gICAgICAgIHRoaXMuX21vcmVHYW1lQnRuLm9uKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uTW9yZUdhbWVCdG4pO1xuICAgICAgICB0aGlzLl9zaGFyZUJ0bi5vbihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5vblNoYXJlQnRuKTtcbiAgICB9XG5cbiAgICByZW1vdmVFdmVudCgpXG4gICAge1xuICAgICAgICBzdXBlci5yZW1vdmVFdmVudCgpO1xuICAgICAgICB0aGlzLl9iYWNrQnRuLm9mZihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5vbkJhY2tCdG4pO1xuICAgICAgICB0aGlzLl9va0J0bi5vZmYoTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25Pa0J0bik7XG4gICAgICAgIHRoaXMuX3ZpZGVvQnRuLm9mZihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5vbk9rQnRuKTtcbiAgICAgICAgXG4gICAgICAgIHRoaXMuX21vcmVHYW1lQnRuLm9mZihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5vbk1vcmVHYW1lQnRuKTtcbiAgICAgICAgdGhpcy5fc2hhcmVCdG4ub2ZmKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uU2hhcmVCdG4pO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBvbkJhY2tCdG4oKVxuICAgIHtcbiAgICAgICAgaWYoIXRoaXMuX2NsaWNrVGFnICYmIFd1ZGlhbk1nci5XdWRpYW5GbGFnKVxuICAgICAgICB7XG4gICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXNcbiAgICAgICAgICAgIGlmKCF0aGlzLl9jbGlja1RpbWluZ1RhZylcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9jbGlja1RpbWluZ1RhZyA9IHRydWVcbiAgICAgICAgICAgICAgICB2YXIgYnRuTW92ZVRpbWVyID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLmJ0bk1vdmVUaW1lcjtcbiAgICAgICAgICAgICAgICB2YXIgYmFubmVyTW92ZVRpbWVyID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLmJhbm5lck1vdmVUaW1lcjtcbiAgICAgICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoYmFubmVyTW92ZVRpbWVyICogMTAwMCx0aGlzLHRoaXMuQmFubmVyVXApO1xuICAgICAgICAgICAgICAgIExheWEudGltZXIub25jZShidG5Nb3ZlVGltZXIgKiAxMDAwLHRoaXMsdGhpcy5CdG5VcCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvL3RvZG865L2g55qE5Luj56CBXG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uT2tCdG4oKVxuICAgIHtcbiAgICAgICAgaWYoIXRoaXMuX2NsaWNrVGFnICYmIFd1ZGlhbk1nci5XdWRpYW5GbGFnKVxuICAgICAgICB7XG4gICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXNcbiAgICAgICAgICAgIGlmKCF0aGlzLl9jbGlja1RpbWluZ1RhZylcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9jbGlja1RpbWluZ1RhZyA9IHRydWVcbiAgICAgICAgICAgICAgICB2YXIgYnRuTW92ZVRpbWVyID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLmJ0bk1vdmVUaW1lcjtcbiAgICAgICAgICAgICAgICB2YXIgYmFubmVyTW92ZVRpbWVyID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLmJhbm5lck1vdmVUaW1lcjtcbiAgICAgICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoYmFubmVyTW92ZVRpbWVyICogMTAwMCx0aGlzLHRoaXMuQmFubmVyVXApO1xuICAgICAgICAgICAgICAgIExheWEudGltZXIub25jZShidG5Nb3ZlVGltZXIgKiAxMDAwLHRoaXMsdGhpcy5CdG5VcCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvL3RvZG865L2g55qE5Luj56CBXG4gICAgfVxuXG5cbiAgICBwcm90ZWN0ZWQgb25WaWRlb0J0bigpXG4gICAge1xuICAgICAgICBpZighdGhpcy5fY2xpY2tUYWcgJiYgV3VkaWFuTWdyLld1ZGlhbkZsYWcpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHZhciBzZWxmID0gdGhpc1xuICAgICAgICAgICAgaWYoIXRoaXMuX2NsaWNrVGltaW5nVGFnKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRoaXMuX2NsaWNrVGltaW5nVGFnID0gdHJ1ZVxuICAgICAgICAgICAgICAgIHZhciBidG5Nb3ZlVGltZXIgPSBBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkuYnRuTW92ZVRpbWVyO1xuICAgICAgICAgICAgICAgIHZhciBiYW5uZXJNb3ZlVGltZXIgPSBBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkuYmFubmVyTW92ZVRpbWVyO1xuICAgICAgICAgICAgICAgIExheWEudGltZXIub25jZShiYW5uZXJNb3ZlVGltZXIgKiAxMDAwLHRoaXMsdGhpcy5CYW5uZXJVcCk7XG4gICAgICAgICAgICAgICAgTGF5YS50aW1lci5vbmNlKGJ0bk1vdmVUaW1lciAqIDEwMDAsdGhpcyx0aGlzLkJ0blVwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIFRUQVBJLnNoYXJlUmVjb3JkKCgpPT5cbiAgICAgICAge1xuXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIEJhbm5lclVwKClcbiAgICB7XG4gICAgICAgIFRUQVBJLnNob3dCYW5uZXIoKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgQnRuVXAoKVxuICAgIHtcbiAgICAgICAgdGhpcy5fY2xpY2tUYWcgPSB0cnVlO1xuICAgICAgICB0aGlzLl9iYWNrQnRuLnkgPSA3MjA7XG4gICAgICAgIHRoaXMuX29rQnRuLnkgPSA3MjA7XG4gICAgICAgIHRoaXMuX3ZpZGVvQnRuLnkgPSA3MjA7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uTW9yZUdhbWVCdG4oKVxuICAgIHtcbiAgICAgICAgVFRBUEkuc2hvd01vcmVHYW1lc01vZGFsKCgpPT5cbiAgICAgICAge1xuICAgICAgICAgICAgXG4gICAgICAgIH0sKCk9PlxuICAgICAgICB7XG5cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgb25TaGFyZUJ0bigpXG4gICAge1xuICAgICAgICBUVEFQSS5zaGFyZSgoKT0+XG4gICAgICAgIHtcblxuICAgICAgICB9KVxuICAgIH1cblxuICAgIG9uRGVzdHJveSgpXG4gICAge1xuICAgICAgICBUVEFQSS5oaWRlQmFubmVyKCk7XG4gICAgfVxufSIsImltcG9ydCBLUlFfTWFpbiBmcm9tIFwiLi4vLi4vLi4vS1JRL1ZpZXdDb20vS1JRX01haW5cIjtcbmltcG9ydCBFdmVudE1nciBmcm9tIFwiLi4vLi4vLi4vRXZlbnQvRXZlbnRNZ3JcIjtcbmltcG9ydCB7IEV2ZW50RGVmIH0gZnJvbSBcIi4uLy4uLy4uL0V2ZW50L0V2ZW50RGVmXCI7XG5pbXBvcnQgVXNlciBmcm9tIFwiLi4vLi4vLi4vVXNlci9Vc2VyXCI7XG5pbXBvcnQgVXRpbGl0IGZyb20gXCIuLi8uLi8uLi9VdGlsaXRcIjtcbmltcG9ydCBUVFRlbXBsYXRlVmlld0Jhc2UgZnJvbSBcIi4uL1RUVGVtcGxhdGVWaWV3QmFzZVwiO1xuaW1wb3J0IFRUQVBJIGZyb20gXCIuLi8uLi8uLi9UVEFQSVwiO1xuaW1wb3J0IEFwcFN3aXRjaENvbmZpZyBmcm9tIFwiLi4vLi4vLi4vQ29uZmlnL0FwcFN3aXRjaENvbmZpZ1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUVE1haW5WaWV3VGVtcGxhdGUgZXh0ZW5kcyBUVFRlbXBsYXRlVmlld0Jhc2VcbntcbiAgICBwcm90ZWN0ZWQgX2NlbnRlclpvbmUgOiBMYXlhLkNsaXAgPSBudWxsO1xuICAgIHByb3RlY3RlZCBfc3RhcnRCdG4gOiBMYXlhLlNwcml0ZSA9IG51bGw7XG5cbiAgICBwcm90ZWN0ZWQgX2xldmVsTnVtIDogTGF5YS5Gb250Q2xpcCA9IG51bGw7XG4gICAgcHJvdGVjdGVkIF9tb25leU51bSA6IExheWEuRm9udENsaXAgPSBudWxsO1xuICAgIFxuICAgIHByb3RlY3RlZCBfbW9yZUdhbWVCdG4gOiBMYXlhLlNwcml0ZSA9IG51bGw7XG4gICAgcHJvdGVjdGVkIF9zaGFyZUJ0biA6IExheWEuU3ByaXRlID0gbnVsbDtcblxuICAgIG9uQXdha2UoKVxuICAgIHtcbiAgICAgICAgc3VwZXIub25Bd2FrZSgpO1xuXG4gICAgICAgIHRoaXMuX2NlbnRlclpvbmUgPSB0aGlzLlZpZXcuZ2V0Q2hpbGRCeU5hbWUoXCJDZW50ZXJab25lXCIpIGFzIExheWEuQ2xpcDtcbiAgICAgICAgdGhpcy5fbW9yZUdhbWVCdG4gPSB0aGlzLl9jZW50ZXJab25lLmdldENoaWxkQnlOYW1lKFwiTW9yZUdhbWVCdG5cIikgYXMgTGF5YS5DbGlwO1xuICAgICAgICB0aGlzLl9zaGFyZUJ0biA9IHRoaXMuX2NlbnRlclpvbmUuZ2V0Q2hpbGRCeU5hbWUoXCJTaGFyZUJ0blwiKSBhcyBMYXlhLkNsaXA7XG5cbiAgICAgICAgdmFyIGFzcGVjdFJhdGlvID0gTGF5YS5zdGFnZS53aWR0aCAvIExheWEuc3RhZ2UuaGVpZ2h0O1xuICAgICAgICBpZihhc3BlY3RSYXRpbyAgPCAwLjUpIFxuICAgICAgICB7XG4gICAgICAgICAgICBpZihVdGlsaXQuaXNJcGhvbmVYKCkpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGhpcy5fY2VudGVyWm9uZS50b3AgPSAgdGhpcy5fY2VudGVyWm9uZS50b3AgKyA3NTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuX2NlbnRlclpvbmUudG9wID0gIHRoaXMuX2NlbnRlclpvbmUudG9wIC0gMjAwO1xuICAgICAgICAgICAgaWYoVXRpbGl0LmlzSXBob25lWCgpKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRoaXMuX2NlbnRlclpvbmUudG9wID0gIHRoaXMuX2NlbnRlclpvbmUudG9wICsgNzU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLl9zdGFydEJ0biA9IHRoaXMuX2NlbnRlclpvbmUuZ2V0Q2hpbGRCeU5hbWUoXCJTdGFydEJ0blwiKSBhcyBMYXlhLlNwcml0ZTtcblxuICAgICAgICB0aGlzLl9sZXZlbE51bSA9IHRoaXMuX2NlbnRlclpvbmUuZ2V0Q2hpbGRCeU5hbWUoXCJMZXZlbEluZm9cIikuZ2V0Q2hpbGRCeU5hbWUoXCJMZXZlbE51bVwiKSBhcyBMYXlhLkZvbnRDbGlwO1xuICAgICAgICB0aGlzLl9tb25leU51bSA9IHRoaXMuX2NlbnRlclpvbmUuZ2V0Q2hpbGRCeU5hbWUoXCJNb25leUluZm9cIikuZ2V0Q2hpbGRCeU5hbWUoXCJNb25leU51bVwiKSBhcyBMYXlhLkZvbnRDbGlwO1xuXG5cbiAgICAgICAgdGhpcy5fbW9yZUdhbWVCdG4udmlzaWJsZSA9IEFwcFN3aXRjaENvbmZpZy5nZXRJbnN0YW5jZSgpLmdldEFwcFN3aXRjaERhdGEoKS50dGNmZy5tb3JlR2FtZVN3aXRjaCA9PSAxO1xuICAgIH1cblxuICAgIG9uU3RhcnQoKVxuICAgIHtcbiAgICAgICAgc3VwZXIub25TdGFydCgpO1xuICAgICAgICB0aGlzLl9tb25leU51bS52YWx1ZSA9IFN0cmluZyhVc2VyLmdldE1vbmV5KCkpO1xuICAgICAgICB0aGlzLl9sZXZlbE51bS52YWx1ZSA9IFN0cmluZyhVc2VyLmdldExldmVOdW0oKSk7XG4gICAgfVxuXG4gICAgYWRkRXZlbnQoKVxuICAgIHtcbiAgICAgICAgc3VwZXIuYWRkRXZlbnQoKTtcbiAgICAgICAgdGhpcy5fc3RhcnRCdG4ub24oTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25TdGFydEJ0bik7XG4gICAgICAgIEV2ZW50TWdyLmluc3RhbmNlLnJlZ0V2ZW10KEV2ZW50RGVmLkdhbWVfT25Vc2VyTW9uZXlDaGFuZ2UsdGhpcyx0aGlzLm9uVXNlck1vbmV5Q2hhbmdlKTtcblxuICAgICAgICB0aGlzLl9tb3JlR2FtZUJ0bi5vbihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5vbk1vcmVHYW1lQnRuKTtcbiAgICAgICAgdGhpcy5fc2hhcmVCdG4ub24oTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25TaGFyZUJ0bik7XG4gICAgfVxuXG4gICAgcmVtb3ZlRXZlbnQoKVxuICAgIHtcbiAgICAgICAgc3VwZXIucmVtb3ZlRXZlbnQoKTtcbiAgICAgICAgdGhpcy5fc3RhcnRCdG4ub2ZmKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uU3RhcnRCdG4pO1xuICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5yZW1vdmVFdmVudChFdmVudERlZi5HYW1lX09uVXNlck1vbmV5Q2hhbmdlLHRoaXMsdGhpcy5vblVzZXJNb25leUNoYW5nZSk7XG5cbiAgICAgICAgdGhpcy5fbW9yZUdhbWVCdG4ub2ZmKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uTW9yZUdhbWVCdG4pO1xuICAgICAgICB0aGlzLl9zaGFyZUJ0bi5vZmYoTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25TaGFyZUJ0bik7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uU3RhcnRCdG4oKVxuICAgIHtcbiAgICAgICAgXG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uTW9yZUdhbWVCdG4oKVxuICAgIHtcbiAgICAgICAgVFRBUEkuc2hvd01vcmVHYW1lc01vZGFsKCgpPT5cbiAgICAgICAge1xuICAgICAgICAgICAgXG4gICAgICAgIH0sKCk9PlxuICAgICAgICB7XG5cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgb25TaGFyZUJ0bigpXG4gICAge1xuICAgICAgICBUVEFQSS5zaGFyZSgoKT0+XG4gICAgICAgIHtcblxuICAgICAgICB9KVxuICAgIH1cblxuICAgIHByb3RlY3RlZCBvblVzZXJNb25leUNoYW5nZShwYXJhKVxuICAgIHtcbiAgICAgICAgbGV0IGN1cnIgPSBwYXJhLmN1cnI7XG4gICAgICAgIGxldCBsYXN0ID0gcGFyYS5sYXN0O1xuICAgICAgICB0aGlzLl9tb25leU51bS52YWx1ZSA9IFN0cmluZyhjdXJyKTtcbiAgICB9XG59IiwiaW1wb3J0IFZpZXdCYXNlIGZyb20gXCIuLi8uLi8uLi9WaWV3L1ZpZXdCYXNlXCI7XG5pbXBvcnQgeyBFdmVudERlZiB9IGZyb20gXCIuLi8uLi8uLi9FdmVudC9FdmVudERlZlwiO1xuaW1wb3J0IEV2ZW50TWdyIGZyb20gXCIuLi8uLi8uLi9FdmVudC9FdmVudE1nclwiO1xuaW1wb3J0IEFwcFN3aXRjaENvbmZpZyBmcm9tIFwiLi4vLi4vLi4vQ29uZmlnL0FwcFN3aXRjaENvbmZpZ1wiO1xuaW1wb3J0IFd1ZGlhbk1nciBmcm9tIFwiLi4vLi4vLi4vTWdyL1d1ZGlhbk1nclwiO1xuaW1wb3J0IFRUQVBJIGZyb20gXCIuLi8uLi8uLi9UVEFQSVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUVENyYXp5Q2xpY2sgZXh0ZW5kcyBWaWV3QmFzZSB7XG5cbiAgICBwcm90ZWN0ZWQgX2NsaWNrX0J0bjogTGF5YS5CdXR0b247Ly/nu5nnlKjmiLfni4LngrnnmoTmjInpkq5cbiAgICBwcm90ZWN0ZWQgX2Fycm93X0ltZzogTGF5YS5JbWFnZTsvL+eureWktO+8jOeUqOS6jue7meeUqOaIt+aPkOekulxuICAgIHByb3RlY3RlZCBfZ2V0UHJpemVfVmlldzogTGF5YS5VSUNvbXBvbmVudDtcbiAgICBwcm90ZWN0ZWQgX3ByaXplQ291bnRfVGV4dDogTGF5YS5UZXh0O1xuICAgIHByb3RlY3RlZCBfY29uZmlybV9CdG46IExheWEuU3ByaXRlO1xuXG4gICAgcHJvdGVjdGVkIF9jbGlja0JhciA6IExheWEuQ2xpcCA9IG51bGw7XG4gICAgcHJvdGVjdGVkIF9jbGlja0Jhck9yaWdpbmFsV2lkdGg6IG51bWJlcjtcbiAgICBwcm90ZWN0ZWQgX2NsaWNrVGltZTogbnVtYmVyOy8v55So5p2l5L+d5a2Y55So5oi35b2T5YmN54K55Ye75qyh5pWwXG4gICAgcHJvdGVjdGVkIF90b3RhbENsaWNrVGltZTogbnVtYmVyOy8v55So5LqO6K6h566X5a6i5oi35oC75YWx54K55Ye75LqG5aSa5bCR5qyh5oyJ6ZKuXG4gICAgcHJvdGVjdGVkIF90b3RhbENsaWNrVGltZXI6IG51bWJlciA9IDE1Oy8v55So5oi35LiA55u05rKh5Lit5aWX6Lev77yM6YKj5LmI54K55Ye75LqG6L+Z5LmI5aSa5qyh6YO96L+Y5piv6K6p5LuW57un57ut546p5LiL5Y6777yM5LiN6KaB5Y2h5q2756iL5bqPXG4gICAgcHJvdGVjdGVkIF9uZWVkQ2xpY2tUaW1lOiBudW1iZXIgPSAxMDsvL+S4gOWFseeCueWkmuWwkeasoeiDveWkn+iOt+W+l+WlluWKse+8jOeUqOS6juaYvuekuui/m+W6puadoVxuICAgIHByb3RlY3RlZCBfYmFubmVyQ2xpY2tUaW1lOiBudW1iZXIgPSAxMDsvL+eCueWkmuWwkeasoeW8gOWni+aYvuekumJhbm5lcnLlpZfot6/nlKjmiLfvvIzlj6/lvq7osIMgICBcblxuICAgIHByb3RlY3RlZCBfYXJyb3dVcDogYm9vbGVhbjtcbiAgICBwcm90ZWN0ZWQgX2Jhbm5lckNsaWNrZWQ6IGJvb2xlYW47XG5cbiAgICBwcm90ZWN0ZWQgX2NvbXBlbGV0RnVuY3Rpb246IEZ1bmN0aW9uO1xuICAgIHByb3RlY3RlZCBfcHJpemVDb3VudDogbnVtYmVyO1xuICAgIFxuXG4gICAgcHJvdGVjdGVkIGRyZ29uOiBMYXlhLlNrZWxldG9uO1xuXG5cbiAgICBvbkF3YWtlKCkge1xuICAgICAgICB0aGlzLl9jbGlja19CdG4gPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiQ2xpY2tfQnRuXCIpIGFzIExheWEuQnV0dG9uO1xuICAgICAgICB0aGlzLl9jbGlja19CdG4ub24oTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5CdXR0b25DbGlja2VkKTtcbiAgICAgICAgdGhpcy5fYXJyb3dfSW1nID0gdGhpcy5fY2xpY2tfQnRuLmdldENoaWxkQnlOYW1lKFwiQXJyb3dfSW1nXCIpIGFzIExheWEuSW1hZ2U7XG4gICAgICAgIHRoaXMuX2dldFByaXplX1ZpZXcgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiR2V0UHJpemVfVmlld1wiKSBhcyBMYXlhLlVJQ29tcG9uZW50O1xuICAgICAgICB0aGlzLl9wcml6ZUNvdW50X1RleHQgPSB0aGlzLl9nZXRQcml6ZV9WaWV3LmdldENoaWxkQnlOYW1lKFwiUHJpemVDb3VudF9UZXh0XCIpIGFzIExheWEuVGV4dDtcbiAgICAgICAgdGhpcy5fY29uZmlybV9CdG4gPSB0aGlzLl9nZXRQcml6ZV9WaWV3LmdldENoaWxkQnlOYW1lKFwiQ29uZmlybV9CdG5cIikgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgIHRoaXMuX2dldFByaXplX1ZpZXcudmlzaWJsZSA9IGZhbHNlO1xuXG4gICAgICAgIHRoaXMuX2NsaWNrQmFyID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkNsaWNrQmFyXCIpLmdldENoaWxkQnlOYW1lKFwiQ2xpY2tCYXJcIikgYXMgTGF5YS5DbGlwO1xuICAgICAgICB0aGlzLl9jbGlja0Jhck9yaWdpbmFsV2lkdGggPSB0aGlzLl9jbGlja0Jhci53aWR0aDtcbiAgICAgICAgdGhpcy5fY2xpY2tCYXIud2lkdGggPSAwO1xuXG4gICAgICAgIHRoaXMuX2NsaWNrVGltZSA9IDA7XG4gICAgICAgIHRoaXMuX3RvdGFsQ2xpY2tUaW1lID0gMDtcblxuICAgICAgICBsZXQgc2VsZiA9IHRoaXM7XG4gICAgICAgIExheWEubG9hZGVyLmxvYWQoXCJDbGlja0dldFByaXplL3F1YW5qaS5wbmdcIixMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsKHRleHR1cmUgOiBMYXlhLlRleHR1cmUpPT5cbiAgICAgICAge1xuICAgICAgICAgICAgdGV4dHVyZS5iaXRtYXAubG9jayA9IHRydWU7XG4gICAgICAgICAgICBMYXlhLmxvYWRlci5sb2FkKFwiQ2xpY2tHZXRQcml6ZS9xdWFuamkuc2tcIixMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsKGJ5dGVzKT0+XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJ0ZXh0dXJlXCIsdGV4dHVyZSk7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJieXRlc1wiLGJ5dGVzKTtcbiAgICAgICAgICAgICAgICBsZXQgdGVtcGxhdGUgPSBuZXcgTGF5YS5UZW1wbGV0KClcbiAgICAgICAgICAgICAgICB0ZW1wbGF0ZS5wYXJzZURhdGEodGV4dHVyZSxieXRlcyk7XG4gICAgICAgICAgICAgICAgc2VsZi5kcmdvbiA9IHRlbXBsYXRlLmJ1aWxkQXJtYXR1cmUoKTtcbiAgICAgICAgICAgICAgICBzZWxmLm93bmVyLmFkZENoaWxkKHNlbGYuZHJnb24pO1xuICAgICAgICAgICAgICAgIHNlbGYuZHJnb24ueCA9IDM3NTtcbiAgICAgICAgICAgICAgICBzZWxmLmRyZ29uLnkgPSA2MTA7XG4gICAgICAgICAgICAgICAgc2VsZi5kcmdvbi5zY2FsZVggPSAyO1xuICAgICAgICAgICAgICAgIHNlbGYuZHJnb24uc2NhbGVZID0gMjtcbiAgICAgICAgICAgICAgICBzZWxmLmRyZ29uLnBhcmVudC5zZXRDaGlsZEluZGV4KHNlbGYuZHJnb24sMSk7XG4gICAgICAgICAgICAgICAgc2VsZi5kcmdvbi5wbGF5KDAsIHRydWUpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwicXVhbmppIOWKoOi9veWujOaIkCEhISFcIix0ZW1wbGF0ZSk7XG4gICAgICAgICAgICB9KSxMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsKCk9Pnt9KSxcIlwiLDAsZmFsc2UsXCJcIix0cnVlKVxuICAgICAgICB9KSxMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsKCk9Pnt9KSxcIlwiLDAsZmFsc2UsXCJcIix0cnVlKTtcbiAgICB9XG5cbiAgICBvblVwZGF0ZSgpIHtcbiAgICAgICAgaWYgKHRoaXMuX2Fycm93VXApIHtcbiAgICAgICAgICAgIHRoaXMuX2Fycm93X0ltZy50b3AgKz0gTGF5YS50aW1lci5kZWx0YSAvIDU7XG4gICAgICAgICAgICBpZiAodGhpcy5fYXJyb3dfSW1nLnRvcCA+IC0xNDApIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9hcnJvd1VwID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLl9hcnJvd19JbWcudG9wIC09IExheWEudGltZXIuZGVsdGEgLyA1O1xuICAgICAgICAgICAgaWYgKHRoaXMuX2Fycm93X0ltZy50b3AgPCAtMTgwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fYXJyb3dVcCA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLl9iYW5uZXJDbGlja2VkKSB7XG4gICAgICAgICAgICBsZXQgc3BkID0gMiArICh0aGlzLl9jbGlja0Jhci53aWR0aCAvIHRoaXMuX2NsaWNrQmFyT3JpZ2luYWxXaWR0aCkgKiA2O1xuICAgICAgICAgICAgaWYgKHRoaXMuX2NsaWNrQmFyLndpZHRoID49IHNwZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2NsaWNrQmFyLndpZHRoIC09IHNwZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICgodGhpcy5fY2xpY2tCYXIud2lkdGggLyB0aGlzLl9jbGlja0Jhck9yaWdpbmFsV2lkdGgpICsgMC4xIDwgKHRoaXMuX2NsaWNrVGltZSAvIHRoaXMuX25lZWRDbGlja1RpbWUpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fY2xpY2tUaW1lLS07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBvcGVuVmlldyhkYXRhPzogYW55KSB7XG4gICAgICAgIHRoaXMuX2NvbXBlbGV0RnVuY3Rpb24gPSBkYXRhLkNvbXBsZXRlO1xuICAgICAgICB0aGlzLl9wcml6ZUNvdW50ID0gZGF0YS5Qcml6ZUNvdW50O1xuICAgICAgICBzdXBlci5vcGVuVmlldyhkYXRhKTtcbiAgICB9XG5cbiAgICBPcGVuUHJpemVXaW5kb3coKSB7XG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcbiAgICAgICAgdGhpcy5fcHJpemVDb3VudF9UZXh0LnRleHQgPSB0aGlzLl9wcml6ZUNvdW50LnRvU3RyaW5nKCk7XG4gICAgICAgIHRoaXMuX2dldFByaXplX1ZpZXcudmlzaWJsZSA9IHRydWU7XG4gICAgICAgIHRoaXMuX2NvbmZpcm1fQnRuLm9uY2UoTGF5YS5FdmVudC5DTElDSywgdGhpcywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgVFRBUEkuaGlkZUJhbm5lcigpO1xuICAgICAgICAgICAgaWYgKHNlbGYuX2NvbXBlbGV0RnVuY3Rpb24pIHtcbiAgICAgICAgICAgICAgICBzZWxmLl9jb21wZWxldEZ1bmN0aW9uKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZWxmLmNsb3NlVmlldygpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBTaG93QmFubmVyKCkge1xuICAgICAgICBpZihBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkudHRjZmcua3VhbmdkaWFuQmFubmVyID09IDEpXG4gICAgICAgIHtcbiAgICAgICAgICAgIFRUQVBJLnNob3dCYW5uZXIoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIEJ1dHRvbkNsaWNrZWQoKSB7XG4gICAgICAgIHRoaXMuX2NsaWNrVGltZSsrO1xuICAgICAgICB0aGlzLl90b3RhbENsaWNrVGltZSsrO1xuICAgICAgICBpZihudWxsICE9IHRoaXMuZHJnb24pXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuZHJnb24ucGxheSgxLCBmYWxzZSlcbiAgICAgICAgICAgIHRoaXMuZHJnb24ub25jZShMYXlhLkV2ZW50LlNUT1BQRUQsIHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmRyZ29uLnBsYXkoMCwgdHJ1ZSlcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9jbGlja1RpbWUgPiB0aGlzLl9uZWVkQ2xpY2tUaW1lKSB7XG4gICAgICAgICAgICB0aGlzLl9jbGlja1RpbWUgPSB0aGlzLl9uZWVkQ2xpY2tUaW1lO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9jbGlja1RpbWUgPj0gdGhpcy5fYmFubmVyQ2xpY2tUaW1lKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5fY2xpY2tUaW1lID49IHRoaXMuX25lZWRDbGlja1RpbWUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9jbGlja1RpbWUgPSB0aGlzLl9uZWVkQ2xpY2tUaW1lIC0gMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLl9iYW5uZXJDbGlja2VkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fYmFubmVyQ2xpY2tlZCA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLlNob3dCYW5uZXIoKTtcbiAgICAgICAgICAgIExheWEudGltZXIub25jZSgyMDAwLCB0aGlzLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5CYW5uZXJDbGlja2VkKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0aGlzLl90b3RhbENsaWNrVGltZSA+IHRoaXMuX3RvdGFsQ2xpY2tUaW1lcikge1xuICAgICAgICAgICAgdGhpcy5CYW5uZXJDbGlja2VkKCk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHByb2dyZXNzID0gKHRoaXMuX2NsaWNrVGltZSAvIHRoaXMuX25lZWRDbGlja1RpbWUpICogdGhpcy5fY2xpY2tCYXJPcmlnaW5hbFdpZHRoO1xuICAgICAgICB0aGlzLl9jbGlja0Jhci53aWR0aCA9IHByb2dyZXNzO1xuICAgIH1cblxuICAgIEJhbm5lckNsaWNrZWQoKSB7XG4gICAgICAgIEV2ZW50TWdyLmluc3RhbmNlLmRpc3BhdGNoKEV2ZW50RGVmLkFEX1d1ZGlhbkJhbm5lcl9IaWRlKTtcbiAgICAgICAgdGhpcy5fYmFubmVyQ2xpY2tlZCA9IHRydWU7XG4gICAgICAgIHRoaXMuX2NsaWNrVGltZSA9IHRoaXMuX25lZWRDbGlja1RpbWU7XG4gICAgICAgIHRoaXMuX2NsaWNrQmFyLndpZHRoID0gdGhpcy5fY2xpY2tCYXJPcmlnaW5hbFdpZHRoO1xuICAgICAgICB0aGlzLl9jbGlja19CdG4udmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLk9wZW5Qcml6ZVdpbmRvdygpO1xuICAgIH1cblxuICAgIG9uRGVzdHJveSgpIHtcbiAgICAgICAgVFRBUEkuaGlkZUJhbm5lcigpO1xuICAgIH1cbn0iLCJpbXBvcnQgVmlld0Jhc2UgZnJvbSBcIi4uL1ZpZXdCYXNlXCI7XG5pbXBvcnQgVXRpbGl0IGZyb20gXCIuLi8uLi9VdGlsaXRcIjtcbmltcG9ydCBWaWV3TWdyLCB7IFZpZXdEZWYgfSBmcm9tIFwiLi4vLi4vTWdyL1ZpZXdNZ3JcIjtcbmltcG9ydCBNaW5pR2FtZVZpZXdUZW1wbGF0ZSBmcm9tIFwiLi4vVGVtcGxhdGVWaWV3cy9NaW5pR2FtZS9NaW5pR2FtZVZpZXdUZW1wbGF0ZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUVFRlbXBsYXRlVmlld0Jhc2UgZXh0ZW5kcyBWaWV3QmFzZSBcbntcbiAgICBvbkF3YWtlKClcbiAgICB7XG5cbiAgICB9XG5cbiAgICBhZGRFdmVudCgpXG4gICAge1xuICAgICAgICBzdXBlci5hZGRFdmVudCgpO1xuICAgIH1cblxuICAgIHJlbW92ZUV2ZW50KClcbiAgICB7XG4gICAgICAgIHN1cGVyLnJlbW92ZUV2ZW50KCk7XG4gICAgfVxufSIsImltcG9ydCBUZW1wbGF0ZVZpZXdCYXNlIGZyb20gXCIuLi9UZW1wbGF0ZVZpZXdCYXNlXCI7XG5pbXBvcnQgS1JRX1ZMb29wQWQgZnJvbSBcIi4uLy4uLy4uL0tSUS9Db20vS1JRX0xvb3BBZC9LUlFfVkxvb3BBZFwiO1xuaW1wb3J0IEFwcFN3aXRjaENvbmZpZyBmcm9tIFwiLi4vLi4vLi4vQ29uZmlnL0FwcFN3aXRjaENvbmZpZ1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFeHByb3QyVmlld1RlbXBsYXRlIGV4dGVuZHMgVGVtcGxhdGVWaWV3QmFzZSBcbntcbiAgICBwcm90ZWN0ZWQgX2NvbnRpbnVlQnRuIDogTGF5YS5TcHJpdGUgPSBudWxsO1xuICAgIHByb3RlY3RlZCBfa3JxVkxvb3BBZCA6IEtSUV9WTG9vcEFkID0gbnVsbDtcbiAgICBcblxuICAgIG9uQXdha2UoKVxuICAgIHtcbiAgICAgICAgc3VwZXIub25Bd2FrZSgpO1xuICAgICAgICB0aGlzLl9rcnFWTG9vcEFkID0gdGhpcy5WaWV3LmdldENoaWxkQnlOYW1lKFwiS1JRX1ZMb29wQWRcIikuZ2V0Q29tcG9uZW50KEtSUV9WTG9vcEFkKTtcbiAgICAgICAgdGhpcy5fa3JxVkxvb3BBZC51c2VNb3ZlUGF1c2UgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5fY29udGludWVCdG4gPSB0aGlzLlZpZXcuZ2V0Q2hpbGRCeU5hbWUoXCJDb250aW51ZUJ0blwiKSBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgdGhpcy5fY29udGludWVCdG4udmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICBsZXQgc2VsZiA9IHRoaXM7XG4gICAgICAgIExheWEudGltZXIub25jZShBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkuY29udGludWVCdG5EZWxheVRpbWUgKiAxMDAwLHRoaXMsKCk9PlxuICAgICAgICB7XG4gICAgICAgICAgICBzZWxmLl9jb250aW51ZUJ0bi52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBvblN0YXJ0KClcbiAgICB7XG4gICAgICAgIHN1cGVyLm9uU3RhcnQoKTtcbiAgICB9XG5cbiAgICBhZGRFdmVudCgpXG4gICAge1xuICAgICAgICBzdXBlci5hZGRFdmVudCgpO1xuICAgICAgICB0aGlzLl9jb250aW51ZUJ0bi5vbihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5vbkNvbnRpbnVlQnRuKTtcbiAgICB9XG5cbiAgICByZW1vdmVFdmVudCgpXG4gICAge1xuICAgICAgICBzdXBlci5yZW1vdmVFdmVudCgpO1xuICAgICAgICB0aGlzLl9jb250aW51ZUJ0bi5vZmYoTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25Db250aW51ZUJ0bik7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uQ29udGludWVCdG4oKVxuICAgIHtcbiAgICAgICAgXG4gICAgfVxufSIsImltcG9ydCBUZW1wbGF0ZVZpZXdCYXNlIGZyb20gXCIuLi9UZW1wbGF0ZVZpZXdCYXNlXCI7XG5pbXBvcnQgS1JRX1ZMb29wQWQgZnJvbSBcIi4uLy4uLy4uL0tSUS9Db20vS1JRX0xvb3BBZC9LUlFfVkxvb3BBZFwiO1xuaW1wb3J0IEFwcFN3aXRjaENvbmZpZyBmcm9tIFwiLi4vLi4vLi4vQ29uZmlnL0FwcFN3aXRjaENvbmZpZ1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFeHBvcnRWaWV3VGVtcGxhdGUgZXh0ZW5kcyBUZW1wbGF0ZVZpZXdCYXNlXG57XG4gICAgcHJvdGVjdGVkIF9jb250aW51ZUJ0biA6IExheWEuU3ByaXRlID0gbnVsbDtcbiAgICBwcm90ZWN0ZWQgX2tycVZMb29wQWQgOiBLUlFfVkxvb3BBZCA9IG51bGw7XG4gICAgXG5cbiAgICBvbkF3YWtlKClcbiAgICB7XG4gICAgICAgIHN1cGVyLm9uQXdha2UoKTtcbiAgICAgICAgdGhpcy5fa3JxVkxvb3BBZCA9IHRoaXMuVmlldy5nZXRDaGlsZEJ5TmFtZShcIktSUV9WTG9vcEFkXCIpLmdldENvbXBvbmVudChLUlFfVkxvb3BBZCk7XG4gICAgICAgIHRoaXMuX2tycVZMb29wQWQudXNlTW92ZVBhdXNlID0gZmFsc2U7XG4gICAgICAgIHRoaXMuX2NvbnRpbnVlQnRuID0gdGhpcy5fa3JxVkxvb3BBZC5TcHJpdGUuZ2V0Q2hpbGRCeU5hbWUoXCJDb250aW51ZUJ0blwiKSBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgdGhpcy5fY29udGludWVCdG4udmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICBsZXQgc2VsZiA9IHRoaXM7XG4gICAgICAgIExheWEudGltZXIub25jZShBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkuY29udGludWVCdG5EZWxheVRpbWUgKiAxMDAwLHRoaXMsKCk9PlxuICAgICAgICB7XG4gICAgICAgICAgICBzZWxmLl9jb250aW51ZUJ0bi52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBvblN0YXJ0KClcbiAgICB7XG4gICAgICAgIHN1cGVyLm9uU3RhcnQoKTtcbiAgICB9XG5cbiAgICBhZGRFdmVudCgpXG4gICAge1xuICAgICAgICBzdXBlci5hZGRFdmVudCgpO1xuICAgICAgICB0aGlzLl9jb250aW51ZUJ0bi5vbihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5vbkNvbnRpbnVlQnRuKTtcbiAgICB9XG5cbiAgICByZW1vdmVFdmVudCgpXG4gICAge1xuICAgICAgICBzdXBlci5yZW1vdmVFdmVudCgpO1xuICAgICAgICB0aGlzLl9jb250aW51ZUJ0bi5vZmYoTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25Db250aW51ZUJ0bik7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uQ29udGludWVCdG4oKVxuICAgIHtcbiAgICAgICAgXG4gICAgfVxufSIsImltcG9ydCBUZW1wbGF0ZVZpZXdCYXNlIGZyb20gXCIuLi9UZW1wbGF0ZVZpZXdCYXNlXCI7XG5pbXBvcnQgV3VkaWFuTWdyIGZyb20gXCIuLi8uLi8uLi9NZ3IvV3VkaWFuTWdyXCI7XG5pbXBvcnQgQXBwU3dpdGNoQ29uZmlnIGZyb20gXCIuLi8uLi8uLi9Db25maWcvQXBwU3dpdGNoQ29uZmlnXCI7XG5pbXBvcnQgV1hBRE1nciwgeyBXWEJhbm5kZXJBZCB9IGZyb20gXCIuLi8uLi8uLi9NZ3IvV1hBRE1nclwiO1xuaW1wb3J0IEtSUV9Sb2xsU2luZ2xlQWQgZnJvbSBcIi4uLy4uLy4uL0tSUS9Db20vS1JRX1JvbGxTaW5nbGVBZFwiO1xuaW1wb3J0IFV0aWxpdCBmcm9tIFwiLi4vLi4vLi4vVXRpbGl0XCI7XG5pbXBvcnQgVmlld01nciwgeyBWaWV3RGVmIH0gZnJvbSBcIi4uLy4uLy4uL01nci9WaWV3TWdyXCI7XG5pbXBvcnQgTWluaUdhbWVWaWV3VGVtcGxhdGUgZnJvbSBcIi4uL01pbmlHYW1lL01pbmlHYW1lVmlld1RlbXBsYXRlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWVGYWlsVmlld1RlbXBsYXRlIGV4dGVuZHMgVGVtcGxhdGVWaWV3QmFzZVxue1xuICAgIHByb3RlY3RlZCBfY2VudGVyWm9uZSA6IExheWEuQ2xpcCA9IG51bGw7XG4gICAgcHJvdGVjdGVkIF9iYWNrQnRuIDogTGF5YS5TcHJpdGUgPSBudWxsO1xuICAgIHByb3RlY3RlZCBfY29udGludWVCdG4gOiBMYXlhLlNwcml0ZSA9IG51bGw7XG4gICAgcHJvdGVjdGVkIF9yb2xsU2luZ2xlQWRzIDogQXJyYXk8S1JRX1JvbGxTaW5nbGVBZD4gPSBuZXcgQXJyYXk8S1JRX1JvbGxTaW5nbGVBZD4oKTtcbiAgICBcbiAgICBwcm90ZWN0ZWQgX2NsaWNrVGFnIDogYm9vbGVhbiA9IGZhbHNlO1xuICAgIHByb3RlY3RlZCBfY2xpY2tUaW1pbmdUYWcgOiBib29sZWFuID0gZmFsc2U7XG5cbiAgICBwcm90ZWN0ZWQgX2Jhbm5lciA6IFdYQmFubmRlckFkID0gbnVsbDtcblxuICAgIG9uQXdha2UoKVxuICAgIHtcbiAgICAgICAgc3VwZXIub25Bd2FrZSgpO1xuICAgICAgICB0aGlzLl9jZW50ZXJab25lID0gdGhpcy5WaWV3LmdldENoaWxkQnlOYW1lKFwiQ2VudGVyWm9uZVwiKSBhcyBMYXlhLkNsaXA7XG4gICAgICAgIGlmKFV0aWxpdC5pc0lwaG9uZVgoKSlcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5fY2VudGVyWm9uZS50b3AgPSAgdGhpcy5fY2VudGVyWm9uZS50b3AgKyA3NTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuX2JhY2tCdG4gPSB0aGlzLl9jZW50ZXJab25lLmdldENoaWxkQnlOYW1lKFwiQmFja0J0blwiKSBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgdGhpcy5fY29udGludWVCdG4gPSB0aGlzLl9jZW50ZXJab25lLmdldENoaWxkQnlOYW1lKFwiQ29udGludWVCdG5cIikgYXMgTGF5YS5TcHJpdGU7XG5cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9jZW50ZXJab25lLm51bUNoaWxkcmVuOyArK2kpIFxuICAgICAgICB7XG4gICAgICAgICAgICBsZXQgYWQgPSB0aGlzLl9jZW50ZXJab25lLmdldENoaWxkQXQoaSkuZ2V0Q29tcG9uZW50KEtSUV9Sb2xsU2luZ2xlQWQpIGFzIEtSUV9Sb2xsU2luZ2xlQWQ7XG4gICAgICAgICAgICBpZiAobnVsbCA9PSBhZClcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIHRoaXMuX3JvbGxTaW5nbGVBZHMucHVzaChhZCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZihXdWRpYW5NZ3IuV3VkaWFuRmxhZylcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5IaXN0b3J5QnRuLnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIG9uU3RhcnQoKVxuICAgIHtcbiAgICAgICAgc3VwZXIub25TdGFydCgpO1xuICAgICAgICBpZihXdWRpYW5NZ3IuV3VkaWFuRmxhZylcbiAgICAgICAge1xuICAgICAgICAgICAgbGV0IHlQb3MgPSB0aGlzLl9jZW50ZXJab25lLmhlaWdodCAtIDE1MDtcbiAgICAgICAgICAgIHRoaXMuX2JhY2tCdG4ueSA9IHlQb3M7XG4gICAgICAgICAgICB0aGlzLl9jb250aW51ZUJ0bi55ID0geVBvcztcbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fcm9sbFNpbmdsZUFkcy5sZW5ndGg7ICsraSkgIFxuICAgICAgICB7XG4gICAgICAgICAgICBsZXQgYWQgPSB0aGlzLl9yb2xsU2luZ2xlQWRzW2ldO1xuICAgICAgICAgICAgTGF5YS50aW1lci5vbmNlKDE1MCx0aGlzLCgpPT5cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBhZC5wbGF5QW5pKCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICB2YXIgYnRuTW92ZVRpbWVyID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLmJ0bk1vdmVUaW1lcjtcbiAgICAgICAgdmFyIGJhbm5lck1vdmVUaW1lciA9IEFwcFN3aXRjaENvbmZpZy5nZXRJbnN0YW5jZSgpLmdldEFwcFN3aXRjaERhdGEoKS5iYW5uZXJNb3ZlVGltZXI7XG4gICAgICAgIExheWEudGltZXIub25jZShiYW5uZXJNb3ZlVGltZXIgKiAxMDAwLHRoaXMsdGhpcy5CYW5uZXJVcCk7XG4gICAgICAgIExheWEudGltZXIub25jZShidG5Nb3ZlVGltZXIgKiAxMDAwLHRoaXMsdGhpcy5CdG5VcCk7XG4gICAgfVxuXG4gICAgYWRkRXZlbnQoKVxuICAgIHtcbiAgICAgICAgc3VwZXIuYWRkRXZlbnQoKTtcbiAgICAgICAgdGhpcy5fYmFja0J0bi5vbihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5vbkJhY2tCdG4pO1xuICAgICAgICB0aGlzLl9jb250aW51ZUJ0bi5vbihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5vbkNvbnRpbnVlQnRuKTtcbiAgICB9XG5cbiAgICByZW1vdmVFdmVudCgpXG4gICAge1xuICAgICAgICBzdXBlci5yZW1vdmVFdmVudCgpO1xuICAgICAgICB0aGlzLl9iYWNrQnRuLm9mZihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5vbkJhY2tCdG4pO1xuICAgICAgICB0aGlzLl9jb250aW51ZUJ0bi5vZmYoTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25Db250aW51ZUJ0bik7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uQmFja0J0bigpXG4gICAge1xuICAgICAgICBpZighdGhpcy5fY2xpY2tUYWcgJiYgV3VkaWFuTWdyLld1ZGlhbkZsYWcpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHZhciBzZWxmID0gdGhpc1xuICAgICAgICAgICAgaWYoIXRoaXMuX2NsaWNrVGltaW5nVGFnKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRoaXMuX2NsaWNrVGltaW5nVGFnID0gdHJ1ZVxuICAgICAgICAgICAgICAgIHZhciBidG5Nb3ZlVGltZXIgPSBBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkuYnRuTW92ZVRpbWVyO1xuICAgICAgICAgICAgICAgIHZhciBiYW5uZXJNb3ZlVGltZXIgPSBBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkuYmFubmVyTW92ZVRpbWVyO1xuICAgICAgICAgICAgICAgIExheWEudGltZXIub25jZShiYW5uZXJNb3ZlVGltZXIgKiAxMDAwLHRoaXMsdGhpcy5CYW5uZXJVcCk7XG4gICAgICAgICAgICAgICAgTGF5YS50aW1lci5vbmNlKGJ0bk1vdmVUaW1lciAqIDEwMDAsdGhpcyx0aGlzLkJ0blVwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vdG9kbzrkvaDnmoTku6PnoIFcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgb25Db250aW51ZUJ0bigpXG4gICAge1xuICAgICAgICBpZighdGhpcy5fY2xpY2tUYWcgJiYgV3VkaWFuTWdyLld1ZGlhbkZsYWcpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHZhciBzZWxmID0gdGhpc1xuICAgICAgICAgICAgaWYoIXRoaXMuX2NsaWNrVGltaW5nVGFnKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRoaXMuX2NsaWNrVGltaW5nVGFnID0gdHJ1ZVxuICAgICAgICAgICAgICAgIHZhciBidG5Nb3ZlVGltZXIgPSBBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkuYnRuTW92ZVRpbWVyO1xuICAgICAgICAgICAgICAgIHZhciBiYW5uZXJNb3ZlVGltZXIgPSBBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkuYmFubmVyTW92ZVRpbWVyO1xuICAgICAgICAgICAgICAgIExheWEudGltZXIub25jZShiYW5uZXJNb3ZlVGltZXIgKiAxMDAwLHRoaXMsdGhpcy5CYW5uZXJVcCk7XG4gICAgICAgICAgICAgICAgTGF5YS50aW1lci5vbmNlKGJ0bk1vdmVUaW1lciAqIDEwMDAsdGhpcyx0aGlzLkJ0blVwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vdG9kbzrkvaDnmoTku6PnoIFcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgQmFubmVyVXAoKVxuICAgIHtcbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xuICAgICAgICBXWEFETWdyLmdldEJhbm5lcigoYmFubmVyIDogV1hCYW5uZGVyQWQpPT5cbiAgICAgICAge1xuICAgICAgICAgICAgaWYobnVsbCAhPSBzZWxmLl9iYW5uZXIpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VsZi5fYmFubmVyLmhpZGUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNlbGYuX2Jhbm5lciA9IGJhbm5lclxuICAgICAgICAgICAgaWYgKG51bGwgIT0gc2VsZi5fYmFubmVyKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlbGYuX2Jhbm5lci5zaG93KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZWxmLkhpc3RvcnlCdG4udmlzaWJsZSA9IHRydWU7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBCdG5VcCgpXG4gICAge1xuICAgICAgICB0aGlzLl9jbGlja1RhZyA9IHRydWU7XG4gICAgICAgIHRoaXMuX2JhY2tCdG4ueSA9IDcyMDtcbiAgICAgICAgdGhpcy5fY29udGludWVCdG4ueSA9IDcyMDtcbiAgICB9XG5cbiAgICBvbkRlc3Ryb3koKVxuICAgIHtcbiAgICAgICAgaWYobnVsbCAhPSB0aGlzLl9iYW5uZXIpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMuX2Jhbm5lci5oaWRlKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fYmFubmVyID0gbnVsbDtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgb25IaXN0b3J5QnRuKClcbiAgICB7XG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcbiAgICAgICAgVmlld01nci5pbnN0YW5jZS5vcGVuVmlldyhWaWV3RGVmLk1pbmlHYW1lVmlldyxudWxsLCh2IDogTWluaUdhbWVWaWV3VGVtcGxhdGUpPT5cbiAgICAgICAge1xuICAgICAgICAgICAgc2VsZi5oaWRlKCk7XG4gICAgICAgICAgICBpZihudWxsICE9IHNlbGYuX2Jhbm5lcilcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzZWxmLl9iYW5uZXIuaGlkZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdi5vbkNsb3NlRXZlbnQgPSAoKT0+XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaWYobnVsbCAhPSBzZWxmLlZpZXcgJiYgIXNlbGYuVmlldy5kZXN0cm95ZWQpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxmLnNob3coKTtcbiAgICAgICAgICAgICAgICAgICAgaWYobnVsbCAhPSBzZWxmLl9iYW5uZXIpXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuX2Jhbm5lci5zaG93KCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxufSIsImltcG9ydCBUZW1wbGF0ZVZpZXdCYXNlIGZyb20gXCIuLi9UZW1wbGF0ZVZpZXdCYXNlXCI7XG5pbXBvcnQgV1hBRE1nciwgeyBXWEJhbm5kZXJBZCB9IGZyb20gXCIuLi8uLi8uLi9NZ3IvV1hBRE1nclwiO1xuaW1wb3J0IFd1ZGlhbk1nciBmcm9tIFwiLi4vLi4vLi4vTWdyL1d1ZGlhbk1nclwiO1xuaW1wb3J0IEFwcFN3aXRjaENvbmZpZyBmcm9tIFwiLi4vLi4vLi4vQ29uZmlnL0FwcFN3aXRjaENvbmZpZ1wiO1xuaW1wb3J0IEtSUV9Sb2xsU2luZ2xlQWQgZnJvbSBcIi4uLy4uLy4uL0tSUS9Db20vS1JRX1JvbGxTaW5nbGVBZFwiO1xuaW1wb3J0IFV0aWxpdCBmcm9tIFwiLi4vLi4vLi4vVXRpbGl0XCI7XG5pbXBvcnQgVmlld01nciwgeyBWaWV3RGVmIH0gZnJvbSBcIi4uLy4uLy4uL01nci9WaWV3TWdyXCI7XG5pbXBvcnQgTWluaUdhbWVWaWV3VGVtcGxhdGUgZnJvbSBcIi4uL01pbmlHYW1lL01pbmlHYW1lVmlld1RlbXBsYXRlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWVXaW5WaWV3VGVtcGxhdGUgZXh0ZW5kcyBUZW1wbGF0ZVZpZXdCYXNlXG57XG4gICAgcHJvdGVjdGVkIF9jZW50ZXJab25lIDogTGF5YS5DbGlwID0gbnVsbDtcbiAgICBwcm90ZWN0ZWQgX2JhY2tCdG4gOiBMYXlhLlNwcml0ZSA9IG51bGw7XG4gICAgcHJvdGVjdGVkIF9uZXh0QnRuIDogTGF5YS5TcHJpdGUgPSBudWxsO1xuICAgIHByb3RlY3RlZCBfcm9sbFNpbmdsZUFkcyA6IEFycmF5PEtSUV9Sb2xsU2luZ2xlQWQ+ID0gbmV3IEFycmF5PEtSUV9Sb2xsU2luZ2xlQWQ+KCk7XG4gICAgXG4gICAgcHJvdGVjdGVkIF9jbGlja1RhZyA6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBwcm90ZWN0ZWQgX2NsaWNrVGltaW5nVGFnIDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgcHJvdGVjdGVkIF9iYW5uZXIgOiBXWEJhbm5kZXJBZCA9IG51bGw7XG4gICAgXG4gICAgb25Bd2FrZSgpXG4gICAge1xuICAgICAgICBzdXBlci5vbkF3YWtlKCk7XG4gICAgICAgIHRoaXMuX2NlbnRlclpvbmUgPSB0aGlzLlZpZXcuZ2V0Q2hpbGRCeU5hbWUoXCJDZW50ZXJab25lXCIpIGFzIExheWEuQ2xpcDtcbiAgICAgICAgaWYoVXRpbGl0LmlzSXBob25lWCgpKVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLl9jZW50ZXJab25lLnRvcCA9ICB0aGlzLl9jZW50ZXJab25lLnRvcCArIDc1O1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5fYmFja0J0biA9IHRoaXMuX2NlbnRlclpvbmUuZ2V0Q2hpbGRCeU5hbWUoXCJCYWNrQnRuXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl9uZXh0QnRuID0gdGhpcy5fY2VudGVyWm9uZS5nZXRDaGlsZEJ5TmFtZShcIk5leHRCdG5cIikgYXMgTGF5YS5TcHJpdGU7XG5cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9jZW50ZXJab25lLm51bUNoaWxkcmVuOyArK2kpIFxuICAgICAgICB7XG4gICAgICAgICAgICBsZXQgYWQgPSB0aGlzLl9jZW50ZXJab25lLmdldENoaWxkQXQoaSkuZ2V0Q29tcG9uZW50KEtSUV9Sb2xsU2luZ2xlQWQpIGFzIEtSUV9Sb2xsU2luZ2xlQWQ7XG4gICAgICAgICAgICBpZiAobnVsbCA9PSBhZClcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIHRoaXMuX3JvbGxTaW5nbGVBZHMucHVzaChhZCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZihXdWRpYW5NZ3IuV3VkaWFuRmxhZylcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5IaXN0b3J5QnRuLnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIG9uU3RhcnQoKVxuICAgIHtcbiAgICAgICAgc3VwZXIub25TdGFydCgpO1xuICAgICAgICBpZihXdWRpYW5NZ3IuV3VkaWFuRmxhZylcbiAgICAgICAge1xuICAgICAgICAgICAgbGV0IHlQb3MgPSB0aGlzLl9jZW50ZXJab25lLmhlaWdodCAtIDE1MDtcbiAgICAgICAgICAgIHRoaXMuX2JhY2tCdG4ueSA9IHlQb3M7XG4gICAgICAgICAgICB0aGlzLl9uZXh0QnRuLnkgPSB5UG9zO1xuICAgICAgICB9XG5cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9yb2xsU2luZ2xlQWRzLmxlbmd0aDsgKytpKSAgXG4gICAgICAgIHtcbiAgICAgICAgICAgIGxldCBhZCA9IHRoaXMuX3JvbGxTaW5nbGVBZHNbaV07XG4gICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoMTUwLHRoaXMsKCk9PlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGFkLnBsYXlBbmkoKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cblxuICAgICAgICB2YXIgYnRuTW92ZVRpbWVyID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLmJ0bk1vdmVUaW1lcjtcbiAgICAgICAgdmFyIGJhbm5lck1vdmVUaW1lciA9IEFwcFN3aXRjaENvbmZpZy5nZXRJbnN0YW5jZSgpLmdldEFwcFN3aXRjaERhdGEoKS5iYW5uZXJNb3ZlVGltZXI7XG4gICAgICAgIExheWEudGltZXIub25jZShiYW5uZXJNb3ZlVGltZXIgKiAxMDAwLHRoaXMsdGhpcy5CYW5uZXJVcCk7XG4gICAgICAgIExheWEudGltZXIub25jZShidG5Nb3ZlVGltZXIgKiAxMDAwLHRoaXMsdGhpcy5CdG5VcCk7XG4gICAgfVxuXG4gICAgYWRkRXZlbnQoKVxuICAgIHtcbiAgICAgICAgc3VwZXIuYWRkRXZlbnQoKTtcbiAgICAgICAgdGhpcy5fYmFja0J0bi5vbihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5vbkJhY2tCdG4pO1xuICAgICAgICB0aGlzLl9uZXh0QnRuLm9uKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uTmV4dEJ0bik7XG4gICAgfVxuXG4gICAgcmVtb3ZlRXZlbnQoKVxuICAgIHtcbiAgICAgICAgc3VwZXIucmVtb3ZlRXZlbnQoKTtcbiAgICAgICAgdGhpcy5fYmFja0J0bi5vZmYoTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25CYWNrQnRuKTtcbiAgICAgICAgdGhpcy5fbmV4dEJ0bi5vZmYoTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25OZXh0QnRuKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgb25CYWNrQnRuKClcbiAgICB7XG4gICAgICAgIGlmKCF0aGlzLl9jbGlja1RhZyAmJiBXdWRpYW5NZ3IuV3VkaWFuRmxhZylcbiAgICAgICAge1xuICAgICAgICAgICAgdmFyIHNlbGYgPSB0aGlzXG4gICAgICAgICAgICBpZighdGhpcy5fY2xpY2tUaW1pbmdUYWcpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGhpcy5fY2xpY2tUaW1pbmdUYWcgPSB0cnVlXG4gICAgICAgICAgICAgICAgdmFyIGJ0bk1vdmVUaW1lciA9IEFwcFN3aXRjaENvbmZpZy5nZXRJbnN0YW5jZSgpLmdldEFwcFN3aXRjaERhdGEoKS5idG5Nb3ZlVGltZXI7XG4gICAgICAgICAgICAgICAgdmFyIGJhbm5lck1vdmVUaW1lciA9IEFwcFN3aXRjaENvbmZpZy5nZXRJbnN0YW5jZSgpLmdldEFwcFN3aXRjaERhdGEoKS5iYW5uZXJNb3ZlVGltZXI7XG4gICAgICAgICAgICAgICAgTGF5YS50aW1lci5vbmNlKGJhbm5lck1vdmVUaW1lciAqIDEwMDAsdGhpcyx0aGlzLkJhbm5lclVwKTtcbiAgICAgICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoYnRuTW92ZVRpbWVyICogMTAwMCx0aGlzLHRoaXMuQnRuVXApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLy90b2RvOuS9oOeahOS7o+eggVxuICAgIH1cblxuICAgIHByb3RlY3RlZCBvbk5leHRCdG4oKVxuICAgIHtcbiAgICAgICAgaWYoIXRoaXMuX2NsaWNrVGFnICYmIFd1ZGlhbk1nci5XdWRpYW5GbGFnKVxuICAgICAgICB7XG4gICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXNcbiAgICAgICAgICAgIGlmKCF0aGlzLl9jbGlja1RpbWluZ1RhZylcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9jbGlja1RpbWluZ1RhZyA9IHRydWVcbiAgICAgICAgICAgICAgICB2YXIgYnRuTW92ZVRpbWVyID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLmJ0bk1vdmVUaW1lcjtcbiAgICAgICAgICAgICAgICB2YXIgYmFubmVyTW92ZVRpbWVyID0gQXBwU3dpdGNoQ29uZmlnLmdldEluc3RhbmNlKCkuZ2V0QXBwU3dpdGNoRGF0YSgpLmJhbm5lck1vdmVUaW1lcjtcbiAgICAgICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoYmFubmVyTW92ZVRpbWVyICogMTAwMCx0aGlzLHRoaXMuQmFubmVyVXApO1xuICAgICAgICAgICAgICAgIExheWEudGltZXIub25jZShidG5Nb3ZlVGltZXIgKiAxMDAwLHRoaXMsdGhpcy5CdG5VcCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvL3RvZG865L2g55qE5Luj56CBXG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIEJhbm5lclVwKClcbiAgICB7XG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcbiAgICAgICAgV1hBRE1nci5nZXRCYW5uZXIoKGJhbm5lciA6IFdYQmFubmRlckFkKT0+XG4gICAgICAgIHtcbiAgICAgICAgICAgIGlmKG51bGwgIT0gc2VsZi5fYmFubmVyKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlbGYuX2Jhbm5lci5oaWRlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZWxmLl9iYW5uZXIgPSBiYW5uZXJcbiAgICAgICAgICAgIGlmIChudWxsICE9IHNlbGYuX2Jhbm5lcikgXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VsZi5fYmFubmVyLnNob3coKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNlbGYuSGlzdG9yeUJ0bi52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIEJ0blVwKClcbiAgICB7XG4gICAgICAgIHRoaXMuX2NsaWNrVGFnID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5fYmFja0J0bi55ID0gNzIwO1xuICAgICAgICB0aGlzLl9uZXh0QnRuLnkgPSA3MjA7XG4gICAgfVxuXG4gICAgb25EZXN0cm95KClcbiAgICB7XG4gICAgICAgIGlmKG51bGwgIT0gdGhpcy5fYmFubmVyKVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLl9iYW5uZXIuaGlkZSgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2Jhbm5lciA9IG51bGw7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uSGlzdG9yeUJ0bigpXG4gICAge1xuICAgICAgICBsZXQgc2VsZiA9IHRoaXM7XG4gICAgICAgIFZpZXdNZ3IuaW5zdGFuY2Uub3BlblZpZXcoVmlld0RlZi5NaW5pR2FtZVZpZXcsbnVsbCwodiA6IE1pbmlHYW1lVmlld1RlbXBsYXRlKT0+XG4gICAgICAgIHtcbiAgICAgICAgICAgIHNlbGYuaGlkZSgpO1xuICAgICAgICAgICAgaWYobnVsbCAhPSBzZWxmLl9iYW5uZXIpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VsZi5fYmFubmVyLmhpZGUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHYub25DbG9zZUV2ZW50ID0gKCk9PlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGlmKG51bGwgIT0gc2VsZi5WaWV3ICYmICFzZWxmLlZpZXcuZGVzdHJveWVkKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5zaG93KCk7XG4gICAgICAgICAgICAgICAgICAgIGlmKG51bGwgIT0gc2VsZi5fYmFubmVyKVxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLl9iYW5uZXIuc2hvdygpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cbn0iLCJpbXBvcnQgVGVtcGxhdGVWaWV3QmFzZSBmcm9tIFwiLi4vVGVtcGxhdGVWaWV3QmFzZVwiO1xuaW1wb3J0IEtSUV9NYWluLCB7IEtSUV9NYWluU3RhdGUgfSBmcm9tIFwiLi4vLi4vLi4vS1JRL1ZpZXdDb20vS1JRX01haW5cIjtcbmltcG9ydCBVdGlsaXQgZnJvbSBcIi4uLy4uLy4uL1V0aWxpdFwiO1xuXG5leHBvcnQgZW51bSBJbkdhbWVTaG93VHlwZVxue1xuICAgIE5vcm1hbCA9IDAsXG4gICAgTm9Mb29wQWQgPSAxLFxuICAgIE5vQmFubmVyQWQgPSAyLFxufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBJbkdhbWVWaWV3VGVtcGxhdGUgZXh0ZW5kcyBUZW1wbGF0ZVZpZXdCYXNlXG57XG4gICAgcHJvdGVjdGVkIF9jZW50ZXJab25lIDogTGF5YS5DbGlwID0gbnVsbDtcbiAgICBwcm90ZWN0ZWQgX2tycU1haW4gOiBLUlFfTWFpbiA9IG51bGw7XG5cbiAgICBvbkF3YWtlKClcbiAgICB7XG4gICAgICAgIHN1cGVyLm9uQXdha2UoKTtcbiAgICAgICAgdGhpcy5fY2VudGVyWm9uZSA9IHRoaXMuVmlldy5nZXRDaGlsZEJ5TmFtZShcIkNlbnRlclpvbmVcIikgYXMgTGF5YS5DbGlwO1xuICAgICAgICB0aGlzLl9rcnFNYWluID0gdGhpcy5WaWV3LmdldENoaWxkQnlOYW1lKFwiS1JRX01haW5cIikuZ2V0Q29tcG9uZW50KEtSUV9NYWluKTtcblxuICAgICAgICB2YXIgYXNwZWN0UmF0aW8gPSBMYXlhLnN0YWdlLndpZHRoIC8gTGF5YS5zdGFnZS5oZWlnaHQ7XG4gICAgICAgIGlmKGFzcGVjdFJhdGlvICA8IDAuNSkgXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlmKFV0aWxpdC5pc0lwaG9uZVgoKSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9jZW50ZXJab25lLnRvcCA9ICB0aGlzLl9jZW50ZXJab25lLnRvcCArIDc1O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2VcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5fY2VudGVyWm9uZS50b3AgPSAgdGhpcy5fY2VudGVyWm9uZS50b3AgLSAyMDA7XG4gICAgICAgICAgICBpZihVdGlsaXQuaXNJcGhvbmVYKCkpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGhpcy5fY2VudGVyWm9uZS50b3AgPSAgdGhpcy5fY2VudGVyWm9uZS50b3AgKyA3NTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBvcGVuVmlldyhkYXRhPzogYW55KTogdm9pZFxuICAgIHtcbiAgICAgICAgc3VwZXIub3BlblZpZXcoZGF0YSk7XG4gICAgICAgIGlmKG51bGwgIT0gZGF0YSAmJiAgbnVsbCAhPSBkYXRhLnNob3dUeXBlKVxuICAgICAgICB7XG4gICAgICAgICAgICBsZXQgc2hvd1R5cGUgPSBkYXRhLnNob3dUeXBlIGFzIEluR2FtZVNob3dUeXBlO1xuICAgICAgICAgICAgc3dpdGNoKHNob3dUeXBlKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGNhc2UgSW5HYW1lU2hvd1R5cGUuTm9ybWFsOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9rcnFNYWluLnN3aXRjaFN0YXRlKEtSUV9NYWluU3RhdGUuTm9ybWFsKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBJbkdhbWVTaG93VHlwZS5Ob0xvb3BBZDpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fa3JxTWFpbi5zd2l0Y2hTdGF0ZShLUlFfTWFpblN0YXRlLk5vTG9vcEFkKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBJbkdhbWVTaG93VHlwZS5Ob0Jhbm5lckFkOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9rcnFNYWluLnN3aXRjaFN0YXRlKEtSUV9NYWluU3RhdGUuTm9CYW5uZXJBZCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgb25TdGFydCgpXG4gICAge1xuICAgICAgICBzdXBlci5vblN0YXJ0KCk7XG4gICAgfVxuXG4gICAgYWRkRXZlbnQoKVxuICAgIHtcbiAgICAgICAgc3VwZXIuYWRkRXZlbnQoKTtcbiAgICB9XG5cbiAgICByZW1vdmVFdmVudCgpXG4gICAge1xuICAgICAgICBzdXBlci5yZW1vdmVFdmVudCgpO1xuICAgIH1cbn0iLCJpbXBvcnQgVGVtcGxhdGVWaWV3QmFzZSBmcm9tIFwiLi4vVGVtcGxhdGVWaWV3QmFzZVwiO1xuaW1wb3J0IEtSUV9NYWluIGZyb20gXCIuLi8uLi8uLi9LUlEvVmlld0NvbS9LUlFfTWFpblwiO1xuaW1wb3J0IEV2ZW50TWdyIGZyb20gXCIuLi8uLi8uLi9FdmVudC9FdmVudE1nclwiO1xuaW1wb3J0IHsgRXZlbnREZWYgfSBmcm9tIFwiLi4vLi4vLi4vRXZlbnQvRXZlbnREZWZcIjtcbmltcG9ydCBVc2VyIGZyb20gXCIuLi8uLi8uLi9Vc2VyL1VzZXJcIjtcbmltcG9ydCBVdGlsaXQgZnJvbSBcIi4uLy4uLy4uL1V0aWxpdFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNYWluVmlld1RlbXBsYXRlIGV4dGVuZHMgVGVtcGxhdGVWaWV3QmFzZVxue1xuICAgIHByb3RlY3RlZCBfa3JxTWFpbiA6IEtSUV9NYWluID0gbnVsbDtcblxuICAgIHByb3RlY3RlZCBfY2VudGVyWm9uZSA6IExheWEuQ2xpcCA9IG51bGw7XG4gICAgcHJvdGVjdGVkIF9zdGFydEJ0biA6IExheWEuU3ByaXRlID0gbnVsbDtcblxuICAgIHByb3RlY3RlZCBfbGV2ZWxOdW0gOiBMYXlhLkZvbnRDbGlwID0gbnVsbDtcbiAgICBwcm90ZWN0ZWQgX21vbmV5TnVtIDogTGF5YS5Gb250Q2xpcCA9IG51bGw7XG4gICAgXG4gICAgb25Bd2FrZSgpXG4gICAge1xuICAgICAgICBzdXBlci5vbkF3YWtlKCk7XG5cbiAgICAgICAgdGhpcy5fa3JxTWFpbiA9IHRoaXMuVmlldy5nZXRDaGlsZEJ5TmFtZShcIktSUV9NYWluXCIpLmdldENvbXBvbmVudChLUlFfTWFpbik7XG4gICAgICAgIHRoaXMuX2NlbnRlclpvbmUgPSB0aGlzLlZpZXcuZ2V0Q2hpbGRCeU5hbWUoXCJDZW50ZXJab25lXCIpIGFzIExheWEuQ2xpcDtcblxuICAgICAgICB2YXIgYXNwZWN0UmF0aW8gPSBMYXlhLnN0YWdlLndpZHRoIC8gTGF5YS5zdGFnZS5oZWlnaHQ7XG4gICAgICAgIGlmKGFzcGVjdFJhdGlvICA8IDAuNSkgXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlmKFV0aWxpdC5pc0lwaG9uZVgoKSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9jZW50ZXJab25lLnRvcCA9ICB0aGlzLl9jZW50ZXJab25lLnRvcCArIDc1O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2VcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5fY2VudGVyWm9uZS50b3AgPSAgdGhpcy5fY2VudGVyWm9uZS50b3AgLSAyMDA7XG4gICAgICAgICAgICBpZihVdGlsaXQuaXNJcGhvbmVYKCkpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGhpcy5fY2VudGVyWm9uZS50b3AgPSAgdGhpcy5fY2VudGVyWm9uZS50b3AgKyA3NTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuX3N0YXJ0QnRuID0gdGhpcy5fY2VudGVyWm9uZS5nZXRDaGlsZEJ5TmFtZShcIlN0YXJ0QnRuXCIpIGFzIExheWEuU3ByaXRlO1xuXG4gICAgICAgIHRoaXMuX2xldmVsTnVtID0gdGhpcy5fY2VudGVyWm9uZS5nZXRDaGlsZEJ5TmFtZShcIkxldmVsSW5mb1wiKS5nZXRDaGlsZEJ5TmFtZShcIkxldmVsTnVtXCIpIGFzIExheWEuRm9udENsaXA7XG4gICAgICAgIHRoaXMuX21vbmV5TnVtID0gdGhpcy5fY2VudGVyWm9uZS5nZXRDaGlsZEJ5TmFtZShcIk1vbmV5SW5mb1wiKS5nZXRDaGlsZEJ5TmFtZShcIk1vbmV5TnVtXCIpIGFzIExheWEuRm9udENsaXA7XG4gICAgfVxuXG4gICAgb25TdGFydCgpXG4gICAge1xuICAgICAgICBzdXBlci5vblN0YXJ0KCk7XG4gICAgICAgIHRoaXMuX21vbmV5TnVtLnZhbHVlID0gU3RyaW5nKFVzZXIuZ2V0TW9uZXkoKSk7XG4gICAgICAgIHRoaXMuX2xldmVsTnVtLnZhbHVlID0gU3RyaW5nKFVzZXIuZ2V0TGV2ZU51bSgpKTtcbiAgICB9XG5cbiAgICBhZGRFdmVudCgpXG4gICAge1xuICAgICAgICBzdXBlci5hZGRFdmVudCgpO1xuICAgICAgICB0aGlzLl9zdGFydEJ0bi5vbihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5vblN0YXJ0QnRuKTtcbiAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UucmVnRXZlbXQoRXZlbnREZWYuR2FtZV9PblVzZXJNb25leUNoYW5nZSx0aGlzLHRoaXMub25Vc2VyTW9uZXlDaGFuZ2UpO1xuICAgIH1cblxuICAgIHJlbW92ZUV2ZW50KClcbiAgICB7XG4gICAgICAgIHN1cGVyLnJlbW92ZUV2ZW50KCk7XG4gICAgICAgIHRoaXMuX3N0YXJ0QnRuLm9mZihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5vblN0YXJ0QnRuKTtcbiAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2UucmVtb3ZlRXZlbnQoRXZlbnREZWYuR2FtZV9PblVzZXJNb25leUNoYW5nZSx0aGlzLHRoaXMub25Vc2VyTW9uZXlDaGFuZ2UpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBvblN0YXJ0QnRuKClcbiAgICB7XG4gICAgICAgIFxuICAgIH1cblxuICAgIHByb3RlY3RlZCBvblVzZXJNb25leUNoYW5nZShwYXJhKVxuICAgIHtcbiAgICAgICAgbGV0IGN1cnIgPSBwYXJhLmN1cnI7XG4gICAgICAgIGxldCBsYXN0ID0gcGFyYS5sYXN0O1xuICAgICAgICB0aGlzLl9tb25leU51bS52YWx1ZSA9IFN0cmluZyhjdXJyKTtcbiAgICB9XG59IiwiaW1wb3J0IFZpZXdCYXNlIGZyb20gXCIuLi8uLi9WaWV3QmFzZVwiO1xuaW1wb3J0IEtSUV9IaXN0b3J5IGZyb20gXCIuLi8uLi8uLi9LUlEvQ29tL0tSUV9IaXN0b3J5L0tSUV9IaXN0b3J5XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1pbmlHYW1lVmlld1RlbXBsYXRlIGV4dGVuZHMgVmlld0Jhc2UgXG57XG4gICAgcHJvdGVjdGVkIF9rcnFoaXN0b3J5IDogS1JRX0hpc3RvcnkgPSBudWxsO1xuXG4gICAgb25Bd2FrZSgpXG4gICAge1xuICAgICAgICBzdXBlci5vbkF3YWtlKCk7XG4gICAgICAgIHRoaXMuX2tycWhpc3RvcnkgPSB0aGlzLlZpZXcuZ2V0Q2hpbGRCeU5hbWUoXCJLUlFfSGlzdG9yeVwiKS5nZXRDb21wb25lbnQoS1JRX0hpc3RvcnkpO1xuICAgICAgICBsZXQgc2VsZiA9IHRoaXM7XG4gICAgICAgIHRoaXMuX2tycWhpc3RvcnkuT25CYWNrQnRuQ2xpY2sgPSAoKT0+XG4gICAgICAgIHtcbiAgICAgICAgICAgIHNlbGYuY2xvc2VWaWV3KCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBvblN0YXJ0KClcbiAgICB7XG4gICAgICAgIHN1cGVyLm9uU3RhcnQoKTtcbiAgICB9XG5cbiAgICBhZGRFdmVudCgpXG4gICAge1xuICAgICAgICBzdXBlci5hZGRFdmVudCgpO1xuICAgIH1cblxuICAgIHJlbW92ZUV2ZW50KClcbiAgICB7XG4gICAgICAgIHN1cGVyLnJlbW92ZUV2ZW50KCk7XG4gICAgfVxufSIsImltcG9ydCBWaWV3QmFzZSBmcm9tIFwiLi4vLi4vVmlld0Jhc2VcIjtcbmltcG9ydCBBcHBTd2l0Y2hDb25maWcgZnJvbSBcIi4uLy4uLy4uL0NvbmZpZy9BcHBTd2l0Y2hDb25maWdcIjtcbmltcG9ydCBPUFBPQVBJIGZyb20gXCIuLi8uLi8uLi9PUFBPQVBJXCI7XG5pbXBvcnQgV3VkaWFuTWdyIGZyb20gXCIuLi8uLi8uLi9NZ3IvV3VkaWFuTWdyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE9QUE9OYXRpdmVBZFZpZXdUZW1wbGF0ZSBleHRlbmRzIFZpZXdCYXNlIFxue1xuXG4gICAgcHJvdGVjdGVkIF9jZW50ZXJab25lIDogTGF5YS5TcHJpdGU7XG4gICAgcHJvdGVjdGVkIF9kaXNwbGF5IDogTGF5YS5TcHJpdGU7XG4gICAgcHJvdGVjdGVkIF9va0J0biA6IExheWEuU3ByaXRlO1xuICAgIHByb3RlY3RlZCBfY2xvc2VCdG4gOiBMYXlhLlNwcml0ZTtcblxuICAgIHByb3RlY3RlZCBfbmF0aXZlQWQgOiBhbnkgPSBudWxsO1xuICAgIHByb3RlY3RlZCBfY3VyQWRJdGVtIDogYW55ID0gbnVsbDtcblxuICAgIHByb3RlY3RlZCBfYmc6TGF5YS5TcHJpdGU7XG5cbiAgICBvbkF3YWtlKClcbiAgICB7XG4gICAgICAgIHRoaXMuX2NlbnRlclpvbmUgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiQ2VudGVyWm9uZVwiKSBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgdGhpcy5fZGlzcGxheSA9IHRoaXMuX2NlbnRlclpvbmUuZ2V0Q2hpbGRCeU5hbWUoXCJEaXNwbGF5XCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl9va0J0biA9IHRoaXMuX2NlbnRlclpvbmUuZ2V0Q2hpbGRCeU5hbWUoXCJPa0J0blwiKSBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgdGhpcy5fY2xvc2VCdG4gPSB0aGlzLl9jZW50ZXJab25lLmdldENoaWxkQnlOYW1lKFwiQ2xvc2VCdG5cIikgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgIHRoaXMuX2JnID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkJHXCIpIGFzIExheWEuU3ByaXRlO1xuICAgIH1cblxuICAgIG9uRW5hYmxlKClcbiAgICB7XG4gICAgICAgIHN1cGVyLm9uRW5hYmxlKCk7XG4gICAgICAgIHRoaXMubG9hZEFkKCk7XG4gICAgICAgIHRoaXMuX2JnLmhlaWdodCA9IExheWEuc3RhZ2UuaGVpZ2h0O1xuICAgICAgICB0aGlzLl9jbG9zZUJ0bi52aXNpYmxlID0gZmFsc2U7XG4gICAgICAgIExheWEudGltZXIub25jZShBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkub3Bwb2NmZy5idG5TaG93VGltZXIsdGhpcywoKT0+e1xuICAgICAgICAgICAgdGhpcy5fY2xvc2VCdG4udmlzaWJsZSA9IHRydWU7XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgYWRkRXZlbnQoKVxuICAgIHtcbiAgICAgICAgc3VwZXIuYWRkRXZlbnQoKTtcbiAgICAgICAgdGhpcy5fb2tCdG4ub24oTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25Pa0J0bik7XG4gICAgICAgIHRoaXMuX2Nsb3NlQnRuLm9uKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uQ2xvc2VCdG4pO1xuICAgICAgICB0aGlzLl9kaXNwbGF5Lm9uKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uRGlzcGxheUNsaWNrKTtcbiAgICAgICAgXG4gICAgfVxuXG4gICAgcmVtb3ZlRXZlbnQoKVxuICAgIHtcbiAgICAgICAgc3VwZXIucmVtb3ZlRXZlbnQoKTtcbiAgICAgICAgdGhpcy5fb2tCdG4ub2ZmKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uT2tCdG4pO1xuICAgICAgICB0aGlzLl9jbG9zZUJ0bi5vZmYoTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25DbG9zZUJ0bik7XG4gICAgICAgIHRoaXMuX2Rpc3BsYXkub2ZmKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uRGlzcGxheUNsaWNrKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgbG9hZEFkKClcbiAgICB7XG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgICAgbGV0IGlwQmxvY2tlZCA9IFd1ZGlhbk1nci5HZXRJcEJsb2NrZWQoKTtcbiAgICAgICAgaWYoIWlwQmxvY2tlZClcbiAgICAgICAge1xuICAgICAgICAgICAgc2VsZi5jbG9zZVZpZXcoKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZihMYXlhLkJyb3dzZXIub25RR01pbmlHYW1lKVxuICAgICAgICB7XG4gICAgICAgICAgICBpZih0aGlzLl9uYXRpdmVBZClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9uYXRpdmVBZC5kZXN0cm95KCk7XG4gICAgICAgICAgICAgICAgdGhpcy5fbmF0aXZlQWQgPSBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fY3VyQWRJdGVtID0gbnVsbDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgdGhpcy5fbmF0aXZlQWQgPSBxZy5jcmVhdGVOYXRpdmVBZCh7IFxuICAgICAgICAgICAgICAgIHBvc0lkOiBPUFBPQVBJLk5hdGl2ZUFkSWQgXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgdGhpcy5fbmF0aXZlQWQubG9hZCgpO1xuICAgICAgICAgICAgdGhpcy5fbmF0aXZlQWQub25Mb2FkKChyZXMpPT5cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuWOn+eUn+W5v+WRiuWKoOi9veaIkOWKn++8mlwiLHJlcyk7XG4gICAgICAgICAgICAgICAgdmFyIGFkbGlzdCA9IHJlcy5hZExpc3Q7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhZGxpc3QubGVuZ3RoOyArK2kpICBcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBhZCA9IGFkbGlzdFtpXTtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLljp/nlJ/lub/lkYrmlbDmja7vvJpcIixpKTtcbiAgICAgICAgICAgICAgICAgICAgZm9yKHZhciBrZXkgaW4gYWQpXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGtleSxhZFtrZXldKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBzZWxmLl9jdXJBZEl0ZW0gPSBhZGxpc3RbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogYWRsaXN0Lmxlbmd0aCldO1xuICAgICAgICAgICAgICAgIGlmKG51bGwgIT0gc2VsZi5fY3VyQWRJdGVtKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzZWxmLl9jdXJBZEl0ZW0uaW1nVXJsTGlzdC5sZW5ndGg7ICsraSlcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJpbWdVcmxMaXN0IDogXCIsaSArIFwiIFwiLHNlbGYuX2N1ckFkSXRlbS5pbWdVcmxMaXN0W2ldKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHZhciBpbWd1bHIgPSBzZWxmLl9jdXJBZEl0ZW0uaW1nVXJsTGlzdFtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBzZWxmLl9jdXJBZEl0ZW0uaW1nVXJsTGlzdC5sZW5ndGgpXTtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5fZGlzcGxheS5sb2FkSW1hZ2UoaW1ndWxyKTtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5fbmF0aXZlQWQucmVwb3J0QWRTaG93KHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkSWQ6IHNlbGYuX2N1ckFkSXRlbS5hZElkXG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5Yqg6L295Zu+54mHXCIsaW1ndWxyKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLngrnlh7vkuIrmiqXvvIHvvIHvvIFcIilcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc2VsZi5fY2VudGVyWm9uZS52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB0aGlzLl9uYXRpdmVBZC5vbkVycm9yKChyZXMpPT5cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuWOn+eUn+W5v+WRiuWKoOi9veWksei0pe+8mlwiLHJlcyk7XG4gICAgICAgICAgICAgICAgZm9yKHZhciBrZXkgaW4gcmVzKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coa2V5LHJlc1trZXldKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc2VsZi5jbG9zZVZpZXcoKTtcbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgIHRoaXMuX2NlbnRlclpvbmUudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uQ2xvc2VCdG4oKVxuICAgIHtcbiAgICAgICAgdGhpcy5jbG9zZVZpZXcoKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgb25Pa0J0bigpXG4gICAge1xuICAgICAgICBpZiAoTWF0aC5yYW5kb20oKSAqIDEwMCA8PSBBcHBTd2l0Y2hDb25maWcuZ2V0SW5zdGFuY2UoKS5nZXRBcHBTd2l0Y2hEYXRhKCkub3Bwb2NmZy55dWFuc2hlbmcpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi6L+b5YWl5Y+Y5oCB5bm/5ZGKXCIpO1xuICAgICAgICAgICAgdGhpcy5vbkRpc3BsYXlDbGljaygpO1xuICAgICAgICB9ICAgXG4gICAgICAgIHRoaXMuY2xvc2VWaWV3KCk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uRGlzcGxheUNsaWNrKClcbiAgICB7XG4gICAgICAgIGlmKG51bGwgIT0gdGhpcy5fbmF0aXZlQWQgJiYgbnVsbCAhPSB0aGlzLl9jdXJBZEl0ZW0pXG4gICAgICAgIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi54K55Ye75LiK5oql77yB77yB77yBXCIpXG4gICAgICAgICAgICB0aGlzLl9uYXRpdmVBZC5yZXBvcnRBZENsaWNrKHtcbiAgICAgICAgICAgICAgICBhZElkOiB0aGlzLl9jdXJBZEl0ZW0uYWRJZFxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIG9uRGVzdHJveSgpXG4gICAge1xuICAgICAgICBzdXBlci5vbkRlc3Ryb3koKTtcbiAgICAgICAgaWYoTGF5YS5Ccm93c2VyLm9uUUdNaW5pR2FtZSlcbiAgICAgICAge1xuICAgICAgICAgICAgaWYodGhpcy5fbmF0aXZlQWQpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGhpcy5fbmF0aXZlQWQuZGVzdHJveSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fbmF0aXZlQWQgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5fY3VyQWRJdGVtID0gbnVsbDtcbiAgICAgICAgfVxuICAgIH1cbn0iLCJpbXBvcnQgVGVtcGxhdGVWaWV3QmFzZSBmcm9tIFwiLi4vVGVtcGxhdGVWaWV3QmFzZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSZXdhcmRWaWV3VGVtcGxhdGUgZXh0ZW5kcyBUZW1wbGF0ZVZpZXdCYXNlXG57XG4gICAgcHJvdGVjdGVkIF9jZW50ZXJab25lIDogTGF5YS5DbGlwID0gbnVsbDtcbiAgICBwcm90ZWN0ZWQgX3Jld2FyZEJ0biA6IExheWEuU3ByaXRlID0gbnVsbDtcbiAgICBwcm90ZWN0ZWQgX3NraXBCdG4gOiBMYXlhLlNwcml0ZSA9IG51bGw7XG5cbiAgICBvbkF3YWtlKClcbiAgICB7XG4gICAgICAgIHN1cGVyLm9uQXdha2UoKTtcbiAgICAgICAgdGhpcy5fY2VudGVyWm9uZSA9IHRoaXMuVmlldy5nZXRDaGlsZEJ5TmFtZShcIkNlbnRlclpvbmVcIikgYXMgTGF5YS5DbGlwOyBcbiAgICAgICAgdGhpcy5fcmV3YXJkQnRuID0gdGhpcy5fY2VudGVyWm9uZS5nZXRDaGlsZEJ5TmFtZShcIlJld3JhZEJ0blwiKSBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgdGhpcy5fc2tpcEJ0biA9IHRoaXMuX2NlbnRlclpvbmUuZ2V0Q2hpbGRCeU5hbWUoXCJTa2lwQnRuXCIpIGFzIExheWEuU3ByaXRlO1xuICAgIH1cblxuICAgIG9uU3RhcnQoKVxuICAgIHtcbiAgICAgICAgc3VwZXIub25TdGFydCgpO1xuICAgIH1cblxuICAgIGFkZEV2ZW50KClcbiAgICB7XG4gICAgICAgIHN1cGVyLmFkZEV2ZW50KCk7XG4gICAgICAgIHRoaXMuX3Jld2FyZEJ0bi5vbihMYXlhLkV2ZW50LkNMSUNLLHRoaXMsdGhpcy5vblJld2FyZEJ0bik7XG4gICAgICAgIHRoaXMuX3NraXBCdG4ub24oTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25Ta2lwQnRuKTtcbiAgICB9XG5cbiAgICByZW1vdmVFdmVudCgpXG4gICAge1xuICAgICAgICBzdXBlci5yZW1vdmVFdmVudCgpO1xuICAgICAgICB0aGlzLl9yZXdhcmRCdG4ub2ZmKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uUmV3YXJkQnRuKTtcbiAgICAgICAgdGhpcy5fc2tpcEJ0bi5vZmYoTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25Ta2lwQnRuKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgb25SZXdhcmRCdG4oKVxuICAgIHtcbiAgICAgICAgXG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uU2tpcEJ0bigpXG4gICAge1xuXG4gICAgfVxufSIsImltcG9ydCBWaWV3QmFzZSBmcm9tIFwiLi4vVmlld0Jhc2VcIjtcbmltcG9ydCBVdGlsaXQgZnJvbSBcIi4uLy4uL1V0aWxpdFwiO1xuaW1wb3J0IFZpZXdNZ3IsIHsgVmlld0RlZiB9IGZyb20gXCIuLi8uLi9NZ3IvVmlld01nclwiO1xuaW1wb3J0IE1pbmlHYW1lVmlld1RlbXBsYXRlIGZyb20gXCIuL01pbmlHYW1lL01pbmlHYW1lVmlld1RlbXBsYXRlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRlbXBsYXRlVmlld0Jhc2UgZXh0ZW5kcyBWaWV3QmFzZSBcbntcbiAgICBwdWJsaWMgZ2V0IEhpc3RvcnlCdG4oKVxuICAgIHtcbiAgICAgICAgaWYobnVsbCA9PSB0aGlzLl9oaXN0b3J5QnRuKVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLl9oaXN0b3J5QnRuID0gdGhpcy5Ub3Bab25lLmdldENoaWxkQnlOYW1lKFwiSGlzdG9yeUJ0blwiKSBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5faGlzdG9yeUJ0bjtcbiAgICB9XG4gICAgcHJpdmF0ZSBfaGlzdG9yeUJ0biA6IExheWEuU3ByaXRlID0gbnVsbDtcbiAgICBwdWJsaWMgZ2V0IFRvcFpvbmUoKVxuICAgIHtcbiAgICAgICAgaWYobnVsbCA9PSB0aGlzLl90b3Bab25lKVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLl90b3Bab25lID0gdGhpcy5WaWV3LmdldENoaWxkQnlOYW1lKFwiVG9wWm9uZVwiKSBhcyBMYXlhLkNsaXA7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX3RvcFpvbmU7XG4gICAgfVxuICAgIHByb3RlY3RlZCBfdG9wWm9uZSA6IExheWEuQ2xpcCA9IG51bGw7XG5cbiAgICBvbkF3YWtlKClcbiAgICB7XG4gICAgICAgIHRoaXMuX3RvcFpvbmUgPSB0aGlzLlZpZXcuZ2V0Q2hpbGRCeU5hbWUoXCJUb3Bab25lXCIpIGFzIExheWEuQ2xpcDtcbiAgICAgICAgaWYoVXRpbGl0LmlzSXBob25lWCgpKVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLl90b3Bab25lLnRvcCA9ICB0aGlzLl90b3Bab25lLnRvcCArIDc1O1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2hpc3RvcnlCdG4gPSB0aGlzLl90b3Bab25lLmdldENoaWxkQnlOYW1lKFwiSGlzdG9yeUJ0blwiKSBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgaWYoTGF5YS5Ccm93c2VyLm9uUUdNaW5pR2FtZSlcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5faGlzdG9yeUJ0bi52aXNpYmxlID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBhZGRFdmVudCgpXG4gICAge1xuICAgICAgICBzdXBlci5hZGRFdmVudCgpO1xuICAgICAgICB0aGlzLkhpc3RvcnlCdG4ub24oTGF5YS5FdmVudC5DTElDSyx0aGlzLHRoaXMub25IaXN0b3J5QnRuKTtcbiAgICB9XG5cbiAgICByZW1vdmVFdmVudCgpXG4gICAge1xuICAgICAgICBzdXBlci5yZW1vdmVFdmVudCgpO1xuICAgICAgICB0aGlzLkhpc3RvcnlCdG4ub2ZmKExheWEuRXZlbnQuQ0xJQ0ssdGhpcyx0aGlzLm9uSGlzdG9yeUJ0bik7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uSGlzdG9yeUJ0bigpXG4gICAge1xuICAgICAgICBsZXQgc2VsZiA9IHRoaXM7XG4gICAgICAgIFZpZXdNZ3IuaW5zdGFuY2Uub3BlblZpZXcoVmlld0RlZi5NaW5pR2FtZVZpZXcsbnVsbCwodiA6IE1pbmlHYW1lVmlld1RlbXBsYXRlKT0+XG4gICAgICAgIHtcbiAgICAgICAgICAgIHNlbGYuaGlkZSgpO1xuICAgICAgICAgICAgdi5vbkNsb3NlRXZlbnQgPSAoKT0+XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaWYobnVsbCAhPSBzZWxmLlZpZXcgJiYgIXNlbGYuVmlldy5kZXN0cm95ZWQpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxmLnNob3coKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxufSIsImltcG9ydCBWaWV3QmFzZSBmcm9tIFwiLi4vVmlld0Jhc2VcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGlwc1ZpZXcgZXh0ZW5kcyBWaWV3QmFzZVxue1xuICAgIHByb3RlY3RlZCBfYmcgOiBMYXlhLlNwcml0ZTtcbiAgICBwcm90ZWN0ZWQgX3RpcHNUZXh0IDogTGF5YS5UZXh0O1xuICAgIGNvbnN0cnVjdG9yKCkgeyBzdXBlcigpOyB9XG5cbiAgICBvbkF3YWtlKClcbiAgICB7XG4gICAgICAgIHRoaXMuX2JnID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkJnXCIpIGFzIExheWEuU3ByaXRlO1xuICAgICAgICB0aGlzLl9iZy54ID0gTGF5YS5zdGFnZS53aWR0aCAvIDIgLSB0aGlzLl9iZy53aWR0aCAvIDI7XG4gICAgICAgIHRoaXMuX3RpcHNUZXh0ID0gdGhpcy5fYmcuZ2V0Q2hpbGRCeU5hbWUoXCJUZXh0XCIpIGFzIExheWEuVGV4dDtcbiAgICB9XG5cbiAgICBhZGRFdmVudCgpXG4gICAge1xuICAgICAgICBzdXBlci5hZGRFdmVudCgpO1xuICAgIH0gICBcblxuICAgIHJlbW92ZUV2ZW50KClcbiAgICB7XG4gICAgICAgIHN1cGVyLnJlbW92ZUV2ZW50KCk7XG4gICAgfVxuXG4gICAgcHVibGljIG9wZW5WaWV3KGRhdGE/OiBhbnkpOiB2b2lkIFxuICAgIHtcbiAgICAgICAgc3VwZXIub3BlblZpZXcoZGF0YSk7XG4gICAgICAgIHRoaXMuc2V0VGlwc01zZyhkYXRhKTtcbiAgICAgICAgdGhpcy5fYmcuYWxwaGEgPSAxO1xuICAgICAgICBMYXlhLnRpbWVyLmNsZWFyQWxsKHRoaXMpO1xuICAgICAgICBMYXlhLnRpbWVyLm9uY2UoMjAwMCx0aGlzLHRoaXMuY2xvc2VWaWV3KTtcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMuX2JnLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGFscGhhIDogMFxuICAgICAgICAgICAgfSw1MDAsTGF5YS5FYXNlLmxpbmVhck5vbmUsTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCgpPT5cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzZWxmLmNsb3NlVmlldygpO1xuICAgICAgICAgICAgfSksMTUwMCx0cnVlKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2V0VGlwc01zZyhtc2cgOiBzdHJpbmcpXG4gICAge1xuICAgICAgICB0aGlzLl90aXBzVGV4dC50ZXh0ID0gbXNnO1xuICAgIH1cbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBNaWRkbGVBbmNob3IgZXh0ZW5kcyBMYXlhLlNjcmlwdCBcbntcbiAgICBvbkF3YWtlKClcbiAgICB7XG4gICAgICAgIHZhciBzcCA9IHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgIHZhciBwYXJlbnRTcCA9IHRoaXMub3duZXIucGFyZW50IGFzIExheWEuU3ByaXRlO1xuICAgICAgICBpZihwYXJlbnRTcClcbiAgICAgICAge1xuICAgICAgICAgICAgdmFyIHB3ID0gcGFyZW50U3Aud2lkdGg7XG4gICAgICAgICAgICB2YXIgeCA9IHB3IC8gMjtcbiAgICAgICAgICAgIHNwLnggPSB4O1xuICAgICAgICB9XG4gICAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFZpZXdBdXRvU2NhbGUgZXh0ZW5kcyBMYXlhLlNjcmlwdCBcbntcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5ICBiYXNlV2lkdGggPSA3NTA7XG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSAgYmFzZUhlaWdodCA9IDEzMzQ7XG5cbiAgICBvbkF3YWtlKClcbiAgICB7XG4gICAgICAgIHZhciByZWFsSCA9IExheWEuc3RhZ2UuaGVpZ2h0O1xuICAgICAgICB2YXIgc2NhbGUgPSByZWFsSCAvIFZpZXdBdXRvU2NhbGUuYmFzZUhlaWdodDtcbiAgICAgICAgdmFyIHBzID0gdGhpcy5vd25lciBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgcHMuc2NhbGUoc2NhbGUsc2NhbGUpO1xuICAgIH1cbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBWaWV3QXV0b1NjYWxlQnlXIGV4dGVuZHMgTGF5YS5TY3JpcHQgXG57XG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSAgYmFzZVdpZHRoID0gNzUwO1xuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgIGJhc2VIZWlnaHQgPSAxMzM0O1xuXG4gICAgb25Bd2FrZSgpXG4gICAge1xuICAgICAgICB2YXIgcmVhbFcgPSBMYXlhLnN0YWdlLndpZHRoO1xuICAgICAgICB2YXIgc2NhbGUgPSByZWFsVyAvIFZpZXdBdXRvU2NhbGVCeVcuYmFzZVdpZHRoO1xuICAgICAgICB2YXIgcHMgPSB0aGlzLm93bmVyIGFzIExheWEuU3ByaXRlO1xuICAgICAgICBwcy5zY2FsZShzY2FsZSxzY2FsZSk7XG4gICAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFR3aW5rbGVTcHJpdGUgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XG4gICAgLyoqIEBwcm9wIHtuYW1lOlR3aW5rbGVTcGVlZCwgdGlwczpcIumXquWKqOmAn+W6plwiLCB0eXBlOk51bWJlciwgZGVmYXVsdDoxMDAwfSovXG4gICAgcHVibGljIFR3aW5rbGVTcGVlZDogbnVtYmVyID0gMTAwMDtcbiAgICAvKiogQHByb3Age25hbWU6VHdpbmtsZU1pblNpemUsIHRpcHM6XCLmnIDlsI/nvKnmlL5cIiwgdHlwZTpOdW1iZXIsIGRlZmF1bHQ6MC45NX0qL1xuICAgIHB1YmxpYyBUd2lua2xlTWluU2l6ZTogbnVtYmVyID0gMC45NTtcbiAgICAvKiogQHByb3Age25hbWU6VHdpbmtsZU1heFNpemUsIHRpcHM6XCLmnIDlpKfnvKnmlL5cIiwgdHlwZTpOdW1iZXIsIGRlZmF1bHQ6MS4wNX0qL1xuICAgIHB1YmxpYyBUd2lua2xlTWF4U2l6ZTogbnVtYmVyID0gMS4wNTtcblxuICAgIHByb3RlY3RlZCBfb3duZXJTcHJpdGU6IExheWEuU3ByaXRlO1xuICAgIHByb3RlY3RlZCBfZGlzcGxheVNwOiBMYXlhLlNwcml0ZTtcbiAgICBwcm90ZWN0ZWQgX2Rpc1RleHQ6IExheWEuVGV4dDtcbiAgICBwcm90ZWN0ZWQgX2FuaUZvcndhcmQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBwcm90ZWN0ZWQgX2ZvbnRTaXplID0gMjU7XG4gICAgcHJvdGVjdGVkIF9vcmlnaW5TaXplID0gMTtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICB9XG4gICAgb25Bd2FrZSgpIHtcbiAgICAgICAgdGhpcy5fZGlzcGxheVNwID0gdGhpcy5vd25lciBhcyBMYXlhLlNwcml0ZTtcbiAgICAgICAgdGhpcy5fZGlzVGV4dCA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJUaXRlbFRleHRcIikgYXMgTGF5YS5UZXh0O1xuICAgICAgICB0aGlzLl9vcmlnaW5TaXplID0gdGhpcy5fZGlzcGxheVNwLnNjYWxlWDtcbiAgICAgICAgaWYgKHRoaXMuX2Rpc1RleHQgIT0gbnVsbCkge1xuICAgICAgICAgICAgdGhpcy5fZGlzVGV4dC50ZXh0ID0gXCJcIjtcbiAgICAgICAgICAgIHRoaXMuX2ZvbnRTaXplID0gdGhpcy5fZGlzVGV4dC5mb250U2l6ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBvbkVuYWJsZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5fZGlzcGxheVNwLnNjYWxlKHRoaXMuX29yaWdpblNpemUsIHRoaXMuX29yaWdpblNpemUpO1xuICAgIH1cbiAgICBvbkRpc2FibGUoKTogdm9pZCB7XG5cbiAgICB9XG4gICAgb25VcGRhdGUoKSB7XG4gICAgICAgIHRoaXMuZGlzcGxheUFuaSgpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBkaXNwbGF5QW5pKCkge1xuICAgICAgICBpZiAoIXRoaXMuX2FuaUZvcndhcmQpIHtcbiAgICAgICAgICAgIHZhciBzY2FsZSA9IHRoaXMuX2Rpc3BsYXlTcC5zY2FsZVggLSBMYXlhLnRpbWVyLmRlbHRhIC8gdGhpcy5Ud2lua2xlU3BlZWQ7XG4gICAgICAgICAgICBzY2FsZSA9IE1hdGgubWF4KHNjYWxlLCB0aGlzLlR3aW5rbGVNaW5TaXplICogdGhpcy5fb3JpZ2luU2l6ZSk7XG4gICAgICAgICAgICB0aGlzLl9kaXNwbGF5U3Auc2NhbGUoc2NhbGUsIHNjYWxlKTtcbiAgICAgICAgICAgIGlmICh0aGlzLl9kaXNwbGF5U3Auc2NhbGVYIDw9IHRoaXMuVHdpbmtsZU1pblNpemUgKiB0aGlzLl9vcmlnaW5TaXplKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fYW5pRm9yd2FyZCA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB2YXIgc2NhbGUgPSB0aGlzLl9kaXNwbGF5U3Auc2NhbGVYICsgTGF5YS50aW1lci5kZWx0YSAvIHRoaXMuVHdpbmtsZVNwZWVkO1xuICAgICAgICAgICAgc2NhbGUgPSBNYXRoLm1pbihzY2FsZSwgdGhpcy5Ud2lua2xlTWF4U2l6ZSAqIHRoaXMuX29yaWdpblNpemUpO1xuICAgICAgICAgICAgdGhpcy5fZGlzcGxheVNwLnNjYWxlKHNjYWxlLCBzY2FsZSk7XG4gICAgICAgICAgICBpZiAodGhpcy5fZGlzcGxheVNwLnNjYWxlWCA+PSB0aGlzLlR3aW5rbGVNYXhTaXplICogdGhpcy5fb3JpZ2luU2l6ZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2FuaUZvcndhcmQgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn0iLCJpbXBvcnQgVmlld01nciwgeyBWaWV3RGVmIH0gZnJvbSBcIi4uL01nci9WaWV3TWdyXCI7XG5pbXBvcnQgRXZlbnRNZ3IgZnJvbSBcIi4uL0V2ZW50L0V2ZW50TWdyXCI7XG5pbXBvcnQgeyBFdmVudERlZiB9IGZyb20gXCIuLi9FdmVudC9FdmVudERlZlwiO1xuaW1wb3J0IFV0aWxpdCBmcm9tIFwiLi4vVXRpbGl0XCI7XG5pbXBvcnQgSVZpZXdTdGF0ZUxpc3RlbmVyLCB7IGlzSVZpZXdTdGF0ZUxpc3RlbmVyIH0gZnJvbSBcIi4vSVZpZXdTdGF0ZUxpc3RlbmVyXCI7XG5cblxuLy/nlYzpnaLln7rnsbvvvIzmiYDmnInlip/og73mqKHlnZfnlYzpnaLnu6fmib/kuo7ov5nkuKrnsbvjgILov5nnp43nsbvlnovnmoTnlYzpnaLkuI3og73ltYzlpZfjgIJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFZpZXdCYXNlIGV4dGVuZHMgTGF5YS5TY3JpcHQgXG57XG4gICAgcHVibGljIG9uQ2xvc2VFdmVudCA6IEZ1bmN0aW9uID0gbnVsbDtcbiAgICBwdWJsaWMgb25PcGVuRXZlbnQgOiBGdW5jdGlvbiA9IG51bGw7XG4gICAgXG4gICAgcHVibGljIGdldCBWaWV3KClcbiAgICB7XG4gICAgICAgIHJldHVybiB0aGlzLm93bmVyIGFzIExheWEuVmlldztcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgX3ZpZXdCYXNlIDogYm9vbGVhbiAgPSB0cnVlXG4gICAgcHJvdGVjdGVkIF92aWV3RGVmIDogVmlld0RlZiA9IFZpZXdEZWYuTm9uZTtcbiAgICBwcm90ZWN0ZWQgX2RhdGEgOiBhbnkgPSB7fTtcblxuICAgIG9uQXdha2UoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuVmlldy5hdXRvRGVzdHJveUF0Q2xvc2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBvbkVuYWJsZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5hZGRFdmVudCgpO1xuICAgIH1cbiAgICBvbkRpc2FibGUoKTogdm9pZCB7XG4gICAgICAgIHRoaXMucmVtb3ZlRXZlbnQoKTtcbiAgICB9XG4gICAgb25EZXN0cm95KCk6IHZvaWQge1xuICAgICAgICB0aGlzLnJlbW92ZUV2ZW50KCk7XG4gICAgfVxuICAgIFxuICAgIHB1YmxpYyBvcGVuVmlldyhkYXRhPzogYW55KTogdm9pZCB7XG4gICAgICAgIHRoaXMuX2RhdGEgPSBkYXRhO1xuICAgICAgICB0aGlzLnNob3coKVxuICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5kaXNwYXRjaChFdmVudERlZi5HYW1lX09uVmlld09wZW4se3ZpZXc6dGhpcy5fdmlld0RlZn0pXG4gICAgICAgIGlmKHRoaXMub25PcGVuRXZlbnQpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRoaXMub25PcGVuRXZlbnQoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBhZGRFdmVudCgpIHtcblxuICAgIH1cblxuICAgIHB1YmxpYyByZW1vdmVFdmVudCgpIHtcbiAgICAgICAgTGF5YS50aW1lci5jbGVhckFsbCh0aGlzKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgY2xvc2VWaWV3KCkgXG4gICAge1xuICAgICAgICBWaWV3TWdyLmluc3RhbmNlLmNsb3NlVmlldyh0aGlzLl92aWV3RGVmKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgaGlkZSgpXG4gICAge1xuICAgICAgICB0aGlzLlZpZXcudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLm9uSGlkZSgpO1xuICAgICAgICBVdGlsaXQuZm9yRWFjaENoaWxkKHRoaXMub3duZXIsKGNoaWxkIDogTGF5YS5Ob2RlKT0+XG4gICAgICAgIHtcbiAgICAgICAgICAgIGxldCBjb21zID0gKGNoaWxkIGFzIGFueSkuX2NvbXBvbmVudHM7XG4gICAgICAgICAgICBpZihjb21zKXtcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgY29tcy5sZW5ndGg7IGluZGV4KyspIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZWxlbWVudCA9IGNvbXNbaW5kZXhdO1xuICAgICAgICAgICAgICAgICAgICBpZihpc0lWaWV3U3RhdGVMaXN0ZW5lcihlbGVtZW50KSlcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgKGVsZW1lbnQgYXMgSVZpZXdTdGF0ZUxpc3RlbmVyKS5vblZpZXdIaWRlKHRoaXMpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIHB1YmxpYyBzaG93KClcbiAgICB7XG4gICAgICAgIHRoaXMuVmlldy52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5vblNob3coKTtcbiAgICAgICAgVXRpbGl0LmZvckVhY2hDaGlsZCh0aGlzLm93bmVyLChjaGlsZCA6IExheWEuTm9kZSk9PlxuICAgICAgICB7XG4gICAgICAgICAgICBsZXQgY29tcyA9IChjaGlsZCBhcyBhbnkpLl9jb21wb25lbnRzO1xuICAgICAgICAgICAgaWYoY29tcyl7XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGNvbXMubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBjb21zW2luZGV4XTtcbiAgICAgICAgICAgICAgICAgICAgaWYoaXNJVmlld1N0YXRlTGlzdGVuZXIoZWxlbWVudCkpXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIChlbGVtZW50IGFzIElWaWV3U3RhdGVMaXN0ZW5lcikub25WaWV3U2hvdyh0aGlzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBwdWJsaWMgdmlld0lzSGlkZSgpXG4gICAge1xuICAgICAgICByZXR1cm4gdGhpcy5WaWV3LnZpc2libGU7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIG9uSGlkZSgpe31cbiAgICBwcm90ZWN0ZWQgb25TaG93KCl7fVxuICAgIHByb3RlY3RlZCBvbkNsb3NlKClcbiAgICB7XG4gICAgICAgIExheWEudGltZXIuY2xlYXJBbGwodGhpcyk7XG4gICAgICAgIExheWEuVHdlZW4uY2xlYXJBbGwodGhpcyk7XG4gICAgICAgIEV2ZW50TWdyLmluc3RhbmNlLmRpc3BhdGNoKEV2ZW50RGVmLkdhbWVfT25WaWV3Q2xvc2Use3ZpZXc6dGhpcy5fdmlld0RlZn0pXG4gICAgICAgIGlmKHRoaXMub25DbG9zZUV2ZW50KVxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLm9uQ2xvc2VFdmVudCgpO1xuICAgICAgICB9XG4gICAgfVxufSIsImltcG9ydCBWaWV3TWdyIGZyb20gXCIuL01nci9WaWV3TWdyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFdYQVBJIHtcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IGFkVW5pdElkID0gXCJhZHVuaXQtOTYwODI1NzhjZTliZjliMFwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBiYW5uZXJBZFVuaXRJZCA9IFwiYWR1bml0LTg2M2RiY2NmNjVkYmYyNzZcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgSW5zQWRVbml0SWQgPSBcImFkdW5pdC0wOGViZDBhNGZlOWQwNjgwXCJcbiAgICBcblxuICAgIHB1YmxpYyBzdGF0aWMgd3hMb2dpbihvblN1Y2Nlc3M6IEZ1bmN0aW9uLCBvbkZhaWw6IEZ1bmN0aW9uKSB7XG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSkge1xuICAgICAgICAgICAgTGF5YS5Ccm93c2VyLndpbmRvdy53eC5sb2dpbihcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IChyZXMpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXMuY29kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBjb2RlID0gcmVzLmNvZGU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25TdWNjZXNzKGNvZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi55m76ZmG5oiQ5YqfLOiOt+WPluWIsGNvZGUgOiBcIiArIGNvZGUpXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfVxuXG5cbiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS3mv4DlirHop4bpopEtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICBwcm90ZWN0ZWQgc3RhdGljIF9pc1JlZ1Jld2FyZGVkVmlkZW9BZEV2ZW50ID0gZmFsc2U7XG4gICAgcHJvdGVjdGVkIHN0YXRpYyBfb25SZXdhcmRlZFZpZGVvQWRGYWlsZWQ6IEZ1bmN0aW9uID0gbnVsbDtcbiAgICBwcm90ZWN0ZWQgc3RhdGljIF9vblJld2FyZGVkVmlkZW9BZENsb3NlOiBGdW5jdGlvbiA9IG51bGw7XG4gICAgcHJvdGVjdGVkIHN0YXRpYyBvblJld2FyZGVkVmlkZW9BZExvYWQoKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCfmv4DlirHop4bpopEg5bm/5ZGK5Yqg6L295a6M5oiQJylcbiAgICB9XG4gICAgcHJvdGVjdGVkIHN0YXRpYyBvblJld2FyZGVkVmlkZW9BZEVycm9yKGVycikge1xuICAgICAgICBjb25zb2xlLmxvZygn5r+A5Yqx6KeG6aKRIOW5v+WRiuWKoOi9veWksei0pScgKyBlcnIpXG4gICAgICAgIGlmIChXWEFQSS5fb25SZXdhcmRlZFZpZGVvQWRGYWlsZWQpIHtcbiAgICAgICAgICAgIFdYQVBJLl9vblJld2FyZGVkVmlkZW9BZEZhaWxlZCgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHByb3RlY3RlZCBzdGF0aWMgb25SZXdhcmRlZFZpZGVvQWRDbG9zZShyZXMpIHtcbiAgICAgICAgaWYgKChyZXMgJiYgcmVzLmlzRW5kZWQpIHx8IHJlcyA9PSBudWxsKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygn5r+A5Yqx6KeG6aKRIOW3suWujOaVtOingueciycpXG4gICAgICAgICAgICBpZiAoV1hBUEkuX29uUmV3YXJkZWRWaWRlb0FkQ2xvc2UpIHtcbiAgICAgICAgICAgICAgICBXWEFQSS5fb25SZXdhcmRlZFZpZGVvQWRDbG9zZSh0cnVlKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ+a/gOWKseinhumikSDmnKrlrozmlbTop4LnnIsnKVxuICAgICAgICAgICAgaWYgKFdYQVBJLl9vblJld2FyZGVkVmlkZW9BZENsb3NlKSB7XG4gICAgICAgICAgICAgICAgV1hBUEkuX29uUmV3YXJkZWRWaWRlb0FkQ2xvc2UoZmFsc2UpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcHJvdGVjdGVkIHN0YXRpYyByZWdSZXdhcmRlZFZpZGVvQWRFdmVudChyZXdhcmRlZFZpZGVvQWQpIHtcblxuICAgICAgICByZXdhcmRlZFZpZGVvQWQub25Mb2FkKFdYQVBJLm9uUmV3YXJkZWRWaWRlb0FkTG9hZClcbiAgICAgICAgcmV3YXJkZWRWaWRlb0FkLm9uRXJyb3IoV1hBUEkub25SZXdhcmRlZFZpZGVvQWRFcnJvcilcbiAgICAgICAgcmV3YXJkZWRWaWRlb0FkLm9uQ2xvc2UoV1hBUEkub25SZXdhcmRlZFZpZGVvQWRDbG9zZSlcblxuICAgICAgICBXWEFQSS5faXNSZWdSZXdhcmRlZFZpZGVvQWRFdmVudCA9IHRydWU7XG4gICAgfVxuICAgIHB1YmxpYyBzdGF0aWMgc2hvd1Jld2FyZGVkVmlkZW9BZChvbkFkQ2xvc2U6IEZ1bmN0aW9uLCBvbkZhaWxlZDogRnVuY3Rpb24pIHtcblxuICAgICAgICAvLyBWaWV3TWdyLmluc3RhbmNlLnNob3dUaXBzKFwi5LuK5pel6KeG6aKR5bey57uP55yL5a6MXCIpO1xuICAgICAgICAvLyBpZihvbkZhaWxlZClcbiAgICAgICAgLy8ge1xuICAgICAgICAvLyAgICAgb25BZENsb3NlKGZhbHNlKTtcbiAgICAgICAgLy8gfVxuICAgICAgICAvLyByZXR1cm47XG5cbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lKSB7XG4gICAgICAgICAgICBXWEFQSS5fb25SZXdhcmRlZFZpZGVvQWRDbG9zZSA9IG9uQWRDbG9zZTtcbiAgICAgICAgICAgIFdYQVBJLl9vblJld2FyZGVkVmlkZW9BZEZhaWxlZCA9IG9uRmFpbGVkO1xuXG4gICAgICAgICAgICB2YXIgcmV3YXJkZWRWaWRlb0FkID0gTGF5YS5Ccm93c2VyLndpbmRvd1tcInd4XCJdLmNyZWF0ZVJld2FyZGVkVmlkZW9BZChcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGFkVW5pdElkOiBXWEFQSS5hZFVuaXRJZCxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApO1xuXG4gICAgICAgICAgICBpZiAoIVdYQVBJLl9pc1JlZ1Jld2FyZGVkVmlkZW9BZEV2ZW50KSB7XG4gICAgICAgICAgICAgICAgV1hBUEkucmVnUmV3YXJkZWRWaWRlb0FkRXZlbnQocmV3YXJkZWRWaWRlb0FkKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV3YXJkZWRWaWRlb0FkLmxvYWQoKS50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICB2YXIgcHJvbWlzZSA9IHJld2FyZGVkVmlkZW9BZC5zaG93KCk7XG4gICAgICAgICAgICAgICAgcHJvbWlzZS50aGVuKCgpID0+IGNvbnNvbGUubG9nKCfmv4DlirHop4bpopEg5bm/5ZGK5pi+56S65oiQ5YqfJykpO1xuICAgICAgICAgICAgICAgIHByb21pc2UuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXdhcmRlZFZpZGVvQWQubG9hZCgpXG4gICAgICAgICAgICAgICAgICAgICAgICAudGhlbigoKSA9PiByZXdhcmRlZFZpZGVvQWQuc2hvdygpKVxuICAgICAgICAgICAgICAgICAgICAgICAgLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+a/gOWKseinhumikSDlub/lkYrmmL7npLrlpLHotKUnKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvbkZhaWxlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkZhaWxlZCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KS5jYXRjaChlcnIgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfmv4DlirHop4bpopEg5bm/5ZGK5Yqg6L295aSx6LSlJylcbiAgICAgICAgICAgICAgICBpZiAob25GYWlsZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgb25GYWlsZWQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgb25BZENsb3NlKHRydWUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS3lsI/muLjmiI/ot7PovawtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICBwdWJsaWMgc3RhdGljIG5hdmlnYXRlVG9NaW5pUHJvZ3JhbShhcHBJZDogc3RyaW5nLCBwYXRoOiBzdHJpbmcsIG9uU3VjY2VzczogRnVuY3Rpb24sIG9uRmFpbDogRnVuY3Rpb24sIG9uQ29tcGxhdGU6IEZ1bmN0aW9uKSB7XG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCLot7PovazmuLjmiI/vvJogXCIgKyBhcHBJZCk7XG4gICAgICAgICAgICBMYXlhLkJyb3dzZXIud2luZG93W1wid3hcIl0ubmF2aWdhdGVUb01pbmlQcm9ncmFtKFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgYXBwSWQ6IGFwcElkLFxuICAgICAgICAgICAgICAgICAgICBwYXRoOiBwYXRoLFxuICAgICAgICAgICAgICAgICAgICBleHRyYURhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbzogJ2JhcidcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZW52VmVyc2lvbjogJ3JlbGVhc2UnLFxuICAgICAgICAgICAgICAgICAgICBzdWNjZXNzKHJlcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9uU3VjY2Vzcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uU3VjY2VzcyhyZXMpXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGZhaWwocmVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAob25GYWlsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25GYWlsKHJlcylcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgY29tcGxldGUocmVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAob25Db21wbGF0ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ29tcGxhdGUocmVzKVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcblxuICAgICAgICB9XG4gICAgfVxuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS3liIbkuqstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgcHJvdGVjdGVkIHN0YXRpYyBfb25TaG93OiBGdW5jdGlvbiA9IG51bGw7XG4gICAgcHJvdGVjdGVkIHN0YXRpYyBfbGFzdFNoYXJlVGltZTogbnVtYmVyID0gMDtcbiAgICBwdWJsaWMgc3RhdGljIHNoYXJlKGNvbXBsYXRlOiBGdW5jdGlvbiwgdGl0ZWw6IHN0cmluZywgaW1hZ2VVcmw6IHN0cmluZykge1xuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpIHtcbiAgICAgICAgICAgIFdYQVBJLl9vblNob3cgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgTGF5YS5Ccm93c2VyLndpbmRvd1tcInd4XCJdLm9mZlNob3coV1hBUEkuX29uU2hvdylcbiAgICAgICAgICAgICAgICBXWEFQSS5fb25TaG93ID0gbnVsbDtcbiAgICAgICAgICAgICAgICB2YXIgYyA9IERhdGUubm93KCkgLSB0aGlzLl9sYXN0U2hhcmVUaW1lO1xuICAgICAgICAgICAgICAgIGlmIChjb21wbGF0ZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoRGF0ZS5ub3coKSAtIHRoaXMuX2xhc3RTaGFyZVRpbWUgPiAyMDAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb21wbGF0ZSh0cnVlKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29tcGxhdGUoZmFsc2UpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBMYXlhLkJyb3dzZXIud2luZG93W1wid3hcIl0ub25TaG93KFdYQVBJLl9vblNob3cpXG4gICAgICAgICAgICB0aGlzLl9sYXN0U2hhcmVUaW1lID0gRGF0ZS5ub3coKTtcbiAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJ3eFwiXS5zaGFyZUFwcE1lc3NhZ2UoXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0aXRsZTogdGl0ZWwsXG4gICAgICAgICAgICAgICAgICAgIGltYWdlVXJsOiBpbWFnZVVybFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS3mj5LlsY/luZXlub/lkYotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICBwdWJsaWMgc3RhdGljIHNob3dJbnRlcnN0aXRpYWxBZChvbkFkQ2xvc2U6IEZ1bmN0aW9uLCBvbkZhaWxlZDogRnVuY3Rpb24pICB7XG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSkge1xuICAgICAgICAgICAgdmFyIGludGVyc3RpdGlhbEFkID0gTGF5YS5Ccm93c2VyLndpbmRvd1tcInd4XCJdLmNyZWF0ZUludGVyc3RpdGlhbEFkKHtcbiAgICAgICAgICAgICAgICBhZFVuaXRJZDogV1hBUEkuSW5zQWRVbml0SWQsXG4gICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICBpbnRlcnN0aXRpYWxBZC5vbkxvYWQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfmj5LlsY/lub/lkYog5Yqg6L295a6M5oiQJyk7XG4gICAgICAgICAgICAgICAgaW50ZXJzdGl0aWFsQWQuc2hvdygpLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+aPkuWxj+W5v+WRiiDmmL7npLrlpLHotKUg77yaJyArIGVycilcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9uRmFpbGVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkZhaWxlZCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgIGludGVyc3RpdGlhbEFkLm9uRXJyb3IoKGVycikgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfmj5LlsY/lub/lkYog5Yqg6L295aSx6LSlJyArIGVycik7XG4gICAgICAgICAgICAgICAgaWYgKG9uRmFpbGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIG9uRmFpbGVkKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgaW50ZXJzdGl0aWFsQWQub25DbG9zZSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+aPkuWxj+W5v+WRiiDlhbPpl60nKTtcbiAgICAgICAgICAgICAgICBpZiAob25BZENsb3NlKSB7XG4gICAgICAgICAgICAgICAgICAgIG9uQWRDbG9zZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBvbkFkQ2xvc2UoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiDlvpfliLDlsI/nqIvluo/lkK/liqjlj4LmlbDnmoTlkIzmraXmlrnms5XvvIzlj6/lvpfliLDkuIDkuKpPYmplY3Tov5Tlm57lgLzvvIzov5Tlm57lgLzlhbfkvZPnmoTmlbDmja7nu5PmnoTlnKjkuIvpnaLnmoTliJfooajkuK1cbiAgICAgKiBzY2VuZVx0bnVtYmVyXHTlkK/liqjlsI/muLjmiI/nmoTlnLrmma/lgLxcbiAgICAgKiBxdWVyeVx0T2JqZWN0XHTlkK/liqjlsI/muLjmiI/nmoQgcXVlcnkg5Y+C5pWwXG4gICAgICogc2hhcmVUaWNrZXRcdHN0cmluZ1x0c2hhcmVUaWNrZXTvvIzor6bop4Hojrflj5bmm7TlpJrovazlj5Hkv6Hmga9cbiAgICAgKiByZWZlcnJlckluZm9cdG9iamVjdFx05p2l5rqQ5L+h5oGv44CC5LuO5Y+m5LiA5Liq5bCP56iL5bqP44CB5YWs5LyX5Y+35oiWIEFwcCDov5vlhaXlsI/nqIvluo/ml7bov5Tlm57jgILlkKbliJnov5Tlm54ge31cbiAgICAgKiBodHRwczovL2RldmVsb3BlcnMud2VpeGluLnFxLmNvbS9taW5pZ2FtZS9kZXYvYXBpL2Jhc2UvYXBwL2xpZmUtY3ljbGUvd3guZ2V0TGF1bmNoT3B0aW9uc1N5bmMuaHRtbFxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAcmV0dXJucyB7TGF1bmNoT3B0aW9uc30gXG4gICAgICogQG1lbWJlcm9mIFdYQVBJXG4gICAgICovXG4gICAgcHVibGljIHN0YXRpYyBnZXRMYXVuY2hPcHRpb25zU3luYygpIHtcbiAgICAgICAgLy8gbGV0IHJlc3VsdCA9IHsgc2NlbmU6IDAsIHF1ZXJ5OiBudWxsLCBzaGFyZVRpY2tldDogXCJcIiwgcmVmZXJyZXJJbmZvOiBudWxsIH07XG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSkge1xuICAgICAgICAgICAgbGV0IG9iaiA9IExheWEuQnJvd3Nlci53aW5kb3dbXCJ3eFwiXS5nZXRMYXVuY2hPcHRpb25zU3luYygpXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcIuWcuuaZr+WAvCBcIiArIG9iai5zY2VuZSk7XG4gICAgICAgICAgICBsZXQgc3RyID0gSlNPTi5zdHJpbmdpZnkob2JqLnF1ZXJ5KTtcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwiUXVlcnnlj4LmlbAgXCIgKyBzdHIpO1xuICAgICAgICAgICAgbGV0IGtleSA9IG9iai5xdWVyeVtcImtleVwiXTtcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwiUXVlcnnlj4LmlbDvvJprZXkgXCIgKyBrZXkpO1xuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coXCJTaGFyZVRpY2tldCBcIiArIG9iai5zaGFyZVRpY2tldCk7XG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcIlJlZmVycmVySW5mby5hcHBJZCBcIiArIG9iai5yZWZlcnJlckluZm8uYXBwSWQpO1xuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coXCJSZWZlcnJlckluZm8uZXh0cmFEYXRhIFwiICsgb2JqLnJlZmVycmVySW5mby5leHRyYURhdGEpO1xuICAgICAgICAgICAgcmV0dXJuIG9iajtcbiAgICAgICAgfVxuICAgICAgICBsZXQgb2JqID0geyBzY2VuZTogMTAwMSwgcXVlcnk6IFwiXCIsIHNoYXJlVGlja2V0OiBcIlwiLCBhcHBJZDogXCJcIiwgZXh0cmFEYXRhOiBcIlwiIH1cbiAgICAgICAgcmV0dXJuIG9iajtcbiAgICB9XG5cbiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAvKipcbiAgICAgKiDmiZPlvIDlvq7kv6Hlt6bkuIrop5LliIbkuqvovazlj5Hngrnlh7vkuovku7Ys5Zyo5ri45oiP6YC76L6R5Lit6LCD55So5LiA5qyh5Y2z5Y+vXG4gICAgICog5rOo5oSP5q2k5pa55rOV5Y+q5Lya5Zyo55yf5py65LiK5omn6KGM77yM5Zyo5b6u5L+h5qih5ouf5Zmo546v5aKD5LiL54K55Ye76L2s5Y+R5oyJ6ZKu5LuA5LmI6YO95LiN5Lya5Y+R55SfXG4gICAgICogXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0aXRlbCDliIbkuqvmoIfpophcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gaW1hZ2VVcmwg5YiG5Lqr5Zu+54mH5Zyw5Z2AXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW3N1Y2Nlc3NdIOaIkOWKn+Wbnuiwg+WHveaVsCjlj6/kuI3loaspXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2ZhaWxdIOWksei0peWbnuiwg+WHveaVsCjlj6/kuI3loaspXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NvbXBsYXRlXSDlrozmiJDlm57osIPlh73mlbDvvIzmiJDlip/lpLHotKXpg73kvJrmiafooYwo5Y+v5LiN5aGrKVxuICAgICAqIEBtZW1iZXJvZiBXWEFQSVxuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgU2V0U2hhcmVNZW51KHRpdGVsOiBzdHJpbmcsIGltYWdlVXJsOiBzdHJpbmcsIHN1Y2Nlc3M/OiBGdW5jdGlvbiwgZmFpbD86IEZ1bmN0aW9uLCBjb21wbGF0ZT86IEZ1bmN0aW9uKSB7XG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCLlsI/muLjmiI/orr7nva7ovazlj5HmjInpkq5cIik7XG4gICAgICAgICAgICBMYXlhLkJyb3dzZXIud2luZG93W1wid3hcIl0uc2hvd1NoYXJlTWVudSh7XG4gICAgICAgICAgICAgICAgd2l0aFNoYXJlVGlja2V0OiBmYWxzZSxcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBzdWNjZXNzLFxuICAgICAgICAgICAgICAgIGZhaWw6IGZhaWwsXG4gICAgICAgICAgICAgICAgY29tcGxldGU6IGNvbXBsYXRlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJ3eFwiXS5vblNoYXJlQXBwTWVzc2FnZShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IHRpdGVsLFxuICAgICAgICAgICAgICAgICAgICBpbWFnZVVybDogaW1hZ2VVcmxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8v5qOA5rWL5pu05pawXG4gICAgcHVibGljIHN0YXRpYyBjaGVja1VwZGF0ZSgpXG4gICAge1xuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpIFxuICAgICAgICB7XG4gICAgICAgICAgICB2YXIgdXBkYXRlTWFuYWdlciA9IExheWEuQnJvd3Nlci53aW5kb3dbXCJ3eFwiXS5nZXRVcGRhdGVNYW5hZ2VyKClcbiAgICAgICAgICAgIHVwZGF0ZU1hbmFnZXIub25DaGVja0ZvclVwZGF0ZShmdW5jdGlvbiAocmVzKSBcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuaYr+WQpumcgOimgeabtOaWsCA6IFwiLHJlcy5oYXNVcGRhdGUpXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgdXBkYXRlTWFuYWdlci5vblVwZGF0ZVJlYWR5KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBMYXlhLkJyb3dzZXIud2luZG93W1wid3hcIl0uc2hvd01vZGFsKHtcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICfmm7TmlrDmj5DnpLonLFxuICAgICAgICAgICAgICAgICAgICBjb250ZW50OiAn5paw54mI5pys5bey57uP5YeG5aSH5aW977yM5piv5ZCm6YeN5ZCv5bCP5ri45oiP77yfJyxcbiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlcykgXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXMuY29uZmlybSkgXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlTWFuYWdlci5hcHBseVVwZGF0ZSgpXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIHVwZGF0ZU1hbmFnZXIub25VcGRhdGVGYWlsZWQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5paw54mI5pys5LiL6L295aSx6LSlISEhXCIpXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfVxufSIsIi8qKlRoaXMgY2xhc3MgaXMgYXV0b21hdGljYWxseSBnZW5lcmF0ZWQgYnkgTGF5YUFpcklERSwgcGxlYXNlIGRvIG5vdCBtYWtlIGFueSBtb2RpZmljYXRpb25zLiAqL1xuaW1wb3J0IFZpZXc9TGF5YS5WaWV3O1xuaW1wb3J0IERpYWxvZz1MYXlhLkRpYWxvZztcbmltcG9ydCBTY2VuZT1MYXlhLlNjZW5lO1xudmFyIFJFRzogRnVuY3Rpb24gPSBMYXlhLkNsYXNzVXRpbHMucmVnQ2xhc3M7XG5leHBvcnQgbW9kdWxlIHVpIHtcclxuICAgIGV4cG9ydCBjbGFzcyBHYW1lTWFpblVJIGV4dGVuZHMgU2NlbmUge1xyXG4gICAgICAgIHB1YmxpYyBzdGF0aWMgIHVpVmlldzphbnkgPXtcInR5cGVcIjpcIlNjZW5lXCIsXCJwcm9wc1wiOntcInlcIjowLFwieFwiOjAsXCJ3aWR0aFwiOjEwODAsXCJ0b3BcIjowLFwicmlnaHRcIjowLFwicGl2b3RZXCI6MCxcInBpdm90WFwiOjAsXCJsZWZ0XCI6MCxcImhlaWdodFwiOjE5MjB9LFwiY29tcElkXCI6MixcImNoaWxkXCI6W3tcInR5cGVcIjpcIlNjcmlwdFwiLFwicHJvcHNcIjp7XCJydW50aW1lXCI6XCJNZ3IvR2FtZU1nci50c1wifSxcImNvbXBJZFwiOjE0OH1dLFwibG9hZExpc3RcIjpbXSxcImxvYWRMaXN0M0RcIjpbXX07XHJcbiAgICAgICAgY29uc3RydWN0b3IoKXsgc3VwZXIoKX1cclxuICAgICAgICBjcmVhdGVDaGlsZHJlbigpOnZvaWQge1xyXG4gICAgICAgICAgICBzdXBlci5jcmVhdGVDaGlsZHJlbigpO1xyXG4gICAgICAgICAgICB0aGlzLmNyZWF0ZVZpZXcoR2FtZU1haW5VSS51aVZpZXcpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFJFRyhcInVpLkdhbWVNYWluVUlcIixHYW1lTWFpblVJKTtcclxufVxyXG5leHBvcnQgbW9kdWxlIHVpLlZpZXcge1xyXG4gICAgZXhwb3J0IGNsYXNzIExvYWRpbmdVSSBleHRlbmRzIFNjZW5lIHtcclxuICAgICAgICBwdWJsaWMgc3RhdGljICB1aVZpZXc6YW55ID17XCJ0eXBlXCI6XCJTY2VuZVwiLFwicHJvcHNcIjp7XCJ3aWR0aFwiOjc1MCxcInRvcFwiOjAsXCJyaWdodFwiOjAsXCJsZWZ0XCI6MCxcImhlaWdodFwiOjEzMzQsXCJib3R0b21cIjowfSxcImNvbXBJZFwiOjIsXCJjaGlsZFwiOlt7XCJ0eXBlXCI6XCJJbWFnZVwiLFwicHJvcHNcIjp7XCJ0b3BcIjowLFwic2tpblwiOlwiR2FtZUNvbW1vbi9sb2RpbmcuanBnXCIsXCJjZW50ZXJYXCI6MH0sXCJjb21wSWRcIjoyNH0se1widHlwZVwiOlwiQ2xpcFwiLFwicHJvcHNcIjp7XCJ5XCI6MCxcInhcIjoxLFwid2lkdGhcIjo3NTAsXCJuYW1lXCI6XCJCZ1wiLFwiaGVpZ2h0XCI6MTMzNH0sXCJjb21wSWRcIjo2LFwiY2hpbGRcIjpbe1widHlwZVwiOlwiQ2xpcFwiLFwicHJvcHNcIjp7XCJza2luXCI6XCJjb21wL2NsaXBfbnVtLnBuZ1wiLFwicmlnaHRcIjowLFwibmFtZVwiOlwiQm90dG9tWm9uZVwiLFwibGVmdFwiOjAsXCJoZWlnaHRcIjo1NzAsXCJib3R0b21cIjoxMDB9LFwiY29tcElkXCI6MjMsXCJjaGlsZFwiOlt7XCJ0eXBlXCI6XCJDbGlwXCIsXCJwcm9wc1wiOntcInlcIjozMjYsXCJ4XCI6Mzc2LFwid2lkdGhcIjo2MTUsXCJza2luXCI6XCJMb2FkaW5nL2xvYWRpbmfkuIvmnaEucG5nXCIsXCJwaXZvdFlcIjoyMixcInBpdm90WFwiOjMwOCxcIm5hbWVcIjpcInByb2Nlc3NCYXJCZ1wiLFwiaGVpZ2h0XCI6NDQsXCJzaXplR3JpZFwiOlwiMCwyNSwwLDI1XCJ9LFwiY29tcElkXCI6OCxcImNoaWxkXCI6W3tcInR5cGVcIjpcIkNsaXBcIixcInByb3BzXCI6e1wieVwiOjIyLFwieFwiOjEwLFwid2lkdGhcIjo1OTQsXCJza2luXCI6XCJMb2FkaW5nL2xvYWRpbmfkuIrmnaEucG5nXCIsXCJwaXZvdFlcIjoxMyxcIm5hbWVcIjpcInByb2Nlc3NCYXJcIixcImxlZnRcIjoxMSxcImhlaWdodFwiOjI2LFwiYm90dG9tXCI6OSxcInNpemVHcmlkXCI6XCIwLDEyLDAsMTJcIn0sXCJjb21wSWRcIjo1LFwiY2hpbGRcIjpbe1widHlwZVwiOlwiU3ByaXRlXCIsXCJwcm9wc1wiOntcInlcIjotMjQsXCJ4XCI6MjkyLFwid2lkdGhcIjoxNDMsXCJ2aXNpYmxlXCI6dHJ1ZSxcInRleHR1cmVcIjpcIkxvYWRpbmcv6LWE5rqQ5Yqg6L295LitLnBuZ1wiLFwicGl2b3RZXCI6MTIsXCJwaXZvdFhcIjo3MixcImhlaWdodFwiOjIzfSxcImNvbXBJZFwiOjI1LFwiY2hpbGRcIjpbe1widHlwZVwiOlwiU3ByaXRlXCIsXCJwcm9wc1wiOntcInlcIjoxNSxcInhcIjoxNDksXCJ3aWR0aFwiOjYsXCJ0ZXh0dXJlXCI6XCJMb2FkaW5nL+WKoOi9vemhv+WPty5wbmdcIixcImhlaWdodFwiOjV9LFwiY29tcElkXCI6MjZ9LHtcInR5cGVcIjpcIlNwcml0ZVwiLFwicHJvcHNcIjp7XCJ5XCI6MTUsXCJ4XCI6MTU5LFwid2lkdGhcIjo2LFwidGV4dHVyZVwiOlwiTG9hZGluZy/liqDovb3pob/lj7cucG5nXCIsXCJoZWlnaHRcIjo1fSxcImNvbXBJZFwiOjI3fSx7XCJ0eXBlXCI6XCJTcHJpdGVcIixcInByb3BzXCI6e1wieVwiOjE1LFwieFwiOjE2OCxcIndpZHRoXCI6NixcInRleHR1cmVcIjpcIkxvYWRpbmcv5Yqg6L296aG/5Y+3LnBuZ1wiLFwiaGVpZ2h0XCI6NX0sXCJjb21wSWRcIjoyOH1dfV19XX0se1widHlwZVwiOlwiQ2xpcFwiLFwicHJvcHNcIjp7XCJ5XCI6MTQzLFwieFwiOjM3NSxcIndpZHRoXCI6NTEzLFwidmlzaWJsZVwiOmZhbHNlLFwicGl2b3RZXCI6NTAsXCJwaXZvdFhcIjoyNTcsXCJuYW1lXCI6XCJMb2dvQW5pXCIsXCJoZWlnaHRcIjoxMDB9LFwiY29tcElkXCI6MTQsXCJjaGlsZFwiOlt7XCJ0eXBlXCI6XCJTcHJpdGVcIixcInByb3BzXCI6e1wieVwiOjUwLFwieFwiOjEzOSxcIndpZHRoXCI6NjQsXCJ0ZXh0dXJlXCI6XCJMb2FkaW5nL+S7uy5wbmdcIixcInBpdm90WVwiOjMyLFwicGl2b3RYXCI6MzIsXCJoZWlnaHRcIjo2M30sXCJjb21wSWRcIjoxNX0se1widHlwZVwiOlwiU3ByaXRlXCIsXCJwcm9wc1wiOntcInlcIjo1MCxcInhcIjoyMDksXCJ3aWR0aFwiOjcwLFwidGV4dHVyZVwiOlwiTG9hZGluZy/muLgucG5nXCIsXCJwaXZvdFlcIjozMyxcInBpdm90WFwiOjM1LFwiaGVpZ2h0XCI6NjZ9LFwiY29tcElkXCI6MTZ9LHtcInR5cGVcIjpcIlNwcml0ZVwiLFwicHJvcHNcIjp7XCJ5XCI6NTEsXCJ4XCI6Mjg2LFwid2lkdGhcIjo3NyxcInRleHR1cmVcIjpcIkxvYWRpbmcv546pLnBuZ1wiLFwicGl2b3RZXCI6MjgsXCJwaXZvdFhcIjozOSxcImhlaWdodFwiOjU2fSxcImNvbXBJZFwiOjE3fSx7XCJ0eXBlXCI6XCJTcHJpdGVcIixcInByb3BzXCI6e1wieVwiOjYzLFwieFwiOjM0MCxcIndpZHRoXCI6MjMsXCJ0ZXh0dXJlXCI6XCJMb2FkaW5nL1IucG5nXCIsXCJwaXZvdFlcIjoxNixcInBpdm90WFwiOjEyLFwiaGVpZ2h0XCI6MzJ9LFwiY29tcElkXCI6MTh9LHtcInR5cGVcIjpcIlNwcml0ZVwiLFwicHJvcHNcIjp7XCJ5XCI6NjMsXCJ4XCI6MzYzLFwid2lkdGhcIjoyMSxcInRleHR1cmVcIjpcIkxvYWRpbmcvWS5wbmdcIixcInBpdm90WVwiOjE2LFwicGl2b3RYXCI6MTEsXCJoZWlnaHRcIjozMX0sXCJjb21wSWRcIjoxOX0se1widHlwZVwiOlwiU3ByaXRlXCIsXCJwcm9wc1wiOntcInlcIjo2MixcInhcIjozOTIsXCJ3aWR0aFwiOjMzLFwidGV4dHVyZVwiOlwiTG9hZGluZy9XLnBuZ1wiLFwicGl2b3RZXCI6MTUsXCJwaXZvdFhcIjoxNyxcImhlaWdodFwiOjMwfSxcImNvbXBJZFwiOjIwfSx7XCJ0eXBlXCI6XCJTY3JpcHRcIixcInByb3BzXCI6e1wicnVudGltZVwiOlwiVmlldy9Mb2FkaW5nVmlldy9Mb2dvQW5pLnRzXCJ9LFwiY29tcElkXCI6MjF9XX0se1widHlwZVwiOlwiU3ByaXRlXCIsXCJwcm9wc1wiOntcInlcIjo1MDEsXCJ4XCI6MTI3MyxcIndpZHRoXCI6NTU4LFwidmlzaWJsZVwiOmZhbHNlLFwidGV4dHVyZVwiOlwiTG9hZGluZy/lgaXlurfmuLjmiI/lv6DlkYoucG5nXCIsXCJwaXZvdFlcIjo1MyxcInBpdm90WFwiOjI3OSxcImhlaWdodFwiOjEwNX0sXCJjb21wSWRcIjoyMn1dfV19LHtcInR5cGVcIjpcIlNjcmlwdFwiLFwicHJvcHNcIjp7XCJ5XCI6MCxcInhcIjowLFwicnVudGltZVwiOlwiVmlldy9Mb2FkaW5nVmlldy9Mb2FkaW5nVmlldy50c1wifSxcImNvbXBJZFwiOjd9XSxcImxvYWRMaXN0XCI6W1wiR2FtZUNvbW1vbi9sb2RpbmcuanBnXCIsXCJjb21wL2NsaXBfbnVtLnBuZ1wiLFwiTG9hZGluZy9sb2FkaW5n5LiL5p2hLnBuZ1wiLFwiTG9hZGluZy9sb2FkaW5n5LiK5p2hLnBuZ1wiLFwiTG9hZGluZy/otYTmupDliqDovb3kuK0ucG5nXCIsXCJMb2FkaW5nL+WKoOi9vemhv+WPty5wbmdcIixcIkxvYWRpbmcv5Lu7LnBuZ1wiLFwiTG9hZGluZy/muLgucG5nXCIsXCJMb2FkaW5nL+eOqS5wbmdcIixcIkxvYWRpbmcvUi5wbmdcIixcIkxvYWRpbmcvWS5wbmdcIixcIkxvYWRpbmcvVy5wbmdcIixcIkxvYWRpbmcv5YGl5bq35ri45oiP5b+g5ZGKLnBuZ1wiXSxcImxvYWRMaXN0M0RcIjpbXX07XHJcbiAgICAgICAgY29uc3RydWN0b3IoKXsgc3VwZXIoKX1cclxuICAgICAgICBjcmVhdGVDaGlsZHJlbigpOnZvaWQge1xyXG4gICAgICAgICAgICBzdXBlci5jcmVhdGVDaGlsZHJlbigpO1xyXG4gICAgICAgICAgICB0aGlzLmNyZWF0ZVZpZXcoTG9hZGluZ1VJLnVpVmlldyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgUkVHKFwidWkuVmlldy5Mb2FkaW5nVUlcIixMb2FkaW5nVUkpO1xyXG59XHIiXX0=
